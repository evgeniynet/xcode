{"version":3,"sources":["node_modules/browser-pack/_prelude.js","app/app.ts","app/components/accounts-list/accounts-list.ts","app/components/action-button/action-button.ts","app/components/class-list/class-list.ts","app/components/components.ts","app/components/custom-field/custom-field.ts","app/components/location-list/location-list.ts","app/components/locations-list/locations-list.ts","app/components/multi-select/multi-select.ts","app/components/posts-list/posts-list.ts","app/components/queues-list/queues-list.ts","app/components/select-list/select-list.ts","app/components/techs-list/techs-list.ts","app/components/tickets-list/tickets-list.ts","app/components/todo-list/todo-list.ts","app/components/tree-view/tree-view.ts","app/directives/directives.ts","app/directives/focuser.ts","app/directives/helpers.ts","app/pages/account-details/account-details.ts","app/pages/accounts/accounts.ts","app/pages/ajax-search/ajax-search.ts","app/pages/contracts/contracts.ts","app/pages/dashboard/dashboard.ts","app/pages/expense-create/expense-create.ts","app/pages/expenses/expenses.ts","app/pages/invoice-create/invoice-create.ts","app/pages/invoice-details/invoice-details.ts","app/pages/invoices/invoices.ts","app/pages/location-details/location-details.ts","app/pages/locations/locations.ts","app/pages/login/login.ts","app/pages/modals/add-files/add-files.ts","app/pages/modals/add-user/add-user.ts","app/pages/modals/ajax-select/ajax-select.ts","app/pages/modals/basic-select/basic-select.ts","app/pages/modals/change-user/change-user.ts","app/pages/modals/close-ticket/close-ticket.ts","app/pages/modals/infinity-multi-select/infinity-multi-select.ts","app/pages/modals/infinity-select/infinity-select.ts","app/pages/modals/modals.ts","app/pages/modals/privacy/privacy.ts","app/pages/modals/ticket-create/ticket-create.ts","app/pages/modals/transfer-ticket/transfer-ticket.ts","app/pages/modals/tree-modal/tree-modal.ts","app/pages/organizations/organizations.ts","app/pages/pages.ts","app/pages/profile/profile.ts","app/pages/queue-tickets/queue-tickets.ts","app/pages/queues/queues.ts","app/pages/signup/signup.ts","app/pages/skype/skype.ts","app/pages/tech-tickets/tech-tickets.ts","app/pages/technicians/technicians.ts","app/pages/ticket-details/ticket-details.ts","app/pages/tickets/tickets.ts","app/pages/timelog/timelog.ts","app/pages/timelogs/timelogs.ts","app/pages/todo-create/todo-create.ts","app/pages/todos/todos.ts","app/pages/uninvoices/uninvoices.ts","app/pipes/capitalize.ts","app/pipes/daysago.ts","app/pipes/daysold.ts","app/pipes/files.ts","app/pipes/gravatar.ts","app/pipes/htmlsafe.ts","app/pipes/linebreaks.ts","app/pipes/more.ts","app/pipes/pipes.ts","app/providers/api-data.ts","app/providers/config.ts","app/providers/data-provider.ts","app/providers/mocks.ts","app/providers/providers.ts","app/providers/ticket-provider.ts","app/providers/time-provider.ts","app/providers/todo-provider.ts","typings/main.d.ts"],"names":[],"mappings":"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","file":"app.bundle.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","import {NgZone, ViewChild} from '@angular/core';\nimport {App, IonicApp, Config, Platform, Nav, NavParams, Events, MenuController, Toast, Alert} from 'ionic-angular';\n//import {StatusBar, Network} from 'ionic-native';\nimport {OnInit, OnDestroy} from '@angular/core';\nimport * as providers from './providers/providers';\nimport {AppSite, MobileSite, dontClearCache, appVersion} from './providers/config';\nimport {MOCKS} from './providers/mocks';\nimport {GravatarPipe} from './pipes/pipes';\nimport * as helpers from './directives/helpers';\nimport * as pages from './pages/pages';\nimport * as modals from './pages/modals/modals';\n\n\nexport interface Settings {\n  is_tech: boolean;\n  stat: Object;\n  key: string;\n  org: string;\n  instance: string;\n  user: Object;\n  recent: Object;\n}\n\nexport interface Stat {\n  accounts: Object;\n  tickets: Object;\n}\n\n@App({\n  templateUrl: 'build/app.html',\n  providers: [providers.ApiData, providers.DataProvider, providers.TicketProvider, providers.TimeProvider, providers.TodoProvider],\n  pipes: [GravatarPipe],\n  prodMode : true,\n  config: {\n    tabbarPlacement: 'top',\n    pageTransitionDelay: 0,\n    prodMode: true,\n    activator: \"ripple\",\n    ios: {\n      activator: 'ripple'\n    } \n  }\n})\nclass MyApp {\n\n  @ViewChild(Nav) nav: Nav;\n  pages: Array<any>;\n  rootPage: any;\n  is_offline: boolean = false;\n  is_phonegap: boolean = false;\n  offlineTimer: any;\n  disconnectSubscription: any;\n  connectSubscription: any;\n  interval: any;\n  img: any = new Image();\n\n  constructor(private app: IonicApp, private platform: Platform, private config: Config, private events: Events, private menu: MenuController, private ticketProvider: providers.TicketProvider, private dataProvider: providers.DataProvider) {\n\n\n    if (!this.isStorage())\n    {\n      //todo redirect to Cookies alert\n      console.log(\"Please enable coockies!\")\n      return;\n    }\n\n    this.is_phonegap = localStorage.getItem(\"isPhonegap\") === \"true\";\n\n    // set up our app\n    this.initializeApp();\n\n    this.ExtendConfig();\n\n    setTimeout(() =>\n      this.ExtendNavAlert(), 0);\n\n    // disable loading screen\n    /*var lEl = document.getElementById(\"pre-bootstrap1\");\n    if (lEl) {\n      lEl.classList.add(\"loaded\");\n    setTimeout(function () { document.getElementsByTagName(\"ion-loading\")[0].outerHTML='';},\n      800);\n    }*/\n\n    (document.getElementsByTagName(\"ion-loading\")[0] || {}).outerHTML='';\n    let fake = document.getElementsByTagName(\"ion-app1\");\n    if (fake && fake[0]) {\n      fake[0].classList.add(\"loaded\");\n      setTimeout(function () { document.getElementsByTagName(\"ion-app1\")[0].outerHTML='';}, 1500);\n    }\n\n    //save dash cache\n    setTimeout(function () { if (window.dash || \"\") localStorage.setItem(\"dash_cache\", window.dash || \"\");}, 7000);\n\n/*\n  el = document.elementFromPoint(window.innerWidth/2, window.innerHeight/2);\ncontent = el.closest('ion-app');\ncontent.innerHTML.replace(/\\s\\s+/g,' ')\n*/\n\nvar ios_action = localStorage.getItem('ios_action') || \"\";\n\nvar key = helpers.getParameterByName('t');\nvar email = helpers.getParameterByName('e');\nvar platform_string = helpers.getParameterByName('ionicPlatform');\n\nif (key) {\n  config.clearCurrent(key);\n  localStorage.setItem(\"isGoogle\", \"true\");\n  localStorage.setItem('username', (email || \"\").replace(\"#\", \"\"));\n  config.saveCurrent();\n  this.rootPage = pages.OrganizationsPage;\n  helpers.cleanQuerystring('ionicPlatform', platform_string);\n  return;\n}\nelse {\n  var error = helpers.getParameterByName('f');\n  if (error) {\n    setTimeout(() => this.nav.alert(error, true), 3000);\n  }\n  localStorage.setItem(\"isGoogle\", \"\");\n}\nhelpers.cleanQuerystring('ionicPlatform', platform_string);\n//set test config object\nif (dontClearCache)\n  config.setCurrent(MOCKS[\"config\"]);\nelse if (!config.getCurrent(\"is_logged\"))\n{\n  this.rootPage = pages.LoginPage;\n  return;\n}\n\nif (!config.getCurrent(\"is_chosen\"))\n{\n  this.rootPage = pages.OrganizationsPage;\n  return;\n}\n\n//config.saveCurrent();\n\nsetTimeout(() => this.redirect(true), dontClearCache ? 1000 : 0);\n}\n\nredirect(isRedirect?) {\n  this.dataProvider.getConfig().subscribe(\n    data => {\n      var skype = localStorage.getItem('skype') || \"\";\n      if (skype)\n        {\n          this.redirect_skype(data);\n          return;\n        }\n      this.onLine(true);\n      clearInterval(this.interval);\n      this.interval = setInterval(() => this.redirect(), 5 * 60 * 1000);\n      this.redirect_logic(isRedirect, data);\n    },\n    error => {\n      clearInterval(this.interval);\n      this.nav.alert(error || 'Server error', true);\n      if (this.is_offline && this.config.getCurrent(\"user\").firstname) {\n        this.redirect_logic(isRedirect, this.config.getCurrent());\n      }\n      else\n      {\n        this.config.setCurrent({org : \"\"});\n      }\n      //localStorage.clear();\n      //localStorage.setItem(\"username\", this.config.current.username || \"\");\n      //this.nav.setRoot(LoginPage, null, { animation: \"wp-transition\" });\n    }\n    ); \n}\n\nok (value) {         //console.log('pref', value); \n}\nfail (error) {alert(error);}\n\ninitOrgPreferences(value) {\n  //console.log('value', value);\n\n  if (window.cordova){\n    var prefs = (window.plugins || {}).appPreferences;\n    if (prefs){\n      var suitePrefs = prefs.iosSuite(\"group.io.sherpadesk.mobile\");\n      suitePrefs.store (this.ok, this.fail, 'org', value);\n    }\n    if (window.sswc){\n    var didReceiveMessage = function(message){\n        var obj = JSON.parse(message);\n        console.log(obj.message);\n    }\n    var msgSendSuccess = function() {\n        console.log(\"Message send success\");\n    }\n    var failure = function() {\n        console.log(\"Error\");\n    }\n    var success = function() {\n        window.sswc.messageReceiver(didReceiveMessage, failure);\n        window.sswc.sendMessage(value, msgSendSuccess, failure);\n    }\n    window.sswc.init(success, failure);\n    console.log(\"window.sswc\", window.sswc);\n  }\n  else\n    console.log(\"no watch\");\n  }\n}\n\n\nredirect_skype(data)\n{\n  this.config.setCurrent(data);\n  this.nav.setRoot(pages.SkypePage, null, { animation: \"wp-transition\" });\n}\n\nredirect_logic(isRedirect?, data?)\n{\n    /*\n//Debug config values\n//Time\ndata.is_time_tracking = false;\n//Resolution on close ticket\ndata.is_resolution_tracking = false;\n//Confirmation on close ticket\ndata.is_confirmation_tracking = false;\n//Priorities\ndata.is_priorities_general = false;\n//Locations\ndata.is_location_tracking = false;\n//Expenses\ndata.is_expenses = false;\n//Classes\ndata.is_class_tracking = false;\n//Invoices\ndata.is_invoice = false;\n//Projects\ndata.is_project_tracking = false;\n//Todos\ndata.is_todos = false;\n//Levels\ndata.is_ticket_levels = false;\n//Tech choose Level on Ticket Creation\ndata.is_tech_choose_levels = false;\n//Restrict tech to escalate only\ndata.is_restrict_tech_escalate = false;\n//Accounts\ndata.is_account_manager = false;\n//Queues\ndata.is_unassigned_queue = false;\n//Note required on close ticket\ndata.is_ticket_require_closure_note = false;\n//All Open tickets (true to hide)\ndata.user.is_limit_assigned_tkts = true;\n//Is user Admin\ndata.user.is_admin = false;\n//onhold_status\ndata.is_onhold_status = true;\n//payments status\ndata.is_payments = false\n//billing status\ndata.is_invoice = false\n//budgeted hours\ndata.is_budget_time = false\n//show financial info for tech\ndata.is_financial_info_for_tech = false\n*/\n/*\ndata.names = {\n  \"ticket\": {s: \"Ticket1\", p: \"Tickets1\", a:\"Tkt1\", ap: \"Tkts1\"},\n  \"account\": {s: \"Account1\", p: \"Accounts1\", a:\"Acc1\", ap: \"Accs1\"},\n  \"tech\": {s: \"Technician1\", p: \"Technicians1\", a:\"Tech1\", ap: \"Techs1\"},\n  \"location\": {s: \"Location1\", p: \"Locations1\", a:\"Loc1\", ap: \"Locs1\"},\n  \"user\": {s: \"End User1\", p: \"End Users1\", a:\"User1\", ap: \"Users1\"}\n};\n*/\nthis.config.setCurrent(data);\n// set our app's pages\nif (this.config.current.user.is_techoradmin)\n  this.pages = [\n{ title: 'Profile', firstname: data.user.firstname, lastname: data.user.lastname, email: data.user.email, component: pages.ProfilePage, icon: \"speedometer\", is_profile: true },\n{ title: 'Dashboard', component: pages.DashboardPage, icon: \"speedometer\", is_active: true },\n{ title: data.names.ticket.p, component: pages.TicketsPage, icon: \"create\", is_active: true },\n{ title: 'Timelogs', component: pages.TimelogsPage, icon: \"md-time\", is_active: this.config.current.is_time_tracking },\n{ title: data.names.account.p, component: pages.AccountsPage, icon: \"people\", is_active: this.config.current.is_account_manager },\n{ title: data.names.location.p, component: pages.LocationsPage, icon: \"navigate\", is_active: this.config.current.is_location_tracking },\n{ title: data.names.tech.p, component: pages.TechniciansPage, icon: \"people-outline\", is_active: true },\n{ title: 'Invoices', component: pages.InvoicesPage, icon: \"card\", is_active: this.config.current.is_time_tracking && this.config.current.is_invoice && (this.config.current.is_financial_info_for_tech || this.config.current.user.is_admin)},\n{ title: 'Queues', component: pages.QueuesPage, icon: \"md-list-box\", is_active: this.config.current.is_unassigned_queue && (!this.config.current.user.is_limit_assigned_tkts || this.config.current.user.is_admin)},\n{ title: 'ToDos', component: pages.TodosPage, icon: \"list-box\", is_active: this.config.current.is_todos },\n{ title: 'Switch Org', component: pages.OrganizationsPage, icon: \"md-swap\", is_active: this.config.current.is_multiple_org },\n{ title: 'Signout', component: pages.LoginPage, icon: \"md-log-in\", is_active: true },\n{ title: 'Full App', component: null, icon: \"md-share-alt\", is_active: true },\n];\nelse\n  this.pages = [\n{ title: 'Profile', firstname: data.user.firstname, lastname: data.user.lastname, email: data.user.email, component: pages.ProfilePage, icon: \"speedometer\", is_profile: true },\n{ title: data.names.ticket.p, component: pages.TicketsPage, icon: \"create\", is_active: true },\n{ title: 'Switch Org', component: pages.OrganizationsPage, icon: \"md-swap\", is_active: this.config.current.is_multiple_org },\n{ title: 'Signout', component: pages.LoginPage, icon: \"md-log-in\", is_active: true },\n{ title: 'Full App', component: null, icon: \"md-share-alt\", is_active: true },\n];\n\nif (localStorage.getItem(\"isPhonegap\") === \"true\")\n{\n  this.initOrgPreferences(this.config.current.org + \"-\" + this.config.current.instance + \":\" + this.config.current.key);\n  if (window.cordova && cordova.plugins.backgroundMode){\n    cordova.plugins.backgroundMode.enable();\n    if (typeof cordova.plugins.backgroundMode.overrideBackButton === \"function\")\n      cordova.plugins.backgroundMode.overrideBackButton();\n  }\n}\n\n//if (localStorage.getItem(\"isPhonegap\") === \"true\" && this.config.current.key)\n//  initOrgPreferences(this.config.current.org + \"-\" + this.config.current.instance + \":\" + this.config.current.key);\n//getInfo4Extension();\n//var isExtension = localStorage.getItem(\"isExtension\") === \"true\";\nif (isRedirect && localStorage.getItem(\"isExtension\") === \"true\")\n{\n  var loginStr = \"login?t=\" + this.config.current.key +\n  \"&o=\" + this.config.current.org +\n  \"&i=\" + this.config.current.instance; \n  window.top.postMessage(loginStr,\"*\");\n}\nvar appVer = localStorage.getItem(\"version\");\nif (appVer !== data.mobile_ver && Number(data.mobile_ver) > Number(appVer))\n  this.presentConfirm(data.mobile_ver, isRedirect);\nelse\n  this.force_redirect(isRedirect);\n}\n\nforce_redirect(isRedirect)\n{\n  if (isRedirect) {\n\n    let param = null;\n\n    var ticket = localStorage.getItem('loadTicketNumber') || '';\n    if (ticket) \n    {\n      localStorage.setItem('loadTicketNumber', '');\n      localStorage.setItem('loadOrgKey', \"\");\n      param = {key: ticket};\n    }\n\n    let page : any = this.config.current.user.is_techoradmin && !ticket ? pages.DashboardPage : pages.TicketsPage;  \n    // set first pages\n    //page = pages.LocationsPage;\n    //page = pages.TicketsPage; \n    //page = pages.TicketDetailsPage; param = {key: \"e3ljm2\"};\n    //page = pages.ExpensesPage; \n    //page = pages.TodosPage; \n    //page = pages.TodoCreatePage; \n    //page = pages.ExpenseCreatePage; \n    //page = pages.TimelogsPage; \n    //page = pages.TimelogPage; \n    //page = pages.AccountsPage; \n    //page = modals.TicketCreatePage; \n    //page = pages.AddUserModal;\n    //page = pages.InvoiceCreatePage; \n\n    this.nav.setRoot(page, param, { animation: \"wp-transition\" });\n  }\n}\n\npresentConfirm(version, isRedirect) {\n  localStorage.setItem(\"version\", version);\n  this.config.saveCurrent();\n  let alert = Alert.create({\n    title: \"There is a new update available!\",\n    message: 'Page will reload in 2 seconds',\n    cssClass: \"hello\",\n    buttons: [\n    {\n      text: \"Yes, do it now\",\n      role: 'cancel',\n      handler: () => {\n        //window.t1 = null;\n        var element1 = document.createElement(\"script\");\n        element1.src = MobileSite + \"build/js/app.js?_d=\"+Date.now();\n        document.body.appendChild(element1);\n        setTimeout(() => location.reload(true), 2000);\n      }\n    },\n    {\n      text: \"No, I'll do it later\",\n      handler: () => {\n        alert.dismiss().then(() => {\n          this.force_redirect(isRedirect);\n        });\n        return false;\n      }\n    }\n    ]\n  });\n  //if (localStorage.getItem(\"isPhonegap\") === \"true\")\n  //  this.nav.alert(\"There is a new update available! Please kill app and start again to update\");\n  //else  \n  this.nav.present(alert);\n}\n\nisStorage() {\n  var mod = 'modernizr';\n  try {\n    localStorage.setItem(mod, mod);\n    localStorage.removeItem(mod);\n    return true;\n  } catch(e) {\n    let toast = Toast.create({\n      message: \"Please enable Cookies to work with site!\",\n      enableBackdropDismiss: false,\n      showCloseButton: true,\n      cssClass: \"toast-error\"\n    });\n    this.nav.present(toast);\n    return false;\n  }\n}\n\ninitializeApp() {\n  this.platform.ready().then(() => {\n    if (localStorage.getItem(\"isPhonegap\") === \"true\") {\n      console.log('cordova ready');\n      //StatusBar.styleDefault();\n/*\n      this.disconnectSubscription = Network.onDisconnect().subscribe(() => {\n        this.onLine(false);\n      });\n\n      this.connectSubscription = Network.onConnect().subscribe(() => {\n        this.onLine(true);\n      });*/\n    }\n\n    window.addEventListener('online',  () => this.onLine(true));\n    window.addEventListener('offline', () => this.onLine(false));\n    document.addEventListener('handle', (e) => this.handle(e), false);\n  });\n}\n\nhandle(e) {\n  let goto = e.detail; \n  //console.log('goto', goto);\n\n  let key = Object.keys(goto)[0];\n\n  let page : any;  \n  let param = {}\n  let is_modal = false;\n\n  switch (key) {\n    case \"ticket\":\n    if (!this.config.getCurrent(\"is_logged\"))\n      localStorage.setItem('loadTicketNumber', goto[key]);\n    else {\n      page = pages.TicketsPage;\n      param = {key: goto[key]}; \n    }\n    break;\n    case \"add_time\":\n    is_modal = true;\n    page = pages.TimelogPage;\n    break;\n\n    case \"add_tkt\":\n    is_modal = true;\n    page = modals.TicketCreatePage;\n    break;\n\n    case \"list\":\n    is_modal = true;\n    page = pages.TicketsPage;\n    param = {tab: goto[key]};\n    break;\n\n    default:\n    // code...\n    break;\n  }\n\n  if (page){\n    if (is_modal)\n      this.nav.push(page, param, { animation: \"wp-transition\" });\n    else\n    {\n      this.nav.setRoot(page, param, { animation: \"wp-transition\" });\n    }\n  }\n}\n\ncheckConnection() {\n  if (navigator.onLine) {\n    if (localStorage.getItem(\"isPhonegap\") !== \"true\"){\n      //img.style.display = 'none';\n      this.img.onload = () => this.onLine(true);\n      this.img.onerror = () => this.onLine(false);\n      this.img.src = MobileSite + \"img/select_arrow.png?rand=\" + Math.random();\n    }\n  }\n  else {\n    this.onLine(false);\n  }\n}\n\nonLine(isOnline?){\n  if (this.is_offline != !isOnline)\n  {\n    if (this.offlineTimer && this.offlineTimer.runCount >= 1)\n      this.nav.alert(!isOnline ? \"Sorry! You are offline now. Please check your internet connection!\" : \"Hey! You online now! Try again your action\", !isOnline);\n    if (localStorage.getItem(\"isPhonegap\") !== \"true\") {\n      if (!isOnline) {\n        clearInterval(this.offlineTimer);\n        this.offlineTimer = null;\n        this.offlineTimer = setInterval(() => this.checkConnection(), 10 * 1000);\n      }\n      else{\n        clearInterval(this.offlineTimer);\n        this.offlineTimer = null;\n      }\n    }\n  }\n  this.is_offline = !isOnline;\n}\n\nopenPage(page, param?) {\n  this.menu.close();\n\n  //if null open new tab\n  if (!page.component)\n  {\n    let curr = this.config.getCurrent();\n    helpers.fullapplink(AppSite, \"\", curr.instance, curr.org);\n    return;\n  }\n  // close the menu when clicking a link from the menu\n  if (this.interval && (page.component == pages.LoginPage || page.component == pages.OrganizationsPage))\n    clearInterval(this.interval);\n\n  if (page.index) {\n    this.nav.setRoot(page.component || page, {tabIndex: page.index});\n  } else {\n    this.nav.setRoot(page.component || page);\n  }\n}\n\nngOnInit() {\n  this.subscribeToEvents();\n}\n\nngOnDestroy() {\n  this.unsubscribeToEvents();\n  clearInterval(this.offlineTimer);\n  clearInterval(this.interval);\n\n  if (localStorage.getItem(\"isPhonegap\") === \"true\"){\n    this.disconnectSubscription.unsubscribe();\n    this.connectSubscription.unsubscribe();\n  }\n}\n\nlogout(key?)\n{\n  this.config.clearCurrent(key);\n  if (localStorage.getItem(\"isPhonegap\") === \"true\")\n    this.initOrgPreferences(\"\");\n}\n\nsubscribeToEvents() {\n  this.events.subscribe('login:failed', () => {\n    this.logout();\n    this.openPage({ component: pages.LoginPage });\n  });\n  this.events.subscribe('app:logout', (data) => {\n    this.logout(data && data[0]);\n  });\n  this.events.subscribe('connection:error', (data) => {\n    this.checkConnection();\n  });\n  this.events.subscribe('config:get', (data) => {\n    this.redirect(data);\n  });\n}\n\nunsubscribeToEvents() {\n  this.events.unsubscribe('login:failed', null);\n  this.events.unsubscribe('connection:error', null);\n  this.events.unsubscribe('config:get', null);\n  this.events.unsubscribe('app:logout', null);\n}\n\nExtendConfig() {\n\n  localStorage.setItem('isExtension', window.self !== window.top ? \"true\" : \"\");\n  localStorage.setItem(\"version\", appVersion);\n  //this.config.current.isPhonegap = localStorage.getItem(\"isPhonegap\") === \"true\";\n\n  this.config.getCurrent = function(property) {\n    let tconfig = this.current || JSON.parse(localStorage.getItem(\"current\") || \"null\") || {};\n    tconfig.is_logged = !!tconfig.key;\n    tconfig.is_chosen = !!tconfig.instance && !!tconfig.org && !!tconfig.key;\n    tconfig.is_online = !this.is_offline;\n\n    var appVer = localStorage.getItem(\"version\");\n    tconfig.is_updated = !(appVer !== tconfig.mobile_ver && Number(tconfig.mobile_ver) > Number(appVer));\n\n    if (!tconfig.stat)\n      tconfig.stat = {};\n    if (!tconfig.user)\n      tconfig.user = {};\n    if (!tconfig.recent)\n      tconfig.recent = {};\n    if (!tconfig.cache)\n      tconfig.cache = {};\n\n    if (property)\n      return tconfig[property] || \"\";\n    return tconfig; \n  };\n\n  this.config.current = this.config.getCurrent();\n\n  this.config.saveCurrent = function(){\n    let curr = this.getCurrent();\n    localStorage.setItem(\"current\",  JSON.stringify(curr));\n    localStorage.setItem(\"dateformat\", curr.user.date_format || 0);\n    localStorage.setItem('timeformat', curr.user.time_format || 0);\n    localStorage.setItem('currency', curr.currency || \"$\");\n  }\n\n  this.config.setCurrent = function(nconfig, nosave) {\n    this.current = Object.assign({}, this.current || {}, nconfig || {});\n    if (!nosave) this.saveCurrent();\n  };\n\n  this.config.clearCurrent = function(key) {\n    localStorage.removeItem(\"dash_cache\");\n    localStorage.removeItem(\"current\");\n    this.setCurrent({key: key || \"\", org: \"\", instance: \"\", user: {}, stat: {}, recent: {}, cache: {}});\n    //return config;\n  };\n\n  this.config.getStat = function(property){\n    let stat = this.getCurrent(\"stat\")[property];\n    if (typeof stat == \"undefined\")\n      return -1;\n    return stat || {};\n  }\n\n  this.config.setStat = function(property, value){\n    this.current.stat[property]  = value;\n  }\n\n  this.config.getRecent = function(property){\n    let recent = this.getCurrent(\"recent\")[property];\n    return recent || {};\n  }\n\n  this.config.setRecent = function(property, value){\n    if (!value)\n      this.current.recent = Object.assign({}, this.current.recent || {}, property || {});\n    else\n      this.current.recent[property] = value;\n  }\n\n  this.config.getCache = function(property){\n    let cache = this.getCurrent(\"cache\")[property];\n    if (typeof cache == \"undefined\")\n      return [];\n    return cache || {};\n  }\n\n  this.config.setCache = function(property, value){\n    this.current.cache[property]  = value;\n  }\n\n}\n\nExtendNavAlert () {\n  this.nav.alert = function(message, isNeg) {\n    let toast = Toast.create({\n      message: message,\n      duration: isNeg ? 7000 : 3000,\n      cssClass: isNeg ? \"toast-error\" : \"toast-ok\",\n      showCloseButton: true,\n      closeButtonText: \"X\"\n    });\n    //toast.onDismiss(() => {\n      //console.log('Dismissed toast');\n      //});\n      this.present(toast);\n    };\n  }\n\n}\n","//in case on using ionic \"ion-card\"\nimport {IONIC_DIRECTIVES, Nav, NavParams, Config} from 'ionic-angular';\nimport {Component, Input, OnChanges} from '@angular/core';\nimport {AccountDetailsPage} from '../../pages/account-details/account-details';\nimport {MorePipe} from '../../pipes/pipes';\n\n@Component({\n    selector: 'accounts-list',\n    templateUrl: 'build/components/accounts-list/accounts-list.html',\ndirectives: [IONIC_DIRECTIVES],\npipes: [MorePipe],\n})\n\nexport class AccountsListComponent {\n    @Input() accounts: Array<any>;\n    @Input() simple: boolean;\n    is_empty: boolean;\n\n     constructor(private nav: Nav, private config: Config) {\n         this.is_empty = false;\n}\n     itemTapped(event, account) {\n         account.account_statistics.ticket_counts.closed = null;\n         this.nav.push(AccountDetailsPage, account);\n                   }\n     \n     ngOnChanges(event) {\n         if (!this.simple)\n             return;\n         if (\"accounts\" in event ) {\n             if (event.accounts.isFirstChange() && event.accounts.currentValue !== null)\n                 return;\n             this.is_empty = !event.accounts.currentValue || event.accounts.currentValue.length == 0;\n         }\n     }\n     \n}\n","import {Page, ActionSheet, IONIC_DIRECTIVES, Nav, NavParams, Modal, Config} from 'ionic-angular';\nimport {Component, Input, Output, EventEmitter, OnInit, OnDestroy} from '@angular/core';\nimport {TicketCreatePage} from '../../pages/modals/modals';\nimport {TimelogPage} from '../../pages/timelog/timelog';\nimport {TicketDetailsPage} from '../../pages/ticket-details/ticket-details';\nimport {ExpenseCreatePage} from '../../pages/expense-create/expense-create';\nimport {TodoCreatePage} from '../../pages/todo-create/todo-create';\nimport {InvoicesPage} from '../../pages/invoices/invoices';\nimport {InvoiceCreatePage} from '../../pages/invoice-create/invoice-create';\n\n@Component({\n    selector: 'action-button',\n    templateUrl: 'build/components/action-button/action-button.html',\n    directives: [IONIC_DIRECTIVES],\n})\n\nexport class ActionButtonComponent {\n\n    @Input() data: any;\n    actionSheet: any;\n\n    constructor(private navParams: NavParams, private nav: Nav, private config: Config) {\n        this.data = {};\n    }\n    \n    ngOnInit() {\n        //console.log(this.data);\n        //this.data = {'tech': { id: queue.id, name: queue.fullname + ' Queue'};\n    }\n    \n    openModal(page) {\n        let myModal = Modal.create(page, this.data);\n        myModal.onDismiss(data1 => { \n            //console.log(this.nav);\n            if (data1 && data1.number)\n                this.nav.push(TicketDetailsPage, data1);\n        });\n        this.nav.present(myModal);\n    }\n    \n    presentActionSheet() {\n        if (!this.config.current.user.is_techoradmin)\n        {\n            this.openModal(TicketCreatePage);\n            return;\n        }\n        let but = [\n        {\n            icon: 'create',\n            text: 'Add ' + this.config.current.names.ticket.s,\n            role: '',\n            handler: () => {\n                this.actionSheet.dismiss().then(() => this.openModal(TicketCreatePage));\n                return false;\n            }\n        }];\n        if (this.config.current.is_time_tracking) {\n            but.push({\n                icon: 'md-time',\n                text: 'Add Time',\n                role: '',\n                handler: () => {\n                    this.actionSheet.dismiss().then(() => this.openModal(TimelogPage));\n                    return false;\n                }\n            });\n            if (this.config.current.is_invoice && (this.config.current.is_financial_info_for_tech || this.config.current.user.is_admin))\n                but.push(\n                {\n                    icon: 'card',\n                    text: 'Create Invoice',\n                    role: '',\n                    handler: () => {\n                        this.actionSheet.dismiss().then(() => this.nav.push(InvoiceCreatePage,this.data));\n                        return false;\n                    }\n                });\n            if (this.config.current.is_invoice && (this.config.current.is_financial_info_for_tech || this.config.current.user.is_admin))\n                but.push(\n                {\n                    icon: 'card',\n                    text: 'Show Invoices',\n                    role: '',\n                    handler: () => {\n                        this.actionSheet.dismiss().then(() => this.nav.push(InvoicesPage,this.data));\n                        return false;\n                    }\n                });\n            if (this.config.current.is_todos)\n                but.push(\n                {\n                    icon: 'ios-list-box-outline',\n                    text: 'Add ToDo',\n                    role: '',\n                    handler: () => {\n                        this.actionSheet.dismiss().then(() => this.nav.push(TodoCreatePage));\n                        return false;\n                    }\n                });\n        }\n\n        if (this.config.current.is_expenses)\n            but.push({\n                icon: 'md-list-box',\n                text: 'Add Expense',\n                role: '',\n                handler: () => {\n                    this.actionSheet.dismiss().then(() => this.openModal(ExpenseCreatePage));\n                    return false;\n                }\n            });\n\n        but.push({\n            icon: '',\n            text: 'Cancel',\n            role: 'cancel',\n            handler: () => {\n                console.log('Cancel clicked');\n                return true;\n            }\n        }\n        );\n\n        this.actionSheet = ActionSheet.create({\n            title: '',\n            buttons: but\n        });\n\n        //setTimeout( () => {\n            this.nav.present(this.actionSheet);\n        //});\n    }\n}\n","import {IONIC_DIRECTIVES, Nav, Modal, Alert, Config} from 'ionic-angular';\nimport {ApiData} from '../../providers/api-data';\nimport {Component, Input, Output, EventEmitter, OnInit} from '@angular/core';\nimport {TreeModal} from '../../pages/modals/modals';\nimport 'rxjs';\n\nconst alertLimit = 10;\n\n@Component({\n    selector: 'class-list',\n    templateUrl: 'build/components/class-list/class-list.html',\n    directives: [IONIC_DIRECTIVES]\n})\nexport class ClassListComponent {\n    @Input() list: any = {};\n    @Input() preload: boolean;\n    @Output() public onChanged:EventEmitter<any> = new EventEmitter(false);\n    init: boolean = true;\n    selected: Object = {};\n    url: any;\n\n     constructor(private nav: Nav, private apiData: ApiData, private config: Config) {\n     }  \n\n     ngOnInit() {\n         if (!this.config.current.is_class_tracking)\n         {\n             this.list.hidden = true;\n             return;\n         }\n         if (this.list.url) {\n             this.url = this.list.url;\n             if (this.preload) {\n                 this.loadData(false);\n             }\n         }\n     }\n\n     open() {\n         this.loadData(true);\n     }\n\n     loadData(show) {\n         if (this.url != this.list.url || !this.list.items || this.list.items.length == 0) {\n             if (this.list.url) {\n                 this.apiData.get(this.list.url).subscribe(\n                     data => {\n                         this.list.items = data;\n                         this.proceed_list(show);\n                         this.url = this.list.url;\n                     },\n                     error => {\n                         this.error(\"Cannot get \" + this.list.name + \" list! Error: \" + error);\n                         console.log(error || 'Server error');\n                     }\n                 );\n             }\n             else\n                 this.error(this.list.name + ' list is empty!');\n         }\n         else {\n             this.proceed_list(show);\n         }\n     }\n\n     error(message)\n     {\n\n         this.nav.alert(message, true);\n     }\n\n     proceed_list(show)\n     {\n         if (!this.config.getCurrent(\"user\").is_techoradmin)\n             this.list.items = this.list.items.filter(v => { return !v.is_restrict_to_techs });\n\n         this.list.items = this.list.items.filter(v => { return v.is_active });\n\n         if (!this.list.items || this.list.items.length == 0)\n         {\n             this.list.value = \"Default (nothing to select)\";\n             //this.error(this.list.name + ' list is empty!');\n             return;\n         }\n         if (show) {\n             if (this.list.items[0].name != \"Default (no selection)\")\n               this.list.items.splice(0, 0, {hierarchy_level:0,id:0,is_active:true,is_lastchild:true,name:\"Default (no selection)\"});  \n         //let is_plain = !this.list.items.filter(v => { return v.sub });\n\n         //if (is_plain && this.list.items.length <= alertLimit)\n         //    this.openRadio();\n         //else\n             this.openModal();\n     }\n     }\n\n     emit_changed(value){\n         value.name = this.findPath(\" \", this.list.items, value.id);\n         //this.list.value = value.name;\n         value.type = \"class\";\n         this.onChanged.emit(value);\n     }\n\n     findPath(path, array, id) {\n         if (typeof array != 'undefined' && array) {\n             for (var i = 0; i < array.length; i++) {\n                 if (array[i].id == id) return array[i].name;\n                 var path = this.findPath(path, array[i].sub, id);\n                 if (path != null) {\n                     return array[i].name + \" / \" + path;\n                 }\n             }\n         }\n         return null;\n     }\n\n     openRadio() {         \n         let title=this.list.name;\n\n         let alert = Alert.create({\n             title: 'Choose '+title,\n             buttons: [\n                 {\n                     text: 'Cancel',\n                     role: 'cancel',\n                     handler: () => {\n                         console.log('Cancel clicked');\n                     }\n                 },\n                 {\n                     text: 'OK',\n                     handler: data => {\n                         if(data){\n                             this.selected = data;\n                             this.emit_changed(data);\n                         }\n                     }\n                 }\n             ]\n         });\n\n         this.list.items.forEach(item => {\n             alert.addInput({\n                 type: 'radio',\n                 label: item.name,\n                 value: item,\n                 //checked: this.list.selected === item.id\n             });\n         });\n\n         this.nav.present(alert);\n     }\n\n     openModal() {\n         let myModal = Modal.create(TreeModal, this.list);\n         myModal.onDismiss(data => {\n             if (data.name) {\n                 this.selected = data;\n                 this.emit_changed(data);\n             }\n         });\n         this.nav.present(myModal);\n     }\n\n    }\n","export * from './queues-list/queues-list';\r\nexport * from './accounts-list/accounts-list';\r\nexport * from './todo-list/todo-list';\r\nexport * from './tickets-list/tickets-list';\r\nexport * from './posts-list/posts-list';\r\nexport * from './select-list/select-list';\r\nexport * from './multi-select/multi-select';\r\nexport * from './class-list/class-list';\r\nexport * from './action-button/action-button';\r\nexport * from './locations-list/locations-list';\r\nexport * from './location-list/location-list';\r\nexport * from './techs-list/techs-list';\r\nexport * from './custom-field/custom-field';","import {IONIC_DIRECTIVES, Nav, Modal, Alert, Config, Loading} from 'ionic-angular';\nimport {ApiData} from '../../providers/api-data';\nimport {getFullName, getPickerDateTimeFormat} from '../../directives/helpers';\nimport {Component, Input, Output, EventEmitter, OnInit} from '@angular/core';\nimport {BasicSelectModal, InfinitySelectModal, AjaxSelectModal} from '../../pages/modals/modals';\n\nconst alertLimit = 5;\n\n@Component({\n    selector: 'custom-field',\n    templateUrl: 'build/components/custom-field/custom-field.html',\n    directives: [IONIC_DIRECTIVES]\n})\nexport class CustomFieldComponent {\n    @Input() type: string;\n    @Input() id: number;\n    @Input() name: string ;\n    @Input() choices: string;\n    @Input() value: string ;\n    @Input() required: boolean ;\n    @Output() public onChanged: EventEmitter<any> = new EventEmitter(false);\n    selected: Object = {};\n    init: boolean = true;\n    url: string;\n    //name: string = \"\";\n    custom_choices: Array<any>;\n    custom_date: any;\n    displayFormat: string;\n    constructor(private nav: Nav, private apiData: ApiData, private config: Config) {\n     }  \n\n    ngOnInit() {\n        this.displayFormat = getPickerDateTimeFormat(false, true);\n        if (this.type == \"select\" ) {\n            this.custom_choices = this.choices.split(/\\r?\\n/);\n        }\n\n        if (this.type == \"checkbox\") \n            this.custom_choices = this.choices.split(/\\r?\\n/);\n        \n        if (this.type == \"date\") \n          {  \n            this.custom_date = new Date(this.value);\n        }\n     }\n\nAddHours(date, hours)\n{\n    if (date){\n        if (date.length == 19)\n            date = date.slice(0,-3);\n        let temp = new Date(date);\n        return new Date(temp.setTime(temp.getTime() + hours*60*60*1000)).toJSON();\n    }\n    return date;\n}\n\n    getStartDate(time) {\n        return  time = this.AddHours(time, this.config.getCurrent(\"timezone_offset\"));\n    }\n\n    setStartDate(time){\n\n            let JsonTime = this.AddHours(time, -1 * this.config.getCurrent(\"timezone_offset\"));\n            let obj = {\n                       id: this.id,\n                       name: this.name,\n                       value: JsonTime\n                     };\n                     this.onChanged.emit(obj);            \n    }\n\n error(message)\n {\n     this.nav.alert(message, true);\n }\n\n changeText(text1)\n {\n     this.value = text1.value.trim();\n     \n                     let obj = {\n                       id: this.id,\n                       name: this.name,\n                       value: this.value\n                     };\n                     this.onChanged.emit(obj);\n }\n\n openRadio() {       \n     let title=this.name;\n\n     let alert = Alert.create({\n         title: 'Choose '+title,\n         buttons: [\n         {\n             text: 'Cancel',\n             role: 'cancel',\n             handler: () => {\n                 console.log('Cancel clicked');\n             }\n         },\n         {\n             text: 'OK',\n             handler: data => {\n                 if(data){\n                     this.selected = data;\n                     //console.log(data);\n                     this.value = data;\n                     let obj = {\n                       id: this.id,\n                       name: this.name,\n                       value: data\n                     };\n                     this.onChanged.emit(obj);  \n                 }\n             }\n         }\n         ]\n     });\n\n     this.custom_choices.forEach(item => {\n           alert.addInput({\n             type: 'radio',\n             label: item,\n             value: item,\n                 //checked: this.list.selected === item.id\n             });\n     });\n\n     this.nav.present(alert);\n         //.then(() => { this.testRadioOpen = true;});\n     }\n\n openCheckbox() {       \n     let title=this.name;\n\n     let alert = Alert.create({\n         title: 'Choose '+title,\n         buttons: [\n         {\n             text: 'Cancel',\n             role: 'cancel',\n             handler: () => {\n                 console.log('Cancel clicked');\n             }\n         },\n         {\n             text: 'OK',\n             handler: data => {\n                 if(data){\n                     this.value = data.join(\", \");\n                     let obj = {\n                       id: this.id,\n                       name: this.name,\n                       value: this.value\n                     };\n                    this.onChanged.emit(obj);  \n                 }\n             }\n         }\n         ]\n     });\n     let checkValue = this.value.split(\", \");\n     this.custom_choices.forEach(item => {\n         alert.addInput({\n             type: 'checkbox',\n             label: item,\n             value: item,\n             checked: checkValue.filter(tc => tc == item).length>0\n             });\n     });\n\n     this.nav.present(alert);\n         //.then(() => { this.testRadioOpen = true;});\n     }     \n }\n","import {IONIC_DIRECTIVES, Nav, Modal, Alert, Config} from 'ionic-angular';\nimport {ApiData} from '../../providers/api-data';\nimport {Component, Input, Output, EventEmitter, OnInit} from '@angular/core';\nimport {TreeModal} from '../../pages/modals/modals';\nimport {addp} from '../../directives/helpers';\nimport 'rxjs';\n\nconst alertLimit = 10;\n\n@Component({\n    selector: 'location-list',\n    templateUrl: 'build/components/location-list/location-list.html',\n    directives: [IONIC_DIRECTIVES]\n})\nexport class LocationListComponent {\n    @Input() list: any = {};\n    @Input() preload: boolean;\n    @Output() public onChanged:EventEmitter<any> = new EventEmitter(false);\n    init: boolean = true;\n    selected: Object = {};\n    url: any;\n    name: string;\n\n     constructor(private nav: Nav, private apiData: ApiData, private config: Config) {\n     }  \n\n     ngOnInit() {\n         if (!this.config.current.is_location_tracking)\n         {\n             this.list.hidden = true;\n             return;\n         }\n         \n         this.name = (this.config.current.names[this.list.name] || {}).s || this.list.name;\n\n         if (this.list.url) {\n             this.url = this.list.url;\n             if (this.preload) {\n                 this.loadData(false);\n             }\n         }\n     }\n\n     open() {\n         this.loadData(true);\n     }\n\n     loadData(show) {\n         if (this.url != this.list.url || !this.list.items || this.list.items.length == 0) {\n             if (this.list.url) {\n                 this.apiData.get(addp(this.list.url,\"is_tree\", \"true\")).subscribe(\n                     data => {\n                         \n                         this.list.items = data;\n                         this.proceed_list(show);\n                         this.url = this.list.url;\n                     },\n                     error => {\n                         this.error(\"Cannot get \" + this.name + \" list! Error: \" + error);\n                         console.log(error || 'Server error');\n                     }\n                 );\n             }\n             else\n                 this.error(this.name + ' list is empty!');\n         }\n         else {\n             this.proceed_list(show);\n         }\n     }\n\n     error(message)\n     {\n\n         this.nav.alert(message, true);\n     }\n\n     proceed_list(show)\n     {\n      \n      //   this.list.items = this.list.items.filter(v => { return v.is_active });\n\n         if (!this.list.items || this.list.items.length == 0)\n         {\n             this.list.value = \"Default (nothing to select)\";\n             //this.error(this.list.name + ' list is empty!');\n             return;\n         }\n         if (show) {\n             if (this.list.items[0].name != \"Default (no selection)\")\n               this.list.items.splice(0, 0, {hierarchy_level:0,id:0,is_active:true,is_lastchild:true,name:\"Default (no selection)\"});  \n         //let is_plain = !this.list.items.filter(v => { return v.sub });\n\n         //if (is_plain && this.list.items.length <= alertLimit)\n         //    this.openRadio();\n         //else\n             this.openModal();\n     }\n     }\n\n     emit_changed(value){\n         value.name = this.findPath(\" \", this.list.items, value.id);\n         //this.list.value = value.name;\n         value.type = \"location\";\n         this.onChanged.emit(value);\n     }\n\n     findPath(path, array, id) {\n         if (typeof array != 'undefined' && array) {\n             for (var i = 0; i < array.length; i++) {\n                 if (array[i].id == id) return array[i].name;\n                 var path = this.findPath(path, array[i].sub, id);\n                 if (path != null) {\n                     return array[i].name + \" / \" + path;\n                 }\n             }\n         }\n         return null;\n     }\n\n     openRadio() {         \n         let title=this.name;\n\n         let alert = Alert.create({\n             title: 'Choose '+title,\n             buttons: [\n                 {\n                     text: 'Cancel',\n                     role: 'cancel',\n                     handler: () => {\n                         console.log('Cancel clicked');\n                     }\n                 },\n                 {\n                     text: 'OK',\n                     handler: data => {\n                         if(data){\n                             this.selected = data;\n                             this.emit_changed(data);\n                         }\n                     }\n                 }\n             ]\n         });\n\n         this.list.items.forEach(item => {\n             alert.addInput({\n                 type: 'radio',\n                 label: item.name,\n                 value: item,\n                 //checked: this.list.selected === item.id\n             });\n         });\n\n         this.nav.present(alert);\n     }\n\n     openModal() {\n         let myModal = Modal.create(TreeModal, this.list);\n         myModal.onDismiss(data => {\n             if (data.name) {\n                 this.selected = data;\n                 this.emit_changed(data);\n             }\n         });\n         this.nav.present(myModal);\n     }\n\n    }\n","//in case on using ionic \"ion-card\"\r\nimport {IONIC_DIRECTIVES, Nav, NavParams, Config} from 'ionic-angular';\r\nimport {Component, Input, OnChanges} from '@angular/core';\r\nimport {LocationDetailsPage} from '../../pages/location-details/location-details';\r\nimport {MorePipe} from '../../pipes/pipes';\r\n\r\n@Component({\r\n    selector: 'locations-list',\r\n    templateUrl: 'build/components/locations-list/locations-list.html',\r\ndirectives: [IONIC_DIRECTIVES],\r\npipes: [MorePipe],\r\n})\r\n\r\nexport class LocationsListComponent {\r\n    @Input() locations: Array<any>;\r\n    @Input() simple: boolean;\r\n    is_empty: boolean;\r\n\r\n     constructor(private nav: Nav, private config: Config) {\r\n         this.is_empty = false;\r\n}\r\n     itemTapped(event, location) {\r\n        // location.location_statistics.ticket_counts.closed = null;\r\n         this.nav.push(LocationDetailsPage, location);\r\n                   }\r\n     \r\n     ngOnChanges(event) {\r\n        // console.log(event.locations);\r\n         if (!this.simple)\r\n             return;\r\n         if (\"locations\" in event ) {\r\n             if (event.locations.isFirstChange() && event.locations.currentValue !== null)\r\n                 return;\r\n             this.is_empty = !event.locations.currentValue || event.locations.currentValue.length == 0;\r\n         }\r\n     }\r\n     \r\n}\r\n","import {IONIC_DIRECTIVES, Nav, Modal, Alert, Config, Loading} from 'ionic-angular';\nimport {ApiData} from '../../providers/api-data';\nimport {getFullName} from '../../directives/helpers';\nimport {TicketProvider} from '../../providers/providers';\nimport {Component, Input, Output, EventEmitter, OnInit, OnChanges} from '@angular/core';\nimport {BasicSelectModal, InfinityMultiSelectModal, AjaxSelectModal} from '../../pages/modals/modals';\n\nconst alertLimit = 5;\n\n@Component({\n    selector: 'multi-select',\n    templateUrl: 'build/components/multi-select/multi-select.html',\n    directives: [IONIC_DIRECTIVES]\n})\nexport class MultiSelectComponent {\n    @Input() list: any;\n    @Input() account_id: any;\n    @Input() class_id: any;\n    @Input() isbutton: boolean;\n    @Input() is_enabled: boolean = true;\n    @Input() is_me: boolean;\n    @Input() preload: boolean;\n    @Input() ajax: boolean;\n    @Output() public onChanged: EventEmitter<any> = new EventEmitter(false);\n    selected: Object = {};\n    init: boolean = true;\n    classes: any = {};\n    url: string;\n    contractors: number = 0;\n    name: string = \"\";\n\n    constructor(private nav: Nav, private apiData: ApiData, private ticketProvider: TicketProvider, private config: Config) {\n        this.list = {};\n    }  \n    ngOnChanges(event) {\n        if (this.list.name.toLowerCase() == \"alt techs\" && !event.account_id.isFirstChange() || this.list.name.toLowerCase() == \"alt users\" && !event.account_id.isFirstChange()) {\n                    this.list.items.splice(0,this.contractors); \n                    this.getContractor(this.account_id);\n            }\n        if (\"class_id\" in event ) {\n            if (this.list.name.toLowerCase() == \"todo templates\" && !event.class_id.isFirstChange() && !this.list.hidden) {\n                this.selectTodoTemplate();\n            }\n        }\n        }\n\n    ngOnInit() {\n        let listname = this.list.name.toLowerCase();\n        \n        if ((listname == \"project\" && !this.config.current.is_project_tracking) ||\n            (listname == \"todos\" && !this.config.current.is_todos) ||\n            (listname == \"todo templates\" && !this.config.current.is_todos) ||\n            (listname == \"location\" && !this.config.current.is_location_tracking) ||\n            ((listname == \"contract\" || listname == \"prepaid pack\") && !this.config.current.is_invoice) ||\n            (listname == \"priority\" && !this.config.current.is_priorities_general) ||\n            (listname == \"account\" && !this.config.current.is_account_manager) ||\n            (listname == \"level\" && (!this.config.current.is_ticket_levels || (this.config.current.is_restrict_tech_escalate && !this.config.current.user.is_admin))) ||\n            ((listname == \"resolution\" || listname == \"category\") && !this.config.current.is_resolution_tracking)) \n        {\n            this.list.hidden = true;\n        }\n\n        this.is_enabled = !this.list.is_disabled;\n        this.is_once = this.list.is_once;\n\n        if (this.list.hidden)\n            return;\n\n        this.is_enabled = !this.list.is_disabled;\n\n        if (listname == \"alt techs\")\n            this.name = \"Alt \" + this.config.current.names.tech.p;\n        else if (listname == \"alt users\")\n            this.name = \"Alt \" + this.config.current.names.user.p;\n        else{\n            this.name = this.list.name;\n            this.getClasses();\n        }\n        \n\n\n        if (this.list.url)\n        {\n            this.url = this.list.url;\n             if (this.preload)\n             {\n                 this.loadData(false);\n             }\n         }\n     }\n\n    // me()\n    // {\n    //    let he = this.config.getCurrent(\"user\");\n    //    let value = {\n     //       id: he.user_id,\n     //       name: getFullName(he.firstname, he.lastname, he.email)\n     //   };\n     //   this.emit_changed(value);\n     //}\n\n     open()\n     {\n         this.loadData(true);\n     }\n\n     loadData (show)\n     {\n         if (this.url != this.list.url || !this.list.items || this.list.items.length == 0){\n             if (this.list.url) {\n                 let loading = null;\n                 if (show){\n                     loading = Loading.create({\n                     content: \"Please wait...\",\n                     //duration: 2000,\n                     dismissOnPageChange: true\n                 });\n                 this.nav.present(loading);\n             }\n\n                 this.apiData.get(this.list.url).subscribe(\n                     data => {\n                         if(this.name == \"Alt \" + this.config.current.names.tech.p)\n                             this.sortCheakIn(data);\n                         else\n                             this.list.items = data;\n                                                \n                         if (show) {\n                             loading.dismiss();\n                         }\n                         this.proceed_list(show);\n                         if (this.list.name.toLowerCase() == \"alt users\" || this.list.name.toLowerCase() == \"alt techs\")\n                             this.getContractor(this.account_id);\n                         this.url = this.list.url;\n                     },\n                     error => {\n                         if (show) loading.dismiss();\n                         this.error(\"Cannot get \" + this.name + \" list! Error: \" + error);\n                         console.log(error || 'Server error');\n                     }\n                 );\n             }\n             else {\n                 this.list.hidden = true;\n                 this.error(this.name + ' list is empty!');\n             }\n     }\n     else\n         this.proceed_list(show);\n }\n\n error(message)\n {\n     this.nav.alert(message, true);\n }\n\n proceed_list(show)\n {\n     if (!this.list.items || this.list.items.length == 0)\n     {\n         this.list.value = \"Default (nothing to select)\";\n         //this.open = function { return false; };\n         //this.error(this.list.name + ' list is empty!');\n         return;\n     }\n     if (show) {\n     if (!this.list.items[0].name){\n         var results = [];\n         this.list.items.forEach(item => {\n             let name;\n             let id = item.id;\n                 //if users or techs\n                 if (item.email)\n                     name = getFullName(item.firstname, item.lastname, item.email, this.isbutton ? \"\" : \" \");\n                 //if tickets\n                 else if (item.number)\n                     name = `#${item.number}: ${item.subject}`;\n                 else if (item.prepaid_pack_id) {\n                     name = item.prepaid_pack_name;\n                     id = item.prepaid_pack_id;\n                 }\n\n                 results.push({id: id, name: name, email: item.email});\n                 \n\n             });\n         this.list.items = results;\n     }\n\n\n\n     //if (this.list.items.length <= alertLimit)\n     //    this.openRadio();\n     //else\n         this.openModal();\n     }\n }\n\n emit_changed(value){\n\n     let names = \"\";\n     let ids = \"\";\n     if (this.list.name =='ToDo Templates'){\n     for (var n = 0;  n < value.length; n++) {\n       names += value[n].name + \", \";\n       ids += value[n].id + \", \";\n     }}\n     else{\n         for (var n = 0;  n < value.length; n++) {\n           names += value[n].name.replace(\" (\" +value[n].email+ \")\", \",\");\n           ids += value[n].id + \", \";\n         }\n     }\n     ids = ids.slice(0,-1);\n     names = names.slice(0,-2);\n     this.list.value = names;\n     value = {\n         id: ids,\n         name: names,\n     };\n\n     value.type = this.list.name.split(' ').join('').toLowerCase();\n     this.selected = this.list.value;\n     this.onChanged.emit(value);\n     }\n\n     getContractor(account_id)\n   {\n     this.ticketProvider.getContractor(account_id).subscribe(\n       data => {\n         this.contractors=data.length;\n         if (data){\n             data.forEach(item => {\n                 item.lastname = \"Contractor: \" + item.lastname;\n                 this.list.items.splice(0,0,item);\n             });\n         }\n       },\n       error => {\n         console.log(error || 'Server error');\n       }\n       );\n   }\n\n    getClasses(){\n     this.ticketProvider.getClasses().subscribe(\n       data => {\n         if (data){\n             this.classes = data;         }\n       },\n       error => {\n         console.log(error || 'Server error');\n       }\n       );\n   }\n\n   selectTodoTemplate(){\n       let itemTodo;\n       this.classes.forEach(item =>{\n           if(item.id ==this.class_id)\n               itemTodo = item.todo_templates;\n       });\n       if (itemTodo){\n        itemTodo = itemTodo.replace(/-/g, '');   \n        this.list.selected = itemTodo;\n        let toDos = itemTodo.split(\",\");\n        let itemsSelected = [];\n        this.list.items.forEach(item=>{\n            for (var i = 0; i < toDos.length; ++i) {\n                if (item.id == toDos[i]){\n                   itemsSelected.push(item);  \n                }\n                else\n                   item.is_selected = false;  \n            }\n        });\n        itemsSelected.forEach(item=>{\n           item.is_selected = true; \n        });\n        this.list.selected_items = itemsSelected;\n        this.emit_changed(itemsSelected);\n        }\n        else{\n           this.list.selected_items = [];\n           this.list.selected = \"\";\n           this.list.items.forEach(item=>{\n               item.is_selected = false;\n           });\n           this.emit_changed(this.list.selected_items);\n        }\n   }\n\n   sortCheakIn(data){\n    var results = [];\n    if (this.config.current.is_tech_checkin && this.config.current.is_restrict_transfer_to_in){\n        data.forEach(item => {\n            if (item.checkin_status == \"IN\")\n                results.push(item);\n        });\n        this.list.items = results;\n    }\n    else\n        this.list.items = data;\n  }\n\n     openModal() {\n         //TODO check counts: is more than 100 - do ajax\n         this.list.isbutton = this.isbutton;\n         let len = this.list.items.length || 0;\n         let modal = InfinityMultiSelectModal;\n         let myModal = Modal.create(modal, this.list);\n         let value = \"\";\n         myModal.onDismiss(data => {\n                 if (!data)\n                     return;\n                 this.selected = this.list.selected_items = data;\n                     this.list.selected_items.forEach(select => {\n                        select.is_selected = true;\n                          });\n                 \n                 this.emit_changed(data);\n             \n         });\n         this.nav.present(myModal);\n     }\n\n }\n","import {IONIC_DIRECTIVES, Config} from 'ionic-angular';\nimport {Component, Input} from '@angular/core';\nimport {getDateTime, getFullName} from '../../directives/helpers';\nimport {LinebreaksPipe, GravatarPipe, DaysoldPipe, FilesPipe} from '../../pipes/pipes';\n\n\n@Component({\n    selector: 'posts-list',\n    templateUrl: 'build/components/posts-list/posts-list.html',\n    directives: [IONIC_DIRECTIVES],\n    pipes: [LinebreaksPipe, GravatarPipe, DaysoldPipe, FilesPipe],\n})\nexport class PostsListComponent {\n    @Input() posts: Array<any> = [];\n    _posts : Array<any> = [];\n    @Input() attachments: Array<any> = [];\n    @Input() is_showlogs: boolean;\n    @Input() is_first: boolean; \n\n     \n    constructor(private config: Config) { \n    }  \n\n    filter()\n    {\n        let posts = [];\n        if (!this.is_showlogs)\n            posts =  this.posts.filter(item => !!~[\"Initial Post\", \"Response\", \"Closed\", \"ReOpened\"].indexOf(item.log_type));\n        else\n            posts = this.posts;\n        this._posts = this.is_first ? [posts[0]] : posts.slice(1);\n    }\n\n    ngOnInit() {\n      this.filter();\n    }\n\n    ngOnChanges(event) {\n        if (\"is_showlogs\" in event)\n            {\n                this.filter();\n                return;\n            } \n        if (\"posts\" in event) {        \n             if (\"posts\" in event  && (event.posts.isFirstChange() || (event.posts.currentValue[0] || {}).id == (event.posts.previousValue[0] || {}).id))\n                 return;\n             this.filter();\n          }\n\n        //if (\"attachments\" in event && !event.posts.isFirstChange() && this.posts.length == 1 && (event.attachments.currentValue || []).length > (event.attachments.previousValue || []).length)\n        //   this.filter(); \n    }\n\n  \n    setDate(date, showmonth?, istime?) {\n         if (date){\n        //var time_offset = this.config.getCurrent(\"timezone_offset\");     \n        date = new Date(date.substring(0,23)+\"Z\");\n        //date = new Date(date.setTime(date.getTime() + time_offset*60*60*1000)).toJSON();\n        return getDateTime(date, showmonth, istime);\n        }\n        return null;\n       }\n\n    /*get posts()\n    {\n        return this.posts.filter(item => item.id.indexOf(args[0]) !== -1);\n    }\n    */\n}\n","import {IONIC_DIRECTIVES, Nav, NavParams} from 'ionic-angular';\nimport {Component, Input, OnChanges} from '@angular/core';\nimport {QueueTicketsPage} from '../../pages/queue-tickets/queue-tickets';\nimport {MorePipe} from '../../pipes/pipes';\n\n@Component({\n    selector: 'queues-list',\n    templateUrl: 'build/components/queues-list/queues-list.html',\ndirectives: [IONIC_DIRECTIVES],\npipes: [MorePipe],\n})\n\nexport class QueuesListComponent {\n    @Input() queues: any;\n    @Input() simple: boolean;\n    is_empty: boolean;\n\n     constructor(private nav: Nav) {\n         this.is_empty = false;\n}\n     \n     ngOnChanges(event) {\n         if (!this.simple)\n             return;\n         if (\"queues\" in event ) {\n             //TODO: add loading event\n             if (event.queues.isFirstChange() && event.queues.currentValue !== null)\n                 return;\n             this.is_empty = !event.queues.currentValue || event.queues.currentValue.length == 0;\n         }\n     }\n    \n     goToQueueTicketsPage(queue) {\n         this.nav.push(QueueTicketsPage, queue);\n     }\n     \n}\n","import {IONIC_DIRECTIVES, Nav, Modal, Alert, Config, Loading} from 'ionic-angular';\nimport {ApiData} from '../../providers/api-data';\nimport {getFullName} from '../../directives/helpers';\nimport {TicketProvider} from '../../providers/providers';\nimport {Component, Input, Output, EventEmitter, OnInit, OnChanges} from '@angular/core';\nimport {BasicSelectModal, InfinitySelectModal, AjaxSelectModal} from '../../pages/modals/modals';\n\nconst alertLimit = 5;\n\n@Component({\n    selector: 'select-list',\n    templateUrl: 'build/components/select-list/select-list.html',\n    directives: [IONIC_DIRECTIVES]\n})\nexport class SelectListComponent {\n    @Input() list: any;\n    @Input() account_id: any;\n    @Input() class_id: any;\n    @Input() isbutton: boolean;\n    @Input() is_enabled: boolean = true;\n    @Input() is_once: boolean = false;\n    //@Input() default: string = \"\";\n    @Input() is_me: boolean;\n    @Input() preload: boolean;\n    @Input() ajax: boolean;\n    @Output() public onChanged: EventEmitter<any> = new EventEmitter(false);\n    selected: Object = {};\n    init: boolean = true;\n    contractors: number = 0;\n    url: string;\n    name: string = \"\";\n\n    constructor(private nav: Nav, private ticketProvider: TicketProvider, private apiData: ApiData, private config: Config) {\n        this.list = {};\n    }  \n\n\n \n    ngOnChanges(event) {\n        \n        if (\"account_id\" in event ) {\n            if (this.list.name.toLowerCase() == \"contract\" && !event.account_id.isFirstChange() && !this.list.hidden) {\n                this.loadData(false);\n            }    \n            else if (this.list.name.toLowerCase() == \"tech\" && !event.account_id.isFirstChange() && !this.list.hidden){\n                if  (this.list.items.length){\n                    this.list.items.splice(0,this.contractors); \n                    this.getContractor(this.account_id);\n                }\n            }\n        }\n        if (\"class_id\" in event ) {\n            if (this.list.name.toLowerCase() == \"todos\" && !event.class_id.isFirstChange() && !this.list.hidden) {\n                this.loadData(false);\n            }\n        }       \n        /*if (\"list\" in event) {\n            this.is_enabled = !this.list.is_disabled;\n            console.log(this.url);\n            if (!event.list.isFirstChange() && event.list.currentValue.url !== this.url) {\n                console.log(this.list.items)\n                //this.list.hidden = true;\n            }\n            \n        }*/\n    }\n\n    ngOnInit() {\n        let listname = this.list.name.toLowerCase();\n        if ((listname == \"project\" && !this.config.current.is_project_tracking) ||\n            (listname == \"todos\" && !this.config.current.is_todos) ||\n            (listname == \"location\" && !this.config.current.is_location_tracking) ||\n            ((listname == \"contract\" || listname == \"prepaid pack\") && !this.config.current.is_invoice) ||\n            (listname == \"priority\" && !this.config.current.is_priorities_general) ||\n            (listname == \"account\" && !this.config.current.is_account_manager) ||\n            (listname == \"level\" && (!this.config.current.is_ticket_levels || (this.config.current.is_restrict_tech_escalate && !this.config.current.user.is_admin))) ||\n            ((listname == \"resolution\" || listname == \"category\") && !this.config.current.is_resolution_tracking)) \n        {\n            this.list.hidden = true;\n        }\n\n        this.is_enabled = !this.list.is_disabled;\n        this.is_once = this.list.is_once;\n\n        if ( listname == \"tech\" || listname == \"user\")\n            this.list.displayname = this.name = (this.config.current.names[listname] || {}).a;\n        else\n            this.list.displayname = this.name = (this.config.current.names[listname] || {}).s || this.list.name;\n\n        if (this.list.hidden)\n            return;\n        \n        if (this.list.url)\n        {\n            this.url = this.list.url;\n             if (this.preload)\n             {\n                 this.loadData(false);\n             }\n\n         }\n     }\n\n     me()\n     {\n        let he = this.config.getCurrent(\"user\");\n        let value = {\n            id: he.user_id,\n            name: getFullName(he.firstname, he.lastname, he.email)\n        };\n        this.emit_changed(value);\n     }\n\n     open()\n     {\n        this.is_enabled = !this.list.is_disabled;\n        if (this.is_enabled){\n         this.loadData(true);\n        }\n     }\n\n     loadData (show)\n     {    \n         if (this.url != this.list.url || !this.list.items || this.list.items.length == 0){\n            let loading = null;\n             if (this.list.url) {\n                 if (show){\n                     loading = Loading.create({\n                     content: \"Please wait...\",\n                     duration: 2000,\n                     dismissOnPageChange: true\n                 });\n                 this.nav.present(loading);\n             }\n\n                 this.apiData.get(this.list.url).subscribe(\n                     data => {\n                         if(this.name ==\"Tech\")\n                             this.sortCheakIn(data);\n                         else\n                             this.list.items = data;\n                         \n                         if (loading) {\n                             loading.dismiss();\n                         }\n                         this.proceed_list(show);\n                         this.url = this.list.url;\n                         if (this.list.name.toLowerCase() == \"contract\" && !this.list.is_default){\n                             this.defaultContract();\n                         }\n                         if (this.list.name.toLowerCase() == \"tech\")\n                             this.getContractor(this.account_id);\n                     },\n                     error => {\n                         if (loading) loading.dismiss();\n                         this.error(\"Cannot get \" + this.name + \" list! Error: \" + error);\n                         console.log(error || 'Server error');\n                     }\n                 );\n             }\n             else {\n                 this.list.hidden = true;\n                 this.error(this.name + ' list is empty!');\n             }\n     }\n     else\n         this.proceed_list(show);\n }\n\n defaultContract(){\n     this.list.items.forEach(item => {\n                                 if (item.default){\n                                     this.list.selected = item.id;\n                                     this.list.value = item.name; \n                                 }\n                             });\n }\n\n sortCheakIn(data){\n    var results = [];\n    if (this.config.current.is_tech_checkin && this.config.current.is_restrict_transfer_to_in){\n        data.forEach(item => {\n            if (item.checkin_status == \"IN\")\n                results.push(item);\n        });\n        this.list.items = results;\n    }\n    else\n        this.list.items = data;\n }\n\n error(message)\n {\n     this.nav.alert(message, true);\n }\n\n proceed_list(show)\n {\n     if (!this.list.items || this.list.items.length == 0)\n     {    \n         this.list.value = this.list.default || \"Default (nothing to select)\";\n         this.onChanged.emit({type: this.name.split(' ').join('').toLowerCase(), id: 0});\n         //this.open = function { return false; };\n         //this.error(this.list.name + ' list is empty!');\n         return;\n     }\n     if (show) {\n     if (!this.list.items[0].name){\n         var results = [];\n         this.list.items.forEach(item => {\n             let name;\n             let id = item.id;\n                 //if users or techs\n                 if (item.email)\n                     name = getFullName(item.firstname, item.lastname, item.email, this.isbutton ? \"\" : \" \");\n                 //if tickets\n                 else if (item.fullname)\n                     name = item.fullname;\n                 else if (item.number)\n                     name = `#${item.number}: ${item.subject}`;\n                 else if (item.prepaid_pack_id) {\n                     name = item.prepaid_pack_name;\n                     id = item.prepaid_pack_id;\n                 }\n\n                 results.push({id: id, name: name, email: item.email});\n                 \n\n             });\n         this.list.items = results;\n     }\n\n\n\n     //if (this.list.items.length <= alertLimit)\n     //    this.openRadio();\n     //else\n         this.openModal();\n     }\n }\n\n emit_changed(value){\n     if (value && this.is_once)\n        this.is_enabled = false;\n     this.list.value = value.name;\n     value.type = this.list.name.split(' ').join('').toLowerCase();\n     this.onChanged.emit(value);\n }\n\n openRadio() {         \n     let title=this.name;\n\n     let alert = Alert.create({\n         title: 'Choose '+title,\n         buttons: [\n         {\n             text: 'Cancel',\n             role: 'cancel',\n             handler: () => {\n                 console.log('Cancel clicked');\n             }\n         },\n         {\n             text: 'OK',\n             handler: data => {\n                 if(data){\n                     this.selected = data;\n                     this.emit_changed(data);\n                 }\n             }\n         }\n         ]\n     });\n\n     this.list.items.forEach(item => {\n         alert.addInput({\n             type: 'radio',\n             label: item.name,\n             value: item,\n                 //checked: this.list.selected === item.id\n             });\n     });\n\n     this.nav.present(alert);\n         //.then(() => { this.testRadioOpen = true;});\n     }\n\n     getContractor(account_id)\n   {\n     this.ticketProvider.getContractor(account_id).subscribe(\n       data => {\n         this.contractors=data.length;\n         if (data){\n             data.forEach(item => {\n                 item.lastname = \"Contractor: \" + item.lastname;\n                 this.list.items.splice(0,0,item);\n             });\n         }\n       },\n       error => {\n         console.log(error || 'Server error');\n       }\n       );\n   }\n\n     openModal() {\n         //TODO check counts: is more than 100 - do ajax\n         this.list.isbutton = this.isbutton;\n         let len = this.list.items.length || 0;\n         let modal = len >= 25 && len%25 == 0  ? InfinitySelectModal : BasicSelectModal;\n         let myModal = Modal.create(modal, this.list);\n         myModal.onDismiss(data => {\n             if (data.name) {\n                 this.selected = data;\n                 this.emit_changed(data);\n             }\n         });\n         this.nav.present(myModal);\n     }\n\n }\n","//in case on using ionic \"ion-card\"\nimport {IONIC_DIRECTIVES, Nav, NavParams, Config} from 'ionic-angular';\nimport {Component, Input, OnChanges} from '@angular/core';\nimport {TechTicketsPage} from '../../pages/tech-tickets/tech-tickets';\nimport {MorePipe} from '../../pipes/pipes';\n\n@Component({\n    selector: 'techs-list',\n    templateUrl: 'build/components/techs-list/techs-list.html',\ndirectives: [IONIC_DIRECTIVES],\npipes: [MorePipe],\n})\n\nexport class TechniciansListComponent {\n    @Input() technicians: Array<any>;\n    @Input() simple: boolean;\n    is_empty: boolean;\n\n     constructor(private nav: Nav, private config: Config) {\n         this.is_empty = false;\n}\n     itemTapped(event, account) {\n     //    account.account_statistics.ticket_counts.closed = null;\n     //    this.nav.push(AccountDetailsPage, account);\n                   }\n     \n    goToTechTicketsPage(technician) {\n         this.nav.push(TechTicketsPage, technician);\n     }\n\n     ngOnChanges(event) {\n         if (!this.simple)\n             return;\n         if (\"technicians\" in event ) {\n             if (event.technicians.isFirstChange() && event.technicians.currentValue !== null)\n                 return;\n             this.is_empty = !event.technicians.currentValue || event.technicians.currentValue.length == 0;\n         }\n     }\n     \n}\n","import {IONIC_DIRECTIVES, Nav, NavParams, Config, Modal, Alert} from 'ionic-angular';\nimport {Component, Input, OnChanges, OnInit} from '@angular/core';\nimport {TicketProvider} from '../../providers/ticket-provider';\nimport {TicketDetailsPage} from '../../pages/ticket-details/ticket-details';\nimport {CloseTicketModal} from '../../pages/modals/modals';\nimport {htmlEscape} from '../../directives/helpers';\nimport {GravatarPipe, LinebreaksPipe, CapitalizePipe, DaysagoPipe, HtmlsafePipe} from '../../pipes/pipes';\n\n@Component({\n    selector: 'tickets-list',\n    templateUrl: 'build/components/tickets-list/tickets-list.html',\n    directives: [IONIC_DIRECTIVES],\n    pipes: [GravatarPipe, LinebreaksPipe, CapitalizePipe, DaysagoPipe, HtmlsafePipe],\n})\nexport class TicketsListComponent {\n    LIMIT: number = 6;\n\n    @Input() mode: Array<any>;\n    @Input() count: number;\n    @Input() preload: number;\n    @Input() filter: string;\n    tickets: any;\n    cachelen: number;\n    cachename: string;\n    pager: any;\n    is_empty: boolean = false;\n    busy: boolean;\n    he: any;\n\n    constructor(private nav: Nav, private navParams: NavParams, private config: Config, private ticketProvider: TicketProvider) {\n        this.pager = { page: 0, limit: this.LIMIT};\n    }\n\n    \n    ngOnChanges(event) {\n        return;\n        if (\"count\" in event) {\n             //TODO: add loading event\n             if (event.count.isFirstChange())\n                 return;\n             this.count = event.count.currentValue;\n             if (this.count < 1)\n                 this.is_empty = true;\n             else {\n                 this.pager.limit = this.count;\n                 this.onLoad();\n                 this.is_empty = false;\n             }\n         }\n     }\n\n     ngOnInit() {\n         this.he = this.config.getCurrent(\"user\");\n         this.cachename = this.mode[0] + (this.mode[1] || \"\") + (this.mode[2] || \"\");\n         this.cachelen = (this.ticketProvider._dataStore[this.cachename] || {}).length;\n         if (this.mode[0] == \"all\")\n         {\n             this.pager.limit = this.LIMIT = 15;\n         }\n         if (this.preload && !this.cachelen) {\n             setTimeout(() => {\n                 this.onLoad();\n             }, this.preload);\n         }\n         else\n             this.onLoad();\n     }\n\n     onLoad()\n     {\n         if (!this.mode)\n             return;\n\n         let stat = this.config.getStat(\"tickets\")[this.mode[0]];\n         //console.log(this.cachename + \" - stat:\" + stat);\n         this.count = !stat ? this.count : stat;\n         //console.log(this.cachename + \" - count:\" + this.count);\n         if (this.count !== 0) {\n             this.ticketProvider.getTicketsList(this.mode[0], this.mode[1], this.mode[2], this.pager);\n             this.tickets = this.ticketProvider.tickets$[this.cachename];\n             if (!this.ticketProvider._dataStore[this.cachename].length) {\n                 var timer = setTimeout(() => {\n                     this.busy = true;\n                 }, 500);\n                 this.tickets.subscribe(\n                     data => {\n                         clearTimeout(timer);\n                         this.busy = false;\n                         //console.log(!data.length);\n                         this.is_empty = !data.length;\n                     });\n             }\n         }\n         else {\n             this.is_empty = true;\n         }\n     }\n\n     itemTapped(event, ticket, slidingItem) {\n         if (event.srcElement.tagName.toUpperCase() != \"ION-ITEM-SLIDING\") {\n             slidingItem.close();\n             ticket.clicked = true;\n             //only if no pageloaded\n             //if (~['all','alt','user','tech'].indexOf(this.mode[0]))\n             //    this.nav.tickets_tab = this.mode[0];\n             ticket.cachename = this.cachename;\n             if (ticket.technician_email == this.he.email)\n                 ticket.is_new_tech_post = false; \n             if (ticket.technician_email == this.he.email)\n                 ticket.is_new_user_post = false;\n             this.nav.push(TicketDetailsPage, ticket);\n         }\n     }\n\n     addPost(ticket, slidingItem) {\n         slidingItem.close();\n         let prompt = Alert.create({\n             title: 'Add Response to #' + ticket.number,\n             inputs: [\n             {\n                 name: 'note',\n                 placeholder: 'Note'\n             },\n             ],\n             buttons: [\n             {\n                 text: 'Cancel',\n                 handler: data => {\n                     console.log('Cancel clicked');\n                 }\n             },\n             {\n                 text: 'Post',\n                 handler: data => {\n                     \n                     if (!data.note.trim())\n                         return;\n\n                     var post = htmlEscape(data.note.trim()).substr(0, 5000);\n\n                     this.ticketProvider.addTicketPost(ticket.id, post).subscribe(\n                         data => {\n                             this.nav.alert('Note added :)');\n                         },\n                         error => {\n                             this.nav.alert(error, true);\n                             console.log(error || 'Server error');\n                         }\n                         );\n                 }\n             }\n             ]\n         });\n\n         this.nav.present(prompt);\n     }\n\n     closeTicket(ticket, slidingItem) {\n         slidingItem.close();\n         if (ticket.status == 'Closed'){\n             this.reopenTicket(ticket);\n             return;\n         }\n         if (this.config.current.is_force_time_on_closing_tickets && 0 == ticket.total_hours)\n         {\n            this.nav.alert(\"Your administrator is requiring time entries before a \" + this.config.current.names.ticket.s + \" can be closed.\", true);\n            return;\n         }\n         let myModal = Modal.create(CloseTicketModal, ticket);\n         myModal.onDismiss(data => {\n             if (!data)\n                 return;\n             this.count -= data;\n             this.ticketProvider._dataStore[this.cachename].splice(this.ticketProvider._dataStore[this.cachename].indexOf(ticket),1);\n             this.ticketProvider.getTicketsList(this.mode[0], this.mode[1], this.mode[2], { \"limit\": 25 });\n             //myArray.findIndex(el => el.color === 'blue');\n             //myArray.map((el) => el.color).indexOf('blue');\n             if (this.count < 1)\n                 this.is_empty = true;\n             else {\n                 //this.pager.limit = this.count;\n                 //this.onLoad();\n                 this.is_empty = false;\n             }\n         });\n         this.nav.present(myModal);\n     }\n\n     reopenTicket(ticket) {\n         let data = {\n             \"status\": \"open\",\n             \"note_text\": \"\"\n         };\n\n         this.ticketProvider.closeOpenTicket(ticket.key, data).subscribe(\n             data => {\n                 this.nav.alert('Ticket has been Reopened!');\n                 ticket.status = \"Open\";\n             },\n             error => {\n                 this.nav.alert(error, true);\n                 console.log(error || 'Server error');\n             }\n             );\n     }\n\n\n     doInfinite(infiniteScroll) {\n         if (this.is_empty || (this.count > 0 && (this.count < this.LIMIT)) || (this.cachelen > 0 && this.cachelen < this.LIMIT))\n         {\n             infiniteScroll.enable(false);\n             infiniteScroll.complete();\n             return;\n         }\n         this.pager.page += 1; \n         let cachedlen = (this.ticketProvider._dataStore[this.cachename] || {}).length;\n         this.ticketProvider.getTicketsList(this.mode[0], this.mode[1], this.mode[2], this.pager);\n         this.tickets.subscribe(\n             data => { \n                 infiniteScroll.complete();\n                 let len = data.length;\n                 infiniteScroll.enable(!(cachedlen == len || len % this.LIMIT));\n                 this.cachelen = len;\n             });\n     }\n }\n","import {IONIC_DIRECTIVES, Nav, NavParams, Config, Modal} from 'ionic-angular';\nimport {Component, Input, OnChanges, OnInit} from '@angular/core';\nimport {TodoProvider} from '../../providers/todo-provider';\nimport {TodoCreatePage} from '../../pages/todo-create/todo-create';\nimport {addp, getDateTime} from '../../directives/helpers';\nimport {TicketDetailsPage} from '../../pages/ticket-details/ticket-details';\nimport {Subject} from 'rxjs';\n\n@Component({\n    selector: 'todo-list',\n    templateUrl: 'build/components/todo-list/todo-list.html',\n    directives: [IONIC_DIRECTIVES],\n})\n\nexport class TodoListComponent {\n    @Input() simple: boolean;\n    @Input() ticket: string = \"\";\n    @Input() user: string = \"\";\n    @Input() assigned: string = \"\";\n    @Input() completed: string = \"false\";\n    LIMIT: number = 5000;\n    is_empty: boolean = false;\n    is_empty_list: boolean = true;\n    params: any;\n    pager: any;\n    cachelen: number;\n    undone: number = 0;\n    cachename: string;\n    todoLists: any;\n    busy: boolean;\n    hidden: boolean;\n    initial_load: boolean = true;\n    private unsubscribe$:Subject<void> = new Subject();\n\n     constructor(private nav: Nav, private todoProvider: TodoProvider, private config: Config, private navParams: NavParams) {\n         this.is_empty = false;\n}\n\n    \n    ngOnChanges(event) {\n        if (\"completed\" in event) {\n            if (event.completed.isFirstChange())\n                 return;\n             this.completed = event.completed.currentValue;\n             this.cachename = addp(\"todos\", \"assigned_id\", this.assigned);\n             this.cachename = addp(this.cachename, \"ticket\", this.ticket || \"\");\n             this.cachename = addp(this.cachename, \"is_completed\", this.completed);\n             this.cachelen = (this.todoProvider._dataStore[this.cachename] || {}).length;\n             this.getTodos();\n         }\n        if (\"assigned\" in event) {\n            if (event.assigned.isFirstChange())\n                 return;\n             this.assigned = event.assigned.currentValue;\n             this.cachename = addp(\"todos\", \"assigned_id\", this.assigned);\n             this.cachename = addp(this.cachename, \"ticket\", this.ticket || \"\");\n             this.cachename = addp(this.cachename, \"is_completed\", this.completed);\n             this.cachelen = (this.todoProvider._dataStore[this.cachename] || {}).length;\n             this.getTodos();\n         }\n\n             \n            // else {\n              //   this.pager.limit = this.count;\n               //  this.onLoad();\n               //  this.is_empty = false;\n             //}\n         \n     }\n\n    ngOnInit()\n    {\n        if (!this.config.current.user.is_techoradmin)\n            return;\n        this.hidden = this.simple;\n        this.is_empty_list = this.simple;\n        this.params = this.navParams.data || {};\n        this.pager = { page: 0 };\n        this.params.user = { id: this.params.user_id || this.config.current.user.user_id, name: this.params.user_name || \"\" };\n\n        if (this.user)\n            this.params.user.id = this.user == \"all\" ? \"\" : this.user;\n        this.assigned = this.params.user.id;\n        this.cachename = \"todos\";\n        if (this.params.user.id)\n            this.cachename = addp(this.cachename, \"assigned_id\", this.params.user.id);\n        if (this.ticket)\n            this.cachename = addp(this.cachename, \"ticket\", this.ticket || \"\");  \n        this.cachename = addp(this.cachename, \"is_completed\", this.completed); \n        this.cachelen = (this.todoProvider._dataStore[this.cachename] || {}).length;\n\n        if (this.params.is_empty)\n            this.params.count = 0;\n\n        //if (this.params.count !== 0) {\n            this.getTodos();\n        //}\n        //else\n        //    this.is_empty = true;\n    }\n\n    getTodos()\n    {\n        this.todoProvider.getTodos(this.assigned, this.ticket, this.completed, this.pager);\n        this.todoLists = this.todoProvider.todos$[this.cachename];\n        //if (!this.cachelen)\n        {\n            var timer = setTimeout(() => {\n                this.busy = true;\n            }, 500);\n            setTimeout(() => {\n                this.busy = false;\n            }, 3000);\n            this.todoLists.takeUntil(this.unsubscribe$).subscribe(\n                data => {\n                    clearTimeout(timer);\n                    //this.todoLists = this.todoProvider.todos$[this.cachename];\n                    var test = [];\n                    if (data.length && data.filter(t => t.type == 1).length == 0)\n                    {\n                       test[0] = data[0];\n                       test[0].sub = data;\n                       data = test;\n                    }\n                    this.busy = false;\n                    this.is_empty = !data.length;\n                    let count = 0, total = 0;\n                    for (let k in data) for (let l in data[k].sub) {total++; if (!data[k].sub[l].is_completed) count++};\n                    this.undone = count;\n                    this.is_empty_list = this.simple && !total;\n                });\n        }\n    }\n\n    AddTodo(tlist)\n    {\n        //time = time || {};\n        //time.account = time.account || this.params.account;\n        //time.cachename = this.cachename;\n        tlist.hidden = !(tlist.sub || {}).length || !tlist.hidden;\n        let myModal = Modal.create(TodoCreatePage, {\"list_id\" : (tlist || {}).list_id || \"\" });\n        this.nav.present(myModal);\n    }\n\n    setDone(todo){\n        this.undone = Math.max(todo.is_completed ? --this.undone : ++this.undone, 0);\n        ((this.todoProvider._dataStore[this.cachename].filter(t => t.list_id == todo.list_id) || [{}])[0].sub.filter(d => d.id == todo.id)[0] || {}).is_completed = todo.is_completed;\n        this.todoProvider.setCompletedTodo(todo.id, todo.is_completed);\n    }\n\n    setDate(date, showmonth?, istime?) {\n        if (date){\n        //var time_offset = this.config.getCurrent(\"timezone_offset\");     \n        date = new Date(date.substring(0,23)+\"Z\");\n        //date = new Date(date.setTime(date.getTime() + time_offset*60*60*1000)).toJSON();\n        return getDateTime(date, showmonth, istime);\n    }\n     return null;\n    }\n\n    getFixed(value){\n        value = (value || \"0\").toString()\n        if (~value.indexOf(\".\"))\n            return Number(value).toFixed(2).toString();\n        return value;\n    }\n\n    ngOnDestroy(){  \n        this.unsubscribe$.next();\n        this.unsubscribe$.complete(); \n    }\n\n    itemTapped(tlist) {\n            tlist.hidden = !(tlist.sub || {}).length || !tlist.hidden;\n            var ticket = {\"key\":tlist.list_ticket_id};\n            this.nav.push(TicketDetailsPage, ticket);\n         }\n}\n","import {IONIC_DIRECTIVES, Nav, NavParams} from 'ionic-angular';\nimport {Component, Input, Output, EventEmitter} from '@angular/core';\n\nexport interface ITreeNode {\nid: number;\nname: string;\nsub: Array<ITreeNode>;\nisExpanded: boolean;\n    is_active: boolean;\n    is_restrict_to_techs: boolean;\n    parent: string;\n}\n\n@Component({\nselector: \"tree-view\",\n    templateUrl: \"build/components/tree-view/tree-view.html\",\n    directives: [TreeViewComponent, IONIC_DIRECTIVES]\n})\n\nexport class TreeViewComponent {\n\n@Input() Nodes: Array<ITreeNode>;\n@Input() SelectedNode: ITreeNode;\n\n@Output() onSelectedChanged: EventEmitter<any> = new EventEmitter();\n//@Output() onRequestNodes: EventEmitter<ITreeNode> = new EventEmitter();\n\nconstructor() { }\n\nonSelectNode(node: ITreeNode) {\nthis.onSelectedChanged.emit(node);\n}\n\nonExpand(node: ITreeNode) {\n    if (!node.sub)\n        return;\n    \nnode.isExpanded = !node.isExpanded;\n\n   // if (node.isExpanded && (!node.sub || node.sub.length == 0)) {\n//this.onRequestNodes.emit(parent);\n//}\n}\n \n onRequest(parent: ITreeNode) {\n     console.log(\"inner request\");\n     return;\n }\n}","export * from './focuser';","import {Directive, Renderer, ElementRef} from \"@angular/core\";\n@Directive({\n\tselector: '[focuser]'\n})\nexport class Focuser {\n\tconstructor(public renderer: Renderer, public elementRef: ElementRef) { }\n\n\tngOnInit() {\n\t\t//disabled focuser\n\t\treturn;\n\t\t//search bar is wrapped with a div so we get the child input\n\t\tconst searchInput = this.elementRef.nativeElement.querySelector('input');\n\t\tsetTimeout(() => {\n\t\t\t//delay required or ionic styling gets finicky\n\t\t\tthis.renderer.invokeElementMethod(searchInput, 'setSelectionRange', [0, 999]);\n\t\t}, 500);\n\t\tsetTimeout(() => {\n\t\t\t//delay required or ionic styling gets finicky\n\t\t\tthis.renderer.invokeElementMethod(searchInput, 'focus', []);\n\t\t\t//this.renderer.setElementProperty(searchInput, 'autofocus', 'autofocus');\n\t\t}, 300);\n\t}\n}","import * as Config from '../providers/config';\n//import { Plugins } from '@capacitor/core';\n//import {Events} from 'ionic-angular';\n\nconst { Browser } = Capacitor.Plugins;\n\n/*Object.prototype.e = function (p) {\n    return p ? p.split('.').reduce(function (o, k) {\n        var m = k.indexOf(\"[\"); if (~m) { var s=k.substring(0,k.indexOf(\"[\")); return (o && o[s] && o[s][k.substring(m+1, k.indexOf(\"]\"))]) || {};}\n        return (o && o[k]) || {};\n    }, this) : this;\n}\n\nObject.prototype.e=function(b){return b?b.split(\".\").reduce(function(c,a){var b=a.indexOf(\"[\");if(~b){var d=a.substring(0,a.indexOf(\"[\"));return c&&c[d]&&c[d][a.substring(b+1,a.indexOf(\"]\"))]||{}}return c&&c[a]||{}},this):this};\n}*/\n \nexport function saveCache(url, data) {\n    localStorage.setItem(url, JSON.stringify(data || {})); \n}\n    \nexport function loadCache(url) {\n    return JSON.parse(localStorage.getItem(url)); \n}\n\nexport function getParameterByName(name) {\n    var match = RegExp('[?&]' + name + '=([^&]*)').exec(window.location.href);\n    return match && decodeURIComponent(match[1].replace(/\\+/g, ' '));\n}\n\nexport function cleanQuerystring(param?, value?) {\n    var url = addp(location.origin + location.pathname, param, value);\n    try {window.history.replaceState( {} , '', url );}\n    catch (err){}\n}\n    \n    //global helper functions\nexport function GooglelogOut(mess) {\n    var isExtension = false;\n    if (!isExtension && !confirm(\"Do you want to stay logged in Google account?\")) {\n        var logoutUrl = \"https://www.google.com/accounts/Logout?continue=https://appengine.google.com/_ah/logout?continue=\" + Config.MobileSite;\n        //document.location.href = Config.MobileSite + addp(\"login.html\",\"f\",mess);\n    }\n    else\n        ;//window.location = \"login.html\" + mess;\n    }\n    \nexport function parseXml(xmlStr) {\n    if (!xmlStr || xmlStr.length < 9)\n        return null;\n    if (typeof window.DOMParser != \"undefined\") {\n         return (new window.DOMParser()).parseFromString(xmlStr, \"text/xml\");\n    } else if (typeof window.ActiveXObject != \"undefined\" &&\n        new window.ActiveXObject(\"Microsoft.XMLDOM\")) {\n            var xmlDoc = new window.ActiveXObject(\"Microsoft.XMLDOM\");\n            xmlDoc.async = \"false\";\n            xmlDoc.loadXML(xmlStr);\n            return xmlDoc;\n    } else {\n        console.log(\"No XML parser found\");\n        return null;\n    }\n}\n\nexport function addp (url: string, param: string, value?: any) {\n        if (!url || !value || !param)\n            return url;\n    var pattern = new RegExp('\\\\b('+param+'=).*?(&|#|$)');\n    if (url.search(pattern)>=0) {\n        return url.replace(pattern,'$1' + value + '$2');\n    }\n    url = url.replace(/[?#]$/,'');\n    return url + (url.indexOf('?')>0 ? '&' : '?') + param + '=' + value;\n }\n\nexport function fullapplink (site, ticketkey, inst,org){\n        let url = Config.AppSite;\n        if (ticketkey)\n            url = addp(url, \"tkt\", ticketkey);\n        url = addp(url, \"dept\", inst);\n        url = addp(url, \"org\", org);\n        //if (localStorage.getItem(\"isPhonegap\") === \"true\")\n        //    openURLsystem(url);\n        //else //if (localStorage.getItem(\"isExtension\") === \"true\")\n            openURLsystem(url);\n}\n\nexport function mailtolink (ticketkey, inst,org){\n        let url = `mailto:r.${org}.${inst}.${ticketkey}@app.sherpadesk.com`;\n            openURLsystem(url);\n}\n\n//HTML encode\nexport function htmlEscape(str) {\n    return String(str)\n        //.replace(/&/g, '&amp;amp;')\n        //.replace(/&quot;/g, '&amp;quot;')\n        //.replace(/&apos;/g, '&amp;apos;')\n        //.replace(/&lt;/g, '&amp;lt;')\n        //.replace(/&gt;/g, '&amp;gt;')\n        //.replace(/&/g, '&amp;')\n        //.replace(/\"/g, '&quot;')\n        //.replace(/'/g, '&apos;')\n        .replace(/</g, '&lt;')\n        .replace(/>/g, '&gt;')\n    //.replace(/\\n/g, \"<br />\")\n    ;\n}\n\nexport function linebreaks (value, args) {\n        value = (value || \"\").trim();\n        let is_edit = args; \n        if (value.length)\n            value = value\n                .replace(/&lt;br&gt;/gi, \"\\n\")\n                .replace(/<br\\s*[\\/]?>/gi, \"\\n\")\n                .replace(/\\r/g, '')\n                .replace(/\\n\\n/g, is_edit ? \"\\n\" : \"<br>\");\n        //value = value.replace(/&lt;br&gt;/gi, \"\\n\").replace(/\\r/g, '').replace(/\\n\\s*\\n/g, '\\n').replace(/\\n/g, \"<br>\");\n        return value;\n    }\n    \nexport const FileUrlHelper = {\n    isPhonegap: function() { return localStorage.getItem(\"isPhonegap\") === \"true\"},\n    ReplaceAll: function(note, find, replace) {\n            return note.split(find).join(replace);\n        },\n\n        checkURL : function (url) {\n            if(!url) return false;\n            return(url.trim().match(/.(jpeg|jpg|gif|png|ico)/i) !== null);\n        },\n\n        matchKey : function (search, array){\n            let properties = Object.keys(array);\n            for (var i = properties.length; i-- > 0;){\n                var key = properties[i];\n                key = key.replace(/[^0-9a-z]/gi, '');\n                if(key.indexOf(search) != -1) {\n                    return properties[i];\n                }\n            }\n            return \"\";\n        },\n\n        addUrls : function (note, files)\n        {\n            var length = files.length;\n            var filearray = {};\n            if (length)\n            {\n                var inlineImg = note.match(/\\[cid:[^\\[\\]]*]/g);\n                for(var i = 0; i < length; i++){\n                    var name = files[i].name;\n                    note = FileUrlHelper.ReplaceAll(note, \" \"+name, files[i].is_deleted ? \"\" :  FileUrlHelper.getFileLink(files[i].url,name));\n                    filearray['\"'+name.substring(0, name.lastIndexOf(\".\"))+'\"'] = files[i].url;\n                }\n                if (inlineImg)\n                {\n                    for(var j = 0; j < inlineImg.length; j++){\n                        var filename = inlineImg[j].slice(5, -1); \n                        if (filename.indexOf(\"_link_\") >= 0)\n                        {\n                            filename = filename.replace(\"_link_\", \"\");\n                        }\n                        else\n                        {\n                            filename = FileUrlHelper.matchKey(filename.slice(0, -3), filearray);\n                            if(filename && typeof(filearray[filename]) !== 'undefined' ) {\n                                filename = filearray[filename];\n                            }\n                            else\n                                filename = \"\";\n                        }\n                        if (filename.length)\n                            note = FileUrlHelper.ReplaceAll(note, inlineImg[j], FileUrlHelper.getFileLink(filename,inlineImg[j].slice(5, -1)));\n                    }\n                }\n                //note = note.replaceAll(\"Following file was \", \"\");\n                if (length > 1) {\n                    //note = note.replaceAll(\"Following files were \", \"\");\n                    note = FileUrlHelper.ReplaceAll(note, \"a>,\", \"a>\");\n                }\n                //note = note.replaceAll(\"uploaded:\", \"\");\n                note = FileUrlHelper.ReplaceAll(note, \"a>.\", \"a>\");\n                //note += \"<div class='attachmentBorder'></div>\"; \n            }\n            return note;\n        },\n        //get file of the folllowing options: file, name\n        getFileLink : function (file,name)\n        {\n            var img =\"\";\n            if (FileUrlHelper.checkURL(file) || FileUrlHelper.checkURL(name))\n                img = \"<img class=\\\"attachment\\\" src=\\\"\" + file + \"\\\">\";\n            else\n                img = \"<ion-icon name=\\\"md-document\\\" role=img dark class=\\\"button_circle ion-md-document\\\" aria-label=\\\"md-document\\\"></ion-icon>&nbsp;<span class=\\\"decoration width100 color\\\">\" + (name ||  decodeURIComponent(file.split(\"/\").slice(-1))) + \"</span><p></p>\";\n            return \"<p/><a class=\\\"comment_image_link files-tkts color margin-right_10\\\"\" +\n                (FileUrlHelper.isPhonegap() || true ? (\" href=# onclick='wrapper.open(\\\"\" + file + \"\\\", \\\"_blank\\\", \\\"location=no,EnableViewPortScale=yes\\\")'>\" + img + \"</a>\") :\n                 (\" target=\\\"_blank\\\" href=\\\"\" +file + \"\\\">\"+img + \"</a>\"));\n        }\n    };\n\nexport function openURL(urlString) {\n    return Browser.open({ url: urlString });\n    //return window.open(urlString, '_blank', 'location=no,EnableViewPortScale=yes');\n}\n\nwrapper.open = openURL;\n\n//module.exports.openURL = openURL;\n\n//open link in system\nexport function openURLsystem(urlString) {\n    // Handle click events for all external URLs\n    if (localStorage.getItem(\"isPhonegap\") === \"true\" && device) {\n    if (device.platform.toUpperCase() === 'ANDROID') {\n        return navigator.app.loadUrl(urlString, { openExternal: true });\n    }\n    else if (device.platform.toUpperCase() === 'IOS') {\n       return window.open(urlString, '_system');\n    }\n    }\n    return wrapper.open(urlString, '_blank');\n}\n\n//HTML decode\nexport function symbolEscape(str) {\n    return String(str)\n    //.replace(/&lt;/g, '<')\n    // .replace(/&gt;/g, '>')\n    // .replace(/&quot;/g, '\"')\n    // .replace(/&apos;/g, \"'\")\n    // .replace(/&/g, '&amp;')\n        .replace(/&lt;br&gt;/gi, \"\\n\")\n        .replace(/<br\\s*[\\/]?>/gi, \"\\n\")\n        .replace(/\\n/g, \"<p></p>\");\n\n}\n\nexport function getPickerDateTimeFormat(showmonth?, istime?) {\n    let format : string = \"\";\n    if (!showmonth)\n        format = localStorage.getItem(\"dateformat\") !== \"1\" ? \"MM/DD/YYYY\" : \"DD/MM/YYYY\";\n    else\n        format = localStorage.getItem(\"dateformat\") !== \"1\" ? \"MMM DD / YYYY\" : \"DD MMM YYYY\";\n\n    return format + (istime ? (localStorage.getItem(\"timeformat\") !== \"1\" ? \" hh:mm A\" : \" HH:mm\") : \"\");\n}\n\nfunction getDateTimeFormat(showmonth?, istime?) {\n    let format : string = \"\";\n    if (!showmonth) \n        format = localStorage.getItem(\"dateformat\") !== \"1\" ? \"m/d/yy\" : \"d/m/yy\";\n    else\n        format = localStorage.getItem(\"dateformat\") !== \"1\" ? \"mmm d / yyyy\" : \"d mmm yyyy\";\n\n    return format + (istime ? (localStorage.getItem(\"timeformat\") !== \"1\" ? \" hh:MM TT\" : \" HH:MM\") : \"\");\n}\n\nexport function getDateTime(date, showmonth?, istime?) {\n    return dateFormat(date, getDateTimeFormat(showmonth, istime));\n}\n \nexport function getCurrency(value) {\n    return localStorage.getItem(\"currency\") + Number(value || \"0\").toFixed(2).toString();\n}\n    \n    //get the full name of the following options:firstname, lastname, email,name\nexport function getFullName (firstname,lastname,email,name?) {\n        var fname = \"\";\n        if (name)\n            fname = name + \" \";\n        if (lastname)\n            fname += lastname + \" \";\n        if (firstname)\n            fname += firstname + \" \";\n        if (email && email.indexOf(\"@\") > 0){\n            if (!fname.trim())\n                fname = email;\n            else if (name)\n                fname += \" (\" + email + \")\";\n        }\n        return fname || \"NoName\";\n    }\n\nexport function toTitleCase(str) {\n  return str.replace(/\\w\\S*/g, function(txt) { return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase(); });\n}\n\nexport function getappTrackConversion(id) {\n    var r = document.referrer;\n    var h = window.location.href;\n    var p = '1'; // Price of conversion (optional)\n    var e = id || ''; // External ID (optional)\n    var listing_id = '102459';\n\n    var a = document.createElement('script');\n    a.type = 'text/javascript';\n    a.async = true;\n    a.src = 'https://www.getapp.com/conversion/' + encodeURIComponent(listing_id) +\n        '/r.js?p=' + encodeURIComponent(p) + '&h=' + encodeURIComponent(h) +\n        '&r=' + encodeURIComponent(r) + '&e=' + encodeURIComponent(e);\n    var s = document.getElementsByTagName('script')[0];\n    s.parentNode.insertBefore(a, s);\n}\n\nexport function spicePixelTrackConversion() {\n    var img = new Image();\n    var div = document.getElementsByTagName('body')[0];\n\n    img.onload = function() {\n        div.appendChild(img);\n    };\n\n    img.src = 'http://px.spiceworks.com/px/8oxz';\n    var SWPX = SWPX || {};\n    SWPX.cmd = SWPX.cmd || [];\n    SWPX.cmd.push(function() {\n        SWPX.pixel.setPixel('8oxz');\n        // Uncomment the following line to place an identifer\n        SWPX.pixel.setIdentifier('121806');\n        SWPX.pixel.fire();\n    });\n}\n\nvar dateFormat : any = function (date?, mask?, utc?) {\n    var token = /d{1,4}|m{1,4}|yy(?:yy)?|([HhMsTt])\\1?|[LloSZ]|\"[^\"]*\"|'[^']*'/g,\n        timezone = /\\b(?:[PMCEA][SDP]T|(?:Pacific|Mountain|Central|Eastern|Atlantic) (?:Standard|Daylight|Prevailing) Time|(?:GMT|UTC)(?:[-+]\\d{4})?)\\b/g,\n        timezoneClip = /[^-+\\dA-Z]/g,\n        pad = function (val?, len?) {\n            val = String(val);\n            len = len || 2;\n            while (val.length < len) val = \"0\" + val;\n            return val;\n        };\n\n    // Regexes and supporting functions are cached through closure\n    return function (date, mask, utc) {\n        var dF = dateFormat;\n\n        // You can't provide utc if you skip other args (use the \"UTC:\" mask prefix)\n        if (arguments.length == 1 && Object.prototype.toString.call(date) == \"[object String]\" && !/\\d/.test(date)) {\n            mask = date;\n            date = undefined;\n        }\n\n        // Passing date through Date applies Date.parse, if necessary\n        date = date ? new Date(date) : new Date;\n        if (isNaN(date)) throw SyntaxError(\"invalid date\");\n\n        mask = String(dF.masks[mask] || mask || dF.masks[\"default\"]);\n\n        // Allow setting the utc argument via the mask\n        if (mask.slice(0, 4) == \"UTC:\") {\n            mask = mask.slice(4);\n            utc = true;\n        }\n\n        var    _ = utc ? \"getUTC\" : \"get\",\n            d = date[_ + \"Date\"](),\n            D = date[_ + \"Day\"](),\n            m = date[_ + \"Month\"](),\n            y = date[_ + \"FullYear\"](),\n            H = date[_ + \"Hours\"](),\n            M = date[_ + \"Minutes\"](),\n            s = date[_ + \"Seconds\"](),\n            L = date[_ + \"Milliseconds\"](),\n            o = utc ? 0 : date.getTimezoneOffset(),\n            flags = {\n                d:    d,\n                dd:   pad(d),\n                ddd:  dF.i18n.dayNames[D],\n                dddd: dF.i18n.dayNames[D + 7],\n                m:    m + 1,\n                mm:   pad(m + 1),\n                mmm:  dF.i18n.monthNames[m],\n                mmmm: dF.i18n.monthNames[m + 12],\n                yy:   String(y).slice(2),\n                yyyy: y,\n                h:    H % 12 || 12,\n                hh:   pad(H % 12 || 12),\n                H:    H,\n                HH:   pad(H),\n                M:    M,\n                MM:   pad(M),\n                s:    s,\n                ss:   pad(s),\n                l:    pad(L, 3),\n                L:    pad(L > 99 ? Math.round(L / 10) : L),\n                t:    H < 12 ? \"a\"  : \"p\",\n                tt:   H < 12 ? \"am\" : \"pm\",\n                T:    H < 12 ? \"A\"  : \"P\",\n                TT:   H < 12 ? \"AM\" : \"PM\",\n                Z:    utc ? \"UTC\" : (String(date).match(timezone) || [\"\"]).pop().replace(timezoneClip, \"\"),\n                o:    (o > 0 ? \"-\" : \"+\") + pad(Math.floor(Math.abs(o) / 60) * 100 + Math.abs(o) % 60, 4),\n                S:    [\"th\", \"st\", \"nd\", \"rd\"][d % 10 > 3 ? 0 : Number(d % 100 - d % 10 != 10) * d % 10]\n            };\n\n        return mask.replace(token, function ($0) {\n            return $0 in flags ? flags[$0] : $0.slice(1, $0.length - 1);\n        });\n    };\n}();\n\n// Some common format strings\ndateFormat.masks = {\n    \"default\":      \"ddd mmm dd yyyy HH:MM:ss\",\n    shortDate:      \"m/d/yy\",\n    mediumDate:     \"mmm d, yyyy\",\n    longDate:       \"mmmm d, yyyy\",\n    fullDate:       \"dddd, mmmm d, yyyy\",\n    shortTime:      \"h:MM TT\",\n    mediumTime:     \"h:MM:ss TT\",\n    longTime:       \"h:MM:ss TT Z\",\n    isoDate:        \"yyyy-mm-dd\",\n    isoTime:        \"HH:MM:ss\",\n    isoDateTime:    \"yyyy-mm-dd'T'HH:MM:ss\",\n    isoUtcDateTime: \"UTC:yyyy-mm-dd'T'HH:MM:ss'Z'\"\n};\n\n// Internationalization strings\ndateFormat.i18n = {\n    dayNames: [\n        \"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\",\n        \"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"\n    ],\n    monthNames: [\n        \"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\",\n        \"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"\n    ]\n};","import {Page, Config, Nav, NavParams, ViewController} from 'ionic-angular';\nimport {TicketProvider, ApiData} from '../../providers/providers';\nimport {DataProvider} from '../../providers/data-provider';\nimport {InvoicesPage} from '../invoices/invoices';\nimport {TimelogsPage} from '../timelogs/timelogs';\nimport {ContractsPage} from '../contracts/contracts';\nimport {FileUrlHelper, addp} from '../../directives/helpers';\nimport {TicketsListComponent} from '../../components/tickets-list/tickets-list';\nimport {TicketDetailsPage} from '../ticket-details/ticket-details';\nimport {ActionButtonComponent} from '../../components/action-button/action-button';\nimport {MorePipe} from '../../pipes/pipes';\nimport {ExpensesPage} from '../expenses/expenses';\nimport {AjaxSearchPage} from '../ajax-search/ajax-search';\n\n@Page({\n  templateUrl: 'build/pages/account-details/account-details.html',\n    directives: [TicketsListComponent, ActionButtonComponent],\n    pipes: [MorePipe],\n})\nexport class AccountDetailsPage {\n\n    account: any;\n    pages: Array<any>;\n    details_tab: string;\n    tabsTicket: string; \n    is_editnote: boolean = true;\n    is_ready: boolean = false;\n    search_results: any;\n    test: boolean;\n    term: string = '';\n    busy: boolean;\n\n    constructor(private nav: Nav, private navParams: NavParams,private apiData: ApiData, private dataProvider: DataProvider, private ticketProvider: TicketProvider, private config: Config, private view: ViewController) {\n        this.details_tab = \"Stat\";\n        this.pages = [ContractsPage, ExpensesPage, TimelogsPage];\n  }\n\n      onPageDidEnter() {\n        var t = document.getElementsByClassName(\"searchbar-input\");\n        t = t[t.length - 1];\n        t && t.focus();\n    }\n    \n    onPageLoaded()\n    {\n        // If we navigated to this page, we will have an item available as a nav param\n        this.account = this.navParams.data || {};\n        this.details_tab = \"Stat\";\n        this.tabsTicket = \"Open\";\n    }\n\n    onPageWillEnter()\n{\n  this.ticketProvider.getTicketsList(\"open\", this.account.id, \"\",{ \"limit\": 25 });\n     this.view.setBackButtonText('');\n            this.dataProvider.getAccountDetails(this.account.id).subscribe(\n    data => {\n        this.account = data;\n        this.is_editnote = !(this.account.note || \"\").length;\n        this.is_ready = true;\n    },\n    error => {\n        console.log(error || 'Server error');\n    }\n); \n        }\n\n    saveNote(form) {\n        var note = (form.value || \"\").trim(); \n        if (note != (this.account.note || \"\").trim()) {\n        this.dataProvider.addAccountNote(this.account.id, note).subscribe(\n            data => this.saveNoteSuccess(note),\n            error => {\n                console.log(error || 'Server error');\n            }\n        );}\n        else\n        this.saveNoteSuccess(note);\n    }\n\n    saveNoteSuccess(note){\n        this.nav.alert('Note saved :)');\n        this.account.note = (note || \"\").trim();\n        this.is_editnote = !this.account.note.length;\n    }\n\n    onDelete(file){\n     let data = {\n       \"file_id\": file.id\n     };\n\n     this.dataProvider.deleteFile(data).subscribe(\n       data => {\n         this.account.files = this.account.files.filter(item => item !== file);\n         this.nav.alert(`File ${file.name} deleted!`);\n       },\n       error => {\n         console.log(error || 'Server error');\n       }\n       );\n   }\n\n    openPage(page, count)\n    {\n        setTimeout(() =>\n        this.nav.push(this.pages[page], {\"is_empty\": !count && !this.is_ready, \"account_id\": this.account.id || \"-1\", \"account_name\": this.account.name}),\n        this.is_ready ? 0 : 2000);\n    }\n    \n    getFileLink(file) {\n        return FileUrlHelper.getFileLink(file.url,file.name);\n    }\n\n    addFilesButton() {\n    console.log(\"Function connect\");\n       \n    }\n    gotoTicket(data)\n    {\n      this.test = false;\n      this.clearSearch();\n      if (data)\n      {\n        setTimeout(() => {\n          this.nav.push(TicketDetailsPage, data);\n        }, 500);\n      }\n    }\n    searchItems(searchbar) {\n      // Reset items back to all of the items\n      this.search_results = [];\n\n      // set q to the value of the searchbar\n      var q = searchbar.value;\n\n      // if the value is an empty string don't filter the search_results\n      if (q.trim() == '' || this.busy) {\n        return;\n      }\n\n      if (q.length > 1)\n      {\n        var timer = setTimeout(() => { this.busy = true; }, 500);\n        this.searchItemsAPI(q, timer);\n      }\n    }\n\n    searchItemsAPI(term, timer) {\n      this.search_results = [];\n      let url = \"tickets?query=all&account=\"+this.account.id; //status=allopen&\n      let pager = { limit: 3 };\n      this.apiData.getPaged(addp(url, \"search\", term + \"*\"), pager).subscribe(\n        data => {\n          if (timer) {\n            clearTimeout(timer);\n            this.busy = false;\n          }\n          this.search_results = data;\n        },\n        error => {\n          if (timer) {\n            clearTimeout(timer);\n            this.busy = false;\n          }\n          console.log(error || 'Server error');\n        }\n        );\n    }\n\n\n    clearSearch(searchbar?)\n    {\n      this.search_results = [];\n      this.busy = false;\n      if (searchbar) searchbar.value = \"\";\n    }\n\n    getSearch(searchbar) {\n      this.test = false;\n      this.clearSearch();\n      // Reset items back to all of the items\n      // set q to the value of the searchbar\n      let term = searchbar.target.value;\n      if (term.length < 4)\n        term += \"    \";\n      let list = { search: term, location: this.account };\n      this.test = false;\n      this.nav.push(AjaxSearchPage, list);\n    }\n\n    toggle(){\n        this.test = !this.test;\n        if (this.test){\n            setTimeout(() => {\n        var t = document.getElementsByClassName(\"searchbar-input\");\n        t = t[t.length - 1];\n        t && t.focus();\n        }, 500);\n        }\n    }\n\n  }\n\n","import {Page, Config, Nav} from 'ionic-angular';\nimport {DataProvider} from '../../providers/data-provider';\nimport {AjaxSearchPage} from '../ajax-search/ajax-search';\nimport {AccountsListComponent, ActionButtonComponent} from '../../components/components';\n\n\n@Page({\n  templateUrl: 'build/pages/accounts/accounts.html',\n    directives: [AccountsListComponent, ActionButtonComponent],\n})\nexport class AccountsPage {\n\n    count: number;\n    is_empty: boolean;\n    busy: boolean;\n    params: any;\n    term: string = '';\n    pager: any;\n    test: boolean;\n    search_results: any;\n    accounts: Array<any>;\n    items: any = [];\n    LIMIT: number = 250;\n\n    constructor(private nav: Nav, private config: Config, private dataProvider: DataProvider) {\n  }\n\n\n\n    onPageLoaded()\n    {\n        this.pager = { page: 0, limit: this.LIMIT };\n\n        var timer = setTimeout(() => {\n            this.busy = true;\n        }, 500);\n\n        this.getItems(null, timer);\n    }\n\n    getItems(infiniteScroll, timer) {\n        this.dataProvider.getAccountList(false, this.pager, true, true).subscribe(\n            data => {\n                if (timer) {\n                    clearTimeout(timer);\n                    this.busy = false;\n                    this.accounts = data;\n                    //this.config.setStat(\"accounts\", data.length);\n                }\n                else\n                {\n                    this.accounts.push(...data);\n                    //TODO: how do get accounts stat\n                    this.config.current.stat.accounts += data.length;\n                }\n                if (infiniteScroll) {\n                    infiniteScroll.enable(data.length == this.LIMIT);\n                    infiniteScroll.complete();\n                }\n                this.count = data.length;\n                this.searchItems({value : this.term});\n            },\n            error => {\n                if (timer) {\n                    clearTimeout(timer);\n                    this.busy = false;\n                }\n                console.log(error || 'Server error');\n            }\n        );\n    }\n\n    searchItems(searchbar) {\n        // Reset items back to all of the items\n        this.items = this.accounts;\n\n        // set q to the value of the searchbar\n        let q = searchbar.value.toLowerCase();\n\n        // if the value is an empty string don't filter the search_results\n        if (q.trim() == '' || this.busy) {\n            return;\n        }\n\n        if (this.accounts && q.length > 1)\n        {\n            this.items = this.accounts.filter((account) => account.name.toLowerCase().indexOf(q) > -1);\n        }\n    }\n\n    clearSearch(searchbar?)\n    {\n        this.search_results = [];\n        this.busy = false;\n        if (searchbar) searchbar.value = \"\";\n    }\n\n    doInfinite(infiniteScroll) {\n        if (this.count < this.LIMIT) {\n            infiniteScroll.enable(false);\n            infiniteScroll.complete();\n            return;\n        }\n        this.pager.page += 1;\n        this.getItems(infiniteScroll, null);\n    }\n    toggle(){\n        this.test = !this.test;\n        if (this.test){\n            setTimeout(() => {\n        var t = document.getElementsByClassName(\"searchbar-input\");\n        t = t[t.length - 1];\n        t && t.focus();\n        }, 500);\n        }\n    }\n}\n","import {Nav, NavParams, Page, Config} from 'ionic-angular';\nimport {ApiData, TicketProvider} from '../../providers/providers';\nimport {getFullName, addp} from '../../directives/helpers';\nimport {TicketDetailsPage} from '../ticket-details/ticket-details';\nimport {Focuser} from '../../directives/directives';\n\n@Page({\n    templateUrl: 'build/pages/ajax-search/ajax-search.html',\n    directives: [Focuser],\n})\nexport class AjaxSearchPage {\n\n    url: string;\n    term: string;\n    location: any = {};\n    search: string;\n    name: string;\n    data: any = [];\n    items: any = [];\n    pager: any;\n    count: number;\n    is_empty: boolean = false;\n    busy: boolean;\n\n    constructor(private nav: Nav, private navParams: NavParams, private config: Config, private apiData: ApiData, private ticketProvider: TicketProvider) {\n    }\n\n    ngOnInit() {\n        this.term = this.navParams.data.search || \"\";\n        this.location = this.navParams.data.location;\n        /*\n        this.name = this.navParams.data.name || \"List\";\n        this.url = this.navParams.data.url || \"\";\n        this.data = this.navParams.data.items || {};\n        */\n        this.pager = { limit: 20 };\n        let q = this.term.toLowerCase();\n        if (!this.location)\n        {\n        if (this.ticketProvider._dataStore.all.length)\n            this.data = this.ticketProvider._dataStore.all;\n        else if (this.ticketProvider._dataStore.tech.length)\n            this.data = this.ticketProvider._dataStore.tech;\n        else if (this.ticketProvider._dataStore.user.length)\n            this.data = this.ticketProvider._dataStore.user;\n        if (this.data.length && q.length < 4){\n            this.items = this.data.filter((v) => this.searchCriteria(v, q));\n        }\n        }\n        this.count = this.items.length;\n        if (q.length > 3) {\n            var timer = setTimeout(() => {\n                this.is_empty = true;\n                this.busy = true;\n            }, 500);\n\n            this.getItems(q, timer);\n        }\n        else\n            this.is_empty = !this.items.length;\n    }\n\n    onPageDidEnter() {\n        var t = document.getElementsByClassName(\"searchbar-input\");\n        t = t[t.length - 1];\n        t && t.focus();\n    }\n\n    dismiss(ticket)\n    {\n        this.nav.push(TicketDetailsPage, ticket);\n    }\n\n    searchCriteria (ticket, term)\n    {\n        return ticket.number.toString().indexOf(term) > -1\n            || ticket.subject.toLowerCase().indexOf(term) > -1\n            || ticket.initial_post.toLowerCase().indexOf(term) > -1\n            || ticket.user_firstname.toLowerCase().indexOf(term) > -1\n            || ticket.user_lastname.toLowerCase().indexOf(term) > -1\n            || ticket.location_name.toLowerCase().indexOf(term) > -1\n            || ticket.class_name.toLowerCase().indexOf(term) > -1\n    }\n\n    searchItems(searchbar) {\n        // Reset items back to all of the items\n        this.items = this.data;\n\n        // set q to the value of the searchbar\n        var q = searchbar.value;\n\n        // if the value is an empty string don't filter the items\n        if (q.trim() == '' || this.busy) {\n            if (q.trim() == '') this.is_empty = !this.items.length;\n            return;\n        }\n\n        if (q.length < 4)\n        {\n        this.items = this.data.filter((v) => this.searchCriteria(v, q));\n                this.is_empty = !this.items.length;\n        }\n        else {\n            var timer = setTimeout(() => { this.busy = true; }, 500);\n            this.getItems(q, timer);\n        }\n    }\n\n    getItems(term, timer) {\n        this.items = [];\n        this.url = \"tickets?query=all&location=\"+((this.location || {}).id || \"\"); //status=allopen&\n        this.apiData.getPaged(addp(this.url, \"search\", term+\"*\"), this.pager).subscribe(\n            data => {\n                if (timer) {\n                    clearTimeout(timer);\n                    this.busy = false;\n                }\n                this.is_empty = !data.length;\n\n                if (!term)\n                {\n                    this.items = this.data = data;\n                }\n                else\n                    this.items = data;\n\n                this.count = data.length;\n            },\n            error => {\n                if (timer) {\n                    clearTimeout(timer);\n                    this.busy = false;\n                }\n                console.log(error || 'Server error');\n            }\n            );\n    }\n}","import {Page, Config, Nav, NavParams, ViewController} from 'ionic-angular';\nimport {DataProvider} from '../../providers/data-provider';\nimport {getDateTime, getCurrency} from '../../directives/helpers';\nimport {GravatarPipe, MorePipe, LinebreaksPipe} from '../../pipes/pipes';\n\n@Page({\n    templateUrl: 'build/pages/contracts/contracts.html',\n    pipes: [GravatarPipe, MorePipe, LinebreaksPipe],\n})\nexport class ContractsPage {\n    LIMIT: number = 15;\n    count: number;\n    account: Object;\n    is_empty_contracts: boolean;\n    is_empty_prepaid: boolean;\n    busy: boolean;\n    params: any;\n    pager: any;\n    contracts: Array<any>;\n    prepaid_packs: Array<any>;\n\n\n\n    constructor(private nav: Nav, private dataProvider: DataProvider, private config: Config, private navParams: NavParams, private view: ViewController) {\n        this.is_empty_contracts = false;\n        this.is_empty_prepaid = false;\n    }\n    \n    onPageLoaded() {\n        this.params = this.navParams.data || {};\n        this.pager = { page: 0 };\n        this.params.account = { id: this.params.account_id || -1, name: this.params.account_name || this.config.getCurrent(\"user\").account_name };\n    }\n\nonPageWillEnter()\n    {\n    if (this.params.account_name)\n            this.view.setBackButtonText('');\n\n    if (this.params.is_empty)\n        this.params.count = 0;\n\n    if (this.params.count !== 0) {\n        var timer = setTimeout(() => {\n            this.busy = true;\n        }, 500);\n\n        this.getItems(null, timer);\n    }\n    else\n        this.is_empty_prepaid = true;\n        this.is_empty_contracts = true;\n\n    }\n\n\n    getItems(infiniteScroll, timer) {\n        this.dataProvider.getContracts(this.pager).subscribe(\n            data => {\n                if (timer) {\n                    this.is_empty_contracts = !data.length;\n                    clearTimeout(timer);\n                    this.busy = false;\n                    this.contracts = data;\n                }\n                else\n                    this.contracts.push(...data);\n                if (infiniteScroll) {\n                    infiniteScroll.enable(data.length == this.LIMIT);\n                    infiniteScroll.complete();\n                }\n                this.count = data.length;\n            },\n            error => {\n                if (timer) {\n                    clearTimeout(timer);\n                    this.busy = false;\n                }\n                console.log(error || 'Server error');\n            }\n        );\n\n        this.dataProvider.getPrepaid_packs(this.params.account.id, this.pager).subscribe( \n            data => {\n                if (timer) {\n                    this.is_empty_prepaid = !data.length;\n                    clearTimeout(timer);\n                    this.busy = false;\n                    this.prepaid_packs = data;\n                }\n                else\n                    this.prepaid_packs.push(...data);\n                if (infiniteScroll) {\n                    infiniteScroll.enable(data.length == this.LIMIT);\n                    infiniteScroll.complete();\n                }\n                this.count = data.length;\n            },\n            error => {\n                if (timer) {\n                    clearTimeout(timer);\n                    this.busy = false;\n                }\n                console.log(error || 'Server error');\n            }\n        );\n    }\n\n    setDate(date, showmonth?, istime?) {\n        if (date){\n        //var time_offset = this.config.getCurrent(\"timezone_offset\");     \n        date = new Date(date.substring(0,23)+\"Z\");\n        //date = new Date(date.setTime(date.getTime() + time_offset*60*60*1000)).toJSON();\n        return getDateTime(date, showmonth, istime);\n    }\n     return null;\n    }\n\n    doInfinite(infiniteScroll) {\n        if (this.is_empty_contracts || this.count < this.LIMIT) {\n            infiniteScroll.enable(false);\n            infiniteScroll.complete();\n            return;\n        }\n        this.pager.page += 1;\n        this.getItems(infiniteScroll, null);\n    }\n\n    \n\n    getCurrency(value) {\n        return getCurrency(value);\n    }\n}\n","import {Page, Config, Nav} from 'ionic-angular';\nimport {ApiData, DataProvider, TicketProvider, TimeProvider} from '../../providers/providers';\nimport {getDateTime} from '../../directives/helpers';\nimport {Focuser} from '../../directives/directives';\nimport {QueuesListComponent, AccountsListComponent, ActionButtonComponent, TodoListComponent} from '../../components/components';\nimport {TicketsPage} from '../tickets/tickets';\nimport {TimelogsPage} from '../timelogs/timelogs';\nimport {AccountDetailsPage} from '../account-details/account-details';\nimport {TicketDetailsPage} from '../ticket-details/ticket-details';\nimport {AjaxSearchPage} from '../ajax-search/ajax-search';\nimport {MorePipe} from '../../pipes/pipes';\nimport {addp} from '../../directives/helpers';\nimport {Subject} from 'rxjs';\n\n@Page({\n    templateUrl: 'build/pages/dashboard/dashboard.html',\n    directives: [QueuesListComponent, AccountsListComponent, ActionButtonComponent, TodoListComponent, Focuser],\n    pipes: [MorePipe],\n})\nexport class DashboardPage {\n\n    counts: Object = { open_as_tech: 0 };\n    accounts: Array<any> = [];\n    queues: Array<any> = [];\n    queue_id: any = [];\n    term: string = '';\n    test: boolean;\n    simple: boolean = false;\n    timer: any;\n    timelogs: any;\n    cachename: string;\n    working: number = 0;\n    non_working_hours: number = 0;\n    downloadTimer: any;\n    search_results: any;\n    busy: boolean;\n    date: any;\n    private unsubscribe$:Subject<void> = new Subject();\n\n    constructor(private nav: Nav, private config: Config, private apiData: ApiData, private dataProvider: DataProvider, private ticketProvider: TicketProvider, private timeProvider: TimeProvider) {\n        let counts = config.getStat(\"tickets\");\n        if (counts == -1 && config.current.is_online){\n            this.downloadTimer = setInterval(()=>{ this.counts.open_as_tech = ++this.counts.open_as_tech;},800);\n        }\n        else {\n            if (config.current.user.is_limit_assigned_tkts && !config.current.user.is_admin)\n                counts.open_all = Math.max(counts.open_as_user, counts.open_as_tech); \n            this.counts = this.counts || counts; \n        }\n    }\n    \n    onPageLoaded()\n    {       \n        this.simple = !this.config.current.is_time_tracking && !this.config.current.is_expenses;\n        let options = {\n          month: 'long',\n          day: 'numeric',\n          weekday: 'long',\n          year: 'numeric'\n        };\n        this.date = new Date().toLocaleString(\"en-US\", options);\n\n        let localQueres_id = localStorage.getItem('queue_id');\n        this.queue_id = localQueres_id ? localStorage.getItem('queue_id').split(\", \") : [];\n\n        this.ticketProvider.getTicketsCounts();\n        this.ticketProvider.tickets$[\"tickets/counts\"].subscribe(\n            data => {\n\n                if (this.config.current.user.is_limit_assigned_tkts && !this.config.current.user.is_admin)\n                    data.open_all = Math.max(data.open_as_user, data.open_as_tech);    \n                clearInterval(this.downloadTimer);\n                this.counts = data;\n                this.config.setStat(\"tickets\",\n                {\n                    \"all\": data.open_all,\n                    \"tech\": data.open_as_tech,\n                    \"alt\": data.open_as_alttech,\n                    \"user\": data.open_as_user\n                });\n                setTimeout(() => {this.saveCache()}, 1000);\n            },\n            error => {\n                clearInterval(this.downloadTimer);\n                console.log(error || 'Server error');\n            }\n            );\n\n        if (this.config.current.is_unassigned_queue) {\n            this.queues = this.config.getCache(\"dashqueues\");\n            if (this.queue_id.length == 0) {\n            this.dataProvider.getQueueList(3).subscribe(\n                data => {\n                    this.queues = data;\n                    this.config.setCache(\"dashqueues\", data);\n                },\n                error => {\n                    console.log(error || 'Server error');\n                }\n                );\n            }\n            else{\n                this.dataProvider.getQueueList().subscribe(\n                data => {  \n                    this.queues = data.filter( v => this.queue_id[0] == v.id || this.queue_id[1] == v.id || this.queue_id[2] == v.id);\n                    let default_queues = data.filter( v => this.queue_id[0] != v.id  && this.queue_id[1] != v.id && this.queue_id[2] != v.id);\n                    let difference = 3-this.queues.length;\n                    if (difference > 0)\n                    {\n                        this.queues.push(...default_queues.slice(0,difference));\n                    }\n                    this.config.setCache(\"dashqueues\", this.queues);\n\n                },\n                error => {\n                    console.log(error || 'Server error');\n                }\n                );\n            }\n\n        }\n\n        if (this.config.current.is_account_manager) {\n            this.accounts = this.config.getCache(\"dashaccounts\");\n\n            let accountslen = 500; //this.config.getStat(\"accounts\");\n\n            let pager = { limit: ~accountslen ? accountslen : 500 };\n\n            if (!this.accounts || this.accounts.length == 0)\n                this.dataProvider.getAccountList(true, pager, false, true).subscribe(\n                    data => {\n                        this.accounts = data;\n                        this.config.setStat(\"accounts\", data.length);\n                        if (this.simple)\n                            this.config.setCache(\"dashaccounts\", data);\n                    },\n                    error => {\n                        console.log(error || 'Server error');\n                    }\n                    );\n            /*if (!this.simple)\n                setTimeout(() => {\n                this.dataProvider.getAccountList(true, pager).subscribe(\n                    data => {\n                        this.accounts = data;\n                        this.config.setCache(\"dashaccounts\", data);\n                    },\n                    error => {\n                        console.log(error || 'Server error');\n                    }\n                    );  \n            }, 100);*/\n        }\n\n        if (!this.ticketProvider._dataStore.tech.length){\n            this.ticketProvider.getTicketsList(\"tech\", \"\", \"\",{ \"limit\": 6 }); \n        }\n\n        this.timer = setTimeout(() => {\n            if (!this.ticketProvider._dataStore.user.length) {\n                this.ticketProvider.getTicketsList(\"user\", \"\", \"\",{ \"limit\": 6 });\n            }\n            if (this.config.current.is_time_tracking && !(this.timeProvider._dataStore[\"time\"] || {}).length){\n                this.timeProvider.getTimelogs(\"0\", \"\", { \"limit\": 25 });\n           }\n        }, 2500);\n    \n        if (this.config.current.is_time_tracking){\n                let date = new Date().toJSON().substring(0,10);\n                let account = \"0\";\n                this.cachename = addp(\"time\", \"account\", account);\n                this.cachename = addp(this.cachename, \"tech\", this.config.current.user.user_id);\n                this.cachename = addp(this.cachename, \"start_date\", date);\n                this.cachename = addp(this.cachename, \"end_date\", date);\n                this.countHours(this.timeProvider._dataStore[this.cachename] || []);\n                this.timeProvider.getTimelogs(account, this.config.current.user.user_id, { \"limit\": 25 }, date, date);\n                this.timelogs = this.timeProvider.times$[this.cachename];\n                this.timelogs.takeUntil(this.unsubscribe$).subscribe(\n                        data => this.countHours(data)\n                        );\n         }\n    }\n\n    countHours(data){\n        let non_working_hours = 0;\n                            let working = 0;\n                            data.forEach(item => {\n                                 working += item.hours;\n                                 if (item.non_working_hours != -1)\n                                     non_working_hours += item.non_working_hours;\n                            });\n                            this.non_working_hours = non_working_hours;\n                            this.working = working;\n    }\n\n    onPageDidEnter()\n    {\n        this.term = \"\";\n    }\n\n    itemTapped(event) {\n         let tech = { tech_id: this.config.current.user.user_id, tech_name: this.config.current.user.firstname+\" \"+this.config.current.user.lastname };\n         this.nav.push(TimelogsPage, tech);\n                   }\n\n    setDate(date, showmonth?, istime?) {\n        return date ? getDateTime(date, showmonth, istime) : null;\n    }\n                   \n    saveCache(){\n        let el = document.elementFromPoint(window.innerWidth/2, window.innerHeight/2);\n        let content = el.closest('ion-nav');\n        if (content){\n            window.dash = content.innerHTML.replace(/\\s\\s+/g,' ');\n        }\n    }\n\n    ngOnDestroy(){  \n        this.unsubscribe$.next();\n        this.unsubscribe$.complete();   \n        clearTimeout(this.timer);  \n    }\n\n    searchItems(searchbar) {\n        // Reset items back to all of the items\n        this.search_results = [];\n\n        // set q to the value of the searchbar\n        var q = searchbar.value;\n\n        // if the value is an empty string don't filter the search_results\n        if (q.trim() == '' || this.busy) {\n            return;\n        }\n\n        if (q.length > 1)\n        {\n            var timer = setTimeout(() => { this.busy = true; }, 500);\n            this.getItems(q, timer);\n        }\n    }\n\n    getItems(term, timer) {\n        this.search_results = [];\n        let url = \"tickets?query=all\"; //status=allopen&\n        let pager = { limit: 3 };\n        let is_ticket = term[term.length - 1] == \" \" || term[term.length - 1] == \",\";\n        if (!is_ticket) term += \"*\";\n        else url = \"tickets/\" + term.trim() + \",\";\n        this.apiData.getPaged(addp(url, \"search\", term), pager).subscribe(\n            data => {\n                if (timer) {\n                    clearTimeout(timer);\n                    this.busy = false;\n                }\n                this.search_results = data;\n            },\n            error => {\n                if (timer) {\n                    clearTimeout(timer);\n                    this.busy = false;\n                }\n                console.log(error || 'Server error');\n            }\n            );\n    }\n\n    gotoTicket(ticket, searchBar)\n    {\n        this.test = false;\n        this.clearSearch();\n        this.nav.push(TicketDetailsPage, ticket);\n    }\n\n    clearSearch(searchbar?)\n    {\n        this.search_results = [];\n        this.busy = false;\n        if (searchbar) searchbar.value = \"\";\n    }\n\n    getSearch(searchbar) {\n        this.test = false;\n        this.clearSearch();\n        // Reset items back to all of the items\n        // set q to the value of the searchbar\n        //if (searchbar.target.value.trim().length > 2) {\n            let term = searchbar.target.value;\n            if (term.length < 4)\n                term += \"    \";\n            let list = { search: term };\n            this.test = false;\n            this.nav.push(AjaxSearchPage, list);\n            //}\n        }\n\n        itemTappedTL(tab) {  \n            this.nav.setRoot(TicketsPage, tab);\n        }\n\n        itemTappedAD() {this.nav.setRoot(AccountDetailsPage);}\n\n    }\n","import {Page, Config, Nav, NavParams, ViewController} from 'ionic-angular';\nimport {forwardRef} from '@angular/core';\nimport {getDateTime, htmlEscape, linebreaks, getFullName} from '../../directives/helpers';\nimport {ApiData} from '../../providers/api-data';\nimport {ClassListComponent} from '../../components/class-list/class-list';\nimport {SelectListComponent} from '../../components/select-list/select-list';\n\n@Page({\n    templateUrl: 'build/pages/expense-create/expense-create.html',\n    directives: [forwardRef(() => ClassListComponent), forwardRef(() => SelectListComponent)],\n})\nexport class ExpenseCreatePage {\n\n    expense: any = {};\n    isbillable: boolean;\n    is_technician_payment: boolean;\n    he: any;\n    selects: any;\n    title: string;\n    account_id: any;\n\n    constructor(private nav: Nav, private navParams: NavParams, private apiData: ApiData, private config: Config, private view: ViewController) {\n    }\n    \n    ngOnInit()\n    {\n        this.expense = this.navParams.data || {};\n\n        let name = (this.expense.user_name + \" \" + this.expense.user_email).trim().split(' ')[0];\n        if (this.expense.expense_id){\n            this.title = `Expense by ${name} on\\u00a0` + this.setDate(this.expense.date, false, true);\n            this.expense.note = linebreaks(this.expense.note, true);\n            this.expense.note_internal = linebreaks(this.expense.note_internal, true);\n        }\n        else if (this.expense.number)\n            this.title = `Add Expense to\\u00a0#${this.expense.number} ${this.expense.subject}`;\n        else\n            this.title = \"Create Expense\";\n        if(this.expense.amount)\n        this.expense.amount = this.getFixed(this.expense.amount);\n        this.expense.units = (typeof this.expense.units === 'undefined' || this.expense.units === 0) ? 1 : this.expense.units;\n        this.expense.markup_value = (typeof this.expense.markup_value === 'undefined' || this.expense.markup_value <= 0) ? \"\" : this.getFixed(this.expense.markup_value);\n\n        this.isbillable = typeof this.expense.billable === 'undefined' ? true : this.expense.billable;\n        this.is_technician_payment = typeof this.expense.is_technician_payment === 'undefined' ? true : this.expense.is_technician_payment;\n        \n        this.he = this.config.getCurrent(\"user\");\n\n        let recent : any = {};\n\n            if (!this.expense.number && !this.expense.expense_id && !this.expense.account)\n            {\n                recent = this.config.current.recent || {};\n            }\n\n        this.account_id = (this.expense.account || {}).id || this.expense.account_id || (recent.account || {}).selected || this.he.account_id || -1;\n        let project_id = (this.expense.project || {}).id || this.expense.project_id || (recent.project || {}).selected || 0;\n        let contract_id = (this.expense.contract || {}).id || this.expense.contract_id || (recent.contract || {}).selected || 0;\n        let category_id = (this.expense.category || {}).id || this.expense.category_id || (recent.category || {}).selected || 0;\n\n        this.selects = {\n            \"account\": {\n                name: \"Account\",\n                value: this.expense.account_name || (this.expense.account || {}).name || (recent.account || {}).value || this.he.account_name,\n                selected: this.account_id,\n                url: \"accounts?is_with_statistics=false&limit=500\",\n                hidden: this.expense.is_fixed\n            },\n            \"ticket\" : {\n                    name: \"Ticket\", \n                    value: this.expense.ticket_number ? `#${this.expense.ticket_number}: ${this.expense.ticket_subject}` : \"Choose (optional)\",\n                    selected: this.expense.ticket_number || 0,\n                    url: `tickets?status=open&account=${this.account_id}&project=${project_id}`,\n                    hidden: this.expense.project_id || this.expense.is_fixed || false,\n                    is_disabled: this.expense.ticket_id,\n                },\n            \"project\": {\n                name: \"Project\",\n                value: this.expense.project_name || (recent.project || {}).value || \"Default\",\n                selected: project_id,\n                url: `projects?account=${this.account_id}&is_with_statistics=false`,\n                hidden: this.expense.is_fixed || this.expense.ticket_id\n                },\n            \"contract\" : { \n                    name: \"Contract\", \n                    value: this.expense.contract_name || (recent.contract || {}).value || \"Choose\",\n                    selected: this.expense.contract_id || this.config.getRecent(\"contract\").selected || 0,\n                    url: `contracts?account_id=${this.account_id}&for_time_logs=false`,\n                    hidden: this.expense.is_fixed,\n                    is_disabled: false,\n                },\n            \"category\" : { \n                    name: \"Category\", \n                    value: this.expense.category_name || (recent.category || {}).value || \"Choose\",\n                    selected: this.expense.category_id || this.config.getRecent(\"category\").selected || null,\n                    url: `expenses/categories`,\n                    is_disabled: false,\n                },\n        };      \n    }\n    \n    saveSelect(event) {\n        let name = event.type;\n        this.account_id = this.selects.account.selected;\n        let ticket_id = this.selects.ticket.selected;\n        let project_id = this.selects.project.selected;\n        let contract_id = this.selects.contract.selected;\n        //change url on related lists\n        switch (name) {\n            case \"account\":\n            if (this.selects.account.selected === event.id) {\n                break;\n            }\n            this.selects.project.url = `projects?account=${event.id}&is_with_statistics=false`;\n            this.selects.project.value = \"Default\";\n            this.selects.project.selected = 0;\n            this.account_id = event.id;\n            this.selects.project.hidden = false;\n            this.selects.contract.url = `contracts?account_id=${event.id}&for_time_logs=false`;\n            this.selects.contract.value = \"Choose\";\n            this.selects.contract.selected = 0;\n            contract_id = 0;\n            break;\n            case \"project\" :\n            if (this.selects.project.selected === event.id)\n            {\n                break;\n            }\n            // dont change ticket on edit\n            if (!this.expense.ticket_id){\n                this.selects.ticket.url = `tickets?status=open&account=${this.account_id}&project=${event.id}`,\n                this.selects.ticket.value = \"Choose (optional)\";\n                this.selects.ticket.selected = 0;\n            }\n            project_id = event.id;\n            break;\n            case \"contract\" :\n            if (this.selects.contract.selected === event.id)\n            {\n                break;\n            }\n            contract_id = event.id;\n            break;\n\n            case \"ticket\" :\n            if (this.selects.ticket.selected === event.id)\n            {\n                break;\n            }\n            ticket_id = event.id;\n            this.selects.ticket.value = event.name;\n            this.selects.ticket.selected = event.id;\n            break;\n            default:\n            this.selects[name].selected = event.id;\n            this.selects[name].value = event.name;\n            break;\n        }\n    }\n\n    onSubmit(form) {\n        if (form.valid) {\n            //proof double click\n            if (this.expense.in_progress && Date.now() - this.expense.in_progress < 1500) {return;}\n            this.expense.in_progress = Date.now();\n            let amount = isNaN(form.value.amount) ? 0 : Number(form.value.amount);\n            if (amount == 0) {\n                this.nav.alert(\"Not enough amount\", true);\n                return;\n            }\n            let units = isNaN(form.value.units) ? 0 : Number(form.value.units);\n            if (units <= 0) {\n                this.nav.alert(\"Not enough units\", true);\n                return;\n            }\n            let markup_value = (!form.value.markup_value || isNaN(form.value.markup_value)) ? -1 : Number(form.value.markup_value);\n\n            var note = htmlEscape(this.expense.note.trim()).substr(0, 5000);\n\n            //TODO if other user changes what id should I write? \n            let exsData = {\n                \"ticket_key\": this.selects.ticket.selected || null,\n                \"ticket_name\": this.selects.ticket.value || null,\n                \"account_id\": this.selects.account.selected,\n                \"contract_id\": this.selects.contract.selected,\n                \"category_id\": this.selects.category.selected,\n                \"project_id\": !this.expense.ticket_number ? this.selects.project.selected : null,\n                \"project_name\": this.selects.project.value,\n                \"tech_id\": !!this.expense.expense_id ? this.expense.user_id : this.he.user_id,\n                \"user_name\": getFullName(this.he.firstname, this.he.lastname, this.he.email),\n                \"note\": this.expense.note,\n                \"note_internal\": this.expense.note_internal,\n                \"amount\": amount,\n                \"is_billable\": this.isbillable,\n                \"is_technician_payment\": this.is_technician_payment,\n                \"vendor\": this.expense.vendor,\n                \"units\": this.expense.units,\n                \"markup_value\": markup_value,\n                \"expense_id\": this.expense.expense_id || \"\"\n            };\n\n            this.apiData.get(\"expenses\", exsData, \"POST\").subscribe(\n                data => {\n                    if (!this.expense.number && !this.expense.expense_id && !this.expense.account)\n            {\n                this.config.setRecent({\"account\": this.selects.account,\n                                       \"project\": this.selects.project,\n                                       \"ticket\": this.selects.ticket,\n                                       \"contract\": this.selects.contract});\n            }\n\n                    this.nav.alert('Expense was successfully added :)');\n                    setTimeout(() => this.close(exsData), 500);\n                },\n                error => {\n                    console.log(error || 'Server error');\n                }\n                );\n        }\n    }\n\n    setDate(date, showmonth?, istime?) {\n        if (date){\n        //var time_offset = this.config.getCurrent(\"timezone_offset\");     \n        date = new Date(date.substring(0,23)+\"Z\");\n        //date = new Date(date.setTime(date.getTime() + time_offset*60*60*1000)).toJSON();\n        return getDateTime(date, showmonth, istime);\n    }\n     return null;\n    }\n\n    \n    getFixed(value){\n        return Number(value || \"0\").toFixed(2).toString();\n    }\n    \n    close(data) {\n        this.view.dismiss(data);\n    }\n}\n\n","import {Page, Config, Nav, NavParams, ViewController} from 'ionic-angular';\nimport {DataProvider} from '../../providers/data-provider';\nimport {getDateTime, getCurrency} from '../../directives/helpers';\nimport {ExpenseCreatePage} from '../expense-create/expense-create';\nimport {GravatarPipe, MorePipe, LinebreaksPipe} from '../../pipes/pipes';\n\n@Page({\n    templateUrl: 'build/pages/expenses/expenses.html',\n    pipes: [GravatarPipe, MorePipe, LinebreaksPipe],\n})\nexport class ExpensesPage {\n    LIMIT: number = 15;\n    count: number;\n    account: Object;\n    is_empty: boolean;\n    busy: boolean;\n    params: any;\n    pager: any;\n    test: boolean;\n    term: string = '';\n    items: any = [];\n    search_results: any;\n    expenses: Array<any>;\n\n\n    constructor(private nav: Nav, private dataProvider: DataProvider, private config: Config, private navParams: NavParams, private view: ViewController) {\n        this.is_empty = false;\n    }\n    \n    onPageLoaded() {\n        this.params = this.navParams.data || {};\n        this.pager = { page: 0 };\n        this.params.account = { id: this.params.account_id || -1, name: this.params.account_name || this.config.getCurrent(\"user\").account_name };\n    }\n\nonPageWillEnter()\n    {\n    if (this.params.account_name)\n            this.view.setBackButtonText('');\n\n    if (this.params.is_empty)\n        this.params.count = 0;\n\n    if (this.params.count !== 0) {\n        var timer = setTimeout(() => {\n            this.busy = true;\n        }, 500);\n\n        this.getItems(null, timer);\n    }\n    else\n        this.is_empty = true;\n    }\n\n\n    getItems(infiniteScroll, timer) {\n        this.dataProvider.getExpenses(this.params.account.id, this.pager).subscribe(\n            data => {\n                if (timer) {\n                    this.is_empty = !data.length;\n                    clearTimeout(timer);\n                    this.busy = false;\n                    this.expenses = data;\n                }\n                else\n                    this.expenses.push(...data);\n                if (infiniteScroll) {\n                    infiniteScroll.enable(data.length == this.LIMIT);\n                    infiniteScroll.complete();\n                }\n                this.count = data.length;\n                this.searchItems({value : this.term});\n            },\n            error => {\n                if (timer) {\n                    clearTimeout(timer);\n                    this.busy = false;\n                }\n                console.log(error || 'Server error');\n            }\n        );\n    }\n\n    doInfinite(infiniteScroll) {\n        if (this.is_empty || this.count < this.LIMIT) {\n            infiniteScroll.enable(false);\n            infiniteScroll.complete();\n            return;\n        }\n        this.pager.page += 1;\n        this.getItems(infiniteScroll, null);\n    }\n\n    itemTapped(expense) {\n        expense = expense || {};\n        expense.account = expense.account || this.params.account;\n        this.nav.push(ExpenseCreatePage, expense);\n    }\n    \n    setDate(date, showmonth?, istime?) {\n        if (date){\n        //var time_offset = this.config.getCurrent(\"timezone_offset\");     \n        date = new Date(date.substring(0,23)+\"Z\");\n        //date = new Date(date.setTime(date.getTime() + time_offset*60*60*1000)).toJSON();\n        return getDateTime(date, showmonth, istime);\n    }\n     return null;\n    }\n\n    getCurrency(value) {\n        return getCurrency(value);\n    }\n\n    searchItems(searchbar) {\n        // Reset items back to all of the items\n        this.items = this.expenses;\n\n        // set q to the value of the searchbar\n        let q = searchbar.value.toLowerCase();\n\n        // if the value is an empty string don't filter the search_results\n        if (q.trim() == '' || this.busy) {\n            return;\n        }\n\n        if (this.expenses && q.length > 1)\n        {\n            this.items = this.expenses.filter((expense) => expense.user_name.toLowerCase().indexOf(q) > -1 || \n            expense.category.toLowerCase().indexOf(q) > -1 ||\n            expense.ticket_number.toString().toLowerCase().indexOf(q) > -1 ||\n            expense.ticket_subject.toString().toLowerCase().indexOf(q) > -1 ||\n            expense.units.toString().toLowerCase().indexOf(q) > -1 ||\n            expense.vendor.toString().toLowerCase().indexOf(q) > -1 ||\n            expense.amount.toString().toLowerCase().indexOf(q) > -1 ||\n            expense.date.toString().toLowerCase().indexOf(q) > -1 ||\n            expense.contract_name.toLowerCase().indexOf(q) > -1 ||\n            expense.project_name.toLowerCase().indexOf(q) > -1 ||\n            expense.note.toLowerCase().indexOf(q) > -1);\n        }\n    }\n\n    clearSearch(searchbar?)\n    {\n        this.search_results = [];\n        this.busy = false;\n        if (searchbar) searchbar.value = \"\";\n    }\n\n    toggle(){\n        this.test = !this.test;\n        if (this.test){\n            setTimeout(() => {\n        var t = document.getElementsByClassName(\"searchbar-input\");\n        t = t[t.length - 1];\n        t && t.focus();\n        }, 500);\n        }\n    }\n\n}\n","import {Page, Config, Nav, NavParams, Modal, ViewController, Loading} from 'ionic-angular';\nimport {forwardRef, ViewChild} from '@angular/core';\nimport {getDateTime, getPickerDateTimeFormat, htmlEscape, getFullName, linebreaks, getCurrency} from '../../directives/helpers';\nimport {TimeProvider} from '../../providers/time-provider';\nimport {DataProvider} from '../../providers/data-provider';\nimport {ApiData} from '../../providers/api-data';\nimport {ClassListComponent} from '../../components/class-list/class-list';\nimport {SelectListComponent} from '../../components/select-list/select-list';\nimport {InvoiceDetailsPage} from '../invoice-details/invoice-details';\nimport {ExpenseCreatePage} from '../../pages/expense-create/expense-create';\nimport {GravatarPipe, MorePipe, LinebreaksPipe} from '../../pipes/pipes';\nimport {TimelogPage} from '../../pages/timelog/timelog'; \nimport {AddUserModal, BasicSelectModal, InfinitySelectModal} from '../modals/modals';\n\n@Page({\n    templateUrl: 'build/pages/invoice-create/invoice-create.html',\n    directives: [ClassListComponent, forwardRef(() => SelectListComponent)],\n    pipes: [GravatarPipe, MorePipe, LinebreaksPipe],\n})\nexport class InvoiceCreatePage {\n\n    inc : number;\n    isbillable: boolean;\n    contract: any = [];\n    timecount: any;\n    timelogs: any = [];\n    account_id: any;\n    invoice_start_date: any;\n    invoice_end_date: any;\n    total_cost: any;\n    total_hours: any;\n    exspense_total: any;\n    pager: any = [];\n    expenses: any = [];\n    recipients: any = [];\n    localrecipients: any = [];\n    timecount_nonwork: any;\n    mintime: number;\n    data: any = {};\n    timee: any = {};\n    timenote: string;\n    title: string = \"\";\n    he: any;\n    selects: any = {};\n    displayFormat: string;\n    UserDateOffset: number = -5;\n    in_progress: any;\n\n    constructor(private nav: Nav, private navParams: NavParams, private apiData: ApiData, private dataProvider: DataProvider, private timeProvider: TimeProvider, private config: Config, private view: ViewController) {\n    }\n\n\nngOnInit()\n{    \n    this.UserDateOffset = this.config.getCurrent(\"timezone_offset\");\n    this.data = this.navParams.data || {};\n    this.pager = { page: 0 };\n\n            this.he = this.config.getCurrent(\"user\");\n\n            let recent : any = {};\n\n            if (!this.data.number && !(this.data.account || {}).id)\n            {\n                recent = this.config.current.recent || {};\n            }\n\n            this.account_id = (this.data.account || {}).id || this.data.account_id || (recent.account || {}).selected || this.he.account_id || -1;\n            let contract_id = (this.data.contract || {}).id || this.data.contract_id || (recent.contract || {}).selected || 0;\n            let project_id = (this.data.project || {}).id || this.data.project_id || (recent.project || {}).selected || 0;\n            if(contract_id)\n                this.getContractInfo(contract_id);\n            if (contract_id && this.account_id !=0)\n                this.getInvoice(this.account_id, contract_id);\n\n\n            this.selects = {\n                    \"user\" : {\n                    name: \"User\", \n                    value: getFullName(this.he.firstname, this.he.lastname, this.he.email),\n                    selected: this.he.user_id,\n                    url: \"users\",\n                    hidden: false,\n                    //is_once: true\n                },\n                \"recipient_user\" : {\n                    name: \"recipient_user\", \n                    value: getFullName(this.he.firstname, this.he.lastname, this.he.email),\n                    selected: this.he.user_id,\n                    url: \"users\",\n                    hidden: false\n                },\n                \"account\" : {\n                    name: \"Account\", \n                    value:  (this.data.account || {}).name || this.data.account_name || (recent.account || {}).value || this.he.account_name,\n                    selected: this.account_id,\n                    url: \"accounts?is_with_statistics=false&limit=500\",\n                    hidden: false,\n                    //is_once: true,\n                    is_disabled: this.data.ticket_number\n                },\n                \"project\" : {\n                    name: \"Project\", \n                    value:  this.data.project_name || (recent.project || {}).value || \"Default\",\n                    selected: project_id,\n                    url: `projects?account=${this.account_id}&is_with_statistics=false`,\n                    hidden: false,\n                    is_disabled: this.data.ticket_number,\n                    //is_once: true\n                },\n                \"ticket\" : {\n                    name: \"Ticket\", \n                    value: this.data.ticket_number ? `#${this.data.ticket_number}: ${this.data.ticket_subject}` : \"Choose (optional)\",\n                    selected: this.data.ticket_number || 0,\n                    url: `tickets?status=open&account=${this.account_id}&project=${project_id}`,\n                    hidden: this.data.is_project_log || false,\n                    is_disabled: this.data.task_type_id,\n                    //is_once: true\n                },\n                 \"contract\" : { \n                    name: \"Contract\", \n                    value: this.data.contract_name || (recent.contract || {}).value || \"Choose\",\n                    selected: this.data.contract_id || this.config.getRecent(\"contract\").selected || 0,\n                    url: `contracts?account_id=${this.account_id}&for_time_logs=false`,\n                    hidden: false,\n                    is_disabled: false,\n                    //is_once: true\n                },\n                \"prepaidpack\" : {\n                    name: \"PrePaid Pack\", \n                    value: this.data.prepaid_pack_name || (recent.prepaidpack || {}).value || \"Choose\",\n                    selected: this.data.prepaid_pack_id || this.config.getRecent(\"prepaidpack\").selected || 0,\n                    url: `prepaid_packs?contract_id=${contract_id}`,\n                    hidden: false,\n                    //is_once: true\n                }\n            };\n        }\n\n        saveSelect(event){\n            let name = event.type;\n            this.account_id = this.selects.account.selected;\n            let ticket_id = this.selects.ticket.selected;\n            let project_id = this.selects.project.selected;\n            let contract_id = this.selects.contract.selected;\n            let prepaidpack_id = this.selects.prepaidpack.selected;    \n        //change url on related lists\n        switch (name) {\n            case \"account\":\n            if (this.selects.account.selected === event.id) {\n                break;\n            }\n            this.selects.project.url = `projects?account=${event.id}&is_with_statistics=false`;\n            this.selects.project.value = \"Default\";\n            this.selects.project.selected = 0;\n            project_id = 0;\n            this.selects.contract.url = `contracts?account_id=${event.id}&for_time_logs=false`;\n            this.selects.contract.value = \"Choose\";\n            this.selects.contract.selected = 0;\n            contract_id = 0;\n            this.timelogs = [];\n            this.expenses = [];\n            this.recipients = [];\n            this.total_hours = false;\n            this.exspense_total = false;\n            this.total_cost = false;\n            this.selects.prepaidpack.url = `prepaid_packs?contract_id=0`;\n            this.selects.prepaidpack.value = \"Choose (optional)\";\n            this.selects.prepaidpack.selected = 0;\n            this.account_id = event.id;\n            this.selects.ticket.hidden = this.data.is_project_log || this.data.task_type_id || false;\n            if (!this.data.task_type_id){\n                this.selects.ticket.url = `tickets?status=open&account=${this.account_id}&project=${project_id}`,\n                this.selects.ticket.value = \"Choose (optional)\";\n                this.selects.ticket.selected = 0;\n            }\n            this.selects.project.hidden = !this.config.current.is_project_tracking;\n            break;\n            case \"project\" :\n            if (this.selects.project.selected === event.id)\n            {\n                break;\n            }\n            // dont change ticket on edit\n            if (!this.data.task_type_id){\n                this.selects.ticket.hidden = this.data.is_project_log || this.data.task_type_id || false;\n                this.selects.ticket.url = `tickets?status=open&account=${this.account_id}&project=${event.id}`,\n                this.selects.ticket.value = \"Choose (optional)\";\n                this.selects.ticket.selected = 0;\n            }\n            project_id = event.id;\n            break;\n            case \"contract\" :\n            if (event.id){\n                    //this.getContractInfo(event.id);\n                    //this.selects.account.is_disabled = true;\n                    //this.selects.project.is_disabled = true;\n                    //this.selects.prepaidpack.is_disabled = true;\n                }\n            else\n                {\n                this.nav.alert(\"Cannot create any invoice. Please add or select Contract to \"+this.selects.account.value, true);\n            return;\n            }\n            if (this.selects.contract.selected === event.id)\n            {\n                break;\n            }\n            // dont change ticket on edit\n            this.selects.prepaidpack.url = `prepaid_packs?contract_id=${event.id}`;\n            this.selects.prepaidpack.value = \"Choose (optional)\";\n            this.selects.prepaidpack.selected = 0;\n            contract_id = event.id;\n            if (contract_id)\n            this.getInvoice(this.account_id, contract_id);\n            break;\n\n            case \"ticket\" :\n            if (this.selects.ticket.selected === event.id)\n            {\n                break;\n            }\n            ticket_id = event.id;\n            break;\n\n            case \"recipient_user\" :\n            if (this.selects.recipient_user.selected === event.id)\n            {\n                break;\n            }\n            let new_recipient = {\"id\": event.id, \"email\": event.email, \"fullname\": event.name, \"is_accounting_contact\" : true};\n            this.localrecipients.push(new_recipient);\n            this.recipients.push(new_recipient);\n            break;\n        }\n        this.selects[name].selected = event.id;\n        if (event.id > 0 )\n            this.selects[name].value = event.name || \"Default\";\n    }\n    \n    getContractInfo(contract_id){\n        this.dataProvider.getContracts(this.pager, false, contract_id).subscribe(\n            data => {\n                this.contract = data;\n                this.contract.date = new Date().toJSON().substring(0,19);\n            },\n        );\n    }\n\n    addTime()\n   {\n       this.config.setRecent({\"account\": this.selects.account,\n                              \"user\": this.selects.user,\n                              \"project\": this.selects.project,\n                              \"ticket\": this.selects.ticket,\n                              \"contract\": this.selects.contract,\n                              \"prepaidpack\": this.selects.prepaidpack});\n       if (!this.selects.contract.selected){\n           this.nav.alert(\"Please choose Contract\", true);\n           return;\n       }\n       \n     let myModal = Modal.create(TimelogPage, {is_fixed: true});\n     myModal.onDismiss(data => {\n       if(data){\n       //ß    this.timelogs.splice(0,0,data);\n           this.getInvoice(this.selects.account.selected, this.selects.contract.selected);\n     }\n       });\n       this.nav.present(myModal);\n     }\n\n     addExpense()\n     {\n       this.config.setRecent({\"account\": this.selects.account,\n                              \"user\": this.selects.user,\n                              \"project\": this.selects.project,\n                              \"ticket\": this.selects.ticket,\n                              \"contract\": this.selects.contract,\n                              \"prepaidpack\": this.selects.prepaidpack});\n        if (!this.selects.contract.selected){\n           this.nav.alert(\"Please choose Contract\", true);\n           return;\n        }\n       let myModal = Modal.create(ExpenseCreatePage, {is_fixed: true});\n       myModal.onDismiss(data => {\n           if(data){\n           // data.date= new Date().toJSON().substring(0,19);\n           // this.expenses.splice(0,0,data);\n            this.getInvoice(this.selects.account.selected, this.selects.contract.selected);\n            }\n         });\n         this.nav.present(myModal);\n       }\n\n       getInvoice(account_id, contract_id){\n           let start_date = new Date().toJSON().substring(0,19);\n           let end_date = new Date().toJSON().substring(0,19);\n           let loading = Loading.create({\n                     content: \"Refreshing...\",\n                     duration: 1000,\n                     dismissOnPageChange: true\n                 });\n                 this.nav.present(loading);\n        this.dataProvider.getInvoice(false, account_id, contract_id, start_date, end_date, true).subscribe(\n            data => {\n                loading.dismiss();\n                if (data.length == 1)\n                    data = data[0];\n                data.recipients = data.recipients || [];\n                data.recipients = data.recipients.sort(function(a, b) {\n                    return a.is_accounting_contact < b.is_accounting_contact ? 1 : -1;\n                });\n                this.recipients = [];\n                this.recipients.push(...this.localrecipients);\n                this.recipients.push(...data.recipients);\n                this.invoice_start_date = new Date().toJSON().substring(0,19);\n                this.invoice_end_date = new Date().toJSON().substring(0,19);\n                this.total_cost = data.total_cost;\n                this.total_hours = data.total_hours;\n                this.exspense_total = data.misc_cost;\n                this.timelogs = data.time_logs;\n                this.expenses = data.expenses;\n                    },\n            error => {\n                loading.dismiss();\n                console.log(error || 'Server error');\n            }\n        ); \n   }   \n\n   onSubmit() {\n        if (!this.total_cost) {\n            this.nav.alert(\"Total cost is 0. Please add time or expenses!\", true);\n            return;\n        }\n\n        if (!this.recipients.filter(v => v.is_accounting_contact).length) {\n            this.nav.alert(\"No accounting contacts selected\", true);\n            return;\n        }\n        //proof double click\n            if (this.in_progress && Date.now() - this.in_progress < 1500) {return;}\n            this.in_progress = Date.now();\n            \n        var emails = \"\";\n        this.recipients.forEach((v) => {\n            if (v.is_accounting_contact) { emails += v.email + \",\"; }\n        });\n\n        this.config.setRecent({\"account\": this.selects.account,\n                              \"user\": this.selects.user,\n                              \"project\": this.selects.project,\n                              \"ticket\": this.selects.ticket,\n                              \"contract\": this.selects.contract,\n                              \"prepaidpack\": this.selects.prepaidpack});\n\n        let data: any = {};\n\n            data.status = \"unbilled\";\n            data.account = this.selects.account.selected;\n            data.contract_id = this.selects.contract.selected;\n            data.start_date = (new Date).toJSON();\n            data.end_date = (new Date).toJSON();\n            data.recipients = emails;\n\n        this.apiData.get('invoices/', data, 'POST').subscribe(\n                data => {\n                    this.nav.alert('Hurray! Invoice sent :)');\n                    this.nav.pop();\n                },\n                error => {\n                    this.nav.alert(error, true);\n                    console.log(error || 'Server error');\n                }\n            );\n    }\n\n    changeContact(recipient) {\n        recipient.is_accounting_contact = !recipient.is_accounting_contact;\n    }\n\n    setDate(date, showmonth?, istime?) {\n        return date ? getDateTime(date, showmonth, istime) : null;\n    }\n\n\n    getFixed(value) {\n        return Number(value || \"0\").toFixed(2).toString();\n    }\n    \n    getCurrency(value) {\n        return getCurrency(value);\n    }\n    close() {\n        this.view.dismiss();\n     }\n\n\n// show invoice ?\n    viewInvoice() {\n        let invoice = {\n            account_name : this.data.account_name,\n            id: this.data.invoice_id,\n            account_id: this.data.account_id,\n            project_id: this.data.project_id\n        };\n\n        this.nav.push(InvoiceDetailsPage, invoice);\n    }\n}\n","import {Page, Config, Nav, NavParams, ViewController} from 'ionic-angular';\nimport {getDateTime, getCurrency, getFullName} from '../../directives/helpers';\nimport {forwardRef} from '@angular/core';\nimport {GravatarPipe} from '../../pipes/pipes';\nimport {DataProvider} from '../../providers/data-provider';\nimport {ApiData} from '../../providers/api-data';\nimport {InvoicesPage} from '../invoices/invoices';\nimport {SelectListComponent} from '../../components/select-list/select-list';\n\n@Page({\n  templateUrl: 'build/pages/invoice-details/invoice-details.html',\n  directives: [forwardRef(() => SelectListComponent)],\n    pipes: [GravatarPipe],\n})\nexport class InvoiceDetailsPage {\n\n    invoice: any;\n    title: string;\n    selects: any = {};\n    he: any;\n    recipients: any = [];\n    localrecipients: any = [];\n\n    constructor(private nav: Nav, private navParams: NavParams, private dataProvider: DataProvider, private apiData: ApiData, private config: Config, private view: ViewController) {\n    }\n\n    onPageLoaded() {\n        this.invoice = this.navParams.data || {};\n        if (this.invoice.id)\n        this.title = `Send Invoice #${this.invoice.id} to\\u00a0${this.invoice.account_name}`;\n        else \n            this.title = `Create Invoice on\\u00a0${this.invoice.account_name}`;\n        this.he = this.config.getCurrent(\"user\");\n        this.selects = {\n                \"recipient_user\" : {\n                    name: \"recipient_user\", \n                    value: getFullName(this.he.firstname, this.he.lastname, this.he.email),\n                    selected: this.he.user_id,\n                    url: \"users\",\n                    hidden: false\n                }\n            };\n        //this.invoice.account = { id: this.params.account_id || 0, name: this.params.account_name || this.config.getCurrent(\"user\").account_name };\n        this.dataProvider.getInvoice(this.invoice.id, this.invoice.account_id, this.invoice.contract_id).subscribe(\n            data => {\n                if (data.length == 1)\n                    data = data[0];\n                if (data.recipients)\n                data.recipients = data.recipients.sort(function(a, b) {\n                    return a.is_accounting_contact < b.is_accounting_contact ? 1 : -1;\n                });\n                this.recipients = [];\n                this.recipients.push(...this.localrecipients);\n                this.recipients.push(...data.recipients);\n                this.invoice = data;\n                    },\n            error => {\n                console.log(error || 'Server error');\n            }\n        );\n  }\n\n  saveSelect(event){\n      if (this.selects.recipient_user.selected === event.id)\n            {\n                return;\n            }\n            let new_recipient = {\"id\": event.id, \"email\": event.email, \"fullname\": event.name, \"is_accounting_contact\" : true};\n            this.localrecipients.push(new_recipient);\n            this.recipients.push(new_recipient);\n            return;\n  }\n\n  onPageWillEnter() {\n            this.view.setBackButtonText('');\n    }\n\n    setDate(date, showmonth?, istime?) {\n        if (date){\n        var time_offset = this.config.getCurrent(\"timezone_offset\");     \n        date = new Date(date.substring(0,23)+\"Z\") || new Date();\n        date = new Date(date.setTime(date.getTime() + time_offset*60*60*1000)).toJSON();\n        return getDateTime(date, showmonth, istime);\n    }\n     return null;\n    }\n    \n    getCurrency(value) {\n        return getCurrency(value);\n    }\n\n    changeContact(recipient) {\n        recipient.is_accounting_contact = !recipient.is_accounting_contact;\n    }\n\n    send() {\n        if (!this.recipients.filter(v => v.is_accounting_contact).length) {\n            this.nav.alert(\"No accounting contacts selected\", true);\n            return;\n        }\n        //proof double click\n            if (this.invoice.in_progress && Date.now() - this.invoice.in_progress < 1500) {return;}\n            this.invoice.in_progress = Date.now();\n            \n        var emails = \"\";\n        this.recipients.forEach((v) => {\n            if (v.is_accounting_contact) { emails += v.email + \",\"; }\n        });\n\n        let data: any = {};\n\n        if (!this.invoice.id) {\n            data.status = \"unbilled\";\n            data.account = this.invoice.account_id;\n            data.contract_id = this.invoice.contract_id;\n            data.start_date = (new Date(this.invoice.start_date || Date.now().toString())).toJSON();\n            data.end_date = (new Date(this.invoice.end_date || Date.now().toString())).toJSON();\n        }\n        else\n            data.action = \"sendEmail\";\n\n        data.recipients = emails;\n\n        this.apiData.get('invoices/' + (this.invoice.id || \"\"), data, !this.invoice.id ? 'POST' : 'PUT').subscribe(\n                data => {\n                    this.nav.alert('Hurray! Invoice sent :)');\n                   // if (!this.invoice.id)\n                    //    this.nav.popTo(this.nav.getByIndex(this.nav.length() - 3));\n                   // else\n                        this.nav.pop();\n                },\n                error => {\n                    this.nav.alert(error, true);\n                    console.log(error || 'Server error');\n                }\n            );\n    }\n}\n","import {Page, Config, Nav, NavParams, ViewController} from 'ionic-angular';\nimport {DataProvider} from '../../providers/data-provider';\nimport {MorePipe} from '../../pipes/pipes';\nimport {InvoiceDetailsPage} from '../invoice-details/invoice-details';\nimport {InvoiceCreatePage} from '../invoice-create/invoice-create';\nimport {getDateTime, getCurrency} from '../../directives/helpers';\n\n@Page({\n  templateUrl: 'build/pages/invoices/invoices.html',\n    pipes: [MorePipe],\n})\nexport class InvoicesPage {\n\n    LIMIT: number = 100;\n    account: any;\n    is_empty: boolean;\n    unis_empty: boolean;\n    busy: boolean;\n    unbusy: boolean;\n    params: any;\n    pager: any;\n    invoices: Array<any>;\n    uninvoices: Array<any> = [];\n    initial_load: boolean = true;\n    details_tab: string;\n\n    constructor(private nav: Nav, private dataProvider: DataProvider, private config: Config, private navParams: NavParams, private view: ViewController) {\n        this.is_empty = false;\n        this.unis_empty = false;\n        this.invoices = [];\n        this.uninvoices = [];\n  }\n\n    onPageLoaded() {\n        this.params = this.navParams.data || {};\n        this.details_tab = \"Ready\";\n        this.pager = { page: 0, limit: this.LIMIT };\n        if (!this.params.account) \n        this.params.account = { id: this.params.account_id || 0, name: this.params.account_name || this.config.getCurrent(\"user\").account_name };\n\n        var timer = setTimeout(() => {\n                this.busy = true;\n                this.unbusy = true;\n            }, 500);\n\n            this.getItems(timer);\n            this.getItems(timer, true);\n    }\n\n    onPageWillEnter() {\n        if (this.params.account.name)\n            this.view.setBackButtonText('');\n        if (!this.initial_load)\n        {\n            var timer = setTimeout(() => {\n                let test=0;\n            }, 500);\n            setTimeout(() => {\n               this.getItems(timer);\n               this.getItems(timer, true);\n            }, 1000);\n        }\n        this.initial_load = false;\n    }\n\n\n    getItems(timer, isbilled?) {\n        this.dataProvider.getInvoices(this.params.account.id, isbilled || false, this.pager).subscribe(\n            data => {\n                    if (isbilled)\n                    {\n                    this.is_empty = !data.length;\n                    this.busy = false;\n                    this.invoices = data;\n                    }\n                    else\n                    {\n                        this.unis_empty = !data.length;\n                    this.unbusy = false;\n                    this.uninvoices = data;\n                    }\n                    clearTimeout(timer);\n            },\n            error => {\n                if (timer) {\n                    clearTimeout(timer);\n                    this.busy = false;\n                }\n                console.log(error || 'Server error');\n            }\n        );\n    }\n    \n    itemTapped(item) {\n        this.nav.push(InvoiceDetailsPage, item);\n    }\n\n    createInvoice() {\n        this.nav.push(InvoiceCreatePage, this.params);\n    }\n    \n    setDate(date, showmonth?, istime?) {\n        if (date){\n        var time_offset = this.config.getCurrent(\"timezone_offset\");     \n        date = new Date(date.substring(0,23)+\"Z\") || new Date();\n        date = new Date(date.setTime(date.getTime() + time_offset*60*60*1000)).toJSON();\n        return getDateTime(date, showmonth, istime);\n    }\n     return null;\n    }\n    \n    getCurrency(value) {\n        return getCurrency(value);\n    }\n}\n","import {Page, Config, Nav, NavParams, ViewController, Modal} from 'ionic-angular';\nimport {DataProvider} from '../../providers/data-provider';\nimport {TicketCreatePage} from '../modals/modals'; \nimport {TicketDetailsPage} from '../ticket-details/ticket-details';\nimport {TicketsListComponent} from '../../components/tickets-list/tickets-list';\nimport {ApiData, TicketProvider} from '../../providers/providers';\nimport {addp} from '../../directives/helpers';\nimport {AjaxSearchPage} from '../ajax-search/ajax-search';\n\n\n@Page({\n  templateUrl: 'build/pages/location-details/location-details.html',\n  directives: [TicketsListComponent],\n})\nexport class LocationDetailsPage {\n\n  location: any;\n  pages: Array<any>;\n  tabsTicket: string; \n  is_ready: boolean = false;\n  search_results: any;\n  test: boolean;\n  term: string = '';\n  busy: boolean;\n\n  constructor(private nav: Nav, private navParams: NavParams, private apiData: ApiData, private dataProvider: DataProvider, private ticketProvider: TicketProvider, private config: Config, private view: ViewController) {\n  }\n\n  onPageLoaded()\n  {\n    // If we navigated to this page, we will have an item available as a nav param\n    this.location = this.navParams.data || {};\n    this.tabsTicket = \"Open\";\n  }\n\n  onPageWillEnter()\n  {\n    //console.log(new Date());\n    this.view.setBackButtonText('');\n    /*this.dataProvider.getLocationDetails(this.location.id).subscribe(\n      data => {\n        this.location = data;\n        this.is_ready = true;\n      },\n      error => {\n        console.log(error || 'Server error');\n      }\n      );\n      */ \n    }\n\n    addTicket(){\n      let myModal = Modal.create(TicketCreatePage, {\"account\": { \"id\" : -1}, \"location\" : this.location});\n      myModal.onDismiss(data1 => {\n        this.ticketProvider.getTicketsList(\"open\", \"-1\", this.location.id,{ \"limit\": 25 }); \n        this.gotoTicket(data1);\n      });\n      this.nav.present(myModal);\n    }\n\n    gotoTicket(data)\n    {\n      this.test = false;\n      this.clearSearch();\n      if (data)\n      {\n        setTimeout(() => {\n          this.nav.push(TicketDetailsPage, data);\n        }, 500);\n      }\n    }\n\n    searchItems(searchbar) {\n      // Reset items back to all of the items\n      this.search_results = [];\n\n      // set q to the value of the searchbar\n      var q = searchbar.value;\n\n      // if the value is an empty string don't filter the search_results\n      if (q.trim() == '' || this.busy) {\n        return;\n      }\n\n      if (q.length > 1)\n      {\n        var timer = setTimeout(() => { this.busy = true; }, 500);\n        this.searchItemsAPI(q, timer);\n      }\n    }\n\n    searchItemsAPI(term, timer) {\n      this.search_results = [];\n      let url = \"tickets?query=all&location=\"+this.location.id; //status=allopen&\n      let pager = { limit: 3 };\n      this.apiData.getPaged(addp(url, \"search\", term + \"*\"), pager).subscribe(\n        data => {\n          if (timer) {\n            clearTimeout(timer);\n            this.busy = false;\n          }\n          this.search_results = data;\n        },\n        error => {\n          if (timer) {\n            clearTimeout(timer);\n            this.busy = false;\n          }\n          console.log(error || 'Server error');\n        }\n        );\n    }\n\n\n    clearSearch(searchbar?)\n    {\n      this.search_results = [];\n      this.busy = false;\n      if (searchbar) searchbar.value = \"\";\n    }\n\n    getSearch(searchbar) {\n      this.test = false;\n      this.clearSearch();\n      // Reset items back to all of the items\n      // set q to the value of the searchbar\n      let term = searchbar.target.value;\n      if (term.length < 4)\n        term += \"    \";\n      let list = { search: term, location: this.location };\n      this.test = false;\n      this.nav.push(AjaxSearchPage, list);\n    }\n\n    toggle(){\n        this.test = !this.test;\n        if (this.test){\n            setTimeout(() => {\n        var t = document.getElementsByClassName(\"searchbar-input\");\n        t = t[t.length - 1];\n        t && t.focus();\n        }, 500);\n        }\n    }\n  }\n","import {Page, Config, Nav} from 'ionic-angular';\r\nimport {DataProvider} from '../../providers/data-provider';\r\nimport {LocationsListComponent, ActionButtonComponent} from '../../components/components';\r\nimport {ApiData, TicketProvider} from '../../providers/providers';\r\nimport {addp} from '../../directives/helpers';\r\nimport {TicketDetailsPage} from '../ticket-details/ticket-details';\r\n\r\n\r\n@Page({\r\n    templateUrl: 'build/pages/locations/locations.html',\r\n    directives: [LocationsListComponent, ActionButtonComponent],\r\n})\r\nexport class LocationsPage {\r\n\r\n    count: number;\r\n    busy: boolean;\r\n    params: any;\r\n    pager: any;\r\n    search_results: any;\r\n    items: any =[];\r\n    data: any;\r\n    LIMIT: number = 25;\r\n    test: boolean;\r\n    term: string = '';\r\n    date: any;\r\n    is_empty: boolean;\r\n\r\n    constructor(private nav: Nav, private config: Config, private dataProvider: DataProvider, private apiData: ApiData, private ticketProvider: TicketProvider) {\r\n    }\r\n    \r\n    onPageLoaded()\r\n    {\r\n        this.is_empty = true;\r\n        this.pager = { page: 0, limit: this.LIMIT };\r\n\r\n        var timer = setTimeout(() => {\r\n            this.busy = true;\r\n        }, 500);\r\n\r\n        this.getItems(\"\", null, timer);\r\n    }\r\n\r\n    searchItems(searchbar) {\r\n            // Reset items back to all of the items\r\n            this.items = this.data;\r\n\r\n            // set q to the value of the searchbar\r\n            var q = searchbar.value.trim();\r\n\r\n            // if the value is an empty string don't filter the items\r\n            if (q.trim() == '' || this.busy) {\r\n                return;\r\n            }\r\n\r\n            this.date = Date.now();\r\n\r\n            if (this.data && q.length < 4)\r\n        {\r\n            this.items = this.data.filter((data) => data.name.toLowerCase().indexOf(q) > -1);\r\n                this.is_empty = !this.items.length;\r\n        }\r\n        else {\r\n            var timer = setTimeout(() => { this.busy = true; }, 500);\r\n            this.getItems(q, null, timer);\r\n        }\r\n        }\r\n\r\n        getItems(term, infiniteScroll, timer?) {\r\n            let pager = { page: this.pager.page, limit: this.pager.limit };\r\n            let sterm = term;\r\n            if (term.length > 2)\r\n            {\r\n                pager.page = 0;\r\n                //sterm = term+\"*\";\r\n            }\r\n            var url = \"locations\";\r\n            this.apiData.getPaged(addp(url, \"search\", sterm), pager).subscribe(\r\n                data => {\r\n                    if (timer) {\r\n                        this.is_empty = !data.length;\r\n                        clearTimeout(timer);\r\n                        this.busy = false;\r\n                    }\r\n                    this.count = 25;\r\n                    if (!term || term.length < 3)\r\n                    {\r\n                        if (timer) {\r\n                            this.data = data;\r\n                        }\r\n                        else \r\n                            this.data.push(...data);\r\n                        if (infiniteScroll) {\r\n                            infiniteScroll.enable(data.length == 25);\r\n                        }\r\n                        this.count = data.length;\r\n                        this.searchItems({ value: term });\r\n                    }\r\n                    else if (data.length)\r\n                        this.items = data;\r\n                    else\r\n                        this.items = this.data;\r\n                    if (infiniteScroll) {\r\n                        infiniteScroll.complete();\r\n                    }\r\n                },\r\n                error => {\r\n                    if (timer) {\r\n                        clearTimeout(timer);\r\n                        this.busy = false;\r\n                    }\r\n                    console.log(error || 'Server error');\r\n                }\r\n                );\r\n        }\r\n\r\n        doInfinite(infiniteScroll) {\r\n            if (this.date && Date.now() - this.date < 1000) {infiniteScroll.complete(); return;}\r\n            if (this.is_empty || this.count < 25) {\r\n                infiniteScroll.complete();\r\n                if ((this.is_empty && !this.term) || this.count < 25)\r\n                infiniteScroll.enable(false);\r\n                return;\r\n            }\r\n            this.pager.page += 1;\r\n            this.term = \"\";\r\n            this.getItems(\"\", infiniteScroll);\r\n        }\r\n\r\n\r\n    clearSearch(searchbar?)\r\n    {\r\n        this.search_results = [];\r\n        this.busy = false;\r\n        if (searchbar) searchbar.value = \"\";\r\n    }\r\n\r\n    gotoTicket(data)\r\n    {\r\n        this.test = false;\r\n        this.clearSearch();\r\n        if (data)\r\n        {\r\n            this.ticketProvider.getTicketsList(\"\", \"\", \"\",{ \"limit\": 25 });\r\n            setTimeout(() => {\r\n                this.nav.push(TicketDetailsPage, data);\r\n                //if (!this.counts[this.ticket_tab])\r\n                //    this.counts = {};\r\n                //this.counts[this.ticket_tab] = (this.ticketProvider._dataStore[this.ticket_tab] || {}).length++;\r\n            }, 500);\r\n        }\r\n    }\r\n\r\n        toggle(){\r\n        this.test = !this.test;\r\n        if (this.test){\r\n            setTimeout(() => {\r\n        var t = document.getElementsByClassName(\"searchbar-input\");\r\n        t = t[t.length - 1];\r\n        t && t.focus();\r\n        }, 500);\r\n        }\r\n    }\r\n}\r\n","import {Page, Config, Nav, Loading, Events} from 'ionic-angular';\nimport {ApiSite, Site, isSD, appVersion, AppTitle} from '../../providers/config';\nimport {openURL, openURLsystem} from '../../directives/helpers';\nimport {DataProvider} from '../../providers/data-provider';\nimport {OrganizationsPage} from '../organizations/organizations';\nimport {SignupPage} from '../signup/signup';\n\n@Page({\n    templateUrl: 'build/pages/login/login.html',\n})\nexport class LoginPage {\n\n    skype: any;\n    login: any;\n    google_action: string = \"\";\n    busy: boolean = false;\n    is_sd: boolean = true;\n    fileDest: any = {ticket: \"wonvhr\"};\n    version: any = \"4.\" + appVersion;\n    date_updated: any = \"\";\n    //@ViewChild('google_openid') google_openid: NgForm;\n\n    constructor(private nav: Nav, private dataProvider: DataProvider, private config: Config, private events: Events) {\n        this.skype = localStorage.getItem('skype') || \"\";\n        if (localStorage.getItem(\"isPhonegap\") !== \"true\")\n            this.google_action = ApiSite + 'auth/auth0';\n        //clear also chrome ext if needed\n        if (localStorage.getItem(\"isExtension\") === \"true\")\n            window.top.postMessage(\"logout\", \"*\");\n        events.publish(\"app:logout\");   \n        this.options = {\n          year: 'numeric',\n          month: 'short',\n          /*day: 'numeric',\n          weekday: 'short'*/\n        };\n        this.date_updated = new Date().toLocaleString(\"en-US\", this.options);\n    }\n    \n    onPageLoaded()\n    { \n        document.title = AppTitle + \"Mobile App\" ; \n        //logout\n        this.login = {username: localStorage.getItem('username') || \"\" };\n    }\n\n    onLogin(form) {\n        this.busy = true;\n        if (form.valid) { \n            localStorage.setItem('username', form.value.email || \"\");\n            this.dataProvider.checkLogin(form.value.email,form.value.password).subscribe(\n                data => {\n                    this.config.setCurrent({ \"key\": data.api_token});\n                    this.nav.setRoot(OrganizationsPage, null, { animation: \"wp-transition\" });\n                }, \n                error => {\n                    let message = 'There was a problem with your login.  Check your login and password.';\n                    \n                    if(form.value.email && ~form.value.email.indexOf(\"@gmail.com\")){\n                        message = \"Wrong Password, maybe you used Google password\";\n                    }\n                    this.nav.alert(message, true);\n                    this.login.password = \"\";\n                    this.busy = false;\n                }\n                ); \n        }\n        else\n        {\n            this.nav.alert('Please enter email and password!', true);\n            this.busy = false;\n        }\n    }\n\n    ngAfterViewInit() {\n        //console.log(this.starttime.min);\n        //this.google_openid.action = this.starttime.displayFormat = this.displayFormat;\n        //console.log(this.starttime.displayFormat);\n    }\n\n    cancel_skype(){\n        localStorage.setItem('skype', \"\");\n        this.skype = \"\";\n    }\n\n    support()\n    {\n        openURLsystem(`https://support.${Site}portal/`);\n    }\n\n    onGoogleSignin() {\n        if (\"true\" === localStorage.getItem(\"isExtension\"))\n        {\n            this.nav.alert(\"Please finish login with Google in new window (Google requirement)\\n and start Extension again.\");\n            setTimeout(() => \n                {\n                    window.ww= window.open(ApiSite + \"auth/auth0\", \"_blank\", \"\");\n                    window.auth_google = !!window.ww;\n                    if (!window.auth_google)\n                        this.nav.alert(\"Pop-up was blocked, please click again to login.\");\n            }\n            , window.auth_google ? 0 : 3000);\n        }\n        else if (\"true\" === localStorage.getItem(\"isPhonegap\")) {\n            var url = ApiSite + \"auth/auth0?ios_action=\" + (localStorage.isIos || localStorage.isIosStatus || \"\");\n            window.win = null;\n            window.nameInterval = null;\n            window.onExit = function() {\n                clearInterval(window.nameInterval), window.win.close();\n                location.reload(true);\n                //var el = document.createElement(\"script\");\n                //el.src = \"build/js/app.bundle.js\";\n                //document.body.appendChild(el);\n            };\n\n            window.win = window.open(url, \"_blank\", \"location=no\");\n            window.win.addEventListener(\"loadstop\", function() {\n                window.nameInterval = setInterval(function() {\n                    window.win.executeScript({\n                        code: \"localStorage.getItem('current')\"\n                    }, function(data) {\n                        var e = data[0];\n                        if (e) {\n                            localStorage.current = e;\n                            var i = JSON.parse(e || \"null\") || {};\n                            if (i.org && i.instance && i.key)\n                             window.onExit();\n                        }\n                    })\n                }, 1000)\n            });\n            window.win.addEventListener(\"exit\", function() {\n                window.onExit()\n            });\n        }\n        else\n            window.location.href = ApiSite + \"auth/auth0\";\n    }  \n    \n    onSignup() {\n        this.nav.push(SignupPage, null, { animation: \"wp-transition\" });\n    }\n}\n","import {Page, Config, Nav, NavParams, ViewController} from 'ionic-angular';\nimport {FORM_DIRECTIVES, Validators} from '@angular/common';\nimport {DataProvider} from '../../../providers/data-provider';\n//import {htmlEscape, getFullName} from '../../../directives/helpers';\n\n\n\n\n\n\n\n\n\n@Page({\n  templateUrl: 'build/pages/modals/add-files/add-files.html',\n})\nexport class AddFilesModal {\n\n    ispassword: boolean;\n    data: any;\n    firstname_m: string = \"\";\n\n\tconstructor(private nav: Nav, private navParams: NavParams, private dataProvider: DataProvider, private config: Config,\n\t\tprivate viewCtrl: ViewController) {\n        nav.swipeBackEnabled = false;\n    }\n\n    ngOnInit() {\n\t\tthis.ispassword = true;\n        this.data = (this.navParams.data || {}).type || {};\n        this.firstname_m = (this.navParams.data || {}).name || \" \";\n        //this.data.type = this.data;\n\t}\n\n    ngAfterViewInit() {   \n        setTimeout(function(){var s = document.getElementsByTagName(\"ion-page\")[0];s.style.display='none';s.offsetHeight;s.style.display=''}, 200);         \n        this.firstname_m = this.firstname_m.trim();\n    }\n\n    dismissPage(data) {\n        this.viewCtrl.dismiss(data);\n    }\n\n    onSubmit(form) {\n        if (form.valid) {\n            this.dataProvider.addUser(form.value.email, form.value.firstname, form.value.lastname, this.data.type).subscribe(\n                data => {\n                    this.nav.alert(this.data.charAt(0).toUpperCase() + this.data.slice(1) + ' was created :)');\n                    setTimeout(() => {\n                        this.dismissPage(data);\n                    }, 1000);\n                },\n                error => {\n                    this.nav.alert(form.value.email + ' already exists! Please try again', true);\n                    console.log(error || 'Server error');\n                });\n    }\n}\n}\n","import {Page, Config, Nav, NavParams, ViewController} from 'ionic-angular';\nimport {FORM_DIRECTIVES, Validators} from '@angular/common';\nimport {DataProvider} from '../../../providers/data-provider';\n//import {htmlEscape, getFullName} from '../../../directives/helpers';\n\n@Page({\n  templateUrl: 'build/pages/modals/add-user/add-user.html',\n})\nexport class AddUserModal {\n\n    ispassword: boolean;\n    data: any;\n    firstname_m: string = \"\";\n\n\tconstructor(private nav: Nav, private navParams: NavParams, private dataProvider: DataProvider, private config: Config,\n\t\tprivate viewCtrl: ViewController) {\n        nav.swipeBackEnabled = false;\n    }\n\n    ngOnInit() {\n\t\tthis.ispassword = true;\n        this.data = (this.navParams.data || {}).type || {};\n        this.firstname_m = (this.navParams.data || {}).name || \" \";\n        //this.data.type = this.data;\n\t}\n\n    ngAfterViewInit() {   \n        setTimeout(function(){var s = document.getElementsByTagName(\"ion-page\")[0];s.style.display='none';s.offsetHeight;s.style.display=''}, 200);         \n        this.firstname_m = this.firstname_m.trim();\n    }\n\n    dismissPage(data) {\n        this.viewCtrl.dismiss(data);\n    }\n\n    onSubmit(form) {\n        if (form.valid) {\n            this.dataProvider.addUser(form.value.email, form.value.firstname, form.value.lastname, this.data.type).subscribe(\n                data => {\n                   // this.nav.alert(this.data.charAt(0).toUpperCase() + this.data.slice(1) + ' was created :)');\n                    setTimeout(() => {\n                        this.dismissPage(data);\n                    }, 1000);\n                },\n                error => {\n                    this.nav.alert(form.value.email + ' already exists! Please try again', true);\n                    console.log(error || 'Server error');\n                });\n    }\n}\n}\n","import {Nav, NavParams, Page, Config, ViewController, Modal} from 'ionic-angular';\nimport {ApiData} from '../../../providers/api-data';\nimport {isSD} from '../../../providers/config';\nimport {AddUserModal} from '../modals';\nimport {getFullName, addp} from '../../../directives/helpers';\n\n@Page({\n    templateUrl: 'build/pages/modals/ajax-select/ajax-select.html',\n})\nexport class AjaxSelectModal {\n\n    items: any;\n    url: string;\n    term: string;\n    //search: string;\n    name: string;\n    data: any;\n    pager: any;\n    count: number;\n    is_empty: boolean;\n    busy: boolean;\n    isdefault_enabled: boolean = false;\n    isnew_enabled: boolean = false;\n\n    constructor(private nav: Nav, private navParams: NavParams, private config: Config, private apiData: ApiData,\n        private viewCtrl: ViewController) {\n        nav.swipeBackEnabled = false;\n    }\n\n    ngOnInit() {\n        this.term = '';\n        this.name = this.navParams.data.name || \"List\";\n        this.isdefault_enabled = !~[\"user\", \"account\", \"tech\", \"task type\"].indexOf(this.name.toLowerCase());\n        this.isnew_enabled = this.config.current.is_add_new_user_link && !!~[\"user\", \"tech\"].indexOf(this.name.toLowerCase());\n        this.url = this.navParams.data.url || \"\";\n        this.data = this.navParams.data.items || {};\n        this.pager = { limit: 20 };\n        this.items = this.data;\n        this.count = this.items.length;\n        this.is_empty = false;\n        if (this.items.length === 0) {\n            var timer = setTimeout(() => {\n                this.busy = true;\n            }, 500);\n\n            this.getItems(null, timer);\n        }\n    }\n\n    onPageDidEnter() {\n        var t = document.getElementsByClassName(\"searchbar-input\");\n        t = t[t.length - 1];\n        t && t.focus();\n    }\n\n    dismiss(item) {\n        item = item || {};\n        this.viewCtrl.dismiss(item);\n    }\n\n    invite()\n    {\n        let myModal = Modal.create(AddUserModal, {type: this.name.toLowerCase(), name: this.term});\n        myModal.onDismiss(data => {\n            if (data){\n                //console.log(data);\n                data.name = getFullName(data.firstname, data.lastname, data.email);\n                this.dismiss(data);\n            //this.selects[type].selected = data.id;\n            //this.selects[type].value = getFullName(data.firstname, data.lastname, data.email);\n        }\n        });\n        this.nav.present(myModal);\n        //setTimeout(() => { this.nav.present(myModal); }, 500);\n    }\n\n/*\n    newsearch(searchbar) {\n        // Reset items back to all of the items\n        //this.items = this.data;\n\n        // set q to the value of the searchbar\n        var q = searchbar.value;\n\n        // if the value is an empty string don't filter the items\n        if (q.trim() == '') {\n            return;\n        }\n        this.items =  q.length > 3 ? this.search(q) : Observable.of(this.data.filter((v) => v.name.toLowerCase().indexOf(q.toLowerCase()) > -1));\n    }\n*/\n    searchItems(searchbar) {\n        // Reset items back to all of the items\n        this.items = this.data;\n\n        // set q to the value of the searchbar\n        var q = searchbar.value.trim();\n\n        // if the value is an empty string don't filter the items\n        if (q.trim() == '' || this.busy) {\n            if (q.trim() == '') this.is_empty = !this.items.length;\n            return;\n        }\n\n        if (q.length < 3)\n        {\n            this.items = this.items.filter((v) => v.name.toLowerCase().indexOf(q.toLowerCase()) > -1);\n                    this.is_empty = !this.items.length;\n        }\n        else {\n            var timer = setTimeout(() => { this.busy = true; }, 500);\n            this.getItems(q, timer);\n        }\n    }\n\n    getItems(term, timer) {\n        this.items = [];\n        //console.log(this.name);\n        if (~[\"location\", \"account\"].indexOf(this.name.toLowerCase()))\n        {\n            term = term+\"*\";\n        }\n        this.apiData.getPaged(addp(this.url, \"search\", term), this.pager).subscribe(\n            data => {\n                if (data.length && !data[0].name) {\n                    var results = [];\n                    data.forEach(item => {\n                        let name;\n                        //if users or techs\n                        if (item.email)\n                            name = getFullName(item.firstname, item.lastname, item.email, \" \");\n                        results.push({ id: item.id, name: name, email: item.email });\n                    });\n                    data = results;\n                }\n                if (timer) {\n                    clearTimeout(timer);\n                    this.busy = false;\n                }\n                this.is_empty = !data.length;\n\n                if (!term)\n                {\n                    this.items = this.data = data;\n                }\n                else\n                    this.items = data;\n\n                this.count = data.length;\n            },\n            error => {\n                if (timer) {\n                    clearTimeout(timer);\n                    this.busy = false;\n                }\n                console.log(error || 'Server error');\n            }\n            );\n    }\n}","import {Nav, NavParams, Page, Events, ViewController, Modal, Config} from 'ionic-angular';\nimport {AddUserModal} from '../modals';\nimport {getFullName} from '../../../directives/helpers';\n//import {Input} from '@angular/core';\n\n@Page({\n    templateUrl: 'build/pages/modals/basic-select/basic-select.html',\n})\nexport class BasicSelectModal {\n\n    items: Array<any>;\n    name: string;\n    displayname: string;\n    searchQuery: string = '';\n    default_text: string = \"\";\n    data: any;\n    is_empty: boolean = false;\n    isdefault_enabled: boolean = false;\n    isnew_enabled: boolean = false;\n\n    constructor(\n        private nav: Nav,\n        private params: NavParams,\n        private viewCtrl: ViewController,\n        private config: Config\n    ) {\n        this.name = this.params.data.name;\n        this.displayname = this.params.data.displayname || this.name;\n        this.isdefault_enabled = !~[\"user\", \"account\", \"tech\", \"task type\", \"completed\", \"submission category\"].indexOf(this.name.toLowerCase()) \n                                 ||  !!this.params.data.default;\n        this.default_text = this.params.data.default || \"Default\";\n        this.isnew_enabled = this.config.current.is_add_new_user_link && !!~[\"user\", \"tech\"].indexOf(this.name.toLowerCase())\n                                && !this.params.data.isnew_disabled;\n        this.data = this.params.data.items;\n\n        this.items = this.data;\n    }\n\n    onPageDidEnter() {\n        var t = document.getElementsByClassName(\"searchbar-input\");\n        t = t[t.length - 1];\n        t && t.focus();\n    }\n\n    dismiss(item) {\n        //let data = { 'foo': 'bar' };\n        item = item || {};\n        this.viewCtrl.dismiss(item);\n    }\n\n    invite()\n    {\n        let myModal = Modal.create(AddUserModal, {type: this.name.toLowerCase(), name: this.searchQuery});\n        myModal.onDismiss(data => {\n            if (data){\n                //console.log(data);\n                data.name = getFullName(data.firstname, data.lastname, data.email);\n                this.dismiss(data);\n            //this.selects[type].selected = data.id;\n            //this.selects[type].value = getFullName(data.firstname, data.lastname, data.email);\n        }\n        });\n        this.nav.present(myModal);\n        //setTimeout(() => { this.nav.present(myModal); }, 500);\n    }\n    \n    getItems(searchbar) {\n        // Reset items back to all of the items\n        this.items = this.data;\n\n        // set q to the value of the searchbar\n        var q = searchbar.value;\n\n        // if the value is an empty string don't filter the items\n        if (q.trim() == '') {\n            return;\n        }\n\n        this.items = this.items.filter((v) => v.name.toLowerCase().indexOf(q.toLowerCase()) > -1);\n        this.is_empty = !this.items.length;\n    }\n}","import {Nav, NavParams, Page, ViewController, Config} from 'ionic-angular';\nimport {forwardRef} from '@angular/core';\nimport {TicketProvider} from '../../../providers/ticket-provider';\nimport {htmlEscape} from '../../../directives/helpers';\nimport {SelectListComponent} from '../../../components/select-list/select-list';\n\n\n@Page({\n    templateUrl: 'build/pages/modals/change-user/change-user.html',\n    directives: [forwardRef(() => SelectListComponent)],\n})\nexport class ChangeUserModal {\n\n    ticket: any;\n    selects: any;\n    ticketnote: string;\n\n    constructor(private nav: Nav, private navParams: NavParams, private ticketProvider: TicketProvider, private config: Config,\n        private viewCtrl: ViewController) {\n        nav.swipeBackEnabled = false;\n        this.config = config;\n    }\n\n\n    ngOnInit() {\n\n        this.ticket = this.navParams.data || 0;\n\n        this.selects = {\n            \"user\": {\n                name: \"user\",\n                value: \"Choose\",\n                selected: 0,\n                hidden: false,\n                url: \"users\"\n                            },\n        };\n           }\n\n    dismiss(data) {\n        //let data = { 'foo': 'bar' };\n        //item = item || {};\n        this.viewCtrl.dismiss(data);\n    }\n\n    saveSelect(event) {\n        let name = event.type;\n        this.selects.selected = event.id;\n        this.selects.value = event.name;\n    }\n    \n    onSubmit(form) {\n        if (form.valid) {\n            var post = htmlEscape((this.ticketnote || \"\").trim()).substr(0, 5000);\n            let newuser = {\n                \"note_text\": post,\n                \"name\": this.selects.value,\n                \"user_id\": this.selects.selected,\n                \"action\":  \"transfer\",\n            };\n            this.ticketProvider.transferUserTech(this.ticket.key, newuser).subscribe(\n       data => {\n         this.nav.alert(this.config.current.names.ticket.s + ' has been transferred :)');\n         this.dismiss(newuser);\n       },\n       error => {\n         this.nav.alert(error, true);\n         console.log(error || 'Server error');\n       }\n       );\n\n        }\n    }\n\n}","import {Nav, NavParams, Page, ViewController, Config} from 'ionic-angular';\nimport {forwardRef} from '@angular/core';\nimport {TicketProvider} from '../../../providers/ticket-provider';\nimport {ApiData} from '../../../providers/api-data';\nimport {ClassListComponent} from '../../../components/class-list/class-list';\nimport {htmlEscape, getFullName} from '../../../directives/helpers';\nimport {SelectListComponent} from '../../../components/select-list/select-list';\n\n\n\n@Page({\n    templateUrl: 'build/pages/modals/close-ticket/close-ticket.html',\n    directives: [forwardRef(() => SelectListComponent), forwardRef(() => ClassListComponent)],\n})\nexport class CloseTicketModal {\n\n    isconfirm: boolean;\n    ticketnote: string;\n    ticket: any;\n    selects: any;\n    categories: any;\n    he: any;\n    users: any = [];\n\n    constructor(private nav: Nav, private navParams: NavParams, private apiData: ApiData, private ticketProvider: TicketProvider, private config: Config,\n        private viewCtrl: ViewController) {\n        nav.swipeBackEnabled = false;\n        this.config = config;\n    }\n\n\n    ngOnInit() {\n\n        this.isconfirm = true;\n\n        this.ticket = this.navParams.data || 0;\n\n        this.categories = [];\n        this.he = this.config.getCurrent(\"user\");\n\n        this.selects = {\n            \"resolution\": {\n                name: \"Resolution\",\n                value: \"Resolved\",\n                selected: 1,\n                hidden: false,\n                items: [\n                    { \"name\": 'Resolved', \"id\": 1 },\n                    { \"name\": 'UnResolved', \"id\": 0 },\n                ]\n            },\n            \"cc\" : {\n                    name: \"CC\", \n                    value: \"Choose \"+ this.config.current.names.user.s,\n                    selected: 0,\n                    url: \"users\",\n                    hidden: false,\n                },\n            \"class\": {\n                 name: \"Class\",\n                 value: this.ticket.class_name || \"Choose\",\n                 selected: this.ticket.class_id || 0,\n                 url: \"classes\",\n                 preload: !this.ticket.class_id && this.config.current.is_class_tracking,\n                 hidden: this.ticket.class_id || !this.config.current.is_class_tracking,\n       },\n       \"categories\": {\n                 name: \"Creation Category\",\n                 value: this.ticket.creation_category_name || \"Choose\",\n                 selected: this.ticket.creation_category_id || 0,\n                 url: \"categories\",\n                 preload: this.config.current.is_creation_categories && !this.ticket.creation_category_id,\n                 hidden: this.ticket.creation_category_id || !this.config.current.is_creation_categories\n       },\n            \"category\": {\n                name: \"Category\",\n                value: \"Choose\",\n                selected: 0,\n                hidden: false,\n                items: []\n            },\n        };\n\n        if (!this.config.current.is_resolution_tracking)\n            return;\n\n        this.apiData.get(\"resolution_categories\").subscribe(\n            data => {\n                this.categories = data;\n                this.selects.category.items = data.filter(v => v.is_resolved);\n                this.selects.category.hidden = !this.selects.category.items.length;\n            },\n            error => {\n                console.log(error || 'Server error');\n            }\n        );\n    }\n\n    dismiss(num?) {\n        //let data = { 'foo': 'bar' };\n        //item = item || {};\n        this.viewCtrl.dismiss(num || 0);\n    }\n\n    saveSelect(event) {\n        let name = event.type;\n        if (name == \"creationcategory\")\n            name = \"categories\";\n        if (name == \"resolution\")\n        {\n            this.selects[name].selected = event.id;\n            this.selects[name].value = event.name;\n            this.selects.category.value = \"Choose\";\n            this.selects.category.selected = 0;\n            this.selects.category.items = this.selects.resolution.selected ?\n                this.categories.filter(v => v.is_resolved) : this.categories.filter(v => !v.is_resolved);\n            this.selects.category.hidden = !this.selects.category.items.length;\n        }\n        else if (name == \"category\")\n        {\n            this.selects[name].selected = event.id;\n            this.selects[name].value = event.name;\n        }\n        else if (name == \"categories\")\n        {\n            this.selects[name].selected = event.id;\n            this.selects[name].value = event.name;\n        }\n        else if (name == \"class\")\n        {\n            this.selects[name].selected = event.id;\n            this.selects[name].value = event.name;\n        }\n        else if (name == \"cc\"){\n            this.selects[name].selected = 0;\n            this.selects[name].value = \"Choose \"+ this.config.current.names.user.s;\n            let user = {\n                \"id\": event.email,\n                \"name\": event.name\n            };   \n            if (this.users.filter(u => u.id == user.id).length == 0)\n                this.users.push(user);\n        }\n    }\n    deleteUser(user_id){\n        let num;\n        for (var n = 0;  n < this.users.length; n++) {\n            if(this.users[n].id == user_id){\n                num = n;\n            }\n        }\n        this.users.splice(num, 1);\n    }\n    \n    onSubmit(form) {\n        if (form.valid) {\n            var post = htmlEscape((this.ticketnote || \"\").trim()).substr(0, 5000);\n\n            if(!this.selects.class.selected && this.config.current.is_class_tracking)\n            {\n                this.nav.alert(\"A class must be entered before ticket may be closed!\",true);\n                return;\n            }\n            if (this.config.current.is_ticket_require_closure_note && !post.length)\n            {\n                this.nav.alert(\"Note is required!\",true);\n                return;\n            }\n            if (this.config.current.is_creation_categories && !this.selects.categories.selected)\n            {\n                this.nav.alert(\"A creation category must be entered before ticket may be closed!\",true);\n                return;\n            }\n            let user_ids = this.users.map(u => u.id).join(\", \");\n\n            let data = {\n                \"status\": \"closed\",\n                \"note_text\": post,\n                \"is_send_notifications\": true,\n                \"resolved\": this.selects.resolution.selected == 1,\n                \"resolution_id\": this.selects.category.selected,\n                \"class_id\": this.selects.class.selected,\n                \"confirmed\": this.isconfirm,\n                \"creation_category_id\": this.selects.categories.selected,\n                \"creation_category_name\": this.selects.categories.value,\n                \"confirm_note\": \"\",\n                \"cc\": user_ids\n            };\n\n            this.ticketProvider.closeOpenTicket(this.ticket.key, data).subscribe(\n                data => {\n                    this.nav.alert('Ticket has been closed :)');\n                    this.dismiss(1);\n                },\n                error => {\n                    console.log(error || 'Server error');\n                }\n                );\n        }\n    }\n\n}","import {Nav, NavParams, Page, Config, ViewController, Modal} from 'ionic-angular';\nimport {ApiData} from '../../../providers/api-data';\nimport {isSD} from '../../../providers/config';\nimport {getFullName, addp} from '../../../directives/helpers';\nimport {AddUserModal} from '../modals';\n\n@Page({\n    templateUrl: 'build/pages/modals/infinity-multi-select/infinity-multi-select.html',\n})\n\nexport class InfinityMultiSelectModal {\n   \n    items: any;\n    url: string;\n    name: string;\n    term: string;\n    data: any;\n    count: number;\n    is_empty: boolean;\n    busy: boolean;\n    pager: any;\n    isbutton: boolean;\n    isnew_enabled: boolean = false;\n    date: any;\n    selected_items: any;\n\n    \n\n\n    constructor(private nav: Nav, private navParams: NavParams, private config: Config, private apiData: ApiData,\n        private viewCtrl: ViewController) \n    {\n        nav.swipeBackEnabled = false;\n    }\n\n    ngOnInit() {\n\n        this.term = '';\n        this.name = this.navParams.data.name || \"List\";\n        this.isnew_enabled = this.config.current.is_add_new_user_link && !!~[\"user\", \"tech\"].indexOf(this.name.toLowerCase());\n        this.url = this.navParams.data.url || \"\";\n        this.data = this.navParams.data.items || {};\n        this.items = this.data;\n        if(this.name != 'ToDo Templates'){\n            this.items.forEach(item => {\n            item.is_selected = false;\n              });\n       }\n        this.count = this.items.length;\n        this.isbutton = this.navParams.data.isbutton;\n        this.is_empty = false;\n        this.pager = { page: ((this.count % 25 == 0) ? Math.max(this.count/25 - 1, 0) : 0), limit: 25 };\n\n        if (this.items.length === 0) {\n            var timer = setTimeout(() => {\n                this.busy = true;\n            }, 500);\n\n            this.getItems(\"\", null, timer);\n        }\n        //else {\n            //    this.pager.page = 1;\n            //    this.is_empty = true;\n            //}\n        }\n\n        dismiss(item) {\n            //let data = { 'foo': 'bar' };\n            if (!item) {\n            this.viewCtrl.dismiss(item);\n            return;\n           }\n       \n            this.selected_items = item.filter((v) => v.is_selected);\n            this.viewCtrl.dismiss(this.selected_items);\n        }\n\n        invite()\n        {\n            let myModal = Modal.create(AddUserModal, {type: this.name.toLowerCase(), name: this.term});\n            myModal.onDismiss(data => {\n             if (data){\n                    data.name = getFullName(data.firstname, data.lastname, data.email);\n                    this.dismiss(data);\n                }\n            });\n            this.nav.present(myModal);\n        }\n\n        searchItems(searchbar) {\n            // Reset items back to all of the items\n            this.items = this.data;\n\n            // set q to the value of the searchbar\n            var q = searchbar.value.trim();\n\n            // if the value is an empty string don't filter the items\n            if (q.trim() == '' || this.busy) {\n                if (q.trim() == '') \n                    {\n                        this.is_empty = !this.items.length;\n                        this.count = 25;\n                    }\n                return;\n            }\n\n            this.date = Date.now();\n\n            if (q.length < 3)\n            {\n                this.items = this.items.filter((v) => v.name.toLowerCase().indexOf(q.toLowerCase()) > -1);\n                this.is_empty = !this.items.length;\n                this.count = 25;\n            }\n            else {\n                var timer = setTimeout(() => { this.busy = true; }, 500);\n                this.getItems(q, null, timer);\n            }\n        }\n\n        getItems(term, infiniteScroll, timer?) {\n            let pager = { page: this.pager.page, limit: this.pager.limit };\n            let sterm = term;\n            if (!infiniteScroll)\n            {\n                this.pager.page = 0;\n                pager.page = 0;\n                this.items = [];\n            }\n            if (~[\"location\", \"account\"].indexOf(this.name.toLowerCase()))\n            {\n                sterm = term+\"*\";\n            }\n\n            this.apiData.getPaged(addp(this.url, \"search\", sterm), pager).subscribe(\n                data => {\n                    if (data.length && !data[0].name) {\n                        var results = [];\n                        data.forEach(item => {\n                            let name;\n                            //if users or techs\n                            if (item.email)\n                                name = getFullName(item.firstname, item.lastname, item.email, this.isbutton ? \"\" : \" \");\n                            //if tickets\n                            else if (item.number)\n                                name = `#${item.number}: ${item.subject}`;\n                            results.push({ id: item.id, name: name, email: item.email });\n                        });\n                        data = results;\n                    }\n                    if (timer) {\n                        this.is_empty = !data.length;\n                        clearTimeout(timer);\n                        this.busy = false;\n                    }\n                    this.count = 25;\n                    if (!term || term.length < 3)\n                    {\n                        if (timer) {\n                            this.data = data;\n                        }\n                        else \n                            this.data.push(...data);\n                        //if (infiniteScroll) {\n                        //    infiniteScroll.enable(data.length == 25);\n                        //}\n                        this.count = data.length;\n                        this.searchItems({ value: term });\n                    }\n                    else if (data.length)\n                    {\n                        this.count = data.length;\n                        this.items.push(...data);\n                    }\n                    else\n                        this.items = this.data;\n                    if (infiniteScroll) {\n                        infiniteScroll.complete();\n                    }\n                },\n                error => {\n                    if (timer) {\n                        clearTimeout(timer);\n                        this.busy = false;\n                    }\n                    console.log(error || 'Server error');\n                }\n                );\n        }\n\n        doInfinite(infiniteScroll) {\n            if (this.date && Date.now() - this.date < 1000) {infiniteScroll.complete(); return;}\n            if (this.is_empty || this.count < 25) {\n                infiniteScroll.complete();\n                //infiniteScroll.enable(false);\n                return;\n            }\n            this.pager.page += 1;\n            //this.term = \"\";\n            this.getItems(this.term, infiniteScroll);\n        }\n    }","import {Nav, NavParams, Page, Config, ViewController, Modal} from 'ionic-angular';\nimport {ApiData} from '../../../providers/api-data';\nimport {isSD} from '../../../providers/config';\nimport {getFullName, addp} from '../../../directives/helpers';\nimport {AddUserModal} from '../modals';\n\n@Page({\n    templateUrl: 'build/pages/modals/infinity-select/infinity-select.html',\n})\n\nexport class InfinitySelectModal {\n\n    items: any;\n    url: string;\n    name: string;\n    displayname: string;\n    term: string;\n    data: any;\n    count: number;\n    is_empty: boolean;\n    busy: boolean;\n    pager: any;\n    isbutton: boolean;\n    default_text: string = \"\";\n    isdefault_enabled: boolean = false;\n    isnew_enabled: boolean = false;\n    date: any;\n    \n\n\n    constructor(private nav: Nav, private navParams: NavParams, private config: Config, private apiData: ApiData,\n        private viewCtrl: ViewController) \n    {\n        nav.swipeBackEnabled = false;\n    }\n\n    ngOnInit() {\n        this.term = '';\n        this.name = this.navParams.data.name || \"List\";\n        this.displayname = this.navParams.data.displayname || this.name;\n        if (this.name == \"recipient_user\")\n            this.name = \"Recipient\"\n        this.isdefault_enabled = !~[\"user\", \"account\", \"tech\", \"task type\", \"recipient\"].indexOf(this.name.toLowerCase()) \n                                ||  !!this.navParams.data.default;\n        this.default_text = this.navParams.data.default || \"Default\";\n        this.isnew_enabled = this.config.current.is_add_new_user_link && !!~[\"user\", \"tech\"].indexOf(this.name.toLowerCase()) \n                             && !this.navParams.data.isnew_disabled;\n        this.url = this.navParams.data.url || \"\";\n        this.data = this.navParams.data.items || {};\n        this.items = this.data;\n        this.count = this.items.length;\n        this.isbutton = this.navParams.data.isbutton;\n        this.is_empty = false;\n        this.pager = { page: ((this.count % 25 == 0) ? Math.max(this.count/25 - 1, 0) : 0), limit: 25 };\n\n        if (this.items.length === 0) {\n            var timer = setTimeout(() => {\n                this.busy = true;\n            }, 500);\n\n            this.getItems(\"\", null, timer);\n        }\n        //focuser\n        //document.getElementsByClassName(\"searchbar-input\")[1].focus();\n        //else {\n            //    this.pager.page = 1;\n            //    this.is_empty = true;\n            //}\n        }\n\n        onPageDidEnter() {\n        var t = document.getElementsByClassName(\"searchbar-input\");\n        t = t[t.length - 1];\n        t && t.focus();\n        }\n\n        dismiss(item) {\n            //let data = { 'foo': 'bar' };\n            item = item || {};\n            this.viewCtrl.dismiss(item);\n        }\n\n        invite()\n        {\n            let myModal = Modal.create(AddUserModal, {type: this.name.toLowerCase(), name: this.term});\n            myModal.onDismiss(data => {\n             if (data){\n                    //console.log(data);\n                    data.name = getFullName(data.firstname, data.lastname, data.email);\n                    this.dismiss(data);\n                    //this.selects[type].selected = data.id;\n                    //this.selects[type].value = getFullName(data.firstname, data.lastname, data.email);\n                }\n            });\n            this.nav.present(myModal);\n            //setTimeout(() => { this.nav.present(myModal); }, 500);\n        }\n\n        searchItems(searchbar) {\n            // Reset items back to all of the items\n            this.items = this.data;\n\n            // set q to the value of the searchbar\n            var q = searchbar.value.trim();\n\n            // if the value is an empty string don't filter the items\n            if (q.trim() == '' || this.busy) {\n                if (q.trim() == '') \n                    {\n                        this.is_empty = !this.items.length;\n                        this.count = 25;\n                    }\n                return;\n            }\n\n            this.date = Date.now();\n\n            if (q.length < 3)\n            {\n                this.items = this.items.filter((v) => v.name.toLowerCase().indexOf(q.toLowerCase()) > -1);\n                this.is_empty = !this.items.length;\n                this.count = 25;\n            }\n            else {\n                var timer = setTimeout(() => { this.busy = true; }, 500);\n                this.getItems(q, null, timer);\n            }\n        }\n\n        getItems(term, infiniteScroll, timer?) {\n            let pager = { page: this.pager.page, limit: this.pager.limit };\n            let sterm = term;\n            if (!infiniteScroll)\n            {\n                this.pager.page = 0;\n                pager.page = 0;\n                this.items = [];\n            }\n            if (~[\"location\", \"account\"].indexOf(this.name.toLowerCase()))\n            {\n                sterm = term+\"*\";\n            }\n\n            this.apiData.getPaged(addp(this.url, \"search\", sterm), pager).subscribe(\n                data => {\n                    if (data.length && !data[0].name) {\n                        var results = [];\n                        data.forEach(item => {\n                            let name;\n                            //if users or techs\n                            if (item.email)\n                                name = getFullName(item.firstname, item.lastname, item.email, this.isbutton ? \"\" : \" \");\n                            //if tickets\n                            else if (item.number)\n                                name = `#${item.number}: ${item.subject}`;\n                            results.push({ id: item.id, name: name, email: item.email });\n                        });\n                        data = results;\n                    }\n                    if (timer) {\n                        this.is_empty = !data.length;\n                        clearTimeout(timer);\n                        this.busy = false;\n                    }\n                    this.count = 25;\n                    if (!term || term.length < 3)\n                    {\n                        if (timer) {\n                            this.data = data;\n                        }\n                        else \n                            this.data.push(...data);\n                        //if (infiniteScroll) {\n                        //    infiniteScroll.enable(data.length == 25);\n                        //}\n                        this.count = data.length;\n                        this.searchItems({ value: term });\n                    }\n                    else if (data.length)\n                    {\n                        this.count = data.length;\n                        this.items.push(...data);\n                    }\n                    else\n                        this.items = this.data;\n                    if (infiniteScroll) {\n                        infiniteScroll.complete();\n                    }\n                },\n                error => {\n                    if (timer) {\n                        clearTimeout(timer);\n                        this.busy = false;\n                    }\n                    console.log(error || 'Server error');\n                }\n                );\n        }\n\n        doInfinite(infiniteScroll) {\n            if (this.date && Date.now() - this.date < 1000) {infiniteScroll.complete(); return;}\n            if (this.is_empty || this.count < 25) {\n                infiniteScroll.complete();\n                //infiniteScroll.enable(false);\n                return;\n            }\n            this.pager.page += 1;\n            //this.term = \"\";\n            this.getItems(this.term, infiniteScroll);\n        }\n    }","export * from './basic-select/basic-select';\nexport * from './ajax-select/ajax-select';\nexport * from './infinity-select/infinity-select';\nexport * from './infinity-multi-select/infinity-multi-select';\nexport * from './close-ticket/close-ticket';\nexport * from './tree-modal/tree-modal';\nexport * from './ticket-create/ticket-create';\nexport * from './add-user/add-user';\nexport * from './add-files/add-files';\nexport * from './transfer-ticket/transfer-ticket';\nexport * from './change-user/change-user';\nexport * from './privacy/privacy';","import {Nav, NavParams, Page, Events, ViewController} from 'ionic-angular';\n\n@Page({\n    templateUrl: 'build/pages/modals/privacy/privacy.html',\n})\nexport class PrivacyModal {\n\n    constructor(\n        private nav: Nav,\n        private viewCtrl: ViewController\n    ) {\n        nav.swipeBackEnabled = false;\n    }\n\n    dismiss(item) {\n        this.viewCtrl.dismiss();\n    }\n}","import {Page, Config, Nav, NavParams, ViewController, Modal} from 'ionic-angular';\nimport {forwardRef, ViewChild} from '@angular/core';\nimport {FORM_DIRECTIVES, Validators} from '@angular/common';\nimport {TicketProvider} from '../../../providers/providers';\nimport {htmlEscape, getFullName} from '../../../directives/helpers';\nimport {DataProvider} from '../../../providers/data-provider';\nimport {ClassListComponent} from '../../../components/class-list/class-list';\nimport {LocationListComponent} from '../../../components/location-list/location-list';\nimport {SelectListComponent} from '../../../components/select-list/select-list';\nimport {MultiSelectComponent}  from '../../../components/multi-select/multi-select';\nimport {UploadButtonComponent} from '../../../pages/ticket-details/ticket-details';\nimport {CustomFieldComponent} from '../../../components/custom-field/custom-field';\n\n@Page({\n    templateUrl: 'build/pages/modals/ticket-create/ticket-create.html',\n    directives: [forwardRef(() => ClassListComponent), forwardRef(() => LocationListComponent), forwardRef(() => CustomFieldComponent), forwardRef(() => SelectListComponent), forwardRef(() => MultiSelectComponent), UploadButtonComponent],\n})\nexport class TicketCreatePage {\n\n    @ViewChild(UploadButtonComponent) private uploadComponent: UploadButtonComponent;\n    data: any;\n    ticket: any;\n    contractors: number;\n    he: any;\n    selects: any;\n    account_id: number;\n  location_id: number;\n  location: string;\n    class_id: number;\n    project_id: number;\n    fileDest: any = {ticket: \"11\"};\n    files: any = [];\n    customfields: any = [];\n    pager: any;\n    profile: any = {};\n\n    constructor(private nav: Nav, private navParams: NavParams, private ticketProvider: TicketProvider, private config: Config,\n                 private viewCtrl: ViewController, private dataProvider: DataProvider) {\n        nav.swipeBackEnabled = false;\n    }\n\n    ngOnInit()\n    {\n        //for test only\n        //console.log(this.config.current.is_require_ticket_initial_post);\n        //this.config.current.is_budget_time = true;\n\n        this.he = this.config.getCurrent(\"user\");\n\n        this.data = this.navParams.data || {};\n\n        this.getProfile();\n\n        let recent : any = {};\n        if (!this.data.account)\n        {\n                recent = this.config.current.recent || {};\n        }\n\n        this.account_id = this.profile.account_id ||(this.data.account || {}).id || (recent.account || {}).selected || this.he.account_id || -1;\n        this.location_id = this.profile.location_id || (this.data.location || {}).id || (recent.location || {}).selected || 0;\n        this.location = this.profile.location_name || (this.data.location || {}).name || (recent.location || {}).value;\n        let contract_id = recent.default_contract_id || 0;\n        this.class_id = (recent.class || {}).selected || 0;\n        this.project_id = (recent.project || {}).selected || 0;\n\n        this.selects = {\n            \"user\" : {\n                name: \"User\", \n                value: getFullName(this.he.firstname, this.he.lastname, this.he.email),\n                selected: this.he.user_id,\n                url: \"users\",\n                hidden: false\n            },\n            \"location\" : {\n                name: \"Location\", \n                value: this.he.is_techoradmin ? (this.location  || \"Default\") : \"Choose\",\n                selected: this.location_id,\n                url: `locations?account=${this.account_id}&limit=1000`,\n                hidden: false\n            },\n            \"project\" : {\n                name: \"Project\", \n                value: (recent.project || {}).value || \"Default\",\n                selected: (recent.project || {}).selected || 0,\n                url: `projects?account=${this.account_id}&is_with_statistics=false`,\n                hidden: false\n            },\n            \"submissions\" : {\n                name: \"Submission Category\", \n                value: (recent.submissions || {}).value || \"Choose\",\n                selected: (recent.submissions || {}).value || 0,\n                url: `submissions`,\n                hidden: !this.config.current.is_submission_category\n            },\n            \"categories\" : {\n                name: \"Creation Category\", \n                value: (recent.categories || {}).value || \"Default\",\n                selected: (recent.categories || {}).selected || 0,\n                url: `categories`,\n                hidden: !this.config.current.is_creation_categories\n            },\n            \"contract\" : { \n                    name: \"Contract\", \n                    value: recent.default_contract_name || \"Choose\",\n                    selected: recent.default_contract_id || this.config.getRecent(\"contract\").selected || 0,\n                    url: `contracts?account_id=${this.account_id}&for_time_logs=false`,\n                    hidden: false    \n                },\n            \"class\" : {\n                name: \"Class\", \n                value: (recent.class || {}).value || \"Choose\",\n                selected: (recent.class || {}).selected || 0,\n                url: \"classes\",\n                hidden: false\n            },\n            \"priority\" : {\n                name: \"Priority\", \n                value: (recent.priority || {}).value || \"Default\",\n                selected: (recent.priority || {}).selected || 0,\n                url: \"priorities\",\n                hidden: false\n            },\n            \"todos\" : { \n                    name: \"ToDo Templates\", \n                    value: (recent.todos || {}).value || \"Select\",\n                    selected: (recent.todos || {}).selected || 0,\n                    url: `todos/templates`,\n                    hidden: false    \n                },\n            \"level\": {\n                 name: \"Level\",\n                 value: \"Default\",\n                 selected: 0,\n                 url: \"levels\",\n                 hidden: !this.config.current.is_tech_choose_levels && !this.config.current.user.is_admin\n           }\n        };\n\n        if(this.selects.class.selected > 0)\n            this.getCustomfield(recent.class.selected);\n\n        this.selects.tech = {\n            name: \"Tech\", \n            value: (this.data.tech || {}).name || \"Choose\",\n            selected: (this.data.tech || {}).id || 0,\n            url: this.config.current.is_allow_user_choose_tech && this.config.current.is_allow_user_choose_queue_only ? \"users?role=queue\" : \"technicians\",\n            hidden: false\n        };\n \n        this.selects.account = {\n            name: \"Account\", \n            value: this.profile.account_name || (this.data.account || {}).name || (recent.account || {}).value || this.he.account_name,\n            selected: this.account_id,\n            url: \"accounts?is_with_statistics=false&limit=500\",\n            hidden: false\n        };\n\n        this.ticket =\n            {\n            \"subject\" : \"\",\n            \"initial_post\" : \"\",\n            \"class_id\" : this.class_id,\n            \"account_id\" : this.account_id,\n            \"location_id\": this.location_id,\n            \"user_id\" : this.he.user_id,\n            \"tech_id\" : 0,\n            \"default_contract_id\": contract_id,\n            \"priority_id\" : 0,\n            \"estimated_time\": 0,\n        };\n\n        this.ticket.estimated_time = this.getFixed(this.ticket.estimated_time);\n\n            this.getCustomfield(contract_id);\n    }\n\n    dismissPage(data) {\n        if (data)\n            this.nav.alert(this.config.current.names.ticket.s + ' was Succesfully Created :)');\n        //data.is_add_Time on Ticket Creation = true\n        this.viewCtrl.dismiss(data);\n    }\n\n    saveSelect(event){\n        let name = event.type;\n        if (name == \"creationcategory\")\n            name = \"categories\";\n        if (name == \"submissioncategory\")\n            name = \"submissions\";\n        if (name == \"todotemplates\")\n            name = \"todos\";\n        let contract_id = this.selects.contract.selected;\n        //change url on related lists\n        switch (name) {\n            case \"user\" :\n                this.selects.user.value = event.name;\n                this.selects.user.selected = event.id;\n                this.getProfile(event.id);\n                break;\n            case \"account\" :\n                this.getProfile(this.selects.user.selected, event.id);\n                this.selects.project.url = `projects?account=${event.id}&is_with_statistics=false`;\n                this.selects.project.value = \"Default\";\n                this.selects.project.selected = 0;\n                \n                this.selects.account.value = event.name;\n                this.selects.account.selected = event.id;\n                this.account_id = event.id;\n\n                this.selects.contract.url = `contracts?account_id=${event.id}&for_time_logs=false`;\n                this.selects.contract.value = \"Default\";\n                this.selects.contract.selected = 0;\n                contract_id = 0;\n\n                break;\n            case \"class\" :\n                this.selects.class.value = event.name;\n                this.selects.class.selected = event.id;\n                this.class_id = event.id;\n                if (this.ticket.class_id == event.id)\n                    break;\n                this.getCustomfield(event.id);\n                break;\n            case \"todos\" :\n                this.selects.todos.value = event.name || \"Select\";\n                this.selects.todos.selected = event.id || 0;\n                break;          \n              \n            default:\n                    this.selects[name].selected = event.id;\n                    this.selects[name].value = event.name || \"Default\";\n        break;\n        }\n    }\n\n    getProfile(id?, account?){\n            this.dataProvider.getProfile(id, account).subscribe(\n            data => {\n                this.profile = data;\n                if (id && !account) {\n                this.selects.account.value = this.profile.account_name || this.he.account_name;\n                this.selects.account.selected = this.profile.account_id || -1;\n                this.getProfile(id, this.selects.account.selected);\n                }\n                \n                this.selects.location.url = `locations?account=${this.selects.account.selected || -1}&limit=500`;\n                this.selects.location.value = this.location || this.profile.location_name || (this.he.is_techoradmin ? \"Default\" : \"Choose\");\n                this.selects.location.selected = this.location_id || this.profile.location_id || 0;\n\n                this.account_id = this.selects.account.selected;\n                this.selects.contract.url = `contracts?account_id=${this.account_id}&for_time_logs=false`\n                   }, \n            error => { \n                console.log(error || 'Server error');}\n        );          \n        }\n\n    saveCustomfield(event){\n     this.customfields.filter(tc => tc.id == event.id)[0].value = event.value;\n   }\n\n   getXML()\n   {\n      var customfield_xml = \"\";\n          for (var n = 0;  n < this.customfields.length; n++)\n         { \n           if (this.customfields[n].required && this.customfields[n].value == \"\" || this.customfields[n].value == \"0001-01-01T00:00:00.0000000\"){\n             this.nav.alert(`Please add value to custom field: ${this.customfields[n].name}`, true);\n             return customfield_xml = \"\";\n           }\n           customfield_xml = customfield_xml + `<field id=\"${this.customfields[n].id}\"><caption>${this.customfields[n].name}</caption><value>${this.customfields[n].value}</value></field>`;\n         }\n      return \"<root>\" + customfield_xml + \"</root>\";  \n\n   }\n\n   uploadedFile(event)\n   {\n     //if (event.indexOf(\"ok\") == 0)\n     //{\n        this.dismissPage(this.ticket);\n     //}\n   }\n\n   selectedFile(event)\n   {\n     this.files = event;\n     this.ticket.initial_post = this.ticket.initial_post.trim(); \n     if (event.length && !this.ticket.initial_post)\n     {\n       this.ticket.initial_post = \"  \";\n     }\n   }\n\n   getCustomfield(class_id)\n   {\n       if (class_id == 0)\n           return this.customfields = [];\n     this.ticketProvider.getCustomfields(class_id, this.pager).subscribe(\n       data => {\n           this.customfields = data;\n       },\n       error => {\n         console.log(error || 'Server error');\n       }\n       );\n   }\n\n    onSubmit(form) {\n        /*if (!this.selects.tech.id)\n            {\n                this.nav.alert('Please select technician...', true);\n                return;\n            }\n            */\n        if (form.valid){\n            //proof double click\n            if (this.ticket.in_progress && Date.now() - this.ticket.in_progress < 1500) {return;}\n            this.ticket.in_progress = Date.now();\n            if (this.config.current.is_budget_time)\n                this.ticket.estimated_time = isNaN(form.value.budgeted_time) ? 0 : Number(form.value.budgeted_time);\n           \n            this.ticket.subject = htmlEscape(this.ticket.subject.trim());          \n            this.ticket.initial_post = htmlEscape(this.ticket.initial_post.trim()).substr(0, 4500);\n            if (this.config.current.is_require_ticket_initial_post && !this.ticket.initial_post.length && !this.files.length)\n            {\n                this.nav.alert(\"Note is required!\",true);\n                return;\n            }\n\n            if (!this.he.is_techoradmin && this.config.current.is_location_tracking && !this.selects.location.selected)\n            {\n                this.nav.alert(\"Please choose \"+this.config.current.names.location.s,true);\n                return;\n            }\n            if (!this.he.is_techoradmin && this.config.current.is_class_tracking && !this.selects.class.selected)\n            {\n                this.nav.alert(\"Please choose Class\",true);\n                return;\n            }\n            if (this.config.current.is_submission_category && !this.selects.submissions.selected)\n            {\n                this.nav.alert(\"Please choose Submission Category\",true);\n                return;\n            }\n            if (this.config.current.is_creation_categories && this.config.current.is_creation_categories_required_on_creation && !this.selects.categories.selected)\n            {\n                this.nav.alert(\"Please choose Creation Category\",true);\n                return;\n            }\n\n            if (this.files.length)\n            {\n                this.ticket.initial_post += \"\\n\\nFollowing file\" + (this.files.length > 1 ? \"s were\" : \" was\") + \" uploaded: \" + this.files.join(\", \") +\".\";\n            }\n            var customfields_xml = this.getXML();\n             if (customfields_xml == \"\") \n               return;\n            \n\n            this.ticket.class_id = this.selects.class.selected;\n            this.ticket.account_id = this.selects.account.selected;\n            this.ticket.location_id = this.selects.location.selected;\n            this.ticket.user_id = this.he.is_techoradmin ? this.selects.user.selected : this.he.user_id;\n            this.ticket.tech_id = this.selects.tech.selected;\n            this.ticket.todos_id = this.selects.todos.selected;\n            this.ticket.priority_id = this.selects.priority.selected;\n            this.ticket.level = this.selects.level.selected;\n            this.ticket.customfields_xml = customfields_xml;\n            this.ticket.default_contract_id = this.selects.contract.selected;\n            this.ticket.default_contract_name = this.selects.contract.value;\n            this.ticket.creation_category_id = this.selects.categories.selected;\n            this.ticket.creation_category_name = this.selects.categories.value;\n            this.ticket.submission_category = this.selects.submissions.value;\n            this.ticket.todo_templates = this.selects.todos.selected;\n\n            this.ticketProvider.addTicket(this.ticket).subscribe(\n                data => {\n                    if (!this.data.account)\n            {\n                this.config.setRecent({\"account\": this.selects.account,\n                                       \"location\": this.selects.location,\n                                               \"project\": this.selects.project,\n                                               \"class\": this.selects.class,\n                                               \"default_contract_id\": this.selects.contract.selected,\n                                               \"default_contract_name\": this.selects.contract.value,\n                                               \"categories\": this.selects.categories,\n                                               \"todos\": this.selects.todos,\n                                               \"submissions\": this.selects.submissions,\n                                               \"priority\": this.selects.priority});\n            }\n                    if (this.files.length)\n                    {\n                       this.ticket = data; \n                       this.fileDest.ticket = data.key;\n                       this.uploadComponent.onUpload();\n                    }\n                    else \n                        this.dismissPage(data);\n                }, \n                error => { \n                    this.nav.alert(this.he.is_techoradmin ? (\"Please select \" + this.config.current.names.tech.s) : error, true);\n                    console.log(error || 'Server error');}\n            );\n        }\n    }\n\n    getFixed(value){\n        return Number(value || \"0\").toFixed(2);\n    }\n}\n\n","import {Nav, NavParams, Page, ViewController, Config} from 'ionic-angular';\nimport {forwardRef} from '@angular/core';\nimport {TicketProvider} from '../../../providers/ticket-provider';\nimport {htmlEscape} from '../../../directives/helpers';\nimport {SelectListComponent} from '../../../components/select-list/select-list';\n\n\n@Page({\n    templateUrl: 'build/pages/modals/transfer-ticket/transfer-ticket.html',\n    directives: [forwardRef(() => SelectListComponent)],\n})\nexport class TransferTicketModal {\n\n    account_id: any;\n    keep_attached: boolean;\n    ticketnote: string;\n    ticket: any;\n    selects: any;\n    is_techs_only: boolean = false;\n\n    constructor(private nav: Nav, private navParams: NavParams, private ticketProvider: TicketProvider, private config: Config,\n        private viewCtrl: ViewController) {\n        nav.swipeBackEnabled = false;\n        this.config = config;\n    }\n\n\n    ngOnInit() {\n\n        this.keep_attached = false;\n\n        this.ticket = this.navParams.data || 0;\n        this.account_id = this.ticket.account_id;\n        this.selects = {\n            \"tech\": {\n                name: \"tech\",\n                value: \"Choose\",\n                selected: 0,\n                hidden: false,\n                url: \"technicians\"\n                            },\n        };\n           }\n\n    dismiss(data) {\n        //let data = { 'foo': 'bar' };\n        //item = item || {};\n        this.viewCtrl.dismiss(data);\n    }\n\n    saveSelect(event) {\n        let name = event.type;\n        this.selects.selected = event.id;\n        this.selects.value = event.name;\n        this.account_id = event.id;\n    }\n    \n    onSubmit(form) {\n        if (form.valid) {\n            var post = htmlEscape((this.ticketnote || \"\").trim()).substr(0, 5000);\n            let newtech = {\n                \"note_text\": post,\n                \"name\": this.selects.value,\n                \"tech_id\": this.selects.selected,\n                \"keep_attached\": this.keep_attached,\n                \"is_techs_only\": this.is_techs_only,\n                \"action\":  \"transfer\",\n            };\n            this.ticketProvider.transferUserTech(this.ticket.key, newtech).subscribe(\n       data => {\n         this.nav.alert(this.config.current.names.ticket.s + ' has been transferred :)');\n         this.dismiss(newtech);\n       },\n       error => {\n         this.nav.alert(error, true);\n         console.log(error || 'Server error');\n       }\n       );\n\n        }\n    }\n\n\n\n}","import {Nav, NavParams, Page, Events, ViewController} from 'ionic-angular';\n//import {Input} from '@angular/core';\nimport {Component, OnInit} from '@angular/core';\n//import {NgClass} from '@angular/common';\nimport {TreeViewComponent, ITreeNode} from '../../../components/tree-view/tree-view';\n\n@Page({\n    templateUrl: 'build/pages/modals/tree-modal/tree-modal.html',\n    directives: [TreeViewComponent]\n})\nexport class TreeModal {\n\n    Nodes: Array<ITreeNode>;\n    selectedNode: ITreeNode;\n    name: string;\n\n    constructor(\n    private params: NavParams,\n     private viewCtrl: ViewController\n    ) {\n        this.name = this.params.data.name;\n        this.Nodes = this.params.data.items;\n    }\n    \n    // обработка события смены выбранного узла\n    onSelectNode(node: ITreeNode) {\n        this.selectedNode = node;\n        //console.log(node);\n    }\n// обработка события вложенных узлов\nonRequest(parent: ITreeNode) {\n    return;\n    //this.treeService.GetNodes(parent.id).subscribe( res => parent.sub = res, error=> console.log(error));\n}\n\n\n    dismiss(isCancel) {\n        //let data = { 'foo': 'bar' };\n        let item = {};\n        if (this.selectedNode && !isCancel)\n            item = {\n                id: this.selectedNode.id,\n                name: this.selectedNode.name\n            };\n        this.viewCtrl.dismiss(item);\n    }\n}","import {Page, Config, Nav, Events, Loading} from 'ionic-angular';\nimport {DataProvider} from '../../providers/data-provider';\nimport {TicketProvider} from '../../providers/ticket-provider';\nimport {TimeProvider} from '../../providers/time-provider';\nimport {Site, isSD} from '../../providers/config';\nimport {openURLsystem} from '../../directives/helpers';\nimport {LoginPage} from '../login/login';\nimport {DashboardPage} from '../dashboard/dashboard';\nimport {TicketsPage} from '../tickets/tickets';\n\n@Page({\n    templateUrl: 'build/pages/organizations/organizations.html',\n})\nexport class OrganizationsPage {\n\n    list: Array<any> = [];\n\n    constructor(private nav: Nav, private dataProvider: DataProvider, private config: Config, private events: Events, private ticketProvider: TicketProvider, private timeProvider: TimeProvider) {\n        //partly logout\n        var key = this.config.getCurrent(\"key\");\n        events.publish(\"app:logout\", key);\n        this.ticketProvider._dataStore = {all: [],alt: [],tech: [],user: []};\n        this.dataProvider._dataStore = this.timeProvider._dataStore = {};\n        //this.config.saveCurrent();\n        //clear also chrome ext if needed\n        if (localStorage.getItem(\"isExtension\") === \"true\")\n            window.top.postMessage(\"logout\", \"*\");\n        \n        this.dataProvider.getOrganizations(key).subscribe(\n            data => {\n                var org = localStorage.getItem('loadOrgKey') || '';\n                if (org) localStorage.setItem('loadOrgKey', \"\");\n                var org_data = org ? data.filter(t=> t.key == org) : null;\n                if (org_data)\n                    data = org_data;\n                \n                if (data.length == 1)\n                {\n                    if (data[0].instances.length == 1)\n                    {\n                        this.config.setCurrent({is_multiple_org : false});\n                        this.onSelectInst({ org: data[0].key, inst: data[0].instances[0].key });\n                        return;\n                    }\n                    else\n                    {\n                        this.list = data;\n                        this.toggle(data[0], 0);\n                    }\n                }\n                else\n                    this.list = data;\n                this.config.setCurrent({is_multiple_org : true});\n            }, \n            error => { \n                this.nav.alert(\"Cannot get list of Organizations\", true);\n                this.config.clearCurrent();\n                this.nav.setRoot(LoginPage, null, { animation: \"wp-transition\" });\n            }\n            ); \n    }\n\n    onPageLoaded()\n    {\n      //document.title = \"Organizations : \" + document.title ;  \n    }\n\n    toggle(org, index){\n        if (org.instances.length == 1)\n        {\n            this.onSelectInst({org: org.key, inst: org.instances[0].key});\n            return;\n        }\n        //this.list = this.list.map(o => {o.expanded = false; return o;});\n        this.list.forEach((o, i) => o.expanded = false);\n        this.list[index].expanded = this.list[index].expanded ? false : true;\n    }\n    \n    support()\n    {\n        openURLsystem(`https://support.${Site}portal/`);\n    }\n    \n    alertOrg(name){\n        this.nav.alert(name + \" has expired or inactivated. Contact SherpaDesk for assistance. Email: support@sherpadesk.com Phone: +1 (866) 996-1200, then press 2\", true);\n    }\n    \n    onSelectInst(instance) {\n        let loading = Loading.create({\n            content: \"Loading configuration...\",\n                duration: 3000,\n                dismissOnPageChange: true\n            });\n        this.nav.present(loading);\n        this.config.setCurrent({ org : instance.org, instance : instance.inst});\n        this.events.publish(\"config:get\", true);\n    }\n}\n","export * from './account-details/account-details';\r\nexport * from './accounts/accounts';\r\nexport * from './technicians/technicians';\r\nexport * from './locations/locations';\r\nexport * from './ajax-search/ajax-search';\r\nexport * from './dashboard/dashboard';\r\nexport * from './profile/profile';\r\nexport * from './expense-create/expense-create';\r\nexport * from './expenses/expenses';\r\nexport * from './invoice-details/invoice-details';\r\nexport * from './invoices/invoices';\r\nexport * from './login/login';\r\nexport * from './organizations/organizations';\r\nexport * from './queue-tickets/queue-tickets';\r\nexport * from './tech-tickets/tech-tickets';\r\nexport * from './queues/queues';\r\nexport * from './contracts/contracts';\r\nexport * from './signup/signup';\r\nexport * from './ticket-details/ticket-details';\r\nexport * from './tickets/tickets';\r\nexport * from './timelog/timelog';\r\nexport * from './timelogs/timelogs';\r\nexport * from './invoice-create/invoice-create';\r\nexport * from './uninvoices/uninvoices';\r\nexport * from './todos/todos';\r\nexport * from './todo-create/todo-create';\r\nexport * from './skype/skype';\r\n","import {Page, Config, Nav, NavParams, ViewController} from 'ionic-angular';\nimport {forwardRef, ViewChild} from '@angular/core';\nimport {htmlEscape, linebreaks, addp} from '../../directives/helpers';\nimport {DataProvider} from '../../providers/data-provider';\nimport {TimeProvider} from '../../providers/providers';\nimport {TimelogsPage} from '../timelogs/timelogs';\nimport {SelectListComponent} from '../../components/select-list/select-list';\nimport {GravatarPipe} from '../../pipes/pipes';\n\n@Page({\n    templateUrl: 'build/pages/profile/profile.html',\n    directives: [forwardRef(() => SelectListComponent)],\n    pipes: [GravatarPipe],\n})\nexport class ProfilePage {\n\n    profile: any = {};\n    queues: any = {};\n    queue_id: any = {};\n    queue_name: any = [];\n    is_queue: any = {};\n    is_queue1: boolean = false;\n    is_queue2: boolean = false;\n    is_queue3: boolean = false;\n    date: string;\n    title: string = \"\";\n    selects: any = {};\n    n: number = 3;\n    working: number = 0;\n    non_working_hours: number = 0;\n    cachename: string;\n\n\n\n    constructor(private nav: Nav, private config: Config, private dataProvider: DataProvider, private timeProvider: TimeProvider) {\n  }\n\n\nngOnInit()\n{    \n    this.getProfile();\n    if (this.config.current.user.is_techoradmin)\n        this.getQueue();\n    let recent = this.config.current.recent || {};\n    if (this.config.current.user.is_techoradmin){\n            var localQueres_id = localStorage.getItem('queue_id');\n            var local_is_Queres = localStorage.getItem('is_queue');\n            this.queue_id = localQueres_id ? localStorage.getItem('queue_id').split(\", \") : [];\n            this.is_queue = local_is_Queres ? localStorage.getItem('is_queue').split(\", \") : [];\n\n            this.is_queue1 = this.is_queue1 || (localStorage.getItem('is_queue1') == \"true\")? true : false;\n            this.is_queue2 = this.is_queue2 || (localStorage.getItem('is_queue2') == \"true\")? true : false;\n            this.is_queue3 = this.is_queue3 || (localStorage.getItem('is_queue3') == \"true\")? true : false;\n        }\n            if (this.config.current.is_time_tracking && this.config.current.user.is_techoradmin){\n                let date = new Date().toJSON().substring(0,10);\n                let account = \"0\";\n                this.cachename = addp(\"time\", \"account\", account);\n                this.cachename = addp(this.cachename, \"tech\", this.config.current.user.user_id);\n                this.cachename = addp(this.cachename, \"start_date\", date);\n                this.cachename = addp(this.cachename, \"end_date\", date);\n                this.countHours(this.timeProvider._dataStore[this.cachename] || []);\n         }\n\n        }\n\n\n        getProfile(){\n            this.dataProvider.getProfile().subscribe(\n            data => {\n                this.profile = data;                \n                    }, \n            error => { \n                console.log(error || 'Server error');}\n        ); \n        }\n\n        getQueue(){\n            this.dataProvider.getQueueList().subscribe(\n                data => {\n                    this.queues = data;\n                    if (data.length < this.n) \n                        this.n = data.length;\n\n                    if (this.queue_id == 0) {\n                        for (var i = 0; i < this.n; ++i) {\n                            this.queue_id[i] = this.queues[i].id;\n                            this.queue_name[i] = this.queues[i].fullname;\n\n                        }   \n                    }\n                    else {\n                        for (var i = 0; i < this.n; ++i) {\n                            let sort = (this.queues.filter( v => this.queue_id[i] == v.id ));\n                            sort.forEach(item => {\n                                this.queue_name.push(item.fullname);\n                            });\n                        }\n                        this.is_queue1 = this.is_queue[0] != \"0\" ? true : false;\n                        this.is_queue2 = this.is_queue[1] != \"0\" ? true : false;\n                        this.is_queue3 = this.is_queue[2] != \"0\" ? true : false;\n                    }\n\n                    for (var i = 0; i < this.n; ++i) {\n                        this.selects[\"queue\"+(i+1)] = {\n                    name: \"Queue \"+(i+1), \n                    value:  this.queue_name[i] || \"Default\",\n                    selected: this.queue_id[i] || 0,\n                    items: this.queues,\n                    hidden: false,\n                    is_disabled: false\n                };\n            }\n                    this.filterQueues();\n                },\n                error => {\n                    console.log(error || 'Server error');\n                }\n                );\n        }\n\n        filterQueues(){\n            let sort = this.queues.filter( v => this.queue_id[0] != v.id && this.queue_id[1] != v.id && this.queue_id[2] != v.id);\n            for (var i = 0; i < this.n; ++i) {\n                if (sort.length != 0)\n            this.selects[\"queue\"+(i+1)].items = sort;\n            }\n        }\n\n        countHours(data){\n        let non_working_hours = 0;\n        let working = 0;\n        data.forEach(item => {\n            working += item.hours;\n                if (item.non_working_hours != -1)\n                    non_working_hours += item.non_working_hours;\n            });\n            this.non_working_hours = non_working_hours;\n            this.working = working;\n        }\n\n        saveSelect(event){\n            let name = event.type;\n            /*let queue1_id = this.selects.queue1.selected;\n            let queue2_id = this.selects.queue2.selected;\n            let queue3_id = this.selects.queue3.selected;    \n        */\n        //change url on related lists\n        switch (name) {\n            case \"queue1\":\n                this.selects.queue1.selected = this.queue_id[0] = event.id;\n                this.selects.queue1.value = this.queue_name[0] = event.name;\n                this.filterQueues();\n            break;\n            case \"queue2\":\n                this.selects.queue2.selected = this.queue_id[1] = event.id;\n                this.selects.queue2.value = this.queue_name[1] = event.name;\n                this.filterQueues();\n            break;\n            case \"queue3\":\n                this.selects.queue3.selected = this.queue_id[2] = event.id;\n                this.selects.queue3.value = this.queue_name[2] = event.name;\n                this.filterQueues();\n            break;\n        }\n    }\n\n    itemTapped(event) {\n        let tech = { tech_id: this.config.current.user.user_id, tech_name: this.config.current.user.firstname+\" \"+this.config.current.user.lastname };\n        this.nav.push(TimelogsPage, tech);\n    }\n\n    onSubmit(form) {\n\n            let string_id = \"\";\n            let string_is = \"\";\n            for (var i = 0; i < this.n; ++i) {\n                string_id += this.queue_id[i] + \", \";\n            }\n            string_id = string_id.slice(0,-2);\n            if (this.is_queue1)\n                string_is = this.queue_id[0] + \", \";\n            else \n                string_is = \"0, \";\n            if (this.is_queue2)\n                string_is += this.queue_id[1] + \", \";\n            else \n                string_is += \"0, \";\n            if (this.is_queue3)\n                string_is += this.queue_id[2] + \"\";\n            else \n                string_is += \"0\";\n\n            localStorage.setItem(\"queue_id\", string_id);\n            \n            localStorage.setItem(\"is_queue\", string_is);\n\n            \n            this.nav.alert('Profile was updated');\n        }\n    \n\n}","import {Page, Config, Nav, NavParams, Modal, ViewController} from 'ionic-angular';\nimport {TicketCreatePage} from '../modals/modals';\nimport {TicketDetailsPage} from '../ticket-details/ticket-details';\nimport {TicketsListComponent} from '../../components/tickets-list/tickets-list';\n\n@Page({\n    templateUrl: 'build/pages/queue-tickets/queue-tickets.html',\n    directives: [TicketsListComponent],\n})\nexport class QueueTicketsPage {\n\n\tqueue: any;\n\t\n    constructor(private nav: Nav, private navParams: NavParams, private view: ViewController, private config: Config) {\n        this.queue = this.navParams.data;\n  }\n\nonPageWillEnter() {\n            this.view.setBackButtonText('');\n    }\n    \n    addTicket() {\n        let myModal = Modal.create(TicketCreatePage, { 'tech': { id: this.queue.id, name: 'Queue ' + this.queue.fullname } });\n        myModal.onDismiss(data1 => {\n            if (data1)\n                setTimeout(() => {\n                    this.queue.tickets_count += 1;\n                    this.nav.push(TicketDetailsPage, data1);\n                }, 500);\n        });\n        this.nav.present(myModal);\n    }\n}\n","import {Page, Config, Nav} from 'ionic-angular';\nimport {TicketsPage} from '../tickets/tickets';\nimport {DataProvider} from '../../providers/data-provider';\nimport {AjaxSearchPage} from '../ajax-search/ajax-search';\nimport {QueuesListComponent, ActionButtonComponent} from '../../components/components';\n\n@Page({\n  templateUrl: 'build/pages/queues/queues.html',\n    directives: [QueuesListComponent, ActionButtonComponent]\n})\nexport class QueuesPage {\n\n    test: boolean;\n    term: string = '';\n    search_results: any;\n    queues: any;\n    items: any = [];\n    \n    constructor(private nav: Nav, private config: Config, private dataProvider: DataProvider) {\n  }\n    \n    onPageLoaded()\n    {\n        this.dataProvider.getQueueList().subscribe(\n            data => {\n                this.queues = data;\n                this.searchItems({value : this.term});\n                    }, \n            error => { \n                console.log(error || 'Server error');}\n        ); \n        \n    }\n    searchItems(searchbar) {\n        // Reset items back to all of the items\n        this.items = this.queues;\n        // set q to the value of the searchbar\n        let q = searchbar.value.toLowerCase();\n\n        // if the value is an empty string don't filter the search_results\n        if (q.trim() == '') {\n            return;\n        }\n\n        if (this.queues && q.length > 1)\n        {\n            this.items = this.queues.filter((queues) => queues.fullname.toLowerCase().indexOf(q) > -1);\n        }\n    }\n\n    clearSearch(searchbar?)\n    {\n        this.search_results = [];\n        if (searchbar) searchbar.value = \"\";\n    }\n        toggle(){\n        this.test = !this.test;\n        if (this.test){\n            setTimeout(() => {\n        var t = document.getElementsByClassName(\"searchbar-input\");\n        t = t[t.length - 1];\n        t && t.focus();\n        }, 500);\n        }\n    }\n  \n\n}\n","import {Page, Config, Nav, Events, Alert, Modal} from 'ionic-angular';\nimport {spicePixelTrackConversion, getappTrackConversion} from '../../directives/helpers';\nimport {DataProvider} from '../../providers/data-provider';\nimport {LoginPage} from '../login/login';\nimport {OrganizationsPage} from '../organizations/organizations';\nimport {PrivacyModal} from '../modals/modals';\n\n@Page({\n    templateUrl: 'build/pages/signup/signup.html',\n})\nexport class SignupPage {\n\n\tlogin: any = {};\n    is_force_registration: boolean = false;\n\n    constructor(private nav: Nav, private dataProvider: DataProvider, private config: Config, private events: Events) {\n    }\n\n    onPageLoaded()\n    { \n        //logout\n        this.is_force_registration = false;\n    }\n\n    getUrl(name){\n        this.login.name = name.value || \"\";\n        this.login.url = name.value ? name.value.toLowerCase().replace(/[^a-zA-Z0-9-]/g, '') : \"\";\n    }\n\n    onSignup(form) {\n        if (form.valid) { \n        \tlet data = {\n                \"name\": form.value.name, \n                \"email\": form.value.email, \n                \"url\": form.value.url, \n                \"is_force_registration\": this.is_force_registration,\n                \"is_force_redirect\": false,\n                \"firstname\": form.value.firstname,\n                \"lastname\": form.value.lastname,\n                \"password\": form.value.password,\n                \"password_confirm\": form.value.password_confirm,\n                \"how\": form.value.how,\n                \"note\": localStorage.getItem(\"isPhonegap\") === \"true\" ? \"registered by iPhone app\" : \"registered from m.sherpadesk.com\"\n            };\n\n            this.dataProvider.registerOrganization(data).subscribe(\n                data => {\n                    if (!data.api_token)\n                    {\n                        this.nav.setRoot(LoginPage,  null, { animation: \"wp-transition\" });\n                        return;\n                    }\n                    if (!data.organization || !data.instance)\n                    {\n                        this.nav.setRoot(OrganizationsPage, null, { animation: \"wp-transition\" });\n                        return;\n                    }\n\n                    //sets user role to user in local storage\n                    this.config.setCurrent({\n                        \"key\": data.api_token,\n                        \"org\": data.organization,\n                        \"instance\": data.instance\n                    });\n                    spicePixelTrackConversion();\n                    getappTrackConversion(form.value.url);\n                    this.nav.alert(\"Thanks for registration! You are redirected to new org now ...\");\n                    setTimeout(() => this.events.publish(\"config:get\", true), 3000);\n                }, \n                error => {\n                    if (~error.toString().indexOf(\"409\"))\n                    {\n                        this.presentConfirm();\n                    }\n                    else\n                        this.nav.alert(error, true);\n                }\n                ); \n        }\n        else\n            this.nav.alert('Please fill the form!', true);\n    }\n\n    presentConfirm() {\n        let alert = Alert.create({\n            title: \"Wait. Haven't I seen you?\",\n            subTitle: \"This email is already in use.\",\n            message: 'Would you like to',\n            cssClass: \"hello\",\n            buttons: [\n            {\n                text: 'Login',\n                role: 'cancel',\n                handler: () => {\n                    localStorage.setItem('username', this.login.email || \"\");\n                    alert.dismiss().then(() => {\n                        this.nav.setRoot(LoginPage, null, { animation: \"wp-transition\" });\n                    });\n                    return false;\n                }\n            },\n            {\n                text: 'Create New Org',\n                handler: () => {\n                    // user has clicked the alert button\n                    // begin the alert's dimiss transition\n                    let navTransition = alert.dismiss();\n                    this.is_force_registration = true;\n                    navTransition.then(() => {\n                        var form = {valid: true, value: this.login}\n                        this.onSignup(form);\n                    });\n                    return false;\n                }\n            }\n            ]\n        });\n        this.nav.present(alert);\n    }\n\n    gotoPrivacy(){\n        this.nav.present(Modal.create(PrivacyModal));\n    }\n}\n","import {Page, Nav} from 'ionic-angular';\nimport {DataProvider} from '../../providers/data-provider';\nimport {LoginPage} from '../login/login';\n\n@Page({\n    templateUrl: 'build/pages/skype/skype.html',\n})\nexport class SkypePage {\n\n\tis_skype_done: boolean = false;\n\n    constructor(private nav: Nav, private dataProvider: DataProvider) {\n    }\n\n    onPageLoaded()\n    { \n        this.onLoginSkype();\n    }\n\n    onLoginSkype() {\n        var skype = localStorage.getItem('skype') || \"\";\n        try {\n            var data = JSON.parse(skype);\n            if (data && typeof data === \"object\") {\n                this.dataProvider.loginSkype(data).subscribe(\n                    d => {\n                        localStorage.setItem('skype', \"\");\n                        this.is_skype_done = true;\n                        this.nav.alert(\"Done! You can continue to chat in Skype ...\");\n                    }, \n                    error => {\n                        localStorage.setItem('skype', \"\");\n                        this.nav.alert(error, true);\n                        console.log(\"error\", error);\n                    }\n                    );\n            }\n        }\n        catch (e) { \n            this.nav.alert('Cannot continue! Incorrect skype data', true);\n        }\n    }\n\n    \n    cancel_skype(){\n        localStorage.setItem('skype', \"\");\n        this.nav.setRoot(LoginPage, null, { animation: \"wp-transition\" });\n    }\n}\n","import {Page, Config, Nav, NavParams, Modal, ViewController} from 'ionic-angular';\nimport {TicketCreatePage} from '../modals/modals';\nimport {TicketDetailsPage} from '../ticket-details/ticket-details';\nimport {TicketsListComponent} from '../../components/tickets-list/tickets-list';\nimport {TechniciansListComponent} from '../../components/techs-list/techs-list';\n\n@Page({\n    templateUrl: 'build/pages/tech-tickets/tech-tickets.html',\n    directives: [TicketsListComponent],\n})\nexport class TechTicketsPage {\n\n\ttechnician: any;\n\t\n    constructor(private nav: Nav, private navParams: NavParams, private view: ViewController, private config: Config) {\n        this.technician = this.navParams.data;\n         console.log(this.technician);\n  }\n\nonPageWillEnter() {\n            this.view.setBackButtonText('');\n    }\n    \n    addTicket() {\n        let myModal = Modal.create(TicketCreatePage, { 'tech': { id: this.technician.id, name: this.technician.lastname + \" \"+ this.technician.firstname } });\n        myModal.onDismiss(data1 => {\n            if (data1)\n                setTimeout(() => {\n                    this.technician.tickets_count += 1;\n                    this.nav.push(TicketDetailsPage, data1);\n                }, 500);\n        });\n        this.nav.present(myModal);\n    }\n}\n","import {Page, Config, Nav} from 'ionic-angular';\nimport {DataProvider} from '../../providers/data-provider';\nimport {TechniciansListComponent, ActionButtonComponent} from '../../components/components';\n\n\n@Page({\n  templateUrl: 'build/pages/technicians/technicians.html',\n    directives: [TechniciansListComponent, ActionButtonComponent],\n})\nexport class TechniciansPage {\n\n    count: number;\n    is_empty: boolean;\n    busy: boolean;\n    params: any;\n    pager: any;\n    term: string = '';\n    test: boolean;\n    search_results: any;\n    items: any = [];\n    technicians: Array<any>;\n    LIMIT: number = 500;\n\n    constructor(private nav: Nav, private config: Config, private dataProvider: DataProvider) {\n  }\n    \n    onPageLoaded()\n    {\n        this.pager = { page: 0, limit: this.LIMIT };\n\n        var timer = setTimeout(() => {\n            this.busy = true;\n        }, 500);\n\n        this.getItems(null, timer);\n    }\n\n    getItems(infiniteScroll, timer) {\n        this.dataProvider.getTechniciansList( this.pager, true, true).subscribe(\n            data => {\n                                if (timer) {\n                    clearTimeout(timer);\n                    this.busy = false;\n                    this.technicians = data;\n                    //this.config.setStat(\"technicians\", data.length);\n\n                }\n                else\n                {\n                    this.technicians.push(...data);\n                    //TODO: how do get technicians stat\n                    this.config.current.stat.technicians += data.length;\n                }\n\n                if (infiniteScroll) {\n                    infiniteScroll.enable(data.length == this.LIMIT);\n                    infiniteScroll.complete();\n                }\n                this.count = data.length;\n                this.searchItems({value : this.term})\n            },\n            error => {\n                if (timer) {\n                    clearTimeout(timer);\n                    this.busy = false;\n                }\n                console.log(error || 'Server error');\n            }\n        );\n    }\n\n    searchItems(searchbar) {\n        // Reset items back to all of the items\n        this.items = this.technicians;\n\n        // set q to the value of the searchbar\n        let q = searchbar.value.toLowerCase();\n\n        // if the value is an empty string don't filter the search_results\n        if (q.trim() == '' || this.busy) {\n            return;\n        }\n\n        if (this.technicians && q.length > 1)\n        {\n            this.items = this.technicians.filter((technician) => technician.FullName.toLowerCase().indexOf(q) > -1);\n        }\n    }\n\n    clearSearch(searchbar?)\n    {\n        this.search_results = [];\n        this.busy = false;\n        if (searchbar) searchbar.value = \"\";\n    }\n\n    doInfinite(infiniteScroll) {\n        if (this.count < this.LIMIT) {\n            infiniteScroll.enable(false);\n            infiniteScroll.complete();\n            return;\n        }\n        this.pager.page += 1;\n        this.getItems(infiniteScroll, null);\n    }\n        toggle(){\n        this.test = !this.test;\n        if (this.test){\n            setTimeout(() => {\n        var t = document.getElementsByClassName(\"searchbar-input\");\n        t = t[t.length - 1];\n        t && t.focus();\n        }, 500);\n        }\n    }\n}\n","import {Page, Config, Nav, NavParams, Modal, Alert} from 'ionic-angular';\nimport {FORM_DIRECTIVES, Validators} from '@angular/common';\nimport {AppSite} from '../../providers/config';\nimport {DataProvider} from '../../providers/data-provider';\nimport {TicketProvider} from '../../providers/ticket-provider';\nimport {openURL, getDateTime, htmlEscape, getCurrency, getFullName, fullapplink, mailtolink, parseXml, FileUrlHelper} from '../../directives/helpers';\nimport {PostsListComponent} from '../../components/posts-list/posts-list';\nimport {SelectListComponent}  from '../../components/select-list/select-list';\nimport {MultiSelectComponent}  from '../../components/multi-select/multi-select';\nimport {ClassListComponent} from '../../components/class-list/class-list';\nimport {LocationListComponent} from '../../components/location-list/location-list';\nimport {CloseTicketModal, TransferTicketModal, ChangeUserModal} from '../../pages/modals/modals';\nimport {TimelogPage} from '../../pages/timelog/timelog'; \nimport {ExpenseCreatePage} from '../../pages/expense-create/expense-create';\nimport {GravatarPipe, LinebreaksPipe, DaysoldPipe, DaysagoPipe, HtmlsafePipe} from '../../pipes/pipes';\nimport {AddFilesModal} from '../../pages/modals/add-files/add-files';\nimport {TodoListComponent} from '../../components/todo-list/todo-list';\nimport {Component, ElementRef, Input, OnInit, ViewChild, Renderer, Output, EventEmitter, forwardRef} from \"@angular/core\";\nimport {IONIC_DIRECTIVES, Loading} from 'ionic-angular';\nimport {ApiSite} from '../../providers/config';\nimport {CustomFieldComponent} from '../../components/custom-field/custom-field';\n/**\n * Upload button component.\n *\n * As native input elements with type file are diffcult to style, it is common practice to hide them\n * and trigger the needed events manually as it done here. A button is is used for user interaction,\n * next to the hidden input.\n *\n *  <code>\n *    @Component({\n *      directives: [UploadButton],\n *    })\n *    class UploadComponent {\n *        private addCallback: Function = (files: FileList) => {...};\n *        private icon: String = \"add-circle\";\n *    }\n *\n *      <upload-button\n *          (filesUploaded)=\"uploadFile($event)  <!-- the callback function executes after adding files -->\n *          [btnStyle]=\"icon\"               <!-- the ionic-icon name to use for button -->\n *          [logCallback]=\"console.debug\">  <!-- (optional) if needed a logger can be set -->\n *          [allowMultiple]=\"false\">        <!-- (optional) disable multiple file upload -->\n *      </upload-button>\n *  </code>\n */\n @Component({\n   selector: \"upload-button\",\n   directives: [IONIC_DIRECTIVES],\n   templateUrl: 'build/components/upload-button/upload-button.html',\n })\n export class UploadButtonComponent {\n\n  /**\n   * Native upload button (hidden)\n   */\n   @ViewChild(\"input\")\n   private nativeInputBtn: ElementRef;\n\n  /**\n   * The callback executed when files are selected, set by parent\n   */\n   @Output() public filesSelected: EventEmitter<any> = new EventEmitter(false);\n\n  /**\n   * The callback executed when files are uploaded, set by parent\n   */\n   @Output() public filesUploaded: EventEmitter<any> = new EventEmitter(false);\n\n /*** The destination of file \n      { ticket: \"\",\n        account: \"\",\n        asset: \"\",\n        post_id: 0 \n      }\n      */\n      @Input() private fileDest: String;\n\n\n      /*** The existing files\n        to pevent dup filenames\n        */\n        @Input() private filesExist: Array<any>;\n\n  /**\n   * The callback executed when button pressed, set by parent\n   */\n   @Input() private btnStyle: String;\n\n  /**\n   * (Optional) Can be used to disable adding multiple files\n   */\n   @Input() private allowMultiple: boolean = true;\n\n  /**\n   * String used for control multiple uploads\n   */\n   private multi: string = \"multiple\";\n   private error: string = \"\";\n   private files: any = [];\n   private in_progress: any;\n   private MAX_SIZE : number = 104857600; // 100 MB\n\n\n  /**\n   * (Optional) if needed a logger can be used\n   */\n   @Input()\n   private logCallback: Function;\n\n  /**\n   * Constructor\n   *\n   * @param  {Renderer} renderer for invoking native methods\n   * @param  {Log}      logger instance\n   */\n   constructor(private nav: Nav, private renderer: Renderer, private config: Config) {\n     if (this.allowMultiple === false) {\n       this.multi = \"\";\n     }\n   }\n\n   ngOnInit() {\n     //console.log(\"######################i nininiini\");\n   }\n\n   public upload (url: string, files: File[]): Promise<any> {\n     return new Promise((resolve, reject) => {\n\n       let xhr:XMLHttpRequest = new XMLHttpRequest();\n\n       xhr.onreadystatechange = () => {\n         if (xhr.readyState === 4) {\n           if (xhr.status === 200) {\n             resolve(xhr.response); //JSON.parse(xhr.response)\n           } else {\n             reject(xhr.response);\n           }\n         }\n       };\n\n       let token = this.config.getCurrent(\"key\"),\n       org = this.config.getCurrent(\"org\"), // localStorage.getItem('userOrgKey'),\n       inst = this.config.getCurrent(\"instance\");// localStorage.getItem('userInstanceKey');\n\n       xhr.open('POST', url+\"files/\", true);\n       xhr.setRequestHeader(\"Authorization\", \"Basic \" + btoa(`${org}-${inst}:${token}`));\n       //xhr.withCredentials = true;\n       //console.log(this.fileDest);\n       let formData: FormData = new FormData();\n       for ( var key in this.fileDest ) {\n         formData.append(key, this.fileDest[key]);\n       }\n       for (let i = 0; i < files.length; i++) {\n         formData.append(\"uploads[]\", files[i], files[i].upload_name);\n       }\n       xhr.send(formData);\n     });\n   }\n\n   onUpload(is_Close?) {\n     //console.log(\"upload start\");\n     if (!this.files.length) {\n       this.filesUploaded.next(\"ok\" + \" no files \" + (is_Close ? \" on close\" : \"\"));\n       return;\n     }\n     //proof double click\n     if (this.in_progress && Date.now() - this.in_progress < 1500) {return;}\n     this.in_progress = Date.now();\n\n     let loading = null;\n\n     if (this.files.length >= 2 || this.files[0].size > 20000)\n     {\n       loading = Loading.create({\n         content: \"Uploading file(s)...\",\n         //duration: 2000,\n         dismissOnPageChange: true\n       });\n       this.nav.present(loading);\n     }\n\n     this.upload(ApiSite, this.files).then((data) => {\n       this.reset();\n       if (loading) loading.dismiss();\n       this.filesUploaded.next(\"ok \" + data + (is_Close ? \" on close\" : \"\"));\n     }).catch((ex) => {\n       if (loading) \n       {\n         setTimeout(() => loading.dismiss(), 1000);\n       }\n       console.error('Error uploading files', ex);\n       this.filesUploaded.next(\"error \" + ex);\n       this.nav.alert('Error uploading files! Cannot add files! Please try again later ... or try to upload one file or check your internet connection', true);\n     });\n   }\n\n   reset(file?)\n   {\n     if (file)\n     {\n       this.files = this.files.filter(item => item !== file);\n       this.filesSelected.next(this.files.map(item => item.upload_name));\n     }\n     if (!file || !this.files.length) {\n       this.error = \"\";\n       this.files = [];\n       this.nativeInputBtn.nativeElement.value = '';\n     }\n\n   }\n\n  /**\n   * Callback executed when the visible button is pressed\n   *\n   * @param {Event} event should be a mouse click event\n   */\n   public callback(event: Event): void {\n     this.log(\"UploadButton: Callback executed triggerig click event\", this.nativeInputBtn.nativeElement);\n\n     // trigger click event of hidden input\n     let clickEvent: MouseEvent = new MouseEvent(\"click\", {bubbles: true});\n     this.renderer.invokeElementMethod(\n       this.nativeInputBtn.nativeElement, \"dispatchEvent\", [clickEvent]);\n   }\n\n  /**\n   * Callback which is executed after files from native popup are selected.\n   *\n   * @param {Event} event change event containing selected files\n   **/ \n   filesAdded(event: Event) {\n     this.log(\"UploadButton: Added files\", this.nativeInputBtn.nativeElement.files);\n     let len = this.nativeInputBtn.nativeElement.files.length;\n     let checkfiles: any = [];\n     this.error = \"\";\n     if (len){\n       let selNames={}, existNames={};\n       if (this.filesExist)\n         for (let j = 0; j < this.filesExist.length; j++) {\n           existNames[this.filesExist[j].name.trim()] = this.filesExist[j].size;\n         }\n         for (let i = 0; i < len; i++) {\n           let file = this.nativeInputBtn.nativeElement.files[i];\n           if (this.isFile(file)){\n             if (file.size > this.MAX_SIZE)\n               this.error += `File ${file.name} will be skipped. It is more 100 MB<br>`;\n             else if (file.size === 0)\n               this.error += `File ${file.name} will be skipped. It has zero size <br>`;\n             else if (!file.name.trim())\n               this.error += `File #${i} will be skipped. It has empty name<br>`;\n             else\n             {\n               let new_name = file.name.trim();\n               //detect aleady uploaded dup\n               if (file.size != (existNames[new_name.trim()] || file.size))\n                 new_name = this.add_tag(new_name,file.size);\n               //detect selected dup\n               if (file.size != (selNames[new_name] || file.size))\n                 new_name = this.add_tag(new_name,file.size);\n\n               file.upload_name = new_name;\n               checkfiles.push(file);\n               selNames[new_name] = file.size;\n             }\n           }\n           else \n           {\n             this.error += `File #${i} will be skipped. It is empty<br>`;\n           }\n         }\n       }\n       this.files = checkfiles;\n       this.filesSelected.next(this.files.map(item => item.upload_name));\n     }\n\n     add_tag(name, tag) {\n       var index = name.lastIndexOf(\".\"),\n       len = name.length;\n       return name.substr(0,index)+\"_\"+tag+name.substr(index,len);\n     }\n\n  /**\n   * (Optional) If needed for debugging\n   *\n   * @param {any[]} ...args console.log like paramter <code>log(\"Error\", obj, 1)</code>\n   */\n   private log(...args: any[]): void {\n     if (this.logCallback) {\n       console.log(args);\n       //this.logCallback(args);\n     }\n   }\n\n   humanizeBytes(bytes: number) {\n     if (bytes === 0) {\n       return '0 Byte';\n     }\n     let k = 1024;\n     const sizes: string[] = ['Bytes', 'KB', 'MB', 'GB', 'TB', 'PB'];\n     let i: number = Math.floor(Math.log(bytes) / Math.log(k));\n\n     return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];\n   }\n\n   isImage(url) {\n     if (!url || url.trim().match(/(jpeg|jpg|gif|png|ico)$/i) === null)\n       return \"md-document\";\n     return  \"md-image\";\n   }\n\n   isFile(file: any): boolean {\n     return file !== null && file instanceof Blob;\n   }\n\n }\n\n\n @Page({\n   templateUrl: 'build/pages/ticket-details/ticket-details.html',\n   directives: [TodoListComponent, CustomFieldComponent, PostsListComponent, forwardRef(() => SelectListComponent), forwardRef(() => MultiSelectComponent), forwardRef(() => ClassListComponent), forwardRef(() => LocationListComponent), UploadButtonComponent],\n   pipes: [GravatarPipe, LinebreaksPipe, DaysoldPipe, DaysagoPipe, HtmlsafePipe],\n })\n export class TicketDetailsPage {\n\n   counts: any;\n   ticket: any = {};\n   account_id: number;\n   percentage_budget: any;\n   userphone: string;\n   customfields: any = [];\n   technicians: any = [];\n   users: any = [];\n   subject: any;\n   next_step: any;\n   next_step_date: any;\n   pager: any;\n   details_tab: string;\n   active: boolean;\n   waiting_response: boolean = false;\n   is_techs_only: boolean = false;\n   he: any;\n   techname: string;\n   username: string;\n   selects: any;\n   select_button: any;\n   ticketnote: string;\n   attachments: any;\n   is_editworkpad: boolean = true;\n   disable: boolean = false;\n   cachename: string = \"\";\n   closed_index: number = 0;\n   fileDest: any = {ticket: \"\"};\n   files: any = [];\n   is_showlogs: boolean = false;\n   showSubjChange: boolean;\n   posts: any = [\n   {\n     \"id\": 0,\n     \"ticket_key\": \"\",\n     \"user_id\": 0,\n     \"user_email\": \" \",\n     \"user_firstname\": \" \",\n     \"user_lastname\": \" \",\n     \"record_date\": \"2016-01-01T00:00:00.0000000\",\n     \"log_type\": \"Initial Post\",\n     \"note\": \" \",\n     \"workpad\": \" \",\n     \"ticket_time_id\": 0,\n     \"sent_to\": \" \",\n     \"is_waiting\": false,\n     \"sla_used\": 0\n   }];\n\n   constructor(private nav: Nav, private navParams: NavParams, private ticketProvider: TicketProvider, private dataProvider: DataProvider, private config: Config) {\n   }\n\n   onPageLoaded() {\n\n     this.ticket.customfields = [];\n     this.active = true;\n     this.he = this.config.getCurrent(\"user\");\n     this.details_tab = \"Reply\";\n     let data = this.navParams.data || {};\n     this.cachename = data.cachename;\n     this.posts[0].record_date = data.updated_time || this.posts[0].record_date;\n\n     this.is_showlogs = false;\n     this.ticketnote = \"\";\n\n     this.fileDest = {ticket: data.key};\n\n     this.getPosts(data.key);\n\n     this.processDetails(data, true);\n   }\n\n   initSelects(data){\n     this.username = getFullName(data.user_firstname, data.user_lastname, data.user_email);\n     this.techname = getFullName(data.technician_firstname || data.tech_firstname, data.technician_lastname || data.tech_lastname, data.technician_email || data.tech_email);\n     let contract_id = data.default_contract_id || 0;\n     let contract_name = data.default_contract_name;\n    \n     this.select_button = {\n       \"tech\": {\n         name: \"Tech\",\n         value: \"Transfer \"+this.config.current.names.ticket.s,\n         selected: data.tech_id,\n         url: \"technicians\",\n         hidden: false\n       },\n     };\n     this.selects = {\n       \"altusers\" : {\n         name: \"Alt Users\", \n         value: this.username,\n         selected: data.user_id,\n         url: \"users\",\n         hidden: false\n       },\n       \"location\": {\n         name: \"Location\",\n         value: data.location_name || \"( Not Set )\",\n         selected: data.location_id || 0,\n         url: `locations?account=${this.account_id}&limit=1000`,\n         hidden: !this.config.current.is_location_tracking\n       },\n       \"alttechs\": {\n         name: \"Alt Techs\",\n         value: this.techname,\n         selected: data.tech_id,\n         url: \"technicians\",\n         hidden: false\n       },\n       \"project\": {\n         name: \"Project\",\n         value: data.project_name || \"( Not Set )\",\n         selected: data.project_id || 0,\n         url: `projects?account=${this.account_id}&is_with_statistics=false`,\n         hidden: !this.config.current.is_project_tracking\n       },\n       \"contract\" : { \n         name: \"Contract\", \n         value: contract_name || \"( Not Set )\",\n         selected: contract_id || this.config.getRecent(\"contract\").selected || 0,\n         url: `contracts?account_id=${this.account_id}&for_time_logs=false`,\n         hidden: !this.config.current.is_invoice,\n         is_default: true    \n                },\n       \"submissions\" : { \n         name: \"Submission Category\", \n         value: data.submission_category || \"( Not Set )\",\n         selected: data.submission_category || 0,\n         url: `submissions`,\n         hidden: !this.config.current.is_submission_category,\n         is_disabled: false  \n                },\n       \"categories\" : { \n         name: \"Creation Category\", \n         value: data.creation_category_name || \"( Not Set )\",\n         selected: data.creation_category_id || 0,\n         url: `categories`,\n         hidden: !this.config.current.is_creation_categories,\n         is_disabled: false   \n                },\n       \"level\": {\n         name: \"Level\",\n         value: data.level_name ? (data.level + \" - \" + data.level_name) : \"( Not Set )\",\n         selected: data.level || 0,\n         url: \"levels\",\n         hidden: !this.config.current.is_ticket_levels || (this.config.current.is_restrict_tech_escalate && !this.config.current.user.is_admin)\n       },\n       \"priority\": {\n         name: \"Priority\",\n         value: data.priority_name ? (data.priority + \" - \" + data.priority_name) : \"( Not Set )\",\n         selected: data.priority_id || 0,\n         url: \"priorities\",\n         hidden: !this.config.current.is_priorities_general\n       },\n       \"class\": {\n         name: \"Class\",\n         value: data.class_name || \"( Not Set )\",\n         selected: data.class_id || 0,\n         url: \"classes\",\n         hidden: !this.config.current.is_class_tracking\n       }\n     };\n\n     this.selects.account = {\n       name: \"Account\", \n       value: (data.account || {}).name || data.account_name || this.he.account_name,\n       selected: this.account_id,\n       url: \"accounts?is_with_statistics=false&limit=500\",\n       hidden: !this.config.current.is_account_manager\n     };\n\n    // setTimeout(() => {\n   //            this.getContractor(account_id);\n    //             }, 10000);\n   }\n\n   uploadedFile(event)\n   {\n     //console.log(\"Uploaded:\", event);\n     if (event.indexOf(\"ok\") == 0)\n     {\n       this.onSubmit(!this.config.current.user.is_techoradmin && this.ticket.status != 'Closed' && ~event.indexOf(\"close\")); \n     }\n   }\n\n   selectedFile(event)\n   {\n     this.files = event;\n     this.ticketnote = this.ticketnote.trim(); \n     if (event.length && !this.ticketnote)\n     {\n       this.ticketnote = \"  \";\n     }\n   }\n\n   getPosts(key)\n   {\n     this.ticketProvider.getTicketDetails(key).subscribe(\n       data => {\n         this.processDetails(data);\n       },\n       error => {\n         console.log(error || 'Server error');\n         this.redirectOnEmpty();\n       }\n       );\n   }\n\n   getProfile(user_id)\n   {\n     this.ticketProvider.getUserProfile(user_id).subscribe(\n       data => {\n         this.userphone = data.mobile_phone || data.phone;\n       },\n       error => {\n         console.log(error || 'Server error');\n       }\n       );\n   }\n\n   getCustomfield(class_id)\n   {\n     if (class_id == 0)\n           return this.customfields = [];\n     this.ticketProvider.getCustomfields(class_id, this.pager).subscribe(\n       data => {\n         if (data.length == 0){\n           this.customfields = data;\n           return;\n         }\n         if (this.ticket.customfields.length != data.length) {\n           this.customfields = data;\n         return;\n         }\n         for (var n = 0; n<this.ticket.customfields.length; n++)\n         { \n           data.filter(tc => tc.id.toString() == this.ticket.customfields[n].id.toString())[0].value = this.ticket.customfields[n].value;\n         }\n         this.customfields = data;\n       },\n       error => {\n         console.log(error || 'Server error');\n       }\n       );\n   }\n\n   processDetails(data, isShortInfo?)\n   {\n     if (!isShortInfo && (!data || !data.ticketlogs || data.ticketlogs == 0))\n     { \n       this.redirectOnEmpty();\n       return;\n     }\n     \n     this.ticket = data;\n     this.is_editworkpad = !(this.ticket.workpad || \"\").length;\n     this.ticket.customfields = [];  \n     this.technicians = data.technicians;\n     this.users = data.users;\n     if (this.ticket.budget_hours != 0){\n       this.percentage_budget = (this.ticket.total_hours / this.ticket.budget_hours) * 100;\n       this.percentage_budget = this.getFixed(this.percentage_budget);\n     }\n     this.ticket.mailto = `r.${this.config.current.org}.${this.config.current.instance}.${data.key}@app.sherpadesk.com`;\n     this.account_id = data.account_id || -1;\n     this.initSelects(data);\n\n     if (data.ticketlogs && data.ticketlogs.length > 0)\n       this.posts = data.ticketlogs; \n\n     if (!isShortInfo)\n     {\n       this.attachments = (data.attachments || []).slice().reverse();\n\n       let xml = parseXml(this.ticket.customfields_xml);\n       if (xml)\n       {\n         let t=[];\n         for (var n = xml.documentElement.firstChild; n; n = n.nextSibling)\n         { \n           t.push({ \"id\": n.attributes[0].nodeValue, \"name\": n.firstChild.innerHTML.replace(\"&amp;amp;\",\"&amp;\"), \"value\": (n.firstChild.nextSibling.innerHTML || \"\").replace(\"&amp;amp;\",\"&amp;\")}); \n         }\n         this.ticket.customfields = t;\n         this.getCustomfield(data.class_id);\n       }\n     }\n     if (data.user_id){\n      this.getProfile(data.user_id);\n     }\n   }\n\n   redirectOnEmpty(){\n     this.nav.alert('Incorrect ticket. Going back...', true);\n\n     setTimeout(() => {\n       this.nav.pop();\n     }, 1000);\n   }\n\n   saveSelect(event){\n     let name = event.type;\n     if (name == \"creationcategory\")\n            name = \"categories\";\n     if (name == \"submissioncategory\")\n            name = \"submissions\";\n     this.selects[name].selected = event.id;\n     this.selects[name].value = event.name || \"Default (nothing to select)\";\n     //if (this.selects[name].value)\n     let contract_id = this.selects.contract.selected;\n\n      switch (name) {\n            case \"account\" :\n              if (this.ticket.account_id == event.id){ \n                this.account_id = this.selects.account.selected;\n              break;\n              }\n                this.selects.project.url = `projects?account=${event.id}&is_with_statistics=false`;\n                this.selects.project.value = \"Default\";\n                this.selects.project.selected = 0;\n                this.account_id = event.id;\n\n                this.selects.contract.url = `contracts?account_id=${event.id}&for_time_logs=false`;\n                this.selects.contract.value = \"Default\";\n                this.selects.contract.selected = 0;\n                contract_id = 0;\n\n                this.selects.location.url = `locations?account=${event.id}&limit=1000`;\n                this.selects.location.value = \"Default\";\n                this.selects.location.selected = 0;\n                break;\n            case \"class\" :\n              if (this.ticket.class_id == event.id) \n              break;\n              this.getCustomfield(event.id);\n              break;\n            \n        }\n   }\n\n   saveCustomfield(event){\n     this.customfields.filter(tc => tc.id == event.id)[0].value = event.value;\n   }\n\n   onSubmit(isClose?) {\n     //proof double click\n     if (this.ticket.in_progress && Date.now() - this.ticket.in_progress < 1500) {return;}\n     this.ticket.in_progress = Date.now();\n\n     var post = htmlEscape(this.ticketnote.trim()).substr(0, 5000);\n\n     if (isClose && this.files.length || !isClose)\n     {\n       this.ticketProvider.addTicketPost(this.ticket.id, post, this.files, this.waiting_response, this.is_techs_only).subscribe(\n         data => {\n           if (!isClose)\n           { \n             this.nav.alert('New post added :)');\n             this.ticketnote = \"\";\n             this.active = false;\n             this.waiting_response = false; //!this.waiting_response;\n             this.is_techs_only = false; //!this.is_techs_only;\n             setTimeout(() => this.active = true, 0);\n             this.getPosts(this.ticket.key);\n           }\n           this.files = [];\n         },\n         error => {\n           this.nav.alert(error, true);\n           console.log(error || 'Server error');\n         }\n         );\n     }\n     if (isClose)\n     {\n       this.onClose(true);\n     }\n   } \n\n   saveNote(form) {\n     var note = htmlEscape((form.value || \"\").trim()).substr(0, 5000);\n     if (note != (this.ticket.note || \"\").trim()) {\n       this.ticketProvider.addTicketNote(this.ticket.id, note).subscribe(\n         data => this.saveNoteSuccess(note),\n         error => {\n           this.nav.alert(error, true);\n           console.log(error || 'Server error');\n         }\n         );\n     }\n     else\n       this.saveNoteSuccess(note);\n   }\n\n   getFixed(value){\n        return Number(value || \"0\").toFixed(0).toString();\n    }\n\n   saveWorkpad(form) {\n     var workpad = (form.value || \"\").trim().replace(/\\n/g, \"<p>\"); \n     if (workpad != (this.ticket.workpad || \"\").trim()) {\n       this.ticketProvider.addTicketWorkpad(this.ticket.id, workpad).subscribe(\n         data => this.saveWorkpadSuccess(workpad),\n         error => {\n           this.nav.alert(error, true);\n           console.log(error || 'Server error');\n         }\n         );\n     }\n     else\n       this.saveWorkpadSuccess(workpad);\n   }\n\n    openAlert(name, value) {\n\n    if (!value || value.length < 22) \n    return;        \n\n     let alert = Alert.create({\n         title: name,\n         subTitle: value,\n         buttons: [\n         {\n             text: 'Ok',\n             role: 'cancel',\n         }]\n         });\n\n     this.nav.present(alert);\n     }\n\n   saveWorkpadSuccess(workpad){\n     this.nav.alert('Workpad saved :)');\n     this.ticket.workpad = (workpad || \"\").trim();\n     this.is_editworkpad = !this.ticket.workpad.length;\n   }\n\n   saveNoteSuccess(note){\n     this.nav.alert('Note saved :)');\n     this.ticket.note = (note || \"\").trim();\n   }\n\n   onClose(isForce?) {\n     //proof double click\n     if (!isForce && this.ticket.in_progress && Date.now() - this.ticket.in_progress < 1500) {return;}\n     this.ticket.in_progress = Date.now();\n\n     var post = htmlEscape(this.ticketnote.trim()).substr(0, 5000);\n\n     let data = {\n       \"status\": \"closed\",\n       \"note_text\": post,\n       \"is_send_notifications\": true,\n       \"resolved\": true,\n       \"resolution_id\": 0,\n       \"confirmed\": true,\n       \"confirm_note\": \"\"\n\n     };\n\n     this.ticketProvider.closeOpenTicket(this.ticket.key, data).subscribe(\n       data => {\n         this.update_tlist_logic(true);\n         this.nav.alert(this.config.current.names.ticket.s + ' has been closed :)');\n         this.ticket.status = \"Closed\";\n         if (post.length){\n           this.ticketnote = \"\";\n           this.active = false;\n           setTimeout(() => this.active = true, 0);\n           this.files = [];\n           this.processDetails(data);\n         }\n       },\n       error => {\n         this.nav.alert(error, true);\n         console.log(error || 'Server error');\n       }\n       );\n   }\n\n    onHold() {\n\n      if (this.ticket.status == \"OnHold\")\n      {\n        this.reopenTicket();\n        return;\n      }\n\n      let prompt = Alert.create({\n             title: 'Place On Hold #' + this.ticket.number,\n             inputs: [\n             {\n                 name: 'note',\n                 placeholder: 'Note'\n             },\n             ],\n             buttons: [\n             {\n                 text: 'Cancel',\n                 handler: data => {\n                     console.log('Cancel clicked');\n                 }\n             },\n             {\n                 text: 'Place On Hold',\n                 handler: data => {\n\n                     var post = htmlEscape(data.note.trim()).substr(0, 4000);\n\n                     let data1 = {\n                       \"status\": \"onhold\",\n                       \"note_text\": post\n                     };\n\n                     this.ticketProvider.closeOpenTicket(this.ticket.key, data1).subscribe(\n                       data => {\n                         this.ticket.status = \"OnHold\";\n                         this.update_tlist_logic(false);\n                         this.nav.alert(this.config.current.names.ticket.s + ' placed On Hold :)');\n                       },\n                       error => {\n                         this.nav.alert(error, true);\n                         console.log(error || 'Server error');\n                       }\n                       );\n                 }\n             }\n             ]\n         });\n\n         this.nav.present(prompt);\n   }\n\n   getXML()\n   {\n      var customfield_xml = \"\";\n          for (var n = 0;  n < this.customfields.length; n++)\n         { \n           if (this.customfields[n].required && this.customfields[n].value == \"\" || this.customfields[n].value == \"0001-01-01T00:00:00.0000000\"){\n             this.nav.alert(`Please add value to custom field: ${this.customfields[n].name}`, true);\n             return customfield_xml = \"\";\n           }\n           customfield_xml = customfield_xml + `<field id=\"${this.customfields[n].id}\"><caption>${this.customfields[n].name}</caption><value>${this.customfields[n].value}</value></field>`;\n         }\n      return \"<root>\" + customfield_xml + \"</root>\";  \n\n   }\n\n   onUpdate() {\n     //proof double click\n     if (this.ticket.in_progress && Date.now() - this.ticket.in_progress < 1500) {return;}\n     \n     this.ticket.in_progress = Date.now();\n     var customfields_xml = this.getXML();\n     if (customfields_xml == \"\") {\n       return;\n     }\n     let data = {\n       \"class_id\": this.selects.class.selected,\n       \"level_id\": this.selects.level.selected,\n       \"priority_id\": this.selects.priority.selected,\n       \"project_id\": this.selects.project.selected,\n       \"location_id\": this.selects.location.selected,\n       \"account_id\": this.selects.account.selected,\n       \"tech_id\": this.selects.alttechs.selected,\n       \"user_id\": this.selects.altusers.selected,\n       \"customfields_xml\": customfields_xml,\n       \"default_contract_id\": this.selects.contract.selected,\n       \"default_contract_name\": this.selects.contract.value,\n       \"creation_category_id\": this.selects.categories.selected,\n       \"creation_category_name\": this.selects.categories.value,\n       \"submission_category\": this.selects.submissions.value\n     };\n\n     this.ticketProvider.closeOpenTicket(this.ticket.key, data).subscribe(\n       data => {\n         this.nav.alert(this.config.current.names.ticket.s + ' was successfully updated :)');\n         this.processDetails(data);\n       },\n       error => {\n         console.log(error || 'Server error');\n       }\n       );\n   }\n\n   \n\n   pickUp() {\n\n     let data = {\n       \"action\": \"pickup\",\n       \"note_text\": \"\"\n     };\n\n     //proof double click\n     if (this.ticket.in_progress && Date.now() - this.ticket.in_progress < 1500) {return;}\n     this.ticket.in_progress = Date.now();\n\n     this.ticketProvider.closeOpenTicket(this.ticket.key, data).subscribe(\n       data => {\n         this.nav.alert(this.config.current.names.ticket.s + ' pickup was Succesfull!');\n         this.techname = this.ticket.tech_firstname = getFullName(this.he.firstname, this.he.lastname, this.he.email);\n         this.ticket.tech_lastname = this.ticket.tech_email = \"\";\n         //this.selects.tech.selected = this.he.user_id;\n         this.processDetails(data);\n       },\n       error => {\n         this.nav.alert(error, true);\n         console.log(error || 'Server error');\n       }\n       );\n   }\n\n   onDelete(file){\n     let data = {\n       \"ticket\": this.ticket.key,\n       \"file_id\": file.id\n     };\n\n     this.dataProvider.deleteFile(data).subscribe(\n       data => {\n         this.attachments = this.attachments.filter(item => item !== file);\n         this.getPosts(this.ticket.key);\n         this.nav.alert(`File ${file.name} deleted!`);\n       },\n       error => {\n         this.nav.alert(error, true);\n         console.log(error || 'Server error');\n       }\n       );\n   }\n\n   reopenTicket() {\n     let data = {\n       \"status\": \"open\",\n       \"note_text\": \"\"\n     };\n\n     this.ticketProvider.closeOpenTicket(this.ticket.key, data).subscribe(\n       data => {\n         this.update_tlist_logic(false);\n         this.nav.alert(this.config.current.names.ticket.s + ' has been Reopened!');\n         this.ticket.status = \"Open\";\n       },\n       error => {\n         this.nav.alert(error, true);\n         console.log(error || 'Server error');\n       }\n       );\n   }\n\n   update_tlist_logic(is_close)\n   {\n     if (this.cachename){\n       if(~this.cachename.indexOf(\"closed\")){\n         is_close = !is_close;\n         this.closed_index = 0;\n       }\n       try{\n       if (is_close) {\n         this.closed_index = this.ticketProvider._dataStore[this.cachename].findIndex(tkt => tkt.key === this.ticket.key);\n         this.ticketProvider._dataStore[this.cachename].splice(this.closed_index,1);\n         if(~this.cachename.indexOf(\"closed\"))\n         {\n           this.ticketProvider._dataStore[this.cachename.replace(\"closed\", \"open\")].splice(0, 0, this.ticket);\n         }\n       }\n       else\n       {\n         this.ticketProvider.getTicketsList(this.cachename, \"\", \"\",{ \"limit\": 25 });\n         this.ticketProvider._dataStore[this.cachename].splice(this.closed_index, 0, this.ticket);\n         let index = this.ticketProvider._dataStore[this.cachename].findIndex(tkt => tkt.key === this.ticket.key);\n         if(~this.cachename.indexOf(\"closed\")){\n           this.ticketProvider._dataStore[this.cachename.replace(\"open\",\"closed\")].splice(this.ticketProvider._dataStore[this.cachename.replace(\"open\",\"closed\")].findIndex(tkt => tkt.key === this.ticket.key),1);\n         }\n       }\n     }\n     catch(ex) {\n      console.log(\"index not found.\");\n      this.getPosts(this.ticket.key);\n    }\n     }\n   }\n\n\n   closeTicket(timeAdded?) {\n     if (this.ticket.status == 'Closed') {\n       this.reopenTicket();\n       return;\n     }\n     if (this.config.current.is_force_time_on_closing_tickets && this.ticket.total_time_in_minutes < 1 && !timeAdded){\n       this.addTime(true);\n       return;\n     }\n     let myModal = Modal.create(CloseTicketModal, { \"number\": this.ticket.number, \"key\": this.ticket.key, \n      \"subject\": this.ticket.subject, \n      \"creation_category_id\": this.ticket.creation_category_id, \n      \"creation_category_name\": this.ticket.creation_category_name, \n      \"class_id\" : this.ticket.class_id,\n      \"class_name\" : this.ticket.class_name,\n       });\n     myModal.onDismiss(data => {\n       if (data){\n         this.ticket.status = \"Closed\";\n         this.update_tlist_logic(true);\n       }\n     });\n     this.nav.present(myModal);\n   }  \n\n   cheakAllowsToReopen(){\n     if(this.config.current.is_allows_tech_to_reopen == false)\n       return false;\n     let daysago = this.dayOld(this.posts[0].record_date);\n     if (this.config.current.days_allowed_to_reopen <= daysago)\n       return false;\n    return true;\n   }\n\n   dayOld(value) {\n        value = value || 0;\n        if (isNaN(value))\n            value = Math.round((new Date().getTime() - +new Date(value + \"Z\")) / 60000);\n        var daysAgo: number = value / 60;\n        var result : string = \"\";\n                if (!value || value < 2)\n                  result = \"0\"; \n                else\n                  result = parseInt((daysAgo / 24).toString()) + \"\";\n                    return result;\n    } \n\n   transferTicket() {\n     let myModal = Modal.create(TransferTicketModal, { \"number\": this.ticket.number, \"key\": this.ticket.key, \"subject\": this.ticket.subject,  \"tech_firstname\": this.ticket.tech_firstname, \"tech_lastname\": this.ticket.tech_lastname, \"account_id\": this.account_id});\n     myModal.onDismiss(data => {\n       if (data){\n         this.techname = this.ticket.tech_firstname = data.name;\n         this.ticket.tech_lastname = this.ticket.tech_email = \"\";\n         this.getPosts(this.ticket.key);\n       }\n     });\n     this.nav.present(myModal);\n   }  \n\n   changeUser() {\n     let myModal = Modal.create(ChangeUserModal, { \"number\": this.ticket.number, \"key\": this.ticket.key, \"subject\": this.ticket.subject,  \"user_firstname\": this.ticket.user_firstname, \"user_lastname\": this.ticket.user_lastname});\n     myModal.onDismiss(data => {\n       if (data){\n         this.username = this.ticket.user_firstname = data.name;\n         this.ticket.user_lastname = this.ticket.user_email = \"\";\n         this.getPosts(this.ticket.key);\n       }\n     });\n     this.nav.present(myModal);\n   }  \n\n   changeSubject(name1){\n     this.subject = name1.viewModel;\n   }\n\n   changeNextStep(name2){\n     this.next_step = name2.viewModel;\n   }\n\n   ChangeSubject() {\n     if (!this.subject || this.subject == \"\")\n     this.subject = this.ticket.subject; \n     if (!this.next_step || this.next_step == \"\") \n     this.next_step = this.ticket.next_step; \n     this.next_step_date = new Date().toJSON();    \n            \n            this.ticketProvider.addTicketSubject(this.ticket.key, this.subject, this.next_step).subscribe(\n       data => {\n         this.nav.alert('Subject on the ' + this.config.current.names.ticket.s + ' has been changed :)');\n         this.ticket.subject = this.subject;\n         if (this.ticket.next_step != this.next_step)\n           this.ticket.next_step_date = this.next_step_date;\n         this.ticket.next_step = this.next_step;  \n         this.showSubjChange = !this.showSubjChange;\n         this.ticketProvider.getTicketsList(this.cachename, \"\", \"\",{ \"limit\": 25 });\n       },\n       error => {\n         this.nav.alert(error, true);\n         console.log(error || 'Server error');\n       }\n       );\n      }\n    \n   cancelSubject(){\n     this.changeSubject(this.ticket.subject);\n     this.changeNextStep(this.ticket.next_step);\n     this.showSubjChange = !this.showSubjChange;\n   }\n\n   addTime(isClose?)\n   {\n     let myModal = Modal.create(TimelogPage, { \"number\": this.ticket.number, \"ticket_number\": this.ticket.key, \"subject\": this.ticket.subject, \"account_id\": this.ticket.account_id, \"is_force_time_on_closing_tickets\": this.config.current.is_force_time_on_closing_tickets && this.ticket.total_time_in_minutes < 1 && isClose });\n     myModal.onDismiss(data => {\n       if(data){\n         if(isClose)\n           this.closeTicket(true);\n     }\n       });\n       this.nav.present(myModal);\n     }\n\n     addExpense()\n     {\n       let myModal = Modal.create(ExpenseCreatePage, { \"number\": this.ticket.number, \"ticket_number\": this.ticket.key, \"subject\": this.ticket.subject, \"account_id\": this.ticket.account_id });\n       //myModal.onDismiss(data => {\n         //    console.log(data);\n         //});\n         this.nav.present(myModal);\n       }\n\n       addFilesButton() {\n    console.log(\"Function connect\");\n    let myModal = Modal.create(AddFilesModal);\n        myModal.onDismiss(data1 => {\n            //this.gotoUser(data1);\n        });\n        this.nav.present(myModal);\n            }\n     \n      Escalate(is_escalate?){\n\n      is_escalate = is_escalate || false;\n        //proof double click\n     if (this.ticket.in_progress && Date.now() - this.ticket.in_progress < 1500) {return;}\n     this.ticket.in_progress = Date.now();\n\n     this.ticketProvider.escalateTicket(this.ticket.key, is_escalate).subscribe(\n       data => {\n         this.processDetails(data);\n         this.nav.alert(this.config.current.names.ticket.s + \" was \" + (is_escalate ? \"escalated\" : \"de-escalated\") +\" succesfully!\");\n       },\n       error => {\n         this.nav.alert(error || \"Error! Try again later ...\", true);\n         console.log(error || 'Server error');\n       }\n       );\n      }\n\n       getFullapplink(ticketkey) {\n         let curr = this.config.getCurrent();\n         fullapplink(AppSite, ticketkey, curr.instance, curr.org);\n       }\n\n       getMailTolink(ticketkey) {\n         let curr = this.config.getCurrent();\n         mailtolink(ticketkey, curr.instance, curr.org);\n       }\n\n       getFullName (firstname,lastname,email,name) {\n         return getFullName (firstname,lastname,email,name);\n       }\n\n       getCurrency(value) {\n         return getCurrency(value);\n       }\n\n       getFileLink(file) {\n         return FileUrlHelper.getFileLink(file.url, file.name);\n       }\n\n       setDate(date, showmonth?, istime?) {\n         if (date){\n        //var time_offset = this.config.getCurrent(\"timezone_offset\");     \n        date = new Date(date.substring(0,23)+\"Z\");\n        //date = new Date(date.setTime(date.getTime() + time_offset*60*60*1000)).toJSON();\n        return getDateTime(date, showmonth, istime);\n        }\n        return null;\n       }\n     }\n\n  ","import {Page, Config, Nav, NavParams, Modal} from 'ionic-angular';\nimport {ApiData, TicketProvider} from '../../providers/providers';\nimport {TicketCreatePage} from '../modals/modals'; \nimport {TicketDetailsPage} from '../ticket-details/ticket-details';\nimport {AjaxSearchPage} from '../ajax-search/ajax-search';\nimport {TicketsListComponent} from '../../components/components';\nimport {Focuser} from '../../directives/directives';\nimport {addp} from '../../directives/helpers';\n\n@Page({\n    templateUrl: 'build/pages/tickets/tickets.html',\n    directives: [TicketsListComponent, Focuser],\n})\nexport class TicketsPage {\n\n    counts: any;\n    is_tech: boolean;\n    ticket_tab: string;\n    term: string = '';\n    test: boolean;\n    search_results: any;\n    busy: boolean;\n    user_id: string = '';\n\n    \n    constructor(private nav: Nav, private navParams: NavParams, private config: Config, private apiData: ApiData, private ticketProvider: TicketProvider) {\n        this.counts = {};\n    }\n    \n    onPageLoaded()\n    {      \n        this.user_id = this.config.getCurrent(\"user\").user_id;\n        this.is_tech = this.config.getCurrent(\"user\").is_techoradmin;\n        let param = this.navParams.data || {};\n        if (param.count)\n            this.counts[param.tab] = param.count;\n        if (this.is_tech)\n            this.ticket_tab = !param.tab ? \"tech\" : param.tab;\n        else\n            this.ticket_tab = \"user\";\n        this.nav.tickets_tab = null;\n\n        if (param.key){\n            this.gotoTicket(param);\n        }\n    }\n\n    onPageDidEnter()\n    {\n        this.term = \"\";\n    }\n\n    addTicket(){\n        let myModal = Modal.create(TicketCreatePage);\n        myModal.onDismiss(data1 => {\n            this.gotoTicket(data1);\n        });\n        this.nav.present(myModal);\n    }\n\n    gotoTicket(data)\n    {\n        this.test = false;\n        this.clearSearch();\n        if (data)\n        {\n            this.ticketProvider.getTicketsList(this.ticket_tab, \"\", \"\",{ \"limit\": 25 });\n            setTimeout(() => {\n                this.nav.push(TicketDetailsPage, data);\n            //if (!this.counts[this.ticket_tab])\n            //    this.counts = {};\n            //this.counts[this.ticket_tab] = (this.ticketProvider._dataStore[this.ticket_tab] || {}).length++;\n            }, 500);\n        }\n    }\n\n    searchItems(searchbar) {\n        // Reset items back to all of the items\n        this.search_results = [];\n\n        // set q to the value of the searchbar\n        var q = searchbar.value;\n\n        // if the value is an empty string don't filter the search_results\n        if (q.trim() == '' || this.busy) {\n            return;\n        }\n\n        if (q.length > 1)\n        {\n            var timer = setTimeout(() => { this.busy = true; }, 500);\n            this.getItems(q, timer);\n        }\n    }\n\n    getItems(term, timer) {\n        this.search_results = [];\n        let url = \"tickets?query=all\"; //status=allopen&\n        let pager = { limit: 3 };\n        let is_ticket = term[term.length - 1] == \" \" || term[term.length - 1] == \",\";\n        if (!is_ticket) term += \"*\";\n        else url = \"tickets/\" + term.trim() + \",\";\n        this.apiData.getPaged(addp(url, \"search\", term), pager).subscribe(\n            data => {\n                if (timer) {\n                    clearTimeout(timer);\n                    this.busy = false;\n                }\n                this.search_results = data;\n            },\n            error => {\n                if (timer) {\n                    clearTimeout(timer);\n                    this.busy = false;\n                }\n                console.log(error || 'Server error');\n            }\n            );\n    }\n\n    clearSearch(searchbar?)\n    {\n        this.search_results = [];\n        this.busy = false;\n        if (searchbar) searchbar.value = \"\";\n    }\n\n    getSearch(searchbar) {\n        this.test = false;\n        this.clearSearch();\n        // Reset items back to all of the items\n        // set q to the value of the searchbar\n        let term = searchbar.target.value;\n        if (term.length < 4)\n            term += \"    \";\n        let list = { search: term };\n        this.test = false;\n        this.nav.push(AjaxSearchPage, list);\n    }\n\n}\n","import {Page, Config, Nav, NavParams, ViewController, Alert} from 'ionic-angular';\nimport {forwardRef, ViewChild} from '@angular/core';\nimport {getDateTime, getPickerDateTimeFormat, htmlEscape, linebreaks} from '../../directives/helpers';\nimport {TimeProvider} from '../../providers/time-provider';\nimport {TicketProvider} from '../../providers/ticket-provider';\nimport {ClassListComponent} from '../../components/class-list/class-list';\nimport {SelectListComponent} from '../../components/select-list/select-list';\nimport {InvoiceDetailsPage} from '../invoice-details/invoice-details';\n\n@Page({\n    templateUrl: 'build/pages/timelog/timelog.html',\n    directives: [ClassListComponent, forwardRef(() => SelectListComponent)],\n})\nexport class TimelogPage {\n\n    inc : number;\n    isno_invoice: boolean = false;\n    istaxable: boolean = true;\n    account_id: any;\n    timecount: any;\n    timecount_nonwork: any;\n    mintime: number;\n    time: any = {};\n    date: string;\n    timenote: string;\n    internalnotes: string;\n    title: string = \"\";\n    he: any;\n    selects: any = {};\n    displayFormat: string;\n    displayFormatDays: string;\n    date_now: any;\n    is_start: boolean = false;\n    is_reset: boolean = false;\n    minuteValues: Array<number> = [0, 15, 30, 45, 0];\n    start_time: string = \"\";\n    stop_time: string = \"\";\n    start_timer: any;\n    stop_timer: any;\n    stopwatch: any;\n    options; any = {};\n    countDownDate: any = '';\n    past: any;\n    seconds: any = \"00\";\n    minutes: any = \"00\";\n    hours: any = \"00\";\n    UserDateOffset: number = -5;\n    //start_stop_hours: number = 0;\n    //@ViewChild('starttime') starttime:DateTime;\n    //@ViewChild('stoptime') stoptime:DateTime;\n\n    constructor(private nav: Nav, private navParams: NavParams, private timeProvider: TimeProvider, private ticketProvider: TicketProvider, private config: Config, private view: ViewController) {\n    }\n\n    decrement()\n    {\n        this.timecount = this.timecount > this.mintime ? Math.max(Number(this.timecount) - this.inc, 0).toFixed(2): this.timecount;\n\n    }\n\n    increment()\n    {\n        this.timecount = (Number(this.timecount) + this.inc).toFixed(2);\n    }\n\n    decrement_nonwork()\n    {\n        this.timecount_nonwork = Math.max(Number(this.timecount_nonwork) - this.inc, 0).toFixed(2);\n    }\n\n    increment_nonwork()\n    {\n        this.timecount_nonwork = (Number(this.timecount_nonwork) + this.inc).toFixed(2);\n    }\n\n    ngAfterViewInit() {\n      //console.log(this.config.current.recent);\n      //this.starttime.displayFormat = this.displayFormat;\n//console.log(this.starttime.displayFormat);\n\n}\n\nAddHours(date, hours)\n{\n    if (date){\n        date = new Date(date.substring(0,19)+\"Z\");\n        date = new Date(date.setTime(date.getTime() + hours*60*60*1000)).toJSON();\n        return date;\n    }\n    return date;\n}\n\nGetLocalDate(nojson?)\n{\n    let date = new Date();\n    date = new Date(date.getTime() - (date.getTimezoneOffset() * 60000))\n    if (nojson) return date;\n    return date.toJSON();\n}\n\nngOnInit()\n{    \n    this.UserDateOffset = this.config.getCurrent(\"timezone_offset\");\n    this.time = this.navParams.data || {};\n\n    this.options = {\n          year: 'numeric',\n          month: 'short',\n          day: 'numeric',\n          weekday: 'short'\n        };\n        this.date_now = new Date().toLocaleString(\"en-US\", this.options);\n\n        let distance = localStorage.getItem('past');\n        distance = Number(distance);\n        if(isNaN(distance))\n            localStorage.setItem('past', '');\n\n    if (localStorage.getItem('countDownDate') != '' && !this.time.time_id){\n        this.countDownDate = localStorage.getItem('countDownDate');\n        if (this.countDownDate === null)\n            this.showTimer(\"0\");\n        else\n            this.timerStart();\n    }\n    else if ((localStorage.getItem('countDownDate') == '' || localStorage.getItem('past') != '') && !this.time.time_id){\n        distance = localStorage.getItem('past');\n        distance = Number(distance);\n        this.showTimer(distance);\n    }\n\n    let me_name = this.config.current.user.firstname + \" \" + this.config.current.user.lastname;\n    let name = (this.time.user_name + \" \" + this.time.user_email).trim().split(' ')[0];\n            if (this.time.time_id)\n            {\n                this.title = `Timelog #${this.time.time_id} by\\u00a0${name} on\\u00a0` + this.setDate(this.time.created_time, false, true);\n                //fix timezone\n                this.start_time = this.AddHours(this.time.start_time, this.time.time_offset);\n                this.stop_time = this.AddHours(this.time.stop_time, this.time.time_offset);\n                //if (this.start_time && this.stop_time)\n                //    this.start_stop_hours = Number(Math.round((+(new Date(this.stop_time)) - +(new Date(this.start_time))) / 60000)/60);\n            }\n            else if (this.time.number)\n                this.title = `#${this.time.number} ${this.time.subject}`;\n            else{\n                this.title = \"Add Time\";\n                this.istaxable = true;\n                this.isno_invoice = false;\n            }\n            if (this.time.invoice_id > 0)\n            {\n                this.title = `Invoiced #${this.time.invoice_id} on\\u00a0` + this.setDate(this.AddHours(this.time.date, this.time.time_offset), false, true);\n            }\n\n            this.inc = this.config.getCurrent(\"time_hour_increment\") > 0 ? this.config.getCurrent(\"time_hour_increment\") : 0.25;\n\n            this.mintime = this.config.getCurrent(\"time_minimum_time\");\n            this.mintime = this.mintime > 0 ? this.mintime : 0;\n\n            this.displayFormat = getPickerDateTimeFormat(false, true);\n            this.displayFormatDays = getPickerDateTimeFormat(true, false); \n\n            if (this.inc >= 1)\n                this.minuteValues = [0];   \n            else if (this.inc != 0.25)\n            { \n                this.minuteValues = [];\n                let min = 0;\n                //do { this.minuteValues.push(min); min += 60*this.inc;}\n                do { this.minuteValues.push(min); min += 5;}\n                while (min < 60);\n                this.minuteValues.push(0);\n            }\n\n\n            this.timecount = (this.time.hours || this.mintime).toFixed(2);\n            this.timecount_nonwork = (this.time.non_working_hours || 0).toFixed(2);\n            if (this.timecount_nonwork<0) \n                this.timecount_nonwork = 0;\n            this.timenote = linebreaks(this.time.note || \"\", true);\n            this.internalnotes = linebreaks(this.time.note_internal || \"\", true);\n            this.he = this.config.getCurrent(\"user\");\n            \n            let recent : any = {};\n\n            if (!this.time.number && !this.time.time_id && !(this.time.account || {}).id)\n            {\n                recent = this.config.current.recent || {};\n            }\n            \n            this.account_id = this.time.account_id || (this.time.account || {}).id || (recent.account || {}).selected || this.he.account_id || -1;\n            let contract_id = (this.time.contract || {}).id || this.time.contract_id || (recent.contract || {}).selected || 0;\n            let project_id = (this.time.project || {}).id || this.time.project_id || (recent.project || {}).selected || 0;\n            if (this.account_id == 0)\n                this.account_id = -1;\n\n            this.selects = {\n                \"account\" : {\n                    name: \"Account\", \n                    value:  (this.time.account || {}).name || this.time.account_name || (recent.account || {}).value || this.he.account_name,\n                    selected: this.account_id,\n                    url: \"accounts?is_with_statistics=false&limit=500\",\n                    hidden: this.time.is_fixed,\n                    is_disabled: this.time.ticket_number\n                },\n                \"project\" : {\n                    name: \"Project\", \n                    value:  this.time.project_name || (recent.project || {}).value || \"Default\",\n                    selected: project_id,\n                    url: `projects?account=${this.account_id}&is_with_statistics=false`,\n                    hidden: this.time.is_fixed,\n                    is_disabled: this.time.ticket_number\n                },\n                \"ticket\" : {\n                    name: \"Ticket\", \n                    value: this.time.ticket_number ? `#${this.time.ticket_number}: ${this.time.ticket_subject}` : \"Choose (optional)\",\n                    selected: this.time.ticket_number || 0,\n                    url: `tickets?status=open&account=${this.account_id}&project=${project_id}`,\n                    hidden: this.time.is_project_log || false,\n                    is_disabled: this.time.task_type_id\n                },\n                \"tasktype\" : { \n                    name: \"Task Type\", \n                    value: this.time.task_type || (recent.tasktype || {}).value || \"Choose\",\n                    selected: this.time.task_type_id || this.config.getRecent(\"tasktype\").selected || 0,\n                    url: this.time.ticket_number ? `task_types?ticket=${this.time.ticket_number}` : `task_types?account=${this.account_id}`\n                },\n                 \"contract\" : { \n                    name: \"Contract\", \n                    value: this.time.contract_name || (recent.contract || {}).value || \"Choose\",\n                    selected: this.time.contract_id || this.config.getRecent(\"contract\").selected || 0,\n                    url: `contracts?account_id=${this.account_id}&for_time_logs=true`,\n                    hidden: this.time.is_fixed\n                },\n                 \"tech\" : { \n                    name: \"Tech\", \n                    value: this.time.created_user_name || me_name || \"Default\",\n                    selected: this.time.created_user_id  || this.config.current.user.user_id || 0,\n                    url: this.config.current.is_allow_user_choose_tech && this.config.current.is_allow_user_choose_queue_only ? \"users?role=queue\" : \"technicians\",\n                    hidden: !this.config.current.is_add_time_other_techs\n                },\n                \"prepaidpack\" : {\n                    name: \"PrePaid Pack\", \n                    value: this.time.prepaid_pack_name || (recent.prepaidpack || {}).value || \"Choose\",\n                    selected: this.time.prepaid_pack_id || this.config.getRecent(\"prepaidpack\").selected || 0,\n                    url: `prepaid_packs?contract_id=${contract_id}`,\n                    hidden: this.time.is_fixed\n                }\n            };\n        }\n\n        saveSelect(event){\n            let name = event.type;\n            this.account_id = this.selects.account.selected;\n            let ticket_id = this.selects.ticket.selected;\n            let project_id = this.selects.project.selected;\n            let contract_id = this.selects.contract.selected;\n            let prepaidpack_id = this.selects.prepaidpack.selected; \n        //change url on related lists\n        switch (name) {\n            case \"account\":\n            if (this.selects.account.selected === event.id) {\n                break;\n            }\n            this.selects.project.url = `projects?account=${event.id}&is_with_statistics=false`;\n            this.selects.project.value = \"Default\";\n            this.selects.project.selected = 0;\n            project_id = 0;\n            this.selects.contract.url = `contracts?account_id=${event.id}&for_time_logs=true`;\n            this.selects.contract.value = \"Default\";\n            this.selects.contract.selected = 0;\n            contract_id = 0;\n            this.selects.prepaidpack.url = `prepaid_packs?contract_id=0`;\n            this.selects.prepaidpack.value = \"Choose (optional)\";\n            this.selects.prepaidpack.selected = 0;\n            this.account_id = event.id;\n            this.selects.account.value = event.name;\n            this.selects.account.selected = event.id;\n\n            this.selects.ticket.hidden = this.time.is_project_log || this.time.task_type_id || false;\n            if (!this.time.task_type_id){\n                this.selects.ticket.url = `tickets?status=open&account=${this.account_id}&project=${project_id}`,\n                this.selects.ticket.value = \"Choose (optional)\";\n                this.selects.ticket.selected = 0;\n            }\n            this.selects.project.hidden = !this.config.current.is_project_tracking;\n            this.selects.tasktype.value = \"Choose\";\n            this.selects.tasktype.selected = 0;\n            break;\n            case \"project\" :\n            if (this.selects.project.selected === event.id)\n            {\n                break;\n            }\n            // dont change ticket on edit\n            if (!this.time.task_type_id){\n                this.selects.ticket.hidden = this.time.is_project_log || this.time.task_type_id || false;\n                this.selects.ticket.url = `tickets?status=open&account=${this.account_id}&project=${event.id}`,\n                this.selects.ticket.value = \"Choose (optional)\";\n                this.selects.ticket.selected = 0;\n            }\n            project_id = event.id;\n            this.selects.tasktype.value = \"Choose\";\n            this.selects.tasktype.selected = 0;\n            break;\n            case \"contract\" :\n            if (this.selects.contract.selected === event.id)\n            {\n                break;\n            }\n            // dont change ticket on edit\n            this.selects.prepaidpack.url = `prepaid_packs?contract_id=${event.id}`;\n            this.selects.prepaidpack.value = \"Choose (optional)\";\n            this.selects.prepaidpack.selected = 0;\n            contract_id = event.id;\n            this.selects.tasktype.value = \"Choose\";\n            this.selects.tasktype.selected = 0;\n            break;\n\n            case \"ticket\" :\n            if (this.selects.ticket.selected === event.id)\n            {\n                break;\n            }\n            ticket_id = event.id;\n            this.selects.tasktype.value = \"Choose\";\n            this.selects.tasktype.selected = 0;\n            break;\n        }\n        this.selects.tasktype.url = `task_types?ticket=${ticket_id}&account=${this.account_id}&project=${project_id}&contract=${contract_id}`;\n        this.selects[name].selected = event.id;\n        this.selects[name].value = event.name || \"Default\";\n    }\n\n    onSubmit(form) {\n        if (this.time.invoice_id)\n        {\n            this.viewInvoice();\n            return;\n        }\n        //{ \"ticket\" : localStorage.getItem('ticketNumber') } \n        //{ \"account\" : account, \"project\": project } \n        //edat = JSON.stringify(new Date(dat2));\n        let hours = Number(this.timecount);\n        let non_work_hours = Number(this.timecount_nonwork);\n\n        if (hours + this.timecount_nonwork < this.mintime)\n        {\n            this.nav.alert(\"Not enough time\", true);\n            return;\n        }\n        \n        if (this.start_time && this.stop_time && hours > this.getInterval())\n        {\n            this.nav.alert(\"Hours value should be less or equal to Start/Stop range.\", true);\n            return;\n        }\n        if (this.is_start)\n        {\n            this.nav.alert(\"Please Stop Timer\", true);\n            return;\n        }\n        if (this.config.current.is_invoice && !this.selects.contract.selected && this.selects.contract.items.length != 0)\n        {\n            this.nav.alert(\"Please, select Contract from the list.\", true);\n            return;\n        }\n        if (!this.selects.tasktype.selected)\n        {\n            this.nav.alert(\"Please, select Task Type from the list.\", true);\n            return;\n        }\n        if (form.valid) {\n            //proof double click\n            if (this.time.in_progress && Date.now() - this.time.in_progress < 1500) {return;}\n            this.time.in_progress = Date.now();\n            var note = htmlEscape(this.timenote.trim()).substr(0, 5000);\n            var internal = htmlEscape(this.internalnotes.trim()).substr(0, 5000);\n\n            var isEdit = !!this.time.time_id;\n            var start_time = this.start_time;\n            if (this.endsWith(this.start_time, \"Z\"))\n                start_time = start_time.substring(0,19);\n            var stop_time = this.stop_time;\n            if (this.endsWith(this.stop_time, \"Z\"))\n                stop_time = stop_time.substring(0,19);\n            var date = this.time.date || this.date || this.GetLocalDate();\n            localStorage.setItem('past', '');\n            if (start_time)\n            {\n                date = start_time;\n            }\n\n            //TODO if other user changes what id should I write?  \n            let data = {\n                \"tech_id\": this.selects.tech.selected,\n                \"test_name\": this.selects.tech.value,\n                \"project_id\": this.selects.project.selected,\n                \"is_project_log\": !this.selects.ticket.selected,\n                \"ticket_key\": this.selects.ticket.selected,\n                \"account_id\": this.selects.account.selected,\n                \"note_text\": note,\n                \"note_internal\": internal,\n                \"task_type_id\": this.selects.tasktype.selected,\n                \"prepaid_pack_id\" : this.selects.prepaidpack.selected,\n                \"hours\": hours,\n                \"no_invoice\": this.isno_invoice,\n                \"is_taxable\": this.istaxable,\n                \"date\": date || \"\", \n                \"start_date\": start_time || \"\",\n                \"stop_date\": stop_time || \"\",\n                \"non_working_hours\": non_work_hours,\n                \"contract_id\": this.selects.contract.selected,\n                \"is_local_time\": true,\n            };\n\n\n            this.timeProvider.addTime(this.time.time_id, data, isEdit ? \"PUT\" : \"POST\").subscribe(\n                res => {\n                    //store recent\n                    if (!this.time.number && !this.time.time_id && !(this.time.account || {}).id)\n                    {\n                        this.config.setRecent({\"account\": this.selects.account,\n                                               \"project\": this.selects.project,\n                                               \"tasktype\": this.selects.tasktype,\n                                               \"contract\": this.selects.contract,\n                                                \"prepaidpack\": this.selects.prepaidpack});\n                    }\n                    if (isEdit){\n                        this.time.start_time = this.AddHours(data.start_date, -1*this.UserDateOffset);\n                        this.time.stop_time = this.AddHours(data.stop_date, -1*this.UserDateOffset);\n                        this.time.hours = data.hours;\n                        this.time.non_working_hours = data.non_working_hours;\n                        this.time.no_invoice = data.no_invoice;\n                        this.time.is_taxable = data.is_taxable;\n                    }\n                    else\n                    {\n                        var tdate = data.date || this.GetLocalDate();\n                        var tt = {\n                            time_id:0,\n                            account_id:data.account_id,\n                            account_name:this.selects.account.value,\n                            no_invoice:data.no_invoice,\n                            is_taxable : data.is_taxable,\n                            date:tdate,\n                            hours:data.hours,\n                            non_working_hours:data.non_working_hours,\n                            is_project_log:data.is_project_log,\n                            note:data.note_text,\n                            internal:data.note_internal,\n                            project_id:data.project_id,\n                            project_name:this.selects.project.value,\n                            start_time: this.AddHours(data.start_date, -1*this.UserDateOffset),\n                            stop_time: this.AddHours(data.stop_date, -1*this.UserDateOffset),\n                            time_offset:this.UserDateOffset,\n                            task_type:this.selects.tasktype.value,\n                            task_type_id:data.task_type_id,\n                            contract_name:this.selects.contract.value,\n                            contract_id:data.contract_id,\n                            prepaid_pack:this.selects.prepaidpack.value,\n                            prepaid_pack_id:data.prepaid_pack_id,\n                            ticket_number:data.ticket_key,\n                            ticket_subject:this.selects.ticket.value,\n                            user_email:this.he.email,\n                            user_id:this.selects.tech.selected || this.he.user_id,\n                            user_name :this.selects.tech.value.split('(')[0] || this.he.firstname + \" \" + this.he.lastname};\n                            let date = new Date().toJSON().substring(0,10);\n                            this.timeProvider.getTimelogs(\"0\", this.config.current.user.user_id, { \"limit\": 25 }, date, date);\n                            (this.timeProvider._dataStore[this.time.cachename] || []).splice(0, 0, tt);\n                        }\n                        this.nav.alert('Time was successfully ' + (isEdit ? 'updated' : 'added') + ' :)');\n                        this.close(tt);\n                        this.resetTimer();\n                    },\n                    error => {\n                        console.log(error || 'Server error');\n                    }\n                    );\n        }\n    }\n    deleteTimelog(){\n            let prompt = Alert.create({\n             title: 'Do you really want to remove Time log #' + this.time.time_id,\n             buttons: [\n             {\n                 text: 'Cancel',\n                 handler: data => {\n                     console.log('Cancel clicked');\n                 }\n             },\n             {\n                 text: 'Delete',\n                 handler: data => {\n                    let data1 = {\n                         \"is_project_log\": this.time.is_project_log,\n                    };\n                    this.timeProvider.deleteTime(this.time.time_id, data1).subscribe(\n                    data => {\n                        this.timeProvider.getTimelogs(\"0\", this.config.current.user.user_id, { \"limit\": 25 });\n                        (this.timeProvider._dataStore[this.time.cachename] || []).splice(0, 0, this.time);\n                        this.nav.alert('Time was deleted');\n                        this.close();\n                        this.resetTimer();\n\n                   }, \n            error => { \n                console.log(error || 'Server error');}\n        ); \n                 }\n             }\n             ]\n         });\n         this.nav.present(prompt);\n        }\n\n\n    setDate(date, showmonth?, istime?) {\n        return date ? getDateTime(date, showmonth, istime) : null;\n    }\n\n    timerStart(){\n        this.is_start=!this.is_start;\n     if(!this.countDownDate || this.countDownDate == ''){\n        this.countDownDate = new Date().getTime();\n        localStorage.setItem('countDownDate', this.countDownDate.toString());\n     }\n     else {\n         this.countDownDate = Number(this.countDownDate);\n     }\n        \n        this.config.setRecent({\"account\": this.selects.account,\n                                               \"project\": this.selects.project,\n                                               \"tasktype\": this.selects.tasktype,\n                                               \"contract\": this.selects.contract,\n                                                \"prepaidpack\": this.selects.prepaidpack});\n        let old = localStorage.getItem('past');\n        old = Number(old);\n\n    // Update the count down every 1 second\n    this.stopwatch = setInterval(() => {\n\n      // Get todays date and time\n      let now = new Date().getTime();\n\n      // Find the distance between now and the count down date\n      let distance = now - this.countDownDate + old;\n      this.showTimer(distance);\n      \n    }, 1000);\n    }\n\n    timerStop(){\n        clearInterval(this.stopwatch);\n        this.is_start=!this.is_start;\n        let now = new Date().getTime();\n        this.past = now - this.countDownDate;\n        let oldTimer = localStorage.getItem('past')\n        oldTimer = Number(oldTimer);\n        this.past = this.past+oldTimer;  \n        this.stop_time = new Date().toJSON().substring(0,19);    \n        //this.stop_timer = new Date().toJSON().substring(0,19);\n        this.setStartDate(new Date(new Date().getTime() - this.past).toJSON());  \n        //this.start_timer = new Date(new Date().getTime() - this.past).toJSON().substring(0,19);\n        this.start_time = this.AddHours(this.start_time, this.UserDateOffset);\n        this.stop_time = this.AddHours(this.stop_time, this.UserDateOffset);\n        localStorage.setItem('past', this.past);\n        localStorage.setItem('countDownDate', '');\n        this.countDownDate = '';\n        //this.minutes = 44;   //for test value\n        //this.hours = 2;\n        let incHours = this.hours;\n        let incMinutes = this.roundToMultiple(this.minutes, this.inc);\n        if (incMinutes == 60){\n            incMinutes = 0;\n            incHours++;\n        }\n        let exportHours = incHours + \".\" + incMinutes;\n        exportHours = Number(exportHours);\n        if (exportHours == 0)\n            this.timecount = this.mintime.toFixed(2);\n        else{\n        this.timecount = exportHours;\n        }\n        this.config.setRecent({\"account\": this.selects.account,\n                                               \"project\": this.selects.project,\n                                               \"tasktype\": this.selects.tasktype,\n                                               \"contract\": this.selects.contract,\n                                                \"prepaidpack\": this.selects.prepaidpack});\n    }\n    roundToMultiple(time, inc) {\n    inc = 60 * inc;\n    let min = Math.round(time/inc)*inc;\n    min = (min / 60)*100;\n    return min;\n    }\n\n    showTimer(distance){\n    this.hours = Math.floor((distance % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));\n      if (this.hours < 10) {\n          this.hours.toString();\n          this.hours = \"0\" + this.hours;\n      }\n      this.minutes = Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60));\n      if (this.minutes < 10) {\n          this.minutes.toString();\n          this.minutes = \"0\" + this.minutes;\n      }\n      this.seconds = Math.floor((distance % (1000 * 60)) / 1000);\n      if (this.seconds < 10) {\n          this.seconds.toString();\n          this.seconds = \"0\" + this.seconds;\n      }\n      //console.log(\"countDownDate\", this.countDownDate, \"distance\", distance, this.seconds);\n\n  }\n\n    resetTimer() {\n        this.hours = \"00\";\n        this.minutes = \"00\";\n        this.seconds = \"00\";\n        //this.stop_timer = false;\n        //this.start_timer = false;\n        this.start_time = \"\";\n        this.stop_time = \"\";\n        localStorage.setItem('past', '');\n        localStorage.setItem('countDownDate', '');\n    }\n\n    ngOnDestroy(){    \n        clearTimeout(this.stopwatch);  \n    }\n\n    setMinTime(date) {\n        return (date || this.time.date || this.GetLocalDate());\n    }\n\n    setMaxTime(date) {\n        return (date || this.time.date || this.GetLocalDate());\n    }\n\n    getStartDate(time) {\n        return (time || this.time.date || this.GetLocalDate());\n    }\n\n    setStartDate(time){\n        if (time)\n        {    \n            this.start_time = time.substring(0,19);\n            this.date_now = new Date(time).toLocaleString(\"en-US\", this.options);\n            this.date = time;\n            if (this.stop_time)\n            {\n               this.updateHours();\n            }\n        }\n    }\n\n    setStopDate(time){\n        if (time)\n        {\n            this.stop_time = time.substring(0,19);\n            this.date_now = new Date(time).toLocaleString(\"en-US\", this.options);\n            this.date = time; \n            if (this.start_time)\n            {    \n                this.updateHours();\n            }\n        }\n    }\n\n    setDateTimelog(time){\n        if (time)\n        {\n            this.date_now = new Date(time).toLocaleString(\"en-US\", this.options);\n            this.date = time; \n        }\n    }\n\n    updateHours()\n    {\n        let timecount : number = this.getInterval();\n        this.timecount = timecount.toFixed(2);\n    }\n\n    endsWith(str, search)\n    {\n        str = str || \"\";\n        var this_len = str.length;\n        return str.substring(this_len - search.length, this_len) === search;\n    }\n\n    getInterval()\n    {\n        var start_time = this.start_time.substring(0,16)+\"Z\";\n        var stop_time = this.stop_time.substring(0,16)+\"Z\";\n        let interval = Number(Math.round((+(new Date(stop_time)) - +(new Date(start_time))) / 60000)/60);\n        if (interval > 0 && interval < this.inc)\n            interval = this.inc;\n        return interval;\n\n    }\n\n    getFixed(value) {\n        return Number(value || \"0\").toFixed(2).toString();\n    }\n    \n    close(data?) {\n        //clearInterval(this.stopwatch);\n        this.view.dismiss(data);\n    }\n\n    viewInvoice() {\n        let invoice = {\n            account_name : this.time.account_name,\n            id: this.time.invoice_id,\n            account_id: this.time.account_id,\n            project_id: this.time.project_id\n        };\n\n        this.nav.push(InvoiceDetailsPage, invoice);\n    }\n}\n","import {Page, Config, Nav, NavParams, ViewController} from 'ionic-angular';\nimport {forwardRef} from '@angular/core';\nimport {FORM_DIRECTIVES, Validators} from '@angular/common';\nimport {TimeProvider} from '../../providers/time-provider';\nimport {addp} from '../../directives/helpers';\nimport {TimelogPage} from '../timelog/timelog';\nimport {ActionButtonComponent} from '../../components/action-button/action-button';\nimport {SelectListComponent} from '../../components/select-list/select-list';\nimport {getDateTime} from '../../directives/helpers';\nimport {Subject} from 'rxjs';\nimport {GravatarPipe, MorePipe, LinebreaksPipe} from '../../pipes/pipes';\n\n@Page({\n    templateUrl: 'build/pages/timelogs/timelogs.html',\n    directives: [forwardRef(() => SelectListComponent), ActionButtonComponent],\n    pipes: [GravatarPipe, MorePipe, LinebreaksPipe],\n})\nexport class TimelogsPage {\n\n    LIMIT: number = 25;\n    account: any;\n    selects: any;\n    is_empty: boolean = false;\n    params: any;\n    pager: any;\n    cachelen: number;\n    cachename: string;\n    timelogs: any;\n    busy: boolean;\n    test: boolean;\n    initial_load: boolean = true;\n    private unsubscribe$:Subject<void> = new Subject();\n\n\n    constructor(private nav: Nav, private timeProvider: TimeProvider, private config: Config, private navParams: NavParams, private view: ViewController) {\n        this.pager = { page: 0, limit: this.LIMIT };\n    }\n    \n    onPageLoaded()\n    {\n        this.params = this.navParams.data || {};\n        this.pager = { page: 0 };\n        this.params.account = { id: this.params.account_id || \"0\", name: this.params.account_name || \"\" };\n        this.params.tech = { id: this.params.tech_id || 0, name: this.params.tech_name || \"\" };\n        let recent : any = {};\n\n        this.selects = {\n            \"tech\" : {\n                name: \"Tech\", \n                value: this.params.tech.id==0? \"--All \" +this.config.current.names.tech.p+\" --\": this.params.tech.name,\n                default: \"--All \" +this.config.current.names.tech.p+\" --\",\n                isnew_disabled: true,\n                selected: (this.params.tech || {}).id || 0,\n                url: \"technicians\",\n                hidden: false\n            },\n            \"account\" : {\n                name: \"Account\", \n                value:  this.params.account.id==0? \"--All \" +this.config.current.names.account.p+\" --\" : this.params.account.name,\n                default: \"--All \" +this.config.current.names.account.p+\" --\",\n                selected:  (this.params.account || {}).id || \"0\",\n                url: \"accounts?is_with_statistics=false&limit=500\",\n                hidden: false\n            }\n        };\n        if (this.params.tech.id != 0)\n            this.test = !this.test;\n        else if (this.params.account.id != \"0\")\n            this.test = !this.test;\n        \n        if (!this.params.account)\n        {\n                recent = this.config.current.recent || {};\n        }\n\n        this.cachename = addp(\"time\", \"account\", this.params.account.id);\n        this.cachename = addp(this.cachename, \"tech\", this.params.tech.id);\n        this.cachelen = (this.timeProvider._dataStore[this.cachename] || {}).length;\n\n        if (this.params.is_empty)\n            this.params.count = 0;\n\n        if (this.params.count !== 0) {\n            this.getTimeLogs();\n        }\n        else{\n            this.is_empty = true;\n        }\n    }\n\n    saveSelect(event){\n        let name = event.type;\n        this.selects[name].selected = event.id;\n        this.selects[name].value = event.name;\n        this.params[name].id = event.id;\n        this.cachename = addp(\"time\", \"account\", this.params.account.id);\n        this.cachename = addp(this.cachename, \"tech\", this.params.tech.id);\n        this.cachelen = (this.timeProvider._dataStore[this.cachename] || {}).length;\n        this.getTimeLogs();\n    }\n\n    getTimeLogs()\n    {\n        //let account_id\n        //if (this.selects.account.selected == -1) \n//account_id = this.params.account.id;\n        //else\n        //    account_id = this.selects.account.selected;\n        this.pager.page = 0;\n        this.timeProvider.getTimelogs(this.params.account.id, this.params.tech.id, this.pager);\n        this.timelogs = this.timeProvider.times$[this.cachename];\n\n        if (!this.cachelen)\n        {\n            var timer = setTimeout(() => {\n                this.busy = true;\n            }, 500);\n            setTimeout(() => {\n                this.busy = false;\n            }, 10000);\n            this.timelogs.takeUntil(this.unsubscribe$).subscribe(\n                data => {\n                    clearTimeout(timer);\n                    this.busy = false;\n                    this.is_empty = !data.length;\n                });\n        }\n    }\n\n    ngOnDestroy(){  \n        this.unsubscribe$.next();\n        this.unsubscribe$.complete();   \n    }\n\n    onPageWillEnter() {\n        if (this.params.account_name)\n            this.view.setBackButtonText('');\n        if (!this.initial_load)\n        {\n            setTimeout(() => {\n               this.getTimeLogs();\n            }, 4000);\n        }\n        this.initial_load = false;\n    }\n\n    doInfinite(infiniteScroll) {\n        if (this.is_empty || (this.cachelen > 0 && (this.cachelen >= this.params.count || this.cachelen < this.LIMIT)) || (this.params.count > 0 && (this.params.count < this.LIMIT))) {\n            infiniteScroll.enable(false);\n            infiniteScroll.complete();\n            return;\n        }\n        this.pager.page += 1;\n        let cachedlen = (this.timeProvider._dataStore[this.cachename] || {}).length;\n        this.timeProvider.getTimelogs(this.params.account.id, this.selects.tech.selected, this.pager);\n        this.timelogs.takeUntil(this.unsubscribe$).subscribe(\n            data => {\n                infiniteScroll.complete();\n                let len = data.length;\n                infiniteScroll.enable(!(cachedlen == len || len % this.LIMIT));\n                this.cachelen = len;\n            });\n    }\n    \n    itemTapped(time) {\n        time = time || {};\n        time.account = time.account || this.params.account;\n        time.cachename = this.cachename;\n        this.nav.push(TimelogPage, time);\n    }\n    \n    setDate(date, time_offset, showmonth?, istime?) {\n    if (date){\n        //date = new Date(date.substring(0,23)+\"Z\");\n        //date = new Date(date.setTime(date.getTime() + time_offset*60*60*1000)).toJSON();\n        return getDateTime(date, showmonth, istime);\n    }\n     return null;\n    }\n\n    getFixed(value){\n        return Number(value || \"0\").toFixed(2).toString();\n    }\n    toggle(){\n        this.test = !this.test;\n        if (this.test){\n            setTimeout(() => {\n        let t = document.getElementsByClassName(\"open-filter\");\n        t = t[t.length - 1];\n        t && t.focus();\n        }, 500);\n        }\n    }\n}\n","import {Page, Config, Nav, NavParams, ViewController} from 'ionic-angular';\nimport {forwardRef} from '@angular/core';\nimport {getDateTime, getPickerDateTimeFormat, htmlEscape, linebreaks} from '../../directives/helpers';\nimport {SelectListComponent} from '../../components/select-list/select-list';\nimport {TodoProvider} from '../../providers/todo-provider';\n\n@Page({\n    templateUrl: 'build/pages/todo-create/todo-create.html',\n        directives: [forwardRef(() => SelectListComponent)],\n\n})\nexport class TodoCreatePage {\n\n    todo: any;\n    he: any;\n    displayFormat: string;\n    UserDateOffset: number = -5;\n    account_id: number;\n    selects: any = {};\n\n    constructor(private nav: Nav, private navParams: NavParams, private todoProvider: TodoProvider, private config: Config, private view: ViewController) {\n    this.he = config.current.user;\n    }\n    \n    ngOnInit()\n    {\n        this.todo = this.navParams.data || {};\n        this.UserDateOffset = this.config.getCurrent(\"timezone_offset\");\n        this.displayFormat = getPickerDateTimeFormat(false, false);\n        this.todo.due_date = this.todo.due_date ? this.AddHours(this.todo.due_date, this.UserDateOffset) : \"\";\n\n        let recent : any = {};\n        if (!this.todo.account)\n        {\n                recent = this.config.current.recent || {};\n        }\n\n        this.account_id = (this.todo.account || {}).id || (recent.account || {}).selected || this.he.account_id || -1;\n        let project_id = (this.todo.project || {}).id || this.todo.project_id || (recent.project || {}).selected || 0;\n       this.selects.tech = {\n            name: \"Tech\", \n            value: (this.todo.tech || {}).name || \"Choose\",\n            selected: (this.todo.tech || {}).id || 0,\n            url: this.config.current.is_allow_user_choose_tech && this.config.current.is_allow_user_choose_queue_only ? \"users?role=queue\" : \"technicians\",\n            hidden: false\n        };\n \n        this.selects.account = {\n            name: \"Account\", \n            value: (this.todo.account || {}).name || (recent.account || {}).value || this.he.account_name,\n            selected: this.account_id,\n            url: \"accounts?is_with_statistics=false&limit=500\",\n            hidden: false\n        };\n        this.selects.project =  {\n                name: \"Project\", \n                value: (recent.project || {}).value || \"Default\",\n                selected: project_id,\n                url: `projects?account=${this.account_id}&is_with_statistics=false`,\n                hidden: false\n            };\n        this.selects.ticket =  {\n                    name: \"Ticket\", \n                    value: this.todo.ticket_number ? `#${this.todo.ticket_number}: ${this.todo.ticket_subject}` : \"Choose (optional)\",\n                    selected: this.todo.ticket_number || 0,\n                    url: `tickets?status=open&account=${this.account_id}&project=${project_id}`,\n                    hidden: this.todo.is_project_log || false,\n                    is_disabled: this.todo.task_type_id\n                };     \n   }\n\n    AddHours(date, hours)\n{\n    if (date){\n        if (date.length == 19)\n            date = date.slice(0,-3);\n        let temp = new Date(date);\n        return new Date(temp.setTime(temp.getTime() + (hours*60*60*1000) + -1*temp.getTimezoneOffset()*60*1000)).toJSON();\n    }\n    return date;\n}\n\n    saveSelect(event){\n        let name = event.type;\n        this.account_id = this.selects.account.selected;\n        let project_id = this.selects.project.selected;\n        switch (name) {\n            case \"account\" :\n                this.selects.project.url = `projects?account=${event.id}&is_with_statistics=false`;\n                this.selects.project.value = \"Default\";\n                this.selects.project.selected = 0;\n                project_id = 0;\n                this.selects.account.value = event.name;\n                this.selects.account.selected = event.id;\n                this.account_id = event.id;\n\n                if (!this.todo.task_type_id){\n                this.selects.ticket.url = `tickets?status=open&account=${this.account_id}&project=${project_id}`,\n                this.selects.ticket.value = \"Choose (optional)\";\n                this.selects.ticket.selected = 0;\n            }\n                break;\n            case \"project\" :\n            if (this.selects.project.selected === event.id)\n            {\n                break;\n            }\n            this.selects.project.value = event.name;\n            this.selects.project.selected = event.id;\n            if (!this.todo.task_type_id){\n                this.selects.ticket.hidden = this.todo.is_project_log || this.todo.task_type_id || false;\n                this.selects.ticket.url = `tickets?status=open&account=${this.account_id}&project=${event.id}`,\n                this.selects.ticket.value = \"Choose (optional)\";\n                this.selects.ticket.selected = 0;\n            }\n            project_id = event.id;\n            break;    \n            default:\n                    this.selects[name].selected = event.id;\n                    this.selects[name].value = event.name || \"Default\";\n            break;\n        }\n    }\n\n    onSubmit(form) {\n        let hours = this.todo.estimated_remain || \"\";\n        if (form.valid) {\n            if (hours) {\n            if (~hours.indexOf('.')){\n                let parts = hours.split('.');\n                hours = Number(parts[0]) + Number(parts[1])/60;\n            } else if (~hours.indexOf(':')){\n                let parts = hours.split(':');\n                hours = Number(parts[0]) + Number(parts[1])/60;\n            } else if (Number(hours)){\n                hours = Number(hours);\n            }\n        }\n        else\n            hours = 0;\n            //proof double click\n            if (this.todo.in_progress && Date.now() - this.todo.in_progress < 2500) {return;}\n            this.todo.in_progress = Date.now();\n            let data = {\n                task_id:null,\n                title: this.todo.title,\n                account_id: this.account_id,\n                project_id: this.selects.project.selected,\n                text: this.todo.note,\n                assigned_id: this.selects.tech.selected,\n                estimated_remain: hours,\n                due_date: this.AddHours(this.todo.due_date, -1*this.UserDateOffset) || \"\",\n                notify: false,\n                list_id: this.todo.list_id,\n                ticket_key: this.selects.ticket.selected,\n            };\n\n            this.todoProvider.addTodo(data).subscribe(\n                data => {\n                    this.nav.alert('Todo was successfully added :)');\n                    this.todoProvider.getTodos(this.he.user_id, \"\", \"false\", { page: 0, limit: 5000 });\n                    setTimeout(() => this.close(), 500);\n                },\n                error => {\n                    console.log(error || 'Server error');\n                }\n                );\n        }\n    }\n\n    setMinTime(date) {\n        return (date || this.todo.due_date || this.AddHours(new Date(), this.UserDateOffset)).substring(0,4);\n    }\n\n    getStartDate(time) {\n        return (time || this.todo.due_date || this.AddHours(new Date(), this.UserDateOffset)).substring(0,19);\n    }\n\n    setStartDate(time){\n        if (time)\n        {\n            this.todo.due_date = time.substring(0,19);\n        }\n    }\n    \n    close() {\n        this.view.dismiss();\n    }\n}\n\n","import {Page, Config, Nav, NavParams, Modal} from 'ionic-angular';\nimport {forwardRef} from '@angular/core';\nimport {TodoCreatePage} from '../todo-create/todo-create';\nimport {TodoListComponent} from '../../components/components';\nimport {SelectListComponent} from '../../components/select-list/select-list';\n\n@Page({\n    templateUrl: 'build/pages/todos/todos.html',\n    directives: [forwardRef(() => SelectListComponent), TodoListComponent],\n})\nexport class TodosPage {\n\n    is_empty: boolean = false;\n    params: any;\n    selects: any;\n    test: boolean;\n    completed: string = \"false\";\n    assigned: string;\n    //undone: number = 0;\n    \n    constructor(private nav: Nav, private config: Config, private navParams: NavParams) {\n    }\n\n    onPageLoaded()\n    {\n        this.params = this.navParams.data || {};\n        //this.pager = { page: 0 };\n        this.params.user = { id: this.params.user_id || this.config.current.user.user_id, name: this.params.user_name || \"\" };\n        this.params.tech = { id: this.params.tech_id || 0, name: this.params.tech_name || \"\" };\n        /*let cachename = addp(\"todos\", \"assigned_id\", this.params.user.id);\n           this.todoProvider.todos$[cachename].subscribe(\n                data => {\n                    let count = 0;\n                    for (let k in data) for (let l in data[k].sub) if (!data[k].sub[l].is_completed) count++;\n                    this.undone = count;\n                });\n                */\n\n                this.selects = {\n            \"completed\": {\n                name: \"Completed\",\n                value: \"All\",\n                selected: \"false\",\n                hidden: false,\n                items: [\n                    { \"name\": 'All', \"id\": \"false\" },\n                    { \"name\": 'Completed', \"id\": \"true\" },\n                    { \"name\": 'Not Completed', \"id\": \" \" },\n                ]\n            },\n            \"tech\" : {\n                name: \"Tech\", \n                value: \"--All \" +this.config.current.names.tech.p+\" --\",\n                default: \"Everyone\",\n                isnew_disabled: true,\n                selected: (this.params.tech || {}).id || 0,\n                url: \"technicians\",\n                hidden: false\n            }\n        };\n        }\n\n    saveSelect(event){\n        let name = event.type;\n        this.selects[name].selected = event.id;\n        this.selects[name].value = event.name;\n        if (name == \"completed\")\n        {\n\n            this.completed = event.id;\n        }\n        else if (name == \"tech\")\n        {\n            this.assigned = event.id;\n        }\n    }\n\n    AddTodo()\n    {\n        let myModal = Modal.create(TodoCreatePage, {\"list_id\": \"\" });\n        this.nav.present(myModal);\n    }\n    toggle(){\n        this.test = !this.test;\n        if (this.test){\n            setTimeout(() => {\n        let t = document.getElementsByClassName(\"open-filter\");\n        t = t[t.length - 1];\n        t && t.focus();\n        }, 500);\n        }\n    }\n\n}","import {Page, Config, Nav, NavParams, ViewController} from 'ionic-angular';\nimport {DataProvider} from '../../providers/data-provider';\nimport {MorePipe} from '../../pipes/pipes';\nimport {InvoiceDetailsPage} from '../invoice-details/invoice-details';\nimport {getDateTime, getCurrency} from '../../directives/helpers';\n\n@Page({\n  templateUrl: 'build/pages/uninvoices/uninvoices.html',\n    pipes: [MorePipe],\n})\nexport class UnInvoicesPage {\n\n    LIMIT: number = 15;\n    count: number;\n    account: any;\n    is_empty: boolean = false;\n    busy: boolean;\n    params: any;\n    pager: any;\n    invoices: Array<any> = [];\n\n    constructor(private nav: Nav, private dataProvider: DataProvider, private config: Config, private navParams: NavParams, private view: ViewController) {\n        nav.swipeBackEnabled = false;\n  }\n\n    onPageLoaded() {\n        this.params = this.navParams.data || {};\n        this.pager = { page: 0, limit: this.LIMIT };\n        this.params.account = { id: this.params.account_id || 0, name: this.params.account_name || this.config.getCurrent(\"user\").account_name };\n        if (this.params.is_empty)\n            this.params.count = 0;\n\n        if (this.params.count !== 0) {\n            var timer = setTimeout(() => {\n                this.busy = true;\n            }, 500);\n\n            this.getItems(null, timer);\n        }\n        else\n            this.is_empty = true;\n    }\n\n    onPageWillEnter() {\n        if (this.params.account_name)\n            this.view.setBackButtonText('');\n    }\n\n\n    getItems(infiniteScroll, timer) {\n        this.dataProvider.getInvoices(this.params.account.id, false, this.pager).subscribe(\n            data => {\n                if (timer) {\n                    this.is_empty = !data.length;\n                    clearTimeout(timer);\n                    this.busy = false;\n                    this.invoices = data;\n                }\n                else\n                    this.invoices.push(...data);\n                if (infiniteScroll) {\n                    infiniteScroll.enable(data.length == this.LIMIT);\n                    infiniteScroll.complete();\n                }\n                this.count = data.length;\n            },\n            error => {\n                if (timer) {\n                    clearTimeout(timer);\n                    this.busy = false;\n                }\n                console.log(error || 'Server error');\n            }\n        );\n    }\n\n    doInfinite(infiniteScroll) {\n        if (this.is_empty || this.count < this.LIMIT) {\n            infiniteScroll.enable(false);\n            infiniteScroll.complete();\n            return;\n        }\n        this.pager.page += 1;\n        this.getItems(infiniteScroll, null);\n    }\n    \n    itemTapped(item) {\n        this.nav.push(InvoiceDetailsPage, item);\n    }\n    \n    setDate(date, showmonth?, istime?) {\n        if (date){\n        var time_offset = this.config.getCurrent(\"timezone_offset\");     \n        date = new Date(date.substring(0,23)+\"Z\") || new Date();\n        date = new Date(date.setTime(date.getTime() + time_offset*60*60*1000)).toJSON();\n        return getDateTime(date, showmonth, istime);\n    }\n     return null;\n    }\n    \n    getCurrency(value) {\n        return getCurrency(value);\n    }\n}\n","import {Pipe} from '@angular/core';\n\n@Pipe({\n    name: 'Capitalize'\n})\nexport class CapitalizePipe {\n    transform(value, args) {\n        if (value) {\n            return value.charAt(0).toUpperCase() + value.slice(1);\n        }\n        return value;\n    }\n}","import {Pipe} from '@angular/core';\n\n@Pipe({\n    name: 'Daysago'\n})\nexport class DaysagoPipe {\n    transform(value) {\n        value = value || 0;\n        if (isNaN(value))\n            value = Math.round((new Date().getTime() - +new Date(value + \"Z\")) / 60000);\n        var daysAgo: number = value / 60;\n        var result : string = \"\";\n                if (!value || value < 2)\n                  result = \"0 days ago\"; \n                else\n                  result = parseInt((daysAgo / 24).toString()) + \" days ago\";\n                    return result;\n    } \n}","import {Pipe} from '@angular/core';\n\n@Pipe({\n    name: 'Daysold'\n})\nexport class DaysoldPipe {\n    transform(value) {\n        value = value || 0;\n        if (isNaN(value))\n            value = Math.round((new Date().getTime() - +new Date(value + \"Z\")) / 60000);\n        var daysOld: number = value / 60;\n        var result : string = \"\";\n\n                    // check to see if the ticket is less than a day old\n                    if (!value || value < 2)\n                        result = \"a minute ago\"; \n                    else if (value < 60)\n                        result = \"a \" + value + \" minutes ago\"; \n                    else if (value < 120)\n                        result = \"one hour ago\"; \n                    else if(daysOld > 24){\n                        var days = parseInt((daysOld / 24).toString());\n                        result = days + \" day(s)\";\n                        var hours = parseInt((daysOld - days * 24).toString());\n                        if (hours > 0)\n                           result += \" \" + hours + \" hour(s)\";\n                        result += \" ago\";\n                    } else {\n                        result = parseInt(daysOld.toString()) + \" hour(s) ago\";\n                    }\n                    return result;\n    } \n}","import {Pipe} from '@angular/core';\nimport {openURL, FileUrlHelper} from '../directives/helpers';\n\n@Pipe({\n    name: 'Files'\n})\nexport class FilesPipe {\n    transform(value, args) {\n\n        var isPhonegap = localStorage.getItem(\"isPhonegap\") === \"true\";\n       \n        value = value || \"\";\n        \n        var files = args || [];   \n        \n        if (!value || !files || files.length == 0 || \n            ! (~value.indexOf(\"cid:\") || ~value.indexOf(\"ollowing file\"))) return value;\n        \n        files.sort(function(a, b){\n            return b.name.length - a.name.length;\n        });\n        \n        value = FileUrlHelper.addUrls(value, files);\n        \n        return value;\n    }\n}","import {Pipe} from '@angular/core';\n\nconst md5Hex = require('md5-hex');\n\ndeclare var require: any;\n\n@Pipe({\n    name: 'Gravatar'\n})\nexport class GravatarPipe {\n    transform(value, args) {\n    \tlet hash = \"\";\n        if (value) {\n            hash = md5Hex(value);\n        }\n        else\n        \treturn \"img/def_ava.png\";\n        return `https://secure.gravatar.com/avatar/${hash}?s=80&d=mm`;\n    }\n}","import {Pipe} from '@angular/core';\n\n@Pipe({\n  name: 'Htmlsafe'\n})\nexport class HtmlsafePipe {\n  transform(value, args) {\n    value = (value || \"\").trim();\n    if (value.length)\n    {\n             // this prevents any overhead from creating the object each time\n             var element = document.createElement('div');\n\n              // regular expression matching HTML entities\n              var entity = /&(?:#x[a-f0-9]+|#[0-9]+|[a-z0-9]+);?/ig;\n\n              // find and replace all the html entities\n              value = value.replace(entity, function(m) {\n                element.innerHTML = m;\n                return element.textContent;\n              });\n\n            // reset the value\n            element.textContent = '';\n          }\n          return value;\n        }\n      }","import {Pipe} from '@angular/core';\nimport {linebreaks} from '../directives/helpers';\n\n\n@Pipe({\n    name: 'Linebreaks'\n})\nexport class LinebreaksPipe {\n    transform(value, args) {\n    \tvalue = value.replace(/^<p>(<br>)?(\\r)?/, '').replace(/^<p>(<br>)?(\\n)?/,\"\");\n        return linebreaks(value, args);\n    }\n}","import {Pipe} from '@angular/core';\n\n@Pipe({\n    name: 'More'\n})\nexport class MorePipe {\n    transform(value, args) {\n        args = args || [100, \"VV\"]; \n        value = value || 0;\n        let max = args[0]; \n        //console.log(\"max\", value);\n        let template = args[1] || \"VV\"; \n        if (max == 999 && value > max){\n        value = \"99<sup>+</sup>\";\n        }\n        else if (value >= max){\n        value = (max-1) + \"<sup>+</sup>\";\n        }\n        else {\n          let s_value = value.toString();\n        if(~template.indexOf(\"$\") || ~s_value.indexOf(\".\"))\n           value = value.toFixed(value > 99 && ~s_value.indexOf(\".00\") ? 0 : 2);\n        }\n        if (~template.indexOf(\"$\"))\n            template = template.replace(\"$\", localStorage.getItem(\"currency\"));\n        value = template.replace(\"VV\", value);\n        return value;\n    }\n}","export * from './more';\nexport * from './capitalize';\nexport * from './linebreaks';\nexport * from './htmlsafe';\nexport * from './gravatar';\nexport * from './daysold';\nexport * from './daysago';\nexport * from './files';","import {Injectable} from '@angular/core';\nimport {Config, Events} from 'ionic-angular';\nimport {Http, Headers, RequestOptions, Request} from '@angular/http';\nimport {Observable} from 'rxjs';\nimport {ApiSite, dontClearCache} from './config';\nimport {addp} from '../directives/helpers';\nimport {MOCKS} from './mocks';\nimport 'rxjs';\n\n\n@Injectable()\nexport class ApiData {\n    \n//userKey, userOrgKey, userInstanceKey: string; \n//mock: boolean = dontClearCache;\n\n    constructor(private http: Http, private config: Config, private events: Events) {\n}\n\nrequest(method, data?, type?, headers?) {\n    if (dontClearCache)\n    {\n        return this.mock_get(method);\n    }\n    //if (!this.config.getCurrent(\"is_online\"))\n    //    return;\n    let req = new Request({\n        method: type || 'GET',\n        url: ApiSite + method,\n        headers: headers,\n        body: JSON.stringify(data)\n    });\n\n    return this.http.request(req)\n        .map(res => res.json())\n        .catch(error => {\n            return this.handleError(error);\n                        });\n}\n\nmock_get(method) {\n    var arr = null;\n    var pos = method.indexOf('?');\n    if (pos != -1)\n        method = method.substring(0, pos);\n    arr = MOCKS[method];\n    return Observable.create(observer => {\n        observer.next(arr);\n        observer.complete();\n    });\n}\n\n    get(method, data?, type?) {\n    let key = this.config.getCurrent(\"key\"),\n        //localStorage.getItem(\"userKey\"),\n        org = this.config.getCurrent(\"org\"), // localStorage.getItem('userOrgKey'),\n        inst = this.config.getCurrent(\"instance\");// localStorage.getItem('userInstanceKey');\n    \n    if (!key || !org || !inst || key.length != 32) {\n        return this.handleError(\"403: Invalid organization!\");\n    }\n\n    var headers = new Headers({\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n        'Authorization': 'Basic ' + btoa(`${org}-${inst}:${key}`)\n    });\n    return this.request(method, data, type, headers);\n\n}\n\nprocessData(data) {\n    // just some good 'ol JS fun with objects and arrays\n    // build up the data by linking speakers to sessions\n    //console.log(JSON.stringify(data));\n    return data;\n}\n\ngetPager(url, pager) {\n    if (pager) {\n        if (pager.limit)\n            url = addp(url, \"limit\", pager.limit);\n        if (pager.page)\n            url = addp(url, \"page\", pager.page);\n    }\n    return url;\n}\n\ngetPaged(url, pager) {\n    url = this.getPager(url, pager);\n    return this.get(url);\n}\n\nhandleError(error) : any {\n    /*if ((request.status == 403 && settings.url !== ApiSite + \"organizations\") || (request.status == 404 && settings.url === ApiSite + \"config\"))\n    {\n        logout(settings.url !== ApiSite + \"login\", request.statusText);\n    }*/\n//console.log(error);\n    let message: string = \"\";\n    try {\n        var e = JSON.parse(error._body);\n        if (typeof e === 'string')\n            message = e;\n        else\n            message = ((e || {}).ResponseStatus || {}).Message;\n    } catch (e) {\n        message = error._body; \n        if (message == \"[object ProgressEvent]\")\n            message = \"Cannot connect to API server\";\n    }\n    message = message || \"Error. Please contact Administrator\";\n    let url = error.url || \"\";\n    let status = (error.status || {}).toString();\n    message += \" (\" + status + \") \";\n    if (\n        (status == \"403\" && !~url.indexOf(\"organizations\"))  || ~url.indexOf(\"config\") || ~message.indexOf(\"User with token\"))\n        {\n            this.events.publish(\"login:failed\");\n        }\n\n    this.events.publish(\"connection:error\", (message || \"Error occured\") + \" Please contact Administator!\");\n\n    return Observable.throw(new Error(message));\n}\n}\n","export let isPhonegap = false;\n//offline\nexport let dontClearCache = false;\nexport let isSD = true;\nexport let Site = 'sherpadesk.com/';\nexport let MobileSite = 'https://m.' + Site;\nexport let AppSite = 'https://app.' + Site;\nexport let ApiSite = 'https://api.' + Site;\nexport let  year=\"2020\";\nexport let  appVersion = \"96\";\nexport let  AppTitle = 'SherpaDesk ';","import {Injectable} from '@angular/core';\nimport {Headers} from '@angular/http';\nimport {Observable, Observer} from 'rxjs';\nimport {ApiData} from './api-data';\nimport {addp} from '../directives/helpers';\nimport 'rxjs';\n\n@Injectable()\nexport class DataProvider {\n\n    data$: Object; \n    private _dataObserver: Object; \n    _dataStore: Object;\n\n    constructor(private apiData: ApiData) {\n        this.data$ = {}; \n        this._dataObserver = {};\n        this._dataStore = {};\n    }\n    \n    checkLogin(username, password) {\n        if(!username || !password) {\n            return this.apiData.handleError(\"Please enter login and password!\");\n        }\n\n        let url = \"login\";\n        var headers = new Headers({\n            'Content-Type': 'text/plain;charset=UTF-8',\n            'Accept': 'application/json, text/javascript, */*',\n            'Authorization': 'Basic ' + btoa(`${username}:${password}`)\n        });\n        return this.apiData.request(url, \n            \"\",\n            \"POST\", headers);\n    }\n    \n    getOrganizations(token) {\n        if(!token || token.length != 32) {\n            return this.apiData.handleError(\"Invalid token!\");\n        }\n        let url = \"organizations\";\n        var headers = new Headers({\n            'Accept': 'application/json',\n            'Content-Type': 'application/json',\n            'Authorization': 'Basic ' + btoa(`x:${token}`)\n        });\n        return this.apiData.request(url, \" \", \"\", headers);\n    }\n\n    registerOrganization(data) {\n        let url = \"organizations\";\n        var headers = new Headers({\n            'Accept': 'application/json',\n            'Content-Type': 'application/json',\n        });\n        return this.apiData.request(url, data, \"POST\", headers);\n    }\n\n    deleteFile(data) {\n        let url = \"files/\" + data.file_id;\n        return this.apiData.get(url, data, \"DELETE\");\n    }\n    \n    getConfig() {\n        let url = \"config\";\n        return this.apiData.get(url);\n    }\n\n    getProfile(id?, account?) {\n        let url = \"profile\";\n        url = addp(url, \"id\", id);\n        url = addp(url, \"account\", account);\n        return this.apiData.get(url);\n    }\n\n updateBadge() {\n    if (window.cordova && ((cordova.plugins || {}).notification || {}).badge){\n        if (localStorage.badge > 0){\n            cordova.plugins.notification.badge.set(localStorage.badge);\n        }\n        else\n            cordova.plugins.notification.badge.clear();\n    }\n}\n\n//update badge every 1 min \ngetQueueList(limit?) {\n    let url = addp(\"queues\",\"sort_by\", \"tickets_count\");\n    return this.apiData.get(url).map((arr: Array<any>) => {\n\n        let local_is_Queres = localStorage.getItem('is_queue');\n        let is_queue = local_is_Queres ? localStorage.getItem('is_queue').split(\", \") : [];\n\n        let badge = 0;\n\n\n        let nt = arr.filter((val) => val.fullname.toLowerCase().indexOf(\"new ticket\") == 0); \n        if (nt && nt.length > 0)\n            is_queue.push(nt.id);\n\n        if (is_queue.length > 0) {\n            arr.forEach(item => {\n                if (item.id == is_queue[0] || item.id == is_queue[1] || item.id == is_queue[2] || item.id == is_queue[3]) {\n                    badge += item.tickets_count;\n                }\n            });  \n        }\n        localStorage.badge = badge;\n\n        this.updateBadge();\n\n        if (arr && limit)\n        {\n            arr = arr.filter((val) => val.tickets_count > 0).slice(0, limit); \n        }\n        return arr;\n    });\n}\n\ngetInvoices(account_id, status, pager) {\n    let url = addp(\"invoices\",\"account\", account_id);\n    if (status === false)\n        url = addp(url, \"status\", \"unbilled\");\n    return this.apiData.getPaged(url, pager);\n}\n\ngetInvoice(id, account_id, contract_id, start_date?, end_date?, is_detailed?) {\n    let url = \"invoices\";\n    let data = {};\n    if (!id){\n        url = addp(url, \"status\", \"unbilled\");\n        url = addp(url, \"account\", account_id);\n        url = addp(url, \"contract_id\", contract_id);\n        url = addp(url, \"start_date\", start_date);\n        url = addp(url, \"end_date\", end_date);\n        url = addp(url, \"is_detailed\", is_detailed);\n    }\n    else \n    {\n        url += \"/\" + id;\n        url = addp(url, \"action\", \"sendEmail\");\n    }\n    return this.apiData.get(url, data);\n}\n\ngetExpenses(account_id, pager) {\n    let url = addp(\"expenses\", \"account\", account_id);\n    return this.apiData.getPaged(url, pager);\n}\n\ngetContracts(pager,is_for_timelogs?,id?) {\n    let url = `contracts`;\n    if (id){\n        url = `contracts/${id}`;\n    }\n    else if (!is_for_timelogs){\n        url = `contracts?for_time_logs=false`;\n    }\n    return this.apiData.getPaged(url, pager);\n}\n\ngetPrepaid_packs(account_id, pager) {\n    let url = addp(\"prepaid_packs\", \"account_id\", account_id);\n    return this.apiData.getPaged(url, pager);\n}\n\ngetPriorities() {\n    return this.apiData.get(\"priorities\");\n}\n\ngetLocationList(pager, is_open?) {\n    let url = \"locations\";\n    if (is_open) \n        url = addp(url, \"is_open_tickets\", \"true\");\n    return this.apiData.getPaged(url, pager);\n} \n\ngetAccountList(is_dashboard, pager, is_no_stat?, is_open?) {\n    let url = \"accounts\";\n    if (is_no_stat) \n        url = addp(url, \"is_with_statistics\", \"false\");\n    if (is_open) \n        url = addp(url, \"is_open_tickets\", is_dashboard ? \"1\" : \"true\");\n    return this.apiData.getPaged(url, pager);\n}   \n\ngetTechniciansList(pager, is_stat?, is_open?) {\n    let url = \"technicians\";\n    if (is_stat) \n        url = addp(url, \"is_with_statistics\", \"true\");\n    if (is_open) \n        url = addp(url, \"is_open_tickets\", \"true\");\n    return this.apiData.getPaged(url, pager);    \n}   \n\ngetAccountDetails(id,is_no_stat?) {\n    let url = `accounts/${id}`;\n    if (is_no_stat) \n        url = addp(url, \"is_with_statistics\", \"false\");\n    return this.apiData.get(url);\n}\ngetLocationDetails(id,is_no_stat?) {\n    let url = `locations/${id}`;\n    if (is_no_stat) \n        url = addp(url, \"is_with_statistics\", \"false\");\n    return this.apiData.get(url);\n}\n\n    addAccountNote(id, note) {\n        let url = `accounts/${id}`;\n        let data = {\n            \"note\": note,\n        };\n        return this.apiData.get(url, data, \"PUT\");\n    }\n\n\naddUser(email, firstname, lastname, role) {\n    let url = \"users\";\n    let data = {\n        \"Lastname\": lastname,\n        \"Firstname\": firstname,\n        \"email\": email,\n        \"role\": role\n};\nreturn this.apiData.get(url, data, \"POST\");\n}\n\nloginSkype(data) {\n    let url = \"skype/login\";\nreturn this.apiData.get(url, data, \"POST\");\n}\n\n}\n","export const MOCKS = \n{\n};","export * from './api-data';\nexport * from './data-provider';\nexport * from './ticket-provider';\nexport * from './time-provider';\nexport * from './todo-provider';","import {Injectable} from '@angular/core';\nimport {Config, Events} from 'ionic-angular';\nimport {dontClearCache} from './config';\nimport {Headers, Http} from '@angular/http';\nimport {Observable, Observer} from 'rxjs';\nimport {ApiData} from './api-data';\nimport {MOCKS} from './mocks';\nimport {addp} from '../directives/helpers';\nimport 'rxjs';\n\n@Injectable()\nexport class TicketProvider {\n\n    URL: string = \"tickets\";\n    tickets$: Object; //Array<Observable<Object[]>>;\n    private _ticketsObserver: Object; //Array<Observer<Object[]>>;\n    _dataStore: any;\n\n    constructor(private apiData: ApiData, private config: Config, private events: Events) {\n        this.tickets$ = {}; //new Observable(observer => this._ticketsObserver = observer).share();\n        this._ticketsObserver = {};\n        this._dataStore = {\n            all: [],\n            alt: [],\n            tech: [],\n            user: []\n        };\n     }\n\n    getTicketsList(tab, id, location, pager) {\n        //\"user\",\"tech\",\"alt\",\"all\"\n        id = id || \"\";\n        location = location || \"\";\n        let url = \"\";\n        switch (tab.toString()) {\n            case \"tech\":\n            url = `${this.URL}?status=open,onhold&role=tech`;\n            break;\n            case \"all\":\n            url = `${this.URL}?status=allopen&query=all`;\n            break;\n            case \"alt\":\n            url = `${this.URL}?status=open,onhold&role=alt_tech`;\n            break;\n            case \"open\":\n            url = `${this.URL}?status=open,onhold&account=${id}&location=${location}`;\n            break;\n            case \"closed\":\n            url = `${this.URL}?status=closed&account=${id}&location=${location}`;\n            break;\n            case \"closed-tech\":\n            url = `${this.URL}?status=closed&tech=${id}&role=tech`;\n            break;\n            case 'queue':\n            url = `queues/${id}`;\n            break;\n            default:\n                //case \"user\":\n                url = `${this.URL}?status=open,onhold&role=user`;\n                break;\n            }\n            //console.log(\"pager\", pager);\n            pager.limit = pager.limit || 25;\n            pager.page = pager.page || 0;\n            tab += id || \"\";\n            tab += location || \"\";\n            this._dataStore[tab] = this._dataStore[tab] || [];\n            if (dontClearCache){\n                this.tickets$[tab] = new Observable(observer => this._ticketsObserver[tab] = observer).share();\n                this._dataStore[tab] = MOCKS[\"tickets\"];\n            }\n            let cachelen = this._dataStore[tab].length;\n            if (pager.page == 0){\n                //pager.limit = cachelen || pager.limit;\n                    if (cachelen){\n                        setTimeout(() => {\n                            if (this._ticketsObserver[tab])\n                        this._ticketsObserver[tab].next(this._dataStore[tab] || []);\n                        }, 0);\n                    }\n                    else\n                    {\n                        this.tickets$[tab] = new Observable(observer => this._ticketsObserver[tab] = observer).share();\n                    }\n                \n            }\n            this.apiData.getPaged(url, pager).subscribe(data => {\n                if (pager.page > 0 && cachelen > 0)\n                    this._dataStore[tab].push(...data);\n                else\n                    this._dataStore[tab] = data;\n                if (this._ticketsObserver[tab])\n                this._ticketsObserver[tab].next(this._dataStore[tab]);\n                //if (data.length < pager.limit)\n                // add flag that data completed\n            }, error => this.apiData.handleError('Could not load tickets.'));\n            return cachelen;\n        }\n\n\n        getTicketDetails(key) {\n            let url = `${this.URL}/${key}`;\n            return this.apiData.get(url);\n        }\n\n        getUserProfile(user_id) {\n            let url = `profile/${user_id}`;\n            return this.apiData.get(url);\n        }        \n\n        getTicketsCounts() {\n            let url = `${this.URL}/counts`;\n            if (!this._dataStore[url]) {\n                this._dataStore[url] = [];\n                this.tickets$[url] = new Observable(observer => { this._ticketsObserver[url] = observer; }).share();\n            }\n            else {\n                if (this._dataStore[url].open_all >= 0) {\n                    setTimeout(() => {\n                        this._ticketsObserver[url].next(this._dataStore[url] || []);\n                    }, 0);\n                }\n            }\n            this.apiData.get(url).subscribe(data => {\n                this._dataStore[url] = data;\n                this._ticketsObserver[url].next(this._dataStore[url]);\n            }, error => console.log('Could not load tickets.'));\n        }\n\n        addTicket(data) {\n            data.status =  \"open\";\n            return this.apiData.get(this.URL, data, \"POST\");\n        }\n\n        closeOpenTicket(id, data) {\n            let url = `${this.URL}/${id}`;\n            return this.apiData.get(url, data, \"PUT\");\n        }\n\n        getContractor(account) {\n            let url = \"users\";\n            url = addp(url, \"role\", \"contractor\");\n            url = addp(url, \"account\", account);\n            return this.apiData.get(url);\n        }\n\n        getClasses() {\n            let url = \"classes\";\n            url = addp(url, \"is_flat_list\", \"true\");\n            return this.apiData.get(url);\n        }     \n\n        escalateTicket(id, is_esc) {\n        let url = `${this.URL}/${id}`;\n        let data = {\n                \"action\": is_esc ? \"escalate\" : \"deescalate\"\n            };\n            return this.apiData.get(url, data, \"PUT\");\n        }\n\n        addTicketPost(id, note, files?, waiting_response?, is_techs_only?) {\n            let url = `${this.URL}/${id}`;\n            let data = {\n                \"action\": \"response\",\n                \"note_text\": note,\n                \"files\" : files || [],\n                \"is_waiting_on_response\" : waiting_response,\n                \"is_tech_only\" : is_techs_only,\n            };\n            return this.apiData.get(url, data, \"POST\");\n        }\n\n        addTicketWorkpad(id, workpad) {\n            let url = `${this.URL}/${id}`;\n            let data = {\n                \"action\": \"workpad\",\n                \"workpad\": workpad,\n            };\n            return this.apiData.get(url, data, \"POST\");\n        }\n        addTicketSubject(id, subject, next_step) {\n            let url = `${this.URL}/${id}`;\n            let data = {\n                \"action\": \"subject\",\n                \"subject\": subject,\n                \"next_step\": next_step,\n            };\n            return this.apiData.get(url, data, \"POST\");\n        }\n\n        transferUserTech(id, data) {\n            let url = `${this.URL}/${id}`;\n            return this.apiData.get(url, data, \"POST\");\n        }\n\n        getCustomfields(class_id, pager) {\n            let url = addp(\"customfields\", \"class_id\", class_id);\n            return this.apiData.getPaged(url, pager);\n        }\n\n        addTicketNote(id, note) {\n            let url = `${this.URL}/${id}`;\n            let data = {\n                \"action\": \"note\",\n                \"note\": note,\n            };\n            return this.apiData.get(url, data, \"POST\");\n        }\n  }\n\n/*\nexport interface Todo {\n    id: number;\n    createdAt: number;\n    value: string;\n}\n\n@Injectable()\nexport class TodoService {\n    todos$: Observable<Todo[]>;\n    private _baseUrl: string;\n    private _todosObserver: Observer<Todo[]>;\n    private _dataStore: {\n        todos: Todo[]\n    };\n\n    constructor(private _http: Http) {\n        this._baseUrl = 'http://56e05c3213da80110013eba3.mockapi.io/api';\n        this.todos$ = new Observable(observer => this._todosObserver = observer).share();\n        this._dataStore = { todos: [] };\n    }\n\n    loadTodos() {\n        this._http.get(`${this._baseUrl}/todos`).map(response => response.json()).subscribe(data => {\n            this._dataStore.todos = data;\n            this._todosObserver.next(this._dataStore.todos);\n        }, error => console.log('Could not load todos.'));\n    }\n\n    createTodo(todo: Todo) {\n        this._http.post(`${this._baseUrl}/todos`, todo)\n            .map(response => response.json()).subscribe(data => {\n                this._dataStore.todos.push(data);\n                this._todosObserver.next(this._dataStore.todos);\n            }, error => console.log('Could not create todo.'));\n    }\n\n    updateTodo(todo: Todo) {\n        this._http.put(`${this._baseUrl}/todos/${todo.id}`, todo)\n            .map(response => response.json()).subscribe(data => {\n                this._dataStore.todos.forEach((todo, i) => {\n                    if (todo.id === data.id) { this._dataStore.todos[i] = data; }\n                });\n\n                this._todosObserver.next(this._dataStore.todos);\n            }, error => console.log('Could not update todo.'));\n    }\n\n    deleteTodo(todoId: number) {\n        this._http.delete(`${this._baseUrl}/todos/${todoId}`).subscribe(response => {\n            this._dataStore.todos.forEach((t, i) => {\n                if (t.id === todoId) { this._dataStore.todos.splice(i, 1); }\n            });\n\n            this._todosObserver.next(this._dataStore.todos);\n        }, error => console.log('Could not delete todo.'));\n    }\n}\n*/","import {Injectable} from '@angular/core';\nimport {Config, Events} from 'ionic-angular';\nimport {dontClearCache} from './config';\nimport {Headers, Http} from '@angular/http';\nimport {Observable, Observer} from 'rxjs';\nimport {ApiData} from './api-data';\nimport {addp} from '../directives/helpers';\nimport 'rxjs';\nimport {MOCKS} from './mocks';\n\n@Injectable()\nexport class TimeProvider {\n\n    URL: string = \"time\";\n    times$: Object; //Array<Observable<Object[]>>;\n    private _timesObserver: Object; //Array<Observer<Object[]>>;\n    _dataStore: any;\n\n    constructor(private apiData: ApiData, private config: Config, private events: Events) {\n        this.times$ = {}; //new Observable(observer => this._timesObserver = observer).share();\n        this._timesObserver = {};\n        this._dataStore = {};\n     }\n\n    getTimelogs(account_id, tech_id,  pager, start?, end?) {\n        let url = addp(this.URL, \"account\", account_id);\n        url = addp(url, \"tech\", tech_id);\n        url = addp(url, \"start_date\", start);\n        url = addp(url, \"end_date\", end);\n        pager.limit = pager.limit || 25;\n        pager.page = pager.page || 0;\n        this._dataStore[url] = this._dataStore[url] || [];\n        if (dontClearCache) {\n            this.times$[url] = new Observable(observer => this._timesObserver[url] = observer).share();\n            this._dataStore[url] = MOCKS[\"time\"];\n        }\n        let cachelen = this._dataStore[url].length;\n        if (pager.page == 0) {\n            pager.limit = Math.max(cachelen, pager.limit);\n            if (cachelen) {\n                setTimeout(() => {\n                    if (this._timesObserver[url])\n                        this._timesObserver[url].next(this._dataStore[url] || []);\n                }, 0);\n            }\n            else {\n                this.times$[url] = new Observable(observer => this._timesObserver[url] = observer).share();\n            }\n\n        }\n        this.apiData.getPaged(url, pager).subscribe(data => {\n            if (pager.page > 0  && cachelen > 0)\n                this._dataStore[url].push(...data);\n            else\n                this._dataStore[url] = data;\n            if (this._timesObserver[url])\n                this._timesObserver[url].next(this._dataStore[url]);\n        }, error => console.log('Could not load timelogs.'));\n        return cachelen;\n    }\n\n    addTime(id, data, method) {\n            let url = this.URL + (!id ? \"\" : (\"/\" + id));\n            return this.apiData.get(url, data, method);\n        }\n\n    deleteTime(id, data) {\n            let url = this.URL + \"/\" + id;\n            return this.apiData.get(url, data, \"DELETE\");\n        }\n    }","import {Injectable} from '@angular/core';\nimport {Config, Events} from 'ionic-angular';\nimport {dontClearCache} from './config';\nimport {Headers, Http} from '@angular/http';\nimport {Observable, Observer} from 'rxjs';\nimport {ApiData} from './api-data';\nimport {addp} from '../directives/helpers';\nimport \"rxjs\";\nimport {MOCKS} from './mocks';\n\n@Injectable()\nexport class TodoProvider {\n\n    URL: string = \"todos\";\n    todos$: Object; //Array<Observable<Object[]>>;\n    private _todosObserver: Object; //Array<Observer<Object[]>>;\n    _dataStore: any;\n\n    constructor(private apiData: ApiData, private config: Config, private events: Events) {\n        this.todos$ = {}; //new Observable(observer => this._todosObserver = observer).share();\n        this._todosObserver = {};\n        this._dataStore = {};\n     }\n\n    getTodos(user_id, ticket, completed, pager) {\n        let url = this.URL;\n        if (user_id)\n            url = addp(this.URL, \"assigned_id\", user_id);\n        if (ticket) \n            url = addp(url, \"ticket\", ticket || \"\");\n        url = addp(url, \"is_completed\", completed || \" \");\n\n        pager.limit = pager.limit || 25;\n        pager.page = pager.page || 0;\n        this._dataStore[url] = this._dataStore[url] || [];\n        if (dontClearCache) {\n            this.todos$[url] = new Observable(observer => this._todosObserver[url] = observer).share();\n            this._dataStore[url] = MOCKS[\"todo\"];\n        }\n        let cachelen = this._dataStore[url].length;\n        if (pager.page == 0) {\n            //pager.limit = cachelen || pager.limit;\n            if (cachelen) {\n                setTimeout(() => {\n                    if (this._todosObserver[url])\n                        this._todosObserver[url].next(this._dataStore[url] || []);\n                }, 0);\n            }\n            else {\n                this.todos$[url] = new Observable(observer => this._todosObserver[url] = observer).share();\n            }\n\n        }\n        var gotourl = url;\n        this.apiData.getPaged(gotourl.replace(\"is_completed= \", \"is_completed=\") + \"&all_item_types=true&is_sub_view=true\", pager).subscribe(data => {\n            if (pager.page > 0  && cachelen > 0)\n                this._dataStore[url].push(...data);\n            else\n                this._dataStore[url] = data;\n            if (this._todosObserver[url])\n                this._todosObserver[url].next(this._dataStore[url]);\n        }, error => console.log('Could not load todologs.'));\n        return cachelen;\n    }\n \n        addTodo(data) {\n            return this.apiData.get(this.URL, data, \"POST\");\n        }\n\n        setCompletedTodo(id, is_done) {\n            let url = `${this.URL}/${id}`;\n            var stream = this.apiData.get(url, {is_completed : is_done}, \"PUT\").publishLast();\n            stream.connect();\n            return( stream );\n        }\n    }","/// <reference path=\"main/ambient/es6-shim/es6-shim.d.ts\" />\n/// <reference path=\"main/ambient/googlemaps/googlemaps.d.ts\" />\n"],"preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5vZGVfbW9kdWxlcy9icm93c2VyLXBhY2svX3ByZWx1ZGUuanMiLCJhcHAvYXBwLnRzIiwiYXBwL2NvbXBvbmVudHMvYWNjb3VudHMtbGlzdC9hY2NvdW50cy1saXN0LnRzIiwiYXBwL2NvbXBvbmVudHMvYWN0aW9uLWJ1dHRvbi9hY3Rpb24tYnV0dG9uLnRzIiwiYXBwL2NvbXBvbmVudHMvY2xhc3MtbGlzdC9jbGFzcy1saXN0LnRzIiwiYXBwL2NvbXBvbmVudHMvY29tcG9uZW50cy50cyIsImFwcC9jb21wb25lbnRzL2N1c3RvbS1maWVsZC9jdXN0b20tZmllbGQudHMiLCJhcHAvY29tcG9uZW50cy9sb2NhdGlvbi1saXN0L2xvY2F0aW9uLWxpc3QudHMiLCJhcHAvY29tcG9uZW50cy9sb2NhdGlvbnMtbGlzdC9sb2NhdGlvbnMtbGlzdC50cyIsImFwcC9jb21wb25lbnRzL211bHRpLXNlbGVjdC9tdWx0aS1zZWxlY3QudHMiLCJhcHAvY29tcG9uZW50cy9wb3N0cy1saXN0L3Bvc3RzLWxpc3QudHMiLCJhcHAvY29tcG9uZW50cy9xdWV1ZXMtbGlzdC9xdWV1ZXMtbGlzdC50cyIsImFwcC9jb21wb25lbnRzL3NlbGVjdC1saXN0L3NlbGVjdC1saXN0LnRzIiwiYXBwL2NvbXBvbmVudHMvdGVjaHMtbGlzdC90ZWNocy1saXN0LnRzIiwiYXBwL2NvbXBvbmVudHMvdGlja2V0cy1saXN0L3RpY2tldHMtbGlzdC50cyIsImFwcC9jb21wb25lbnRzL3RvZG8tbGlzdC90b2RvLWxpc3QudHMiLCJhcHAvY29tcG9uZW50cy90cmVlLXZpZXcvdHJlZS12aWV3LnRzIiwiYXBwL2RpcmVjdGl2ZXMvZGlyZWN0aXZlcy50cyIsImFwcC9kaXJlY3RpdmVzL2ZvY3VzZXIudHMiLCJhcHAvZGlyZWN0aXZlcy9oZWxwZXJzLnRzIiwiYXBwL3BhZ2VzL2FjY291bnQtZGV0YWlscy9hY2NvdW50LWRldGFpbHMudHMiLCJhcHAvcGFnZXMvYWNjb3VudHMvYWNjb3VudHMudHMiLCJhcHAvcGFnZXMvYWpheC1zZWFyY2gvYWpheC1zZWFyY2gudHMiLCJhcHAvcGFnZXMvY29udHJhY3RzL2NvbnRyYWN0cy50cyIsImFwcC9wYWdlcy9kYXNoYm9hcmQvZGFzaGJvYXJkLnRzIiwiYXBwL3BhZ2VzL2V4cGVuc2UtY3JlYXRlL2V4cGVuc2UtY3JlYXRlLnRzIiwiYXBwL3BhZ2VzL2V4cGVuc2VzL2V4cGVuc2VzLnRzIiwiYXBwL3BhZ2VzL2ludm9pY2UtY3JlYXRlL2ludm9pY2UtY3JlYXRlLnRzIiwiYXBwL3BhZ2VzL2ludm9pY2UtZGV0YWlscy9pbnZvaWNlLWRldGFpbHMudHMiLCJhcHAvcGFnZXMvaW52b2ljZXMvaW52b2ljZXMudHMiLCJhcHAvcGFnZXMvbG9jYXRpb24tZGV0YWlscy9sb2NhdGlvbi1kZXRhaWxzLnRzIiwiYXBwL3BhZ2VzL2xvY2F0aW9ucy9sb2NhdGlvbnMudHMiLCJhcHAvcGFnZXMvbG9naW4vbG9naW4udHMiLCJhcHAvcGFnZXMvbW9kYWxzL2FkZC1maWxlcy9hZGQtZmlsZXMudHMiLCJhcHAvcGFnZXMvbW9kYWxzL2FkZC11c2VyL2FkZC11c2VyLnRzIiwiYXBwL3BhZ2VzL21vZGFscy9hamF4LXNlbGVjdC9hamF4LXNlbGVjdC50cyIsImFwcC9wYWdlcy9tb2RhbHMvYmFzaWMtc2VsZWN0L2Jhc2ljLXNlbGVjdC50cyIsImFwcC9wYWdlcy9tb2RhbHMvY2hhbmdlLXVzZXIvY2hhbmdlLXVzZXIudHMiLCJhcHAvcGFnZXMvbW9kYWxzL2Nsb3NlLXRpY2tldC9jbG9zZS10aWNrZXQudHMiLCJhcHAvcGFnZXMvbW9kYWxzL2luZmluaXR5LW11bHRpLXNlbGVjdC9pbmZpbml0eS1tdWx0aS1zZWxlY3QudHMiLCJhcHAvcGFnZXMvbW9kYWxzL2luZmluaXR5LXNlbGVjdC9pbmZpbml0eS1zZWxlY3QudHMiLCJhcHAvcGFnZXMvbW9kYWxzL21vZGFscy50cyIsImFwcC9wYWdlcy9tb2RhbHMvcHJpdmFjeS9wcml2YWN5LnRzIiwiYXBwL3BhZ2VzL21vZGFscy90aWNrZXQtY3JlYXRlL3RpY2tldC1jcmVhdGUudHMiLCJhcHAvcGFnZXMvbW9kYWxzL3RyYW5zZmVyLXRpY2tldC90cmFuc2Zlci10aWNrZXQudHMiLCJhcHAvcGFnZXMvbW9kYWxzL3RyZWUtbW9kYWwvdHJlZS1tb2RhbC50cyIsImFwcC9wYWdlcy9vcmdhbml6YXRpb25zL29yZ2FuaXphdGlvbnMudHMiLCJhcHAvcGFnZXMvcGFnZXMudHMiLCJhcHAvcGFnZXMvcHJvZmlsZS9wcm9maWxlLnRzIiwiYXBwL3BhZ2VzL3F1ZXVlLXRpY2tldHMvcXVldWUtdGlja2V0cy50cyIsImFwcC9wYWdlcy9xdWV1ZXMvcXVldWVzLnRzIiwiYXBwL3BhZ2VzL3NpZ251cC9zaWdudXAudHMiLCJhcHAvcGFnZXMvc2t5cGUvc2t5cGUudHMiLCJhcHAvcGFnZXMvdGVjaC10aWNrZXRzL3RlY2gtdGlja2V0cy50cyIsImFwcC9wYWdlcy90ZWNobmljaWFucy90ZWNobmljaWFucy50cyIsImFwcC9wYWdlcy90aWNrZXQtZGV0YWlscy90aWNrZXQtZGV0YWlscy50cyIsImFwcC9wYWdlcy90aWNrZXRzL3RpY2tldHMudHMiLCJhcHAvcGFnZXMvdGltZWxvZy90aW1lbG9nLnRzIiwiYXBwL3BhZ2VzL3RpbWVsb2dzL3RpbWVsb2dzLnRzIiwiYXBwL3BhZ2VzL3RvZG8tY3JlYXRlL3RvZG8tY3JlYXRlLnRzIiwiYXBwL3BhZ2VzL3RvZG9zL3RvZG9zLnRzIiwiYXBwL3BhZ2VzL3VuaW52b2ljZXMvdW5pbnZvaWNlcy50cyIsImFwcC9waXBlcy9jYXBpdGFsaXplLnRzIiwiYXBwL3BpcGVzL2RheXNhZ28udHMiLCJhcHAvcGlwZXMvZGF5c29sZC50cyIsImFwcC9waXBlcy9maWxlcy50cyIsImFwcC9waXBlcy9ncmF2YXRhci50cyIsImFwcC9waXBlcy9odG1sc2FmZS50cyIsImFwcC9waXBlcy9saW5lYnJlYWtzLnRzIiwiYXBwL3BpcGVzL21vcmUudHMiLCJhcHAvcGlwZXMvcGlwZXMudHMiLCJhcHAvcHJvdmlkZXJzL2FwaS1kYXRhLnRzIiwiYXBwL3Byb3ZpZGVycy9jb25maWcudHMiLCJhcHAvcHJvdmlkZXJzL2RhdGEtcHJvdmlkZXIudHMiLCJhcHAvcHJvdmlkZXJzL21vY2tzLnRzIiwiYXBwL3Byb3ZpZGVycy9wcm92aWRlcnMudHMiLCJhcHAvcHJvdmlkZXJzL3RpY2tldC1wcm92aWRlci50cyIsImFwcC9wcm92aWRlcnMvdGltZS1wcm92aWRlci50cyIsImFwcC9wcm92aWRlcnMvdG9kby1wcm92aWRlci50cyIsInR5cGluZ3MvbWFpbi5kLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7OztBQ0FBLHFCQUFnQyxlQUFlLENBQUMsQ0FBQTtBQUNoRCw4QkFBb0csZUFBZSxDQUFDLENBQUE7QUFHcEgsSUFBWSxTQUFTLFdBQU0sdUJBQXVCLENBQUMsQ0FBQTtBQUNuRCx1QkFBOEQsb0JBQW9CLENBQUMsQ0FBQTtBQUNuRixzQkFBb0IsbUJBQW1CLENBQUMsQ0FBQTtBQUN4QyxzQkFBMkIsZUFBZSxDQUFDLENBQUE7QUFDM0MsSUFBWSxPQUFPLFdBQU0sc0JBQXNCLENBQUMsQ0FBQTtBQUNoRCxJQUFZLEtBQUssV0FBTSxlQUFlLENBQUMsQ0FBQTtBQUN2QyxJQUFZLE1BQU0sV0FBTSx1QkFBdUIsQ0FBQyxDQUFBO0FBaUNoRDtJQWFFLGVBQW9CLEdBQWEsRUFBVSxRQUFrQixFQUFVLE1BQWMsRUFBVSxNQUFjLEVBQVUsSUFBb0IsRUFBVSxjQUF3QyxFQUFVLFlBQW9DO1FBYjdPLGlCQTJvQkM7UUE5bkJxQixRQUFHLEdBQUgsR0FBRyxDQUFVO1FBQVUsYUFBUSxHQUFSLFFBQVEsQ0FBVTtRQUFVLFdBQU0sR0FBTixNQUFNLENBQVE7UUFBVSxXQUFNLEdBQU4sTUFBTSxDQUFRO1FBQVUsU0FBSSxHQUFKLElBQUksQ0FBZ0I7UUFBVSxtQkFBYyxHQUFkLGNBQWMsQ0FBMEI7UUFBVSxpQkFBWSxHQUFaLFlBQVksQ0FBd0I7UUFSM08sZUFBVSxHQUFZLEtBQUssQ0FBQztRQUM1QixnQkFBVyxH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QUMsSUFBSSxDQUFDLElBQUksSUFBRyxnQkFBZ0IsQ0FBQyxDQUFBLENBQUM7WUFDdkMsR0FBRyxDQUFDLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxFQUFHLENBQUMsR0FBRyxLQUFLLENBQUMsTUFBTSxFQUFFLENBQUMsRUFBRSxFQUFFLENBQUM7Z0JBQ3ZDLEtBQUssSUFBSSxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUMsSUFBSSxHQUFHLElBQUksQ0FBQztnQkFDOUIsR0FBRyxJQUFJLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLEdBQUcsSUFBSSxDQUFDO1lBQzVCLENBQUM7UUFBQSxDQUFDO1FBQ0YsSUFBSSxDQUFBLENBQUM7WUFDRCxHQUFHLENBQUMsQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLEVBQUcsQ0FBQyxHQUFHLEtBQUssQ0FBQyxNQUFNLEVBQUUsQ0FBQyxFQUFFLEVBQUUsQ0FBQztnQkFDdkMsS0FBSyxJQUFJLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLElBQUksR0FBRSxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUMsS0FBSyxHQUFFLEdBQUcsRUFBRSxHQUFHLENBQUMsQ0FBQztnQkFDL0QsR0FBRyxJQUFJLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLEdBQUcsSUFBSSxDQUFDO1lBQzVCLENBQUM7UUFDTCxDQUFDO1FBQ0QsR0FBRyxHQUFHLEdBQUcsQ0FBQyxLQUFLLENBQUMsQ0FBQyxFQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7UUFDdEIsS0FBSyxHQUFHLEtBQUssQ0FBQyxLQUFLLENBQUMsQ0FBQyxFQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7UUFDMUIsSUFBSSxDQUFDLElBQUksQ0FBQyxLQUFLLEdBQUcsS0FBSyxDQUFDO1FBQ3hCLEtBQUssR0FBRztZQUNKLEVBQUUsRUFBRSxHQUFHO1lBQ1AsSUFBSSxFQUFFLEtBQUs7U0FDZCxDQUFDO1FBRUYsS0FBSyxDQUFDLElBQUksR0FBRyxJQUFJLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsR0FBRyxDQUFDLENBQUMsSUFBSSxDQUFDLEVBQUUsQ0FBQyxDQUFDLFdBQVcsRUFBRSxDQUFDO1FBQzlELElBQUksQ0FBQyxRQUFRLEdBQUcsSUFBSSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUM7UUFDaEMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUM7SUFDM0IsQ0FBQztJQUVELDRDQUFhLEdBQWIsVUFBYyxVQUFVO1FBQXhCLGlCQWdCRDtRQWRDLElBQUksQ0FBQyxjQUFjLENBQUMsYUFBYSxDQUFDLFVBQVUsQ0FBQyxDQUFDLFNBQVMsQ0FDckQsVUFBQSxJQUFJO1lBQ0YsS0FBSSxDQUFDLFdBQVcsR0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDO1lBQzdCLEVBQUUsQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFBLENBQUM7Z0JBQ04sSUFBSSxDQUFDLE9BQU8sQ0FBQyxVQUFBLElBQUk7b0JBQ2IsSUFBSSxDQUFDLFFBQVEsR0FBRyxjQUFjLEdBQUcsSUFBSSxDQUFDLFFBQVEsQ0FBQztvQkFDL0MsS0FBSSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsTUFBTSxDQUFDLENBQUMsRUFBQyxDQUFDLEVBQUMsSUFBSSxDQUFDLENBQUM7Z0JBQ3JDLENBQUMsQ0FBQyxDQUFDO1lBQ1AsQ0FBQztRQUNILENBQUMsRUFDRCxVQUFBLEtBQUs7WUFDSCxPQUFPLENBQUMsR0FBRyxDQUFDLEtBQUssSUFBSSxjQUFjLENBQUMsQ0FBQztRQUN2QyxDQUFDLENBQ0EsQ0FBQztJQUNOLENBQUM7SUFFQSx5Q0FBVSxHQUFWO1FBQUEsaUJBVUE7UUFUQyxJQUFJLENBQUMsY0FBYyxDQUFDLFVBQVUsRUFBRSxDQUFDLFNBQVMsQ0FDeEMsVUFBQSxJQUFJO1lBQ0YsRUFBRSxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUEsQ0FBQztnQkFDTixLQUFJLENBQUMsT0FBTyxHQUFHLElBQUksQ0FBQztZQUFTLENBQUM7UUFDcEMsQ0FBQyxFQUNELFVBQUEsS0FBSztZQUNILE9BQU8sQ0FBQyxHQUFHLENBQUMsS0FBSyxJQUFJLGNBQWMsQ0FBQyxDQUFDO1FBQ3ZDLENBQUMsQ0FDQSxDQUFDO0lBQ04sQ0FBQztJQUVELGlEQUFrQixHQUFsQjtRQUFBLGlCQWtDQztRQWpDRyxJQUFJLFFBQVEsQ0FBQztRQUNiLElBQUksQ0FBQyxPQUFPLENBQUMsT0FBTyxDQUFDLFVBQUEsSUFBSTtZQUNyQixFQUFFLENBQUEsQ0FBQyxJQUFJLENBQUMsRUFBRSxJQUFHLEtBQUksQ0FBQyxRQUFRLENBQUM7Z0JBQ3ZCLFFBQVEsR0FBRyxJQUFJLENBQUMsY0FBYyxDQUFDO1FBQ3ZDLENBQUMsQ0FBQyxDQUFDO1FBQ0gsRUFBRSxDQUFDLENBQUMsUUFBUSxDQUFDLENBQUEsQ0FBQztZQUNiLFFBQVEsR0FBRyxRQUFRLENBQUMsT0FBTyxDQUFDLElBQUksRUFBRSxFQUFFLENBQUMsQ0FBQztZQUN0QyxJQUFJLENBQUMsSUFBSSxDQUFDLFFBQVEsR0FBRyxRQUFRLENBQUM7WUFDOUIsSUFBSSxPQUFLLEdBQUcsUUFBUSxDQUFDLEtBQUssQ0FBQyxHQUFHLENBQUMsQ0FBQztZQUNoQyxJQUFJLGVBQWEsR0FBRyxFQUFFLENBQUM7WUFDdkIsSUFBSSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsT0FBTyxDQUFDLFVBQUEsSUFBSTtnQkFDeEIsR0FBRyxDQUFDLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsR0FBRyxPQUFLLENBQUMsTUFBTSxFQUFFLEVBQUUsQ0FBQyxFQUFFLENBQUM7b0JBQ3BDLEVBQUUsQ0FBQyxDQUFDLElBQUksQ0FBQyxFQUFFLElBQUksT0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUEsQ0FBQzt3QkFDdEIsZUFBYSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQztvQkFDNUIsQ0FBQztvQkFDRCxJQUFJO3dCQUNELElBQUksQ0FBQyxXQUFXLEdBQUcsS0FBSyxDQUFDO2dCQUNoQyxDQUFDO1lBQ0wsQ0FBQyxDQUFDLENBQUM7WUFDSCxlQUFhLENBQUMsT0FBTyxDQUFDLFVBQUEsSUFBSTtnQkFDdkIsSUFBSSxDQUFDLFdBQVcsR0FBRyxJQUFJLENBQUM7WUFDM0IsQ0FBQyxDQUFDLENBQUM7WUFDSCxJQUFJLENBQUMsSUFBSSxDQUFDLGNBQWMsR0FBRyxlQUFhLENBQUM7WUFDekMsSUFBSSxDQUFDLFlBQVksQ0FBQyxlQUFhLENBQUMsQ0FBQztRQUNqQyxDQUFDO1FBQ0QsSUFBSSxDQUFBLENBQUM7WUFDRixJQUFJLENBQUMsSUFBSSxDQUFDLGNBQWMsR0FBRyxFQUFFLENBQUM7WUFDOUIsSUFBSSxDQUFDLElBQUksQ0FBQyxRQUFRLEdBQUcsRUFBRSxDQUFDO1lBQ3hCLElBQUksQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLE9BQU8sQ0FBQyxVQUFBLElBQUk7Z0JBQ3hCLElBQUksQ0FBQyxXQUFXLEdBQUcsS0FBSyxDQUFDO1lBQzdCLENBQUMsQ0FBQyxDQUFDO1lBQ0gsSUFBSSxDQUFDLFlBQVksQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLGNBQWMsQ0FBQyxDQUFDO1FBQy9DLENBQUM7SUFDTixDQUFDO0lBRUQsMENBQVcsR0FBWCxVQUFZLElBQUk7UUFDZixJQUFJLE9BQU8sR0FBRyxFQUFFLENBQUM7UUFDakIsRUFBRSxDQUFDLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxPQUFPLENBQUMsZUFBZSxJQUFJLElBQUksQ0FBQyxNQUFNLENBQUMsT0FBTyxDQUFDLDBCQUEwQixDQUFDLENBQUEsQ0FBQztZQUN2RixJQUFJLENBQUMsT0FBTyxDQUFDLFVBQUEsSUFBSTtnQkFDYixFQUFFLENBQUMsQ0FBQyxJQUFJLENBQUMsY0FBYyxJQUFJLElBQUksQ0FBQztvQkFDNUIsT0FBTyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQztZQUMzQixDQUFDLENBQUMsQ0FBQztZQUNILElBQUksQ0FBQyxJQUFJLENBQUMsS0FBSyxHQUFHLE9BQU8sQ0FBQztRQUM5QixDQUFDO1FBQ0QsSUFBSTtZQUNBLElBQUksQ0FBQyxJQUFJLENBQUMsS0FBSyxHQUFHLElBQUksQ0FBQztJQUM3QixDQUFDO0lBRUUsd0NBQVMsR0FBVDtRQUFBLGlCQW1CQztRQWpCRyxJQUFJLENBQUMsSUFBSSxDQUFDLFFBQVEsR0FBRyxJQUFJLENBQUMsUUFBUSxDQUFDO1FBQ25DLElBQUksR0FBRyxHQUFHLElBQUksQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLE1BQU0sSUFBSSxDQUFDLENBQUM7UUFDdEMsSUFBSSxLQUFLLEdBQUcsaUNBQXdCLENBQUM7UUFDckMsSUFBSSxPQUFPLEdBQUcscUJBQUssQ0FBQyxNQUFNLENBQUMsS0FBSyxFQUFFLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUM3QyxJQUFJLEtBQUssR0FBRyxFQUFFLENBQUM7UUFDZixPQUFPLENBQUMsU0FBUyxDQUFDLFVBQUEsSUFBSTtZQUNkLEVBQUUsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDO2dCQUNOLE1BQU0sQ0FBQztZQUNYLEtBQUksQ0FBQyxRQUFRLEdBQUcsS0FBSSxDQUFDLElBQUksQ0FBQyxjQUFjLEdBQUcsSUFBSSxDQUFDO1lBQzVDLEtBQUksQ0FBQyxJQUFJLENBQUMsY0FBYyxDQUFDLE9BQU8sQ0FBQyxVQUFBLE1BQU07Z0JBQ3BDLE1BQU0sQ0FBQyxXQUFXLEdBQUcsSUFBSSxDQUFDO1lBQ3hCLENBQUMsQ0FBQyxDQUFDO1lBRVosS0FBSSxDQUFDLFlBQVksQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUVoQyxDQUFDLENBQUMsQ0FBQztRQUNILElBQUksQ0FBQyxHQUFHLENBQUMsT0FBTyxDQUFDLE9BQU8sQ0FBQyxDQUFDO0lBQzlCLENBQUM7SUFyVEY7UUFBQyxZQUFLLEVBQUU7O3NEQUFBO0lBQ1I7UUFBQyxZQUFLLEVBQUU7OzREQUFBO0lBQ1I7UUFBQyxZQUFLLEVBQUU7OzBEQUFBO0lBQ1I7UUFBQyxZQUFLLEVBQUU7OzBEQUFBO0lBQ1I7UUFBQyxZQUFLLEVBQUU7OzREQUFBO0lBQ1I7UUFBQyxZQUFLLEVBQUU7O3VEQUFBO0lBQ1I7UUFBQyxZQUFLLEVBQUU7O3lEQUFBO0lBQ1I7UUFBQyxZQUFLLEVBQUU7O3NEQUFBO0lBQ1I7UUFBQyxhQUFNLEVBQUU7OzJEQUFBO0lBZGI7UUFBQyxnQkFBUyxDQUFDO1lBQ1AsUUFBUSxFQUFFLGNBQWM7WUFDeEIsV0FBVyxFQUFFLGlEQUFpRDtZQUM5RCxVQUFVLEVBQUUsQ0FBQyxnQ0FBZ0IsQ0FBQztTQUNqQyxDQUFDOzs0QkFBQTtJQXlURCwyQkFBQztBQUFELENBeFRELEFBd1RFLElBQUE7QUF4VFcsNEJBQW9CLHVCQXdUL0IsQ0FBQTs7Ozs7Ozs7Ozs7OztBQ3RVRiw4QkFBdUMsZUFBZSxDQUFDLENBQUE7QUFDdkQscUJBQStCLGVBQWUsQ0FBQyxDQUFBO0FBQy9DLHdCQUF1QywwQkFBMEIsQ0FBQyxDQUFBO0FBQ2xFLHNCQUFtRSxtQkFBbUIsQ0FBQyxDQUFBO0FBU3ZGO0lBUUksNEJBQW9CLE1BQWM7UUFBZCxXQUFNLEdBQU4sTUFBTSxDQUFRO1FBUHpCLFVBQUssR0FBZSxFQUFFLENBQUM7UUFDaEMsV0FBTSxHQUFnQixFQUFFLENBQUM7UUFDaEIsZ0JBQVcsR0FBZSxFQUFFLENBQUM7SUFNdEMsQ0FBQztJQUVELG1DQUFNLEdBQU47UUFFSSxJQUFJLEtBQUssR0FBRyxFQUFFLENBQUM7UUFDZixFQUFFLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxXQUFXLENBQUM7WUFDbEIsS0FBSyxHQUFJLElBQUksQ0FBQyxLQUFLLENBQUMsTUFBTSxDQUFDLFVBQUEsSUFBSSxJQUFJLE9BQUEsQ0FBQyxDQUFDLENBQUMsQ0FBQyxjQUFjLEVBQUUsVUFBVSxFQUFFLFFBQVEsRUFBRSxVQUFVLENBQUMsQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxFQUE1RSxDQUE0RSxDQUFDLENBQUM7UUFDckgsSUFBSTtZQUNBLEtBQUssR0FBRyxJQUFJLENBQUMsS0FBSyxDQUFDO1FBQ3ZCLElBQUksQ0FBQyxNQUFNLEdBQUcsSUFBSSxDQUFDLFFBQVEsR0FBRyxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQyxHQUFHLEtBQUssQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUM7SUFDOUQsQ0FBQztJQUVELHFDQUFRLEdBQVI7UUFDRSxJQUFJLENBQUMsTUFBTSxFQUFFLENBQUM7SUFDaEIsQ0FBQztJQUVELHdDQUFXLEdBQVgsVUFBWSxLQUFLO1FBQ2IsRUFBRSxDQUFDLENBQUMsYUFBYSxJQUFJLEtBQUssQ0FBQyxDQUN2QixDQUFDO1lBQ0csSUFBSSxDQUFDLE1BQU0sRUFBRSxDQUFDO1lBQ2QsTUFBTSxDQUFDO1FBQ1gsQ0FBQztRQUNMLEVBQUUsQ0FBQyxDQUFDLE9BQU8sSUFBSSxLQUFLLENBQUMsQ0FBQyxDQUFDO1lBQ2xCLEVBQUUsQ0FBQyxDQUFDLE9BQU8sSUFBSSxLQUFLLElBQUssQ0FBQyxLQUFLLENBQUMsS0FBSyxDQUFDLGFBQWEsRUFBRSxJQUFJLENBQUMsS0FBSyxDQUFDLEtBQUssQ0FBQyxZQUFZLENBQUMsQ0FBQyxDQUFDLElBQUksRUFBRSxDQUFDLENBQUMsRUFBRSxJQUFJLENBQUMsS0FBSyxDQUFDLEtBQUssQ0FBQyxhQUFhLENBQUMsQ0FBQyxDQUFDLElBQUksRUFBRSxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUM7Z0JBQ3hJLE1BQU0sQ0FBQztZQUNYLElBQUksQ0FBQyxNQUFNLEVBQUUsQ0FBQztRQUNqQixDQUFDO0lBSVAsQ0FBQztJQUdELG9DQUFPLEdBQVAsVUFBUSxJQUFJLEVBQUUsU0FBVSxFQUFFLE1BQU87UUFDNUIsRUFBRSxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUEsQ0FBQztZQUVYLElBQUksR0FBRyxJQUFJLElBQUksQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLENBQUMsRUFBQyxFQUFFLENBQUMsR0FBQyxHQUFHLENBQUMsQ0FBQztZQUUxQyxNQUFNLENBQUMscUJBQVcsQ0FBQyxJQUFJLEVBQUUsU0FBUyxFQUFFLE1BQU0sQ0FBQyxDQUFDO1FBQzVDLENBQUM7UUFDRCxNQUFNLENBQUMsSUFBSSxDQUFDO0lBQ2IsQ0FBQztJQWpESjtRQUFDLFlBQUssRUFBRTs7cURBQUE7SUFFUjtRQUFDLFlBQUssRUFBRTs7MkRBQUE7SUFDUjtRQUFDLFlBQUssRUFBRTs7MkRBQUE7SUFDUjtRQUFDLFlBQUssRUFBRTs7d0RBQUE7SUFYWjtRQUFDLGdCQUFTLENBQUM7WUFDUCxRQUFRLEVBQUUsWUFBWTtZQUN0QixXQUFXLEVBQUUsNkNBQTZDO1lBQzFELFVBQVUsRUFBRSxDQUFDLGdDQUFnQixDQUFDO1lBQzlCLEtBQUssRUFBRSxDQUFDLHNCQUFjLEVBQUUsb0JBQVksRUFBRSxtQkFBVyxFQUFFLGlCQUFTLENBQUM7U0FDaEUsQ0FBQzs7MEJBQUE7SUEwREYseUJBQUM7QUFBRCxDQXpEQSxBQXlEQyxJQUFBO0FBekRZLDBCQUFrQixxQkF5RDlCLENBQUE7Ozs7Ozs7Ozs7Ozs7QUNyRUQsOEJBQStDLGVBQWUsQ0FBQyxDQUFBO0FBQy9ELHFCQUEwQyxlQUFlLENBQUMsQ0FBQTtBQUMxRCw4QkFBK0IseUNBQXlDLENBQUMsQ0FBQTtBQUN6RSxzQkFBdUIsbUJBQW1CLENBQUMsQ0FBQTtBQVMzQztJQUtLLDZCQUFvQixHQUFRO1FBQVIsUUFBRyxHQUFILEdBQUcsQ0FBSztRQUN4QixJQUFJLENBQUMsUUFBUSxHQUFHLEtBQUssQ0FBQztJQUMvQixDQUFDO0lBRUkseUNBQVcsR0FBWCxVQUFZLEtBQUs7UUFDYixFQUFFLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUM7WUFDYixNQUFNLENBQUM7UUFDWCxFQUFFLENBQUMsQ0FBQyxRQUFRLElBQUksS0FBTSxDQUFDLENBQUMsQ0FBQztZQUVyQixFQUFFLENBQUMsQ0FBQyxLQUFLLENBQUMsTUFBTSxDQUFDLGFBQWEsRUFBRSxJQUFJLEtBQUssQ0FBQyxNQUFNLENBQUMsWUFBWSxLQUFLLElBQUksQ0FBQztnQkFDbkUsTUFBTSxDQUFDO1lBQ1gsSUFBSSxDQUFDLFFBQVEsR0FBRyxDQUFDLEtBQUssQ0FBQyxNQUFNLENBQUMsWUFBWSxJQUFJLEtBQUssQ0FBQyxNQUFNLENBQUMsWUFBWSxDQUFDLE1BQU0sSUFBSSxDQUFDLENBQUM7UUFDeEYsQ0FBQztJQUNMLENBQUM7SUFFRCxrREFBb0IsR0FBcEIsVUFBcUIsS0FBSztRQUN0QixJQUFJLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxnQ0FBZ0IsRUFBRSxLQUFLLENBQUMsQ0FBQztJQUMzQyxDQUFDO0lBckJGO1FBQUMsWUFBSyxFQUFFOzt1REFBQTtJQUNSO1FBQUMsWUFBSyxFQUFFOzt1REFBQTtJQVRaO1FBQUMsZ0JBQVMsQ0FBQztZQUNQLFFBQVEsRUFBRSxhQUFhO1lBQ3ZCLFdBQVcsRUFBRSwrQ0FBK0M7WUFDaEUsVUFBVSxFQUFFLENBQUMsZ0NBQWdCLENBQUM7WUFDOUIsS0FBSyxFQUFFLENBQUMsZ0JBQVEsQ0FBQztTQUNoQixDQUFDOzsyQkFBQTtJQTBCRiwwQkFBQztBQUFELENBeEJBLEFBd0JDLElBQUE7QUF4QlksMkJBQW1CLHNCQXdCL0IsQ0FBQTs7Ozs7Ozs7Ozs7OztBQ3BDRCw4QkFBbUUsZUFBZSxDQUFDLENBQUE7QUFDbkYseUJBQXNCLDBCQUEwQixDQUFDLENBQUE7QUFDakQsd0JBQTBCLDBCQUEwQixDQUFDLENBQUE7QUFDckQsMEJBQTZCLDJCQUEyQixDQUFDLENBQUE7QUFDekQscUJBQXdFLGVBQWUsQ0FBQyxDQUFBO0FBQ3hGLHVCQUFxRSwyQkFBMkIsQ0FBQyxDQUFBO0FBRWpHLElBQU0sVUFBVSxHQUFHLENBQUMsQ0FBQztBQU9yQjtJQWtCSSw2QkFBb0IsR0FBUSxFQUFVLGNBQThCLEVBQVUsT0FBZ0IsRUFBVSxNQUFjO1FBQWxHLFFBQUcsR0FBSCxHQUFHLENBQUs7UUFBVSxtQkFBYyxHQUFkLGNBQWMsQ0FBZ0I7UUFBVSxZQUFPLEdBQVAsT0FBTyxDQUFTO1FBQVUsV0FBTSxHQUFOLE1BQU0sQ0FBUTtRQWI3RyxlQUFVLEdBQVksSUFBSSxDQUFDO1FBQzNCLFlBQU8sR0FBWSxLQUFLLENBQUM7UUFLakIsY0FBUyxHQUFzQixJQUFJLG1CQUFZLENBQUMsS0FBSyxDQUFDLENBQUM7UUFDeEUsYUFBUSxHQUFXLEVBQUUsQ0FBQztRQUN0QixTQUFJLEdBQVksSUFBSSxDQUFDO1FBQ3JCLGdCQUFXLEdBQVcsQ0FBQyxDQUFDO1FBRXhCLFNBQUksR0FBVyxFQUFFLENBQUM7UUFHZCxJQUFJLENBQUMsSUFBSSxHQUFHLEVBQUUsQ0FBQztJQUNuQixDQUFDO0lBSUQseUNBQVcsR0FBWCxVQUFZLEtBQUs7UUFFYixFQUFFLENBQUMsQ0FBQyxZQUFZLElBQUksS0FBTSxDQUFDLENBQUMsQ0FBQztZQUN6QixFQUFFLENBQUMsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxXQUFXLEVBQUUsSUFBSSxVQUFVLElBQUksQ0FBQyxLQUFLLENBQUMsVUFBVSxDQUFDLGFBQWEsRUFBRSxJQUFJLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDO2dCQUN2RyxJQUFJLENBQUMsUUFBUSxDQUFDLEtBQUssQ0FBQyxDQUFDO1lBQ3pCLENBQUM7WUFDRCxJQUFJLENBQUMsRUFBRSxDQUFDLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsV0FBVyxFQUFFLElBQUksTUFBTSxJQUFJLENBQUMsS0FBSyxDQUFDLFVBQVUsQ0FBQyxhQUFhLEVBQUUsSUFBSSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUEsQ0FBQztnQkFDdkcsRUFBRSxDQUFFLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsTUFBTSxDQUFDLENBQUEsQ0FBQztvQkFDekIsSUFBSSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsTUFBTSxDQUFDLENBQUMsRUFBQyxJQUFJLENBQUMsV0FBVyxDQUFDLENBQUM7b0JBQzNDLElBQUksQ0FBQyxhQUFhLENBQUMsSUFBSSxDQUFDLFVBQVUsQ0FBQyxDQUFDO2dCQUN4QyxDQUFDO1lBQ0wsQ0FBQztRQUNMLENBQUM7UUFDRCxFQUFFLENBQUMsQ0FBQyxVQUFVLElBQUksS0FBTSxDQUFDLENBQUMsQ0FBQztZQUN2QixFQUFFLENBQUMsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxXQUFXLEVBQUUsSUFBSSxPQUFPLElBQUksQ0FBQyxLQUFLLENBQUMsUUFBUSxDQUFDLGFBQWEsRUFBRSxJQUFJLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDO2dCQUNsRyxJQUFJLENBQUMsUUFBUSxDQUFDLEtBQUssQ0FBQyxDQUFDO1lBQ3pCLENBQUM7UUFDTCxDQUFDO0lBVUwsQ0FBQztJQUVELHNDQUFRLEdBQVI7UUFDSSxJQUFJLFFBQVEsR0FBRyxJQUFJLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxXQUFXLEVBQUUsQ0FBQztRQUM1QyxFQUFFLENBQUMsQ0FBQyxDQUFDLFFBQVEsSUFBSSxTQUFTLElBQUksQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLE9BQU8sQ0FBQyxtQkFBbUIsQ0FBQztZQUNuRSxDQUFDLFFBQVEsSUFBSSxPQUFPLElBQUksQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLE9BQU8sQ0FBQyxRQUFRLENBQUM7WUFDdEQsQ0FBQyxRQUFRLElBQUksVUFBVSxJQUFJLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxPQUFPLENBQUMsb0JBQW9CLENBQUM7WUFDckUsQ0FBQyxDQUFDLFFBQVEsSUFBSSxVQUFVLElBQUksUUFBUSxJQUFJLGNBQWMsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxPQUFPLENBQUMsVUFBVSxDQUFDO1lBQzNGLENBQUMsUUFBUSxJQUFJLFVBQVUsSUFBSSxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsT0FBTyxDQUFDLHFCQUFxQixDQUFDO1lBQ3RFLENBQUMsUUFBUSxJQUFJLFNBQVMsSUFBSSxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsT0FBTyxDQUFDLGtCQUFrQixDQUFDO1lBQ2xFLENBQUMsUUFBUSxJQUFJLE9BQU8sSUFBSSxDQUFDLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxPQUFPLENBQUMsZ0JBQWdCLElBQUksQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLE9BQU8sQ0FBQyx5QkFBeUIsSUFBSSxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQyxDQUFDO1lBQ3pKLENBQUMsQ0FBQyxRQUFRLElBQUksWUFBWSxJQUFJLFFBQVEsSUFBSSxVQUFVLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsT0FBTyxDQUFDLHNCQUFzQixDQUFDLENBQUMsQ0FDMUcsQ0FBQztZQUNHLElBQUksQ0FBQyxJQUFJLENBQUMsTUFBTSxHQUFHLElBQUksQ0FBQztRQUM1QixDQUFDO1FBRUQsSUFBSSxDQUFDLFVBQVUsR0FBRyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsV0FBVyxDQUFDO1FBQ3pDLElBQUksQ0FBQyxPQUFPLEdBQUcsSUFBSSxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUM7UUFFakMsRUFBRSxDQUFDLENBQUUsUUFBUSxJQUFJLE1BQU0sSUFBSSxRQUFRLElBQUksTUFBTSxDQUFDO1lBQzFDLElBQUksQ0FBQyxJQUFJLENBQUMsV0FBVyxHQUFHLElBQUksQ0FBQyxJQUFJLEdBQUcsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLE9BQU8sQ0FBQyxLQUFLLENBQUMsUUFBUSxDQUFDLElBQUksRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDO1FBQ3RGLElBQUk7WUFDQSxJQUFJLENBQUMsSUFBSSxDQUFDLFdBQVcsR0FBRyxJQUFJLENBQUMsSUFBSSxHQUFHLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxPQUFPLENBQUMsS0FBSyxDQUFDLFFBQVEsQ0FBQyxJQUFJLEVBQUUsQ0FBQyxDQUFDLENBQUMsSUFBSSxJQUFJLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQztRQUV4RyxFQUFFLENBQUMsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQztZQUNqQixNQUFNLENBQUM7UUFFWCxFQUFFLENBQUMsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxDQUNsQixDQUFDO1lBQ0csSUFBSSxDQUFDLEdBQUcsR0FBRyxJQUFJLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQztZQUN4QixFQUFFLENBQUMsQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLENBQ2pCLENBQUM7Z0JBQ0csSUFBSSxDQUFDLFFBQVEsQ0FBQyxLQUFLLENBQUMsQ0FBQztZQUN6QixDQUFDO1FBRUwsQ0FBQztJQUNMLENBQUM7SUFFRCxnQ0FBRSxHQUFGO1FBRUcsSUFBSSxFQUFFLEdBQUcsSUFBSSxDQUFDLE1BQU0sQ0FBQyxVQUFVLENBQUMsTUFBTSxDQUFDLENBQUM7UUFDeEMsSUFBSSxLQUFLLEdBQUc7WUFDUixFQUFFLEVBQUUsRUFBRSxDQUFDLE9BQU87WUFDZCxJQUFJLEVBQUUscUJBQVcsQ0FBQyxFQUFFLENBQUMsU0FBUyxFQUFFLEVBQUUsQ0FBQyxRQUFRLEVBQUUsRUFBRSxDQUFDLEtBQUssQ0FBQztTQUN6RCxDQUFDO1FBQ0YsSUFBSSxDQUFDLFlBQVksQ0FBQyxLQUFLLENBQUMsQ0FBQztJQUM1QixDQUFDO0lBRUQsa0NBQUksR0FBSjtRQUVHLElBQUksQ0FBQyxVQUFVLEdBQUcsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLFdBQVcsQ0FBQztRQUN6QyxFQUFFLENBQUMsQ0FBQyxJQUFJLENBQUMsVUFBVSxDQUFDLENBQUEsQ0FBQztZQUNwQixJQUFJLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxDQUFDO1FBQ3JCLENBQUM7SUFDSixDQUFDO0lBRUQsc0NBQVEsR0FBUixVQUFVLElBQUk7UUFBZCxpQkE4Q0g7UUE1Q08sRUFBRSxDQUFDLENBQUMsSUFBSSxDQUFDLEdBQUcsSUFBSSxJQUFJLENBQUMsSUFBSSxDQUFDLEdBQUcsSUFBSSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsS0FBSyxJQUFJLElBQUksQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLE1BQU0sSUFBSSxDQUFDLENBQUMsQ0FBQSxDQUFDO1lBQy9FLElBQUksU0FBTyxHQUFHLElBQUksQ0FBQztZQUNsQixFQUFFLENBQUMsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUM7Z0JBQ2hCLEVBQUUsQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFBLENBQUM7b0JBQ04sU0FBTyxHQUFHLHVCQUFPLENBQUMsTUFBTSxDQUFDO3dCQUN6QixPQUFPLEVBQUUsZ0JBQWdCO3dCQUN6QixRQUFRLEVBQUUsSUFBSTt3QkFDZCxtQkFBbUIsRUFBRSxJQUFJO3FCQUM1QixDQUFDLENBQUM7b0JBQ0gsSUFBSSxDQUFDLEdBQUcsQ0FBQyxPQUFPLENBQUMsU0FBTyxDQUFDLENBQUM7Z0JBQzlCLENBQUM7Z0JBRUcsSUFBSSxDQUFDLE9BQU8sQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsQ0FBQyxTQUFTLENBQ3JDLFVBQUEsSUFBSTtvQkFDQSxFQUFFLENBQUEsQ0FBQyxLQUFJLENBQUMsSUFBSSxJQUFHLE1BQU0sQ0FBQzt3QkFDbEIsS0FBSSxDQUFDLFdBQVcsQ0FBQyxJQUFJLENBQUMsQ0FBQztvQkFDM0IsSUFBSTt3QkFDQSxLQUFJLENBQUMsSUFBSSxDQUFDLEtBQUssR0FBRyxJQUFJLENBQUM7b0JBRTNCLEVBQUUsQ0FBQyxDQUFDLFNBQU8sQ0FBQyxDQUFDLENBQUM7d0JBQ1YsU0FBTyxDQUFDLE9BQU8sRUFBRSxDQUFDO29CQUN0QixDQUFDO29CQUNELEtBQUksQ0FBQyxZQUFZLENBQUMsSUFBSSxDQUFDLENBQUM7b0JBQ3hCLEtBQUksQ0FBQyxHQUFHLEdBQUcsS0FBSSxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUM7b0JBQ3pCLEVBQUUsQ0FBQyxDQUFDLEtBQUksQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLFdBQVcsRUFBRSxJQUFJLFVBQVUsSUFBSSxDQUFDLEtBQUksQ0FBQyxJQUFJLENBQUMsVUFBVSxDQUFDLENBQUEsQ0FBQzt3QkFDckUsS0FBSSxDQUFDLGVBQWUsRUFBRSxDQUFDO29CQUMzQixDQUFDO29CQUNELEVBQUUsQ0FBQyxDQUFDLEtBQUksQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLFdBQVcsRUFBRSxJQUFJLE1BQU0sQ0FBQzt3QkFDdkMsS0FBSSxDQUFDLGFBQWEsQ0FBQyxLQUFJLENBQUMsVUFBVSxDQUFDLENBQUM7Z0JBQzVDLENBQUMsRUFDRCxVQUFBLEtBQUs7b0JBQ0QsRUFBRSxDQUFDLENBQUMsU0FBTyxDQUFDO3dCQUFDLFNBQU8sQ0FBQyxPQUFPLEVBQUUsQ0FBQztvQkFDL0IsS0FBSSxDQUFDLEtBQUssQ0FBQyxhQUFhLEdBQUcsS0FBSSxDQUFDLElBQUksR0FBRyxnQkFBZ0IsR0FBRyxLQUFLLENBQUMsQ0FBQztvQkFDakUsT0FBTyxDQUFDLEdBQUcsQ0FBQyxLQUFLLElBQUksY0FBYyxDQUFDLENBQUM7Z0JBQ3pDLENBQUMsQ0FDSixDQUFDO1lBQ04sQ0FBQztZQUNELElBQUksQ0FBQyxDQUFDO2dCQUNGLElBQUksQ0FBQyxJQUFJLENBQUMsTUFBTSxHQUFHLElBQUksQ0FBQztnQkFDeEIsSUFBSSxDQUFDLEtBQUssQ0FBQyxJQUFJLENBQUMsSUFBSSxHQUFHLGlCQUFpQixDQUFDLENBQUM7WUFDOUMsQ0FBQztRQUNULENBQUM7UUFDRCxJQUFJO1lBQ0EsSUFBSSxDQUFDLFlBQVksQ0FBQyxJQUFJLENBQUMsQ0FBQztJQUNoQyxDQUFDO0lBRUQsNkNBQWUsR0FBZjtRQUFBLGlCQU9DO1FBTkcsSUFBSSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsT0FBTyxDQUFDLFVBQUEsSUFBSTtZQUNBLEVBQUUsQ0FBQyxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsQ0FBQSxDQUFDO2dCQUNkLEtBQUksQ0FBQyxJQUFJLENBQUMsUUFBUSxHQUFHLElBQUksQ0FBQyxFQUFFLENBQUM7Z0JBQzdCLEtBQUksQ0FBQyxJQUFJLENBQUMsS0FBSyxHQUFHLElBQUksQ0FBQyxJQUFJLENBQUM7WUFDaEMsQ0FBQztRQUNMLENBQUMsQ0FBQyxDQUFDO0lBQy9CLENBQUM7SUFFRCx5Q0FBVyxHQUFYLFVBQVksSUFBSTtRQUNiLElBQUksT0FBTyxHQUFHLEVBQUUsQ0FBQztRQUNqQixFQUFFLENBQUMsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLE9BQU8sQ0FBQyxlQUFlLElBQUksSUFBSSxDQUFDLE1BQU0sQ0FBQyxPQUFPLENBQUMsMEJBQTBCLENBQUMsQ0FBQSxDQUFDO1lBQ3ZGLElBQUksQ0FBQyxPQUFPLENBQUMsVUFBQSxJQUFJO2dCQUNiLEVBQUUsQ0FBQyxDQUFDLElBQUksQ0FBQyxjQUFjLElBQUksSUFBSSxDQUFDO29CQUM1QixPQUFPLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDO1lBQzNCLENBQUMsQ0FBQyxDQUFDO1lBQ0gsSUFBSSxDQUFDLElBQUksQ0FBQyxLQUFLLEdBQUcsT0FBTyxDQUFDO1FBQzlCLENBQUM7UUFDRCxJQUFJO1lBQ0EsSUFBSSxDQUFDLElBQUksQ0FBQyxLQUFLLEdBQUcsSUFBSSxDQUFDO0lBQzlCLENBQUM7SUFFRCxtQ0FBSyxHQUFMLFVBQU0sT0FBTztRQUVULElBQUksQ0FBQyxHQUFHLENBQUMsS0FBSyxDQUFDLE9BQU8sRUFBRSxJQUFJLENBQUMsQ0FBQztJQUNsQyxDQUFDO0lBRUQsMENBQVksR0FBWixVQUFhLElBQUk7UUFBakIsaUJBMkNDO1FBekNHLEVBQUUsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxLQUFLLElBQUksSUFBSSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsTUFBTSxJQUFJLENBQUMsQ0FBQyxDQUNwRCxDQUFDO1lBQ0csSUFBSSxDQUFDLElBQUksQ0FBQyxLQUFLLEdBQUcsSUFBSSxDQUFDLElBQUksQ0FBQyxPQUFPLElBQUksNkJBQTZCLENBQUM7WUFDckUsSUFBSSxDQUFDLFNBQVMsQ0FBQyxJQUFJLENBQUMsRUFBQyxJQUFJLEVBQUUsSUFBSSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsR0FBRyxDQUFDLENBQUMsSUFBSSxDQUFDLEVBQUUsQ0FBQyxDQUFDLFdBQVcsRUFBRSxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUMsQ0FBQyxDQUFDO1lBR2hGLE1BQU0sQ0FBQztRQUNYLENBQUM7UUFDRCxFQUFFLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDO1lBQ1gsRUFBRSxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQSxDQUFDO2dCQUMxQixJQUFJLE9BQU8sR0FBRyxFQUFFLENBQUM7Z0JBQ2pCLElBQUksQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLE9BQU8sQ0FBQyxVQUFBLElBQUk7b0JBQ3hCLElBQUksSUFBSSxDQUFDO29CQUNULElBQUksRUFBRSxHQUFHLElBQUksQ0FBQyxFQUFFLENBQUM7b0JBRWIsRUFBRSxDQUFDLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQzt3QkFDWCxJQUFJLEdBQUcscUJBQVcsQ0FBQyxJQUFJLENBQUMsU0FBUyxFQUFFLElBQUksQ0FBQyxRQUFRLEVBQUUsSUFBSSxDQUFDLEtBQUssRUFBRSxLQUFJLENBQUMsUUFBUSxHQUFHLEVBQUUsR0FBRyxHQUFHLENBQUMsQ0FBQztvQkFFNUYsSUFBSSxDQUFDLEVBQUUsQ0FBQyxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUM7d0JBQ25CLElBQUksR0FBRyxJQUFJLENBQUMsUUFBUSxDQUFDO29CQUN6QixJQUFJLENBQUMsRUFBRSxDQUFDLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQzt3QkFDakIsSUFBSSxHQUFHLE1BQUksSUFBSSxDQUFDLE1BQU0sVUFBSyxJQUFJLENBQUMsT0FBUyxDQUFDO29CQUM5QyxJQUFJLENBQUMsRUFBRSxDQUFDLENBQUMsSUFBSSxDQUFDLGVBQWUsQ0FBQyxDQUFDLENBQUM7d0JBQzVCLElBQUksR0FBRyxJQUFJLENBQUMsaUJBQWlCLENBQUM7d0JBQzlCLEVBQUUsR0FBRyxJQUFJLENBQUMsZUFBZSxDQUFDO29CQUM5QixDQUFDO29CQUVELE9BQU8sQ0FBQyxJQUFJLENBQUMsRUFBQyxFQUFFLEVBQUUsRUFBRSxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUUsS0FBSyxFQUFFLElBQUksQ0FBQyxLQUFLLEVBQUMsQ0FBQyxDQUFDO2dCQUcxRCxDQUFDLENBQUMsQ0FBQztnQkFDUCxJQUFJLENBQUMsSUFBSSxDQUFDLEtBQUssR0FBRyxPQUFPLENBQUM7WUFDOUIsQ0FBQztZQU9HLElBQUksQ0FBQyxTQUFTLEVBQUUsQ0FBQztRQUNyQixDQUFDO0lBQ0wsQ0FBQztJQUVELDBDQUFZLEdBQVosVUFBYSxLQUFLO1FBQ2QsRUFBRSxDQUFDLENBQUMsS0FBSyxJQUFJLElBQUksQ0FBQyxPQUFPLENBQUM7WUFDdkIsSUFBSSxDQUFDLFVBQVUsR0FBRyxLQUFLLENBQUM7UUFDM0IsSUFBSSxDQUFDLElBQUksQ0FBQyxLQUFLLEdBQUcsS0FBSyxDQUFDLElBQUksQ0FBQztRQUM3QixLQUFLLENBQUMsSUFBSSxHQUFHLElBQUksQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxHQUFHLENBQUMsQ0FBQyxJQUFJLENBQUMsRUFBRSxDQUFDLENBQUMsV0FBVyxFQUFFLENBQUM7UUFDOUQsSUFBSSxDQUFDLFNBQVMsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUM7SUFDL0IsQ0FBQztJQUVELHVDQUFTLEdBQVQ7UUFBQSxpQkFvQ0s7UUFuQ0QsSUFBSSxLQUFLLEdBQUMsSUFBSSxDQUFDLElBQUksQ0FBQztRQUVwQixJQUFJLEtBQUssR0FBRyxxQkFBSyxDQUFDLE1BQU0sQ0FBQztZQUNyQixLQUFLLEVBQUUsU0FBUyxHQUFDLEtBQUs7WUFDdEIsT0FBTyxFQUFFO2dCQUNUO29CQUNJLElBQUksRUFBRSxRQUFRO29CQUNkLElBQUksRUFBRSxRQUFRO29CQUNkLE9BQU8sRUFBRTt3QkFDTCxPQUFPLENBQUMsR0FBRyxDQUFDLGdCQUFnQixDQUFDLENBQUM7b0JBQ2xDLENBQUM7aUJBQ0o7Z0JBQ0Q7b0JBQ0ksSUFBSSxFQUFFLElBQUk7b0JBQ1YsT0FBTyxFQUFFLFVBQUEsSUFBSTt3QkFDVCxFQUFFLENBQUEsQ0FBQyxJQUFJLENBQUMsQ0FBQSxDQUFDOzRCQUNMLEtBQUksQ0FBQyxRQUFRLEdBQUcsSUFBSSxDQUFDOzRCQUNyQixLQUFJLENBQUMsWUFBWSxDQUFDLElBQUksQ0FBQyxDQUFDO3dCQUM1QixDQUFDO29CQUNMLENBQUM7aUJBQ0o7YUFDQTtTQUNKLENBQUMsQ0FBQztRQUVILElBQUksQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLE9BQU8sQ0FBQyxVQUFBLElBQUk7WUFDeEIsS0FBSyxDQUFDLFFBQVEsQ0FBQztnQkFDWCxJQUFJLEVBQUUsT0FBTztnQkFDYixLQUFLLEVBQUUsSUFBSSxDQUFDLElBQUk7Z0JBQ2hCLEtBQUssRUFBRSxJQUFJO2FBRVYsQ0FBQyxDQUFDO1FBQ1gsQ0FBQyxDQUFDLENBQUM7UUFFSCxJQUFJLENBQUMsR0FBRyxDQUFDLE9BQU8sQ0FBQyxLQUFLLENBQUMsQ0FBQztJQUV4QixDQUFDO0lBRUQsMkNBQWEsR0FBYixVQUFjLFVBQVU7UUFBeEIsaUJBZ0JEO1FBZEMsSUFBSSxDQUFDLGNBQWMsQ0FBQyxhQUFhLENBQUMsVUFBVSxDQUFDLENBQUMsU0FBUyxDQUNyRCxVQUFBLElBQUk7WUFDRixLQUFJLENBQUMsV0FBVyxHQUFDLElBQUksQ0FBQyxNQUFNLENBQUM7WUFDN0IsRUFBRSxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUEsQ0FBQztnQkFDTixJQUFJLENBQUMsT0FBTyxDQUFDLFVBQUEsSUFBSTtvQkFDYixJQUFJLENBQUMsUUFBUSxHQUFHLGNBQWMsR0FBRyxJQUFJLENBQUMsUUFBUSxDQUFDO29CQUMvQyxLQUFJLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxNQUFNLENBQUMsQ0FBQyxFQUFDLENBQUMsRUFBQyxJQUFJLENBQUMsQ0FBQztnQkFDckMsQ0FBQyxDQUFDLENBQUM7WUFDUCxDQUFDO1FBQ0gsQ0FBQyxFQUNELFVBQUEsS0FBSztZQUNILE9BQU8sQ0FBQyxHQUFHLENBQUMsS0FBSyxJQUFJLGNBQWMsQ0FBQyxDQUFDO1FBQ3ZDLENBQUMsQ0FDQSxDQUFDO0lBQ04sQ0FBQztJQUVDLHVDQUFTLEdBQVQ7UUFBQSxpQkFhQztRQVhHLElBQUksQ0FBQyxJQUFJLENBQUMsUUFBUSxHQUFHLElBQUksQ0FBQyxRQUFRLENBQUM7UUFDbkMsSUFBSSxHQUFHLEdBQUcsSUFBSSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsTUFBTSxJQUFJLENBQUMsQ0FBQztRQUN0QyxJQUFJLEtBQUssR0FBRyxHQUFHLElBQUksRUFBRSxJQUFJLEdBQUcsR0FBQyxFQUFFLElBQUksQ0FBQyxHQUFJLDRCQUFtQixHQUFHLHlCQUFnQixDQUFDO1FBQy9FLElBQUksT0FBTyxHQUFHLHFCQUFLLENBQUMsTUFBTSxDQUFDLEtBQUssRUFBRSxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUM7UUFDN0MsT0FBTyxDQUFDLFNBQVMsQ0FBQyxVQUFBLElBQUk7WUFDbEIsRUFBRSxDQUFDLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUM7Z0JBQ1osS0FBSSxDQUFDLFFBQVEsR0FBRyxJQUFJLENBQUM7Z0JBQ3JCLEtBQUksQ0FBQyxZQUFZLENBQUMsSUFBSSxDQUFDLENBQUM7WUFDNUIsQ0FBQztRQUNMLENBQUMsQ0FBQyxDQUFDO1FBQ0gsSUFBSSxDQUFDLEdBQUcsQ0FBQyxPQUFPLENBQUMsT0FBTyxDQUFDLENBQUM7SUFDOUIsQ0FBQztJQS9TRjtRQUFDLFlBQUssRUFBRTs7cURBQUE7SUFDUjtRQUFDLFlBQUssRUFBRTs7MkRBQUE7SUFDUjtRQUFDLFlBQUssRUFBRTs7eURBQUE7SUFDUjtRQUFDLFlBQUssRUFBRTs7eURBQUE7SUFDUjtRQUFDLFlBQUssRUFBRTs7MkRBQUE7SUFDUjtRQUFDLFlBQUssRUFBRTs7d0RBQUE7SUFFUjtRQUFDLFlBQUssRUFBRTs7c0RBQUE7SUFDUjtRQUFDLFlBQUssRUFBRTs7d0RBQUE7SUFDUjtRQUFDLFlBQUssRUFBRTs7cURBQUE7SUFDUjtRQUFDLGFBQU0sRUFBRTs7MERBQUE7SUFoQmI7UUFBQyxnQkFBUyxDQUFDO1lBQ1AsUUFBUSxFQUFFLGFBQWE7WUFDdkIsV0FBVyxFQUFFLCtDQUErQztZQUM1RCxVQUFVLEVBQUUsQ0FBQyxnQ0FBZ0IsQ0FBQztTQUNqQyxDQUFDOzsyQkFBQTtJQW1URCwwQkFBQztBQUFELENBbFRELEFBa1RFLElBQUE7QUFsVFcsMkJBQW1CLHNCQWtUOUIsQ0FBQTs7Ozs7Ozs7Ozs7OztBQy9URiw4QkFBdUQsZUFBZSxDQUFDLENBQUE7QUFDdkUscUJBQTBDLGVBQWUsQ0FBQyxDQUFBO0FBQzFELDZCQUE4Qix1Q0FBdUMsQ0FBQyxDQUFBO0FBQ3RFLHNCQUF1QixtQkFBbUIsQ0FBQyxDQUFBO0FBUzNDO0lBS0ssa0NBQW9CLEdBQVEsRUFBVSxNQUFjO1FBQWhDLFFBQUcsR0FBSCxHQUFHLENBQUs7UUFBVSxXQUFNLEdBQU4sTUFBTSxDQUFRO1FBQ2hELElBQUksQ0FBQyxRQUFRLEdBQUcsS0FBSyxDQUFDO0lBQy9CLENBQUM7SUFDSSw2Q0FBVSxHQUFWLFVBQVcsS0FBSyxFQUFFLE9BQU87SUFHWCxDQUFDO0lBRWhCLHNEQUFtQixHQUFuQixVQUFvQixVQUFVO1FBQ3pCLElBQUksQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLDhCQUFlLEVBQUUsVUFBVSxDQUFDLENBQUM7SUFDL0MsQ0FBQztJQUVELDhDQUFXLEdBQVgsVUFBWSxLQUFLO1FBQ2IsRUFBRSxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDO1lBQ2IsTUFBTSxDQUFDO1FBQ1gsRUFBRSxDQUFDLENBQUMsYUFBYSxJQUFJLEtBQU0sQ0FBQyxDQUFDLENBQUM7WUFDMUIsRUFBRSxDQUFDLENBQUMsS0FBSyxDQUFDLFdBQVcsQ0FBQyxhQUFhLEVBQUUsSUFBSSxLQUFLLENBQUMsV0FBVyxDQUFDLFlBQVksS0FBSyxJQUFJLENBQUM7Z0JBQzdFLE1BQU0sQ0FBQztZQUNYLElBQUksQ0FBQyxRQUFRLEdBQUcsQ0FBQyxLQUFLLENBQUMsV0FBVyxDQUFDLFlBQVksSUFBSSxLQUFLLENBQUMsV0FBVyxDQUFDLFlBQVksQ0FBQyxNQUFNLElBQUksQ0FBQyxDQUFDO1FBQ2xHLENBQUM7SUFDTCxDQUFDO0lBeEJGO1FBQUMsWUFBSyxFQUFFOztpRUFBQTtJQUNSO1FBQUMsWUFBSyxFQUFFOzs0REFBQTtJQVRaO1FBQUMsZ0JBQVMsQ0FBQztZQUNQLFFBQVEsRUFBRSxZQUFZO1lBQ3RCLFdBQVcsRUFBRSw2Q0FBNkM7WUFDOUQsVUFBVSxFQUFFLENBQUMsZ0NBQWdCLENBQUM7WUFDOUIsS0FBSyxFQUFFLENBQUMsZ0JBQVEsQ0FBQztTQUNoQixDQUFDOztnQ0FBQTtJQTZCRiwrQkFBQztBQUFELENBM0JBLEFBMkJDLElBQUE7QUEzQlksZ0NBQXdCLDJCQTJCcEMsQ0FBQTs7Ozs7Ozs7Ozs7OztBQ3hDRCw4QkFBcUUsZUFBZSxDQUFDLENBQUE7QUFDckYscUJBQWtELGVBQWUsQ0FBQyxDQUFBO0FBQ2xFLGdDQUE2QixpQ0FBaUMsQ0FBQyxDQUFBO0FBQy9ELCtCQUFnQywyQ0FBMkMsQ0FBQyxDQUFBO0FBQzVFLHVCQUErQiwyQkFBMkIsQ0FBQyxDQUFBO0FBQzNELHdCQUF5QiwwQkFBMEIsQ0FBQyxDQUFBO0FBQ3BELHNCQUFzRixtQkFBbUIsQ0FBQyxDQUFBO0FBUTFHO0lBZUksOEJBQW9CLEdBQVEsRUFBVSxTQUFvQixFQUFVLE1BQWMsRUFBVSxjQUE4QjtRQUF0RyxRQUFHLEdBQUgsR0FBRyxDQUFLO1FBQVUsY0FBUyxHQUFULFNBQVMsQ0FBVztRQUFVLFdBQU0sR0FBTixNQUFNLENBQVE7UUFBVSxtQkFBYyxHQUFkLGNBQWMsQ0FBZ0I7UUFkMUgsVUFBSyxHQUFXLENBQUMsQ0FBQztRQVVsQixhQUFRLEdBQVksS0FBSyxDQUFDO1FBS3RCLElBQUksQ0FBQyxLQUFLLEdBQUcsRUFBRSxJQUFJLEVBQUUsQ0FBQyxFQUFFLEtBQUssRUFBRSxJQUFJLENBQUMsS0FBSyxFQUFDLENBQUM7SUFDL0MsQ0FBQztJQUdELDBDQUFXLEdBQVgsVUFBWSxLQUFLO1FBQ2IsTUFBTSxDQUFDO1FBQ1AsRUFBRSxDQUFDLENBQUMsT0FBTyxJQUFJLEtBQUssQ0FBQyxDQUFDLENBQUM7WUFFbEIsRUFBRSxDQUFDLENBQUMsS0FBSyxDQUFDLEtBQUssQ0FBQyxhQUFhLEVBQUUsQ0FBQztnQkFDNUIsTUFBTSxDQUFDO1lBQ1gsSUFBSSxDQUFDLEtBQUssR0FBRyxLQUFLLENBQUMsS0FBSyxDQUFDLFlBQVksQ0FBQztZQUN0QyxFQUFFLENBQUMsQ0FBQyxJQUFJLENBQUMsS0FBSyxHQUFHLENBQUMsQ0FBQztnQkFDZixJQUFJLENBQUMsUUFBUSxHQUFHLElBQUksQ0FBQztZQUN6QixJQUFJLENBQUMsQ0FBQztnQkFDRixJQUFJLENBQUMsS0FBSyxDQUFDLEtBQUssR0FBRyxJQUFJLENBQUMsS0FBSyxDQUFDO2dCQUM5QixJQUFJLENBQUMsTUFBTSxFQUFFLENBQUM7Z0JBQ2QsSUFBSSxDQUFDLFFBQVEsR0FBRyxLQUFLLENBQUM7WUFDMUIsQ0FBQztRQUNMLENBQUM7SUFDTCxDQUFDO0lBRUQsdUNBQVEsR0FBUjtRQUFBLGlCQWVDO1FBZEcsSUFBSSxDQUFDLEVBQUUsR0FBRyxJQUFJLENBQUMsTUFBTSxDQUFDLFVBQVUsQ0FBQyxNQUFNLENBQUMsQ0FBQztRQUN6QyxJQUFJLENBQUMsU0FBUyxHQUFHLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxJQUFJLEVBQUUsQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsSUFBSSxFQUFFLENBQUMsQ0FBQztRQUM1RSxJQUFJLENBQUMsUUFBUSxHQUFHLENBQUMsSUFBSSxDQUFDLGNBQWMsQ0FBQyxVQUFVLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxJQUFJLEVBQUUsQ0FBQyxDQUFDLE1BQU0sQ0FBQztRQUM5RSxFQUFFLENBQUMsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxJQUFJLEtBQUssQ0FBQyxDQUMxQixDQUFDO1lBQ0csSUFBSSxDQUFDLEtBQUssQ0FBQyxLQUFLLEdBQUcsSUFBSSxDQUFDLEtBQUssR0FBRyxFQUFFLENBQUM7UUFDdkMsQ0FBQztRQUNELEVBQUUsQ0FBQyxDQUFDLElBQUksQ0FBQyxPQUFPLElBQUksQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUMsQ0FBQztZQUNqQyxVQUFVLENBQUM7Z0JBQ1AsS0FBSSxDQUFDLE1BQU0sRUFBRSxDQUFDO1lBQ2xCLENBQUMsRUFBRSxJQUFJLENBQUMsT0FBTyxDQUFDLENBQUM7UUFDckIsQ0FBQztRQUNELElBQUk7WUFDQSxJQUFJLENBQUMsTUFBTSxFQUFFLENBQUM7SUFDdEIsQ0FBQztJQUVELHFDQUFNLEdBQU47UUFBQSxpQkE0QkM7UUExQkcsRUFBRSxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDO1lBQ1gsTUFBTSxDQUFDO1FBRVgsSUFBSSxJQUFJLEdBQUcsSUFBSSxDQUFDLE1BQU0sQ0FBQyxPQUFPLENBQUMsU0FBUyxDQUFDLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO1FBRXhELElBQUksQ0FBQyxLQUFLLEdBQUcsQ0FBQyxJQUFJLEdBQUcsSUFBSSxDQUFDLEtBQUssR0FBRyxJQUFJLENBQUM7UUFFdkMsRUFBRSxDQUFDLENBQUMsSUFBSSxDQUFDLEtBQUssS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDO1lBQ25CLElBQUksQ0FBQyxjQUFjLENBQUMsY0FBYyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLEVBQUUsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsRUFBRSxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxFQUFFLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQztZQUN6RixJQUFJLENBQUMsT0FBTyxHQUFHLElBQUksQ0FBQyxjQUFjLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsQ0FBQztZQUM1RCxFQUFFLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxjQUFjLENBQUMsVUFBVSxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDO2dCQUN6RCxJQUFJLEtBQUssR0FBRyxVQUFVLENBQUM7b0JBQ25CLEtBQUksQ0FBQyxJQUFJLEdBQUcsSUFBSSxDQUFDO2dCQUNyQixDQUFDLEVBQUUsR0FBRyxDQUFDLENBQUM7Z0JBQ1IsSUFBSSxDQUFDLE9BQU8sQ0FBQyxTQUFTLENBQ2xCLFVBQUEsSUFBSTtvQkFDQSxZQUFZLENBQUMsS0FBSyxDQUFDLENBQUM7b0JBQ3BCLEtBQUksQ0FBQyxJQUFJLEdBQUcsS0FBSyxDQUFDO29CQUVsQixLQUFJLENBQUMsUUFBUSxHQUFHLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQztnQkFDakMsQ0FBQyxDQUFDLENBQUM7WUFDWCxDQUFDO1FBQ0wsQ0FBQztRQUNELElBQUksQ0FBQyxDQUFDO1lBQ0YsSUFBSSxDQUFDLFFBQVEsR0FBRyxJQUFJLENBQUM7UUFDekIsQ0FBQztJQUNMLENBQUM7SUFFRCx5Q0FBVSxHQUFWLFVBQVcsS0FBSyxFQUFFLE1BQU0sRUFBRSxXQUFXO1FBQ2pDLEVBQUUsQ0FBQyxDQUFDLEtBQUssQ0FBQyxVQUFVLENBQUMsT0FBTyxDQUFDLFdBQVcsRUFBRSxJQUFJLGtCQUFrQixDQUFDLENBQUMsQ0FBQztZQUMvRCxXQUFXLENBQUMsS0FBSyxFQUFFLENBQUM7WUFDcEIsTUFBTSxDQUFDLE9BQU8sR0FBRyxJQUFJLENBQUM7WUFJdEIsTUFBTSxDQUFDLFNBQVMsR0FBRyxJQUFJLENBQUMsU0FBUyxDQUFDO1lBQ2xDLEVBQUUsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxnQkFBZ0IsSUFBSSxJQUFJLENBQUMsRUFBRSxDQUFDLEtBQUssQ0FBQztnQkFDekMsTUFBTSxDQUFDLGdCQUFnQixHQUFHLEtBQUssQ0FBQztZQUNwQyxFQUFFLENBQUMsQ0FBQyxNQUFNLENBQUMsZ0JBQWdCLElBQUksSUFBSSxDQUFDLEVBQUUsQ0FBQyxLQUFLLENBQUM7Z0JBQ3pDLE1BQU0sQ0FBQyxnQkFBZ0IsR0FBRyxLQUFLLENBQUM7WUFDcEMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsa0NBQWlCLEVBQUUsTUFBTSxDQUFDLENBQUM7UUFDN0MsQ0FBQztJQUNMLENBQUM7SUFFRCxzQ0FBTyxHQUFQLFVBQVEsTUFBTSxFQUFFLFdBQVc7UUFBM0IsaUJBeUNDO1FBeENHLFdBQVcsQ0FBQyxLQUFLLEVBQUUsQ0FBQztRQUNwQixJQUFJLE1BQU0sR0FBRyxxQkFBSyxDQUFDLE1BQU0sQ0FBQztZQUN0QixLQUFLLEVBQUUsbUJBQW1CLEdBQUcsTUFBTSxDQUFDLE1BQU07WUFDMUMsTUFBTSxFQUFFO2dCQUNSO29CQUNJLElBQUksRUFBRSxNQUFNO29CQUNaLFdBQVcsRUFBRSxNQUFNO2lCQUN0QjthQUNBO1lBQ0QsT0FBTyxFQUFFO2dCQUNUO29CQUNJLElBQUksRUFBRSxRQUFRO29CQUNkLE9BQU8sRUFBRSxVQUFBLElBQUk7d0JBQ1QsT0FBTyxDQUFDLEdBQUcsQ0FBQyxnQkFBZ0IsQ0FBQyxDQUFDO29CQUNsQyxDQUFDO2lCQUNKO2dCQUNEO29CQUNJLElBQUksRUFBRSxNQUFNO29CQUNaLE9BQU8sRUFBRSxVQUFBLElBQUk7d0JBRVQsRUFBRSxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLElBQUksRUFBRSxDQUFDOzRCQUNsQixNQUFNLENBQUM7d0JBRVgsSUFBSSxJQUFJLEdBQUcsb0JBQVUsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLElBQUksRUFBRSxDQUFDLENBQUMsTUFBTSxDQUFDLENBQUMsRUFBRSxJQUFJLENBQUMsQ0FBQzt3QkFFeEQsS0FBSSxDQUFDLGNBQWMsQ0FBQyxhQUFhLENBQUMsTUFBTSxDQUFDLEVBQUUsRUFBRSxJQUFJLENBQUMsQ0FBQyxTQUFTLENBQ3hELFVBQUEsSUFBSTs0QkFDQSxLQUFJLENBQUMsR0FBRyxDQUFDLEtBQUssQ0FBQyxlQUFlLENBQUMsQ0FBQzt3QkFDcEMsQ0FBQyxFQUNELFVBQUEsS0FBSzs0QkFDRCxLQUFJLENBQUMsR0FBRyxDQUFDLEtBQUssQ0FBQyxLQUFLLEVBQUUsSUFBSSxDQUFDLENBQUM7NEJBQzVCLE9BQU8sQ0FBQyxHQUFHLENBQUMsS0FBSyxJQUFJLGNBQWMsQ0FBQyxDQUFDO3dCQUN6QyxDQUFDLENBQ0EsQ0FBQztvQkFDVixDQUFDO2lCQUNKO2FBQ0E7U0FDSixDQUFDLENBQUM7UUFFSCxJQUFJLENBQUMsR0FBRyxDQUFDLE9BQU8sQ0FBQyxNQUFNLENBQUMsQ0FBQztJQUM3QixDQUFDO0lBRUQsMENBQVcsR0FBWCxVQUFZLE1BQU0sRUFBRSxXQUFXO1FBQS9CLGlCQTZCQztRQTVCRyxXQUFXLENBQUMsS0FBSyxFQUFFLENBQUM7UUFDcEIsRUFBRSxDQUFDLENBQUMsTUFBTSxDQUFDLE1BQU0sSUFBSSxRQUFRLENBQUMsQ0FBQSxDQUFDO1lBQzNCLElBQUksQ0FBQyxZQUFZLENBQUMsTUFBTSxDQUFDLENBQUM7WUFDMUIsTUFBTSxDQUFDO1FBQ1gsQ0FBQztRQUNELEVBQUUsQ0FBQyxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsT0FBTyxDQUFDLGdDQUFnQyxJQUFJLENBQUMsSUFBSSxNQUFNLENBQUMsV0FBVyxDQUFDLENBQ3BGLENBQUM7WUFDRSxJQUFJLENBQUMsR0FBRyxDQUFDLEtBQUssQ0FBQyx3REFBd0QsR0FBRyxJQUFJLENBQUMsTUFBTSxDQUFDLE9BQU8sQ0FBQyxLQUFLLENBQUMsTUFBTSxDQUFDLENBQUMsR0FBRyxpQkFBaUIsRUFBRSxJQUFJLENBQUMsQ0FBQztZQUN4SSxNQUFNLENBQUM7UUFDVixDQUFDO1FBQ0QsSUFBSSxPQUFPLEdBQUcscUJBQUssQ0FBQyxNQUFNLENBQUMseUJBQWdCLEVBQUUsTUFBTSxDQUFDLENBQUM7UUFDckQsT0FBTyxDQUFDLFNBQVMsQ0FBQyxVQUFBLElBQUk7WUFDbEIsRUFBRSxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUM7Z0JBQ04sTUFBTSxDQUFDO1lBQ1gsS0FBSSxDQUFDLEtBQUssSUFBSSxJQUFJLENBQUM7WUFDbkIsS0FBSSxDQUFDLGNBQWMsQ0FBQyxVQUFVLENBQUMsS0FBSSxDQUFDLFNBQVMsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxLQUFJLENBQUMsY0FBYyxDQUFDLFVBQVUsQ0FBQyxLQUFJLENBQUMsU0FBUyxDQUFDLENBQUMsT0FBTyxDQUFDLE1BQU0sQ0FBQyxFQUFDLENBQUMsQ0FBQyxDQUFDO1lBQ3hILEtBQUksQ0FBQyxjQUFjLENBQUMsY0FBYyxDQUFDLEtBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLEVBQUUsS0FBSSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsRUFBRSxLQUFJLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxFQUFFLEVBQUUsT0FBTyxFQUFFLEVBQUUsRUFBRSxDQUFDLENBQUM7WUFHOUYsRUFBRSxDQUFDLENBQUMsS0FBSSxDQUFDLEtBQUssR0FBRyxDQUFDLENBQUM7Z0JBQ2YsS0FBSSxDQUFDLFFBQVEsR0FBRyxJQUFJLENBQUM7WUFDekIsSUFBSSxDQUFDLENBQUM7Z0JBR0YsS0FBSSxDQUFDLFFBQVEsR0FBRyxLQUFLLENBQUM7WUFDMUIsQ0FBQztRQUNMLENBQUMsQ0FBQyxDQUFDO1FBQ0gsSUFBSSxDQUFDLEdBQUcsQ0FBQyxPQUFPLENBQUMsT0FBTyxDQUFDLENBQUM7SUFDOUIsQ0FBQztJQUVELDJDQUFZLEdBQVosVUFBYSxNQUFNO1FBQW5CLGlCQWdCQztRQWZHLElBQUksSUFBSSxHQUFHO1lBQ1AsUUFBUSxFQUFFLE1BQU07WUFDaEIsV0FBVyxFQUFFLEVBQUU7U0FDbEIsQ0FBQztRQUVGLElBQUksQ0FBQyxjQUFjLENBQUMsZUFBZSxDQUFDLE1BQU0sQ0FBQyxHQUFHLEVBQUUsSUFBSSxDQUFDLENBQUMsU0FBUyxDQUMzRCxVQUFBLElBQUk7WUFDQSxLQUFJLENBQUMsR0FBRyxDQUFDLEtBQUssQ0FBQywyQkFBMkIsQ0FBQyxDQUFDO1lBQzVDLE1BQU0sQ0FBQyxNQUFNLEdBQUcsTUFBTSxDQUFDO1FBQzNCLENBQUMsRUFDRCxVQUFBLEtBQUs7WUFDRCxLQUFJLENBQUMsR0FBRyxDQUFDLEtBQUssQ0FBQyxLQUFLLEVBQUUsSUFBSSxDQUFDLENBQUM7WUFDNUIsT0FBTyxDQUFDLEdBQUcsQ0FBQyxLQUFLLElBQUksY0FBYyxDQUFDLENBQUM7UUFDekMsQ0FBQyxDQUNBLENBQUM7SUFDVixDQUFDO0lBR0QseUNBQVUsR0FBVixVQUFXLGNBQWM7UUFBekIsaUJBaUJDO1FBaEJHLEVBQUUsQ0FBQyxDQUFDLElBQUksQ0FBQyxRQUFRLElBQUksQ0FBQyxJQUFJLENBQUMsS0FBSyxHQUFHLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxLQUFLLEdBQUcsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsUUFBUSxHQUFHLENBQUMsSUFBSSxJQUFJLENBQUMsUUFBUSxHQUFHLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUN4SCxDQUFDO1lBQ0csY0FBYyxDQUFDLE1BQU0sQ0FBQyxLQUFLLENBQUMsQ0FBQztZQUM3QixjQUFjLENBQUMsUUFBUSxFQUFFLENBQUM7WUFDMUIsTUFBTSxDQUFDO1FBQ1gsQ0FBQztRQUNELElBQUksQ0FBQyxLQUFLLENBQUMsSUFBSSxJQUFJLENBQUMsQ0FBQztRQUNyQixJQUFJLFNBQVMsR0FBRyxDQUFDLElBQUksQ0FBQyxjQUFjLENBQUMsVUFBVSxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsSUFBSSxFQUFFLENBQUMsQ0FBQyxNQUFNLENBQUM7UUFDOUUsSUFBSSxDQUFDLGNBQWMsQ0FBQyxjQUFjLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsRUFBRSxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxFQUFFLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLEVBQUUsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDO1FBQ3pGLElBQUksQ0FBQyxPQUFPLENBQUMsU0FBUyxDQUNsQixVQUFBLElBQUk7WUFDQSxjQUFjLENBQUMsUUFBUSxFQUFFLENBQUM7WUFDMUIsSUFBSSxHQUFHLEdBQUcsSUFBSSxDQUFDLE1BQU0sQ0FBQztZQUN0QixjQUFjLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQyxTQUFTLElBQUksR0FBRyxJQUFJLEdBQUcsR0FBRyxLQUFJLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQztZQUMvRCxLQUFJLENBQUMsUUFBUSxHQUFHLEdBQUcsQ0FBQztRQUN4QixDQUFDLENBQUMsQ0FBQztJQUNYLENBQUM7SUEvTUY7UUFBQyxZQUFLLEVBQUU7O3NEQUFBO0lBQ1I7UUFBQyxZQUFLLEVBQUU7O3VEQUFBO0lBQ1I7UUFBQyxZQUFLLEVBQUU7O3lEQUFBO0lBQ1I7UUFBQyxZQUFLLEVBQUU7O3dEQUFBO0lBWlo7UUFBQyxnQkFBUyxDQUFDO1lBQ1AsUUFBUSxFQUFFLGNBQWM7WUFDeEIsV0FBVyxFQUFFLGlEQUFpRDtZQUM5RCxVQUFVLEVBQUUsQ0FBQyxnQ0FBZ0IsQ0FBQztZQUM5QixLQUFLLEVBQUUsQ0FBQyxvQkFBWSxFQUFFLHNCQUFjLEVBQUUsc0JBQWMsRUFBRSxtQkFBVyxFQUFFLG9CQUFZLENBQUM7U0FDbkYsQ0FBQzs7NEJBQUE7SUFvTkQsMkJBQUM7QUFBRCxDQW5ORCxBQW1ORSxJQUFBO0FBbk5XLDRCQUFvQix1QkFtTi9CLENBQUE7Ozs7Ozs7Ozs7Ozs7QUNqT0YsOEJBQThELGVBQWUsQ0FBQyxDQUFBO0FBQzlFLHFCQUFrRCxlQUFlLENBQUMsQ0FBQTtBQUNsRSw4QkFBMkIsK0JBQStCLENBQUMsQ0FBQTtBQUMzRCw0QkFBNkIscUNBQXFDLENBQUMsQ0FBQTtBQUNuRSx3QkFBZ0MsMEJBQTBCLENBQUMsQ0FBQTtBQUMzRCwrQkFBZ0MsMkNBQTJDLENBQUMsQ0FBQTtBQUM1RSxxQkFBc0IsTUFBTSxDQUFDLENBQUE7QUFRN0I7SUFvQkssMkJBQW9CLEdBQVEsRUFBVSxZQUEwQixFQUFVLE1BQWMsRUFBVSxTQUFvQjtRQUFsRyxRQUFHLEdBQUgsR0FBRyxDQUFLO1FBQVUsaUJBQVksR0FBWixZQUFZLENBQWM7UUFBVSxXQUFNLEdBQU4sTUFBTSxDQUFRO1FBQVUsY0FBUyxHQUFULFNBQVMsQ0FBVztRQWxCOUcsV0FBTSxHQUFXLEVBQUUsQ0FBQztRQUNwQixTQUFJLEdBQVcsRUFBRSxDQUFDO1FBQ2xCLGFBQVEsR0FBVyxFQUFFLENBQUM7UUFDdEIsY0FBUyxHQUFXLE9BQU8sQ0FBQztRQUNyQyxVQUFLLEdBQVcsSUFBSSxDQUFDO1FBQ3JCLGFBQVEsR0FBWSxLQUFLLENBQUM7UUFDMUIsa0JBQWEsR0FBWSxJQUFJLENBQUM7UUFJOUIsV0FBTSxHQUFXLENBQUMsQ0FBQztRQUtuQixpQkFBWSxHQUFZLElBQUksQ0FBQztRQUNyQixpQkFBWSxHQUFpQixJQUFJLGNBQU8sRUFBRSxDQUFDO1FBRzlDLElBQUksQ0FBQyxRQUFRLEdBQUcsS0FBSyxDQUFDO0lBQy9CLENBQUM7SUFHRyx1Q0FBVyxHQUFYLFVBQVksS0FBSztRQUNiLEVBQUUsQ0FBQyxDQUFDLFdBQVcsSUFBSSxLQUFLLENBQUMsQ0FBQyxDQUFDO1lBQ3ZCLEVBQUUsQ0FBQyxDQUFDLEtBQUssQ0FBQyxTQUFTLENBQUMsYUFBYSxFQUFFLENBQUM7Z0JBQy9CLE1BQU0sQ0FBQztZQUNYLElBQUksQ0FBQyxTQUFTLEdBQUcsS0FBSyxDQUFDLFNBQVMsQ0FBQyxZQUFZLENBQUM7WUFDOUMsSUFBSSxDQUFDLFNBQVMsR0FBRyxjQUFJLENBQUMsT0FBTyxFQUFFLGFBQWEsRUFBRSxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUM7WUFDN0QsSUFBSSxDQUFDLFNBQVMsR0FBRyxjQUFJLENBQUMsSUFBSSxDQUFDLFNBQVMsRUFBRSxRQUFRLEVBQUUsSUFBSSxDQUFDLE1BQU0sSUFBSSxFQUFFLENBQUMsQ0FBQztZQUNuRSxJQUFJLENBQUMsU0FBUyxHQUFHLGNBQUksQ0FBQyxJQUFJLENBQUMsU0FBUyxFQUFFLGNBQWMsRUFBRSxJQUFJLENBQUMsU0FBUyxDQUFDLENBQUM7WUFDdEUsSUFBSSxDQUFDLFFBQVEsR0FBRyxDQUFDLElBQUksQ0FBQyxZQUFZLENBQUMsVUFBVSxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsSUFBSSxFQUFFLENBQUMsQ0FBQyxNQUFNLENBQUM7WUFDNUUsSUFBSSxDQUFDLFFBQVEsRUFBRSxDQUFDO1FBQ3BCLENBQUM7UUFDRixFQUFFLENBQUMsQ0FBQyxVQUFVLElBQUksS0FBSyxDQUFDLENBQUMsQ0FBQztZQUN0QixFQUFFLENBQUMsQ0FBQyxLQUFLLENBQUMsUUFBUSxDQUFDLGFBQWEsRUFBRSxDQUFDO2dCQUM5QixNQUFNLENBQUM7WUFDWCxJQUFJLENBQUMsUUFBUSxHQUFHLEtBQUssQ0FBQyxRQUFRLENBQUMsWUFBWSxDQUFDO1lBQzVDLElBQUksQ0FBQyxTQUFTLEdBQUcsY0FBSSxDQUFDLE9BQU8sRUFBRSxhQUFhLEVBQUUsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDO1lBQzdELElBQUksQ0FBQyxTQUFTLEdBQUcsY0FBSSxDQUFDLElBQUksQ0FBQyxTQUFTLEVBQUUsUUFBUSxFQUFFLElBQUksQ0FBQyxNQUFNLElBQUksRUFBRSxDQUFDLENBQUM7WUFDbkUsSUFBSSxDQUFDLFNBQVMsR0FBRyxjQUFJLENBQUMsSUFBSSxDQUFDLFNBQVMsRUFBRSxjQUFjLEVBQUUsSUFBSSxDQUFDLFNBQVMsQ0FBQyxDQUFDO1lBQ3RFLElBQUksQ0FBQyxRQUFRLEdBQUcsQ0FBQyxJQUFJLENBQUMsWUFBWSxDQUFDLFVBQVUsQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLElBQUksRUFBRSxDQUFDLENBQUMsTUFBTSxDQUFDO1lBQzVFLElBQUksQ0FBQyxRQUFRLEVBQUUsQ0FBQztRQUNwQixDQUFDO0lBU0wsQ0FBQztJQUVGLG9DQUFRLEdBQVI7UUFFSSxFQUFFLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxjQUFjLENBQUM7WUFDekMsTUFBTSxDQUFDO1FBQ1gsSUFBSSxDQUFDLE1BQU0sR0FBRyxJQUFJLENBQUMsTUFBTSxDQUFDO1FBQzFCLElBQUksQ0FBQyxhQUFhLEdBQUcsSUFBSSxDQUFDLE1BQU0sQ0FBQztRQUNqQyxJQUFJLENBQUMsTUFBTSxHQUFHLElBQUksQ0FBQyxTQUFTLENBQUMsSUFBSSxJQUFJLEVBQUUsQ0FBQztRQUN4QyxJQUFJLENBQUMsS0FBSyxHQUFHLEVBQUUsSUFBSSxFQUFFLENBQUMsRUFBRSxDQUFDO1FBQ3pCLElBQUksQ0FBQyxNQUFNLENBQUMsSUFBSSxHQUFHLEVBQUUsRUFBRSxFQUFFLElBQUksQ0FBQyxNQUFNLENBQUMsT0FBTyxJQUFJLElBQUksQ0FBQyxNQUFNLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxPQUFPLEVBQUUsSUFBSSxFQUFFLElBQUksQ0FBQyxNQUFNLENBQUMsU0FBUyxJQUFJLEVBQUUsRUFBRSxDQUFDO1FBRXRILEVBQUUsQ0FBQyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUM7WUFDVixJQUFJLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxFQUFFLEdBQUcsSUFBSSxDQUFDLElBQUksSUFBSSxLQUFLLEdBQUcsRUFBRSxHQUFHLElBQUksQ0FBQyxJQUFJLENBQUM7UUFDOUQsSUFBSSxDQUFDLFFBQVEsR0FBRyxJQUFJLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxFQUFFLENBQUM7UUFDcEMsSUFBSSxDQUFDLFNBQVMsR0FBRyxPQUFPLENBQUM7UUFDekIsRUFBRSxDQUFDLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsRUFBRSxDQUFDO1lBQ3BCLElBQUksQ0FBQyxTQUFTLEdBQUcsY0FBSSxDQUFDLElBQUksQ0FBQyxTQUFTLEVBQUUsYUFBYSxFQUFFLElBQUksQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLEVBQUUsQ0FBQyxDQUFDO1FBQzlFLEVBQUUsQ0FBQyxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUM7WUFDWixJQUFJLENBQUMsU0FBUyxHQUFHLGNBQUksQ0FBQyxJQUFJLENBQUMsU0FBUyxFQUFFLFFBQVEsRUFBRSxJQUFJLENBQUMsTUFBTSxJQUFJLEVBQUUsQ0FBQyxDQUFDO1FBQ3ZFLElBQUksQ0FBQyxTQUFTLEdBQUcsY0FBSSxDQUFDLElBQUksQ0FBQyxTQUFTLEVBQUUsY0FBYyxFQUFFLElBQUksQ0FBQyxTQUFTLENBQUMsQ0FBQztRQUN0RSxJQUFJLENBQUMsUUFBUSxHQUFHLENBQUMsSUFBSSxDQUFDLFlBQVksQ0FBQyxVQUFVLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxJQUFJLEVBQUUsQ0FBQyxDQUFDLE1BQU0sQ0FBQztRQUU1RSxFQUFFLENBQUMsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLFFBQVEsQ0FBQztZQUNyQixJQUFJLENBQUMsTUFBTSxDQUFDLEtBQUssR0FBRyxDQUFDLENBQUM7UUFHdEIsSUFBSSxDQUFDLFFBQVEsRUFBRSxDQUFDO0lBSXhCLENBQUM7SUFFRCxvQ0FBUSxHQUFSO1FBQUEsaUJBK0JDO1FBN0JHLElBQUksQ0FBQyxZQUFZLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxRQUFRLEVBQUUsSUFBSSxDQUFDLE1BQU0sRUFBRSxJQUFJLENBQUMsU0FBUyxFQUFFLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQztRQUNuRixJQUFJLENBQUMsU0FBUyxHQUFHLElBQUksQ0FBQyxZQUFZLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsQ0FBQztRQUUxRCxDQUFDO1lBQ0csSUFBSSxLQUFLLEdBQUcsVUFBVSxDQUFDO2dCQUNuQixLQUFJLENBQUMsSUFBSSxHQUFHLElBQUksQ0FBQztZQUNyQixDQUFDLEVBQUUsR0FBRyxDQUFDLENBQUM7WUFDUixVQUFVLENBQUM7Z0JBQ1AsS0FBSSxDQUFDLElBQUksR0FBRyxLQUFLLENBQUM7WUFDdEIsQ0FBQyxFQUFFLElBQUksQ0FBQyxDQUFDO1lBQ1QsSUFBSSxDQUFDLFNBQVMsQ0FBQyxTQUFTLENBQUMsSUFBSSxDQUFDLFlBQVksQ0FBQyxDQUFDLFNBQVMsQ0FDakQsVUFBQSxJQUFJO2dCQUNBLFlBQVksQ0FBQyxLQUFLLENBQUMsQ0FBQztnQkFFcEIsSUFBSSxJQUFJLEdBQUcsRUFBRSxDQUFDO2dCQUNkLEVBQUUsQ0FBQyxDQUFDLElBQUksQ0FBQyxNQUFNLElBQUksSUFBSSxDQUFDLE1BQU0sQ0FBQyxVQUFBLENBQUMsSUFBSSxPQUFBLENBQUMsQ0FBQyxJQUFJLElBQUksQ0FBQyxFQUFYLENBQVcsQ0FBQyxDQUFDLE1BQU0sSUFBSSxDQUFDLENBQUMsQ0FDN0QsQ0FBQztvQkFDRSxJQUFJLENBQUMsQ0FBQyxDQUFDLEdBQUcsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDO29CQUNsQixJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUMsR0FBRyxHQUFHLElBQUksQ0FBQztvQkFDbkIsSUFBSSxHQUFHLElBQUksQ0FBQztnQkFDZixDQUFDO2dCQUNELEtBQUksQ0FBQyxJQUFJLEdBQUcsS0FBSyxDQUFDO2dCQUNsQixLQUFJLENBQUMsUUFBUSxHQUFHLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQztnQkFDN0IsSUFBSSxLQUFLLEdBQUcsQ0FBQyxFQUFFLEtBQUssR0FBRyxDQUFDLENBQUM7Z0JBQ3pCLEdBQUcsQ0FBQyxDQUFDLElBQUksQ0FBQyxJQUFJLElBQUksQ0FBQztvQkFBQyxHQUFHLENBQUMsQ0FBQyxJQUFJLENBQUMsSUFBSSxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQzt3QkFBQSxLQUFLLEVBQUUsQ0FBQzt3QkFBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUMsWUFBWSxDQUFDOzRCQUFDLEtBQUssRUFBRSxDQUFBO29CQUFBLENBQUM7Z0JBQUEsQ0FBQztnQkFDcEcsS0FBSSxDQUFDLE1BQU0sR0FBRyxLQUFLLENBQUM7Z0JBQ3BCLEtBQUksQ0FBQyxhQUFhLEdBQUcsS0FBSSxDQUFDLE1BQU0sSUFBSSxDQUFDLEtBQUssQ0FBQztZQUMvQyxDQUFDLENBQUMsQ0FBQztRQUNYLENBQUM7SUFDTCxDQUFDO0lBRUQsbUNBQU8sR0FBUCxVQUFRLEtBQUs7UUFLVCxLQUFLLENBQUMsTUFBTSxHQUFHLENBQUMsQ0FBQyxLQUFLLENBQUMsR0FBRyxJQUFJLEVBQUUsQ0FBQyxDQUFDLE1BQU0sSUFBSSxDQUFDLEtBQUssQ0FBQyxNQUFNLENBQUM7UUFDMUQsSUFBSSxPQUFPLEdBQUcscUJBQUssQ0FBQyxNQUFNLENBQUMsNEJBQWMsRUFBRSxFQUFDLFNBQVMsRUFBRyxDQUFDLEtBQUssSUFBSSxFQUFFLENBQUMsQ0FBQyxPQUFPLElBQUksRUFBRSxFQUFFLENBQUMsQ0FBQztRQUN2RixJQUFJLENBQUMsR0FBRyxDQUFDLE9BQU8sQ0FBQyxPQUFPLENBQUMsQ0FBQztJQUM5QixDQUFDO0lBRUQsbUNBQU8sR0FBUCxVQUFRLElBQUk7UUFDUixJQUFJLENBQUMsTUFBTSxHQUFHLElBQUksQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLFlBQVksR0FBRyxFQUFFLElBQUksQ0FBQyxNQUFNLEdBQUcsRUFBRSxJQUFJLENBQUMsTUFBTSxFQUFFLENBQUMsQ0FBQyxDQUFDO1FBQzdFLENBQUMsQ0FBQyxJQUFJLENBQUMsWUFBWSxDQUFDLFVBQVUsQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLENBQUMsTUFBTSxDQUFDLFVBQUEsQ0FBQyxJQUFJLE9BQUEsQ0FBQyxDQUFDLE9BQU8sSUFBSSxJQUFJLENBQUMsT0FBTyxFQUF6QixDQUF5QixDQUFDLElBQUksQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxNQUFNLENBQUMsVUFBQSxDQUFDLElBQUksT0FBQSxDQUFDLENBQUMsRUFBRSxJQUFJLElBQUksQ0FBQyxFQUFFLEVBQWYsQ0FBZSxDQUFDLENBQUMsQ0FBQyxDQUFDLElBQUksRUFBRSxDQUFDLENBQUMsWUFBWSxHQUFHLElBQUksQ0FBQyxZQUFZLENBQUM7UUFDOUssSUFBSSxDQUFDLFlBQVksQ0FBQyxnQkFBZ0IsQ0FBQyxJQUFJLENBQUMsRUFBRSxFQUFFLElBQUksQ0FBQyxZQUFZLENBQUMsQ0FBQztJQUNuRSxDQUFDO0lBRUQsbUNBQU8sR0FBUCxVQUFRLElBQUksRUFBRSxTQUFVLEVBQUUsTUFBTztRQUM3QixFQUFFLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQSxDQUFDO1lBRVYsSUFBSSxHQUFHLElBQUksSUFBSSxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsQ0FBQyxFQUFDLEVBQUUsQ0FBQyxHQUFDLEdBQUcsQ0FBQyxDQUFDO1lBRTFDLE1BQU0sQ0FBQyxxQkFBVyxDQUFDLElBQUksRUFBRSxTQUFTLEVBQUUsTUFBTSxDQUFDLENBQUM7UUFDaEQsQ0FBQztRQUNBLE1BQU0sQ0FBQyxJQUFJLENBQUM7SUFDYixDQUFDO0lBRUQsb0NBQVEsR0FBUixVQUFTLEtBQUs7UUFDVixLQUFLLEdBQUcsQ0FBQyxLQUFLLElBQUksR0FBRyxDQUFDLENBQUMsUUFBUSxFQUFFLENBQUE7UUFDakMsRUFBRSxDQUFDLENBQUMsQ0FBQyxLQUFLLENBQUMsT0FBTyxDQUFDLEdBQUcsQ0FBQyxDQUFDO1lBQ3BCLE1BQU0sQ0FBQyxNQUFNLENBQUMsS0FBSyxDQUFDLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQyxDQUFDLFFBQVEsRUFBRSxDQUFDO1FBQy9DLE1BQU0sQ0FBQyxLQUFLLENBQUM7SUFDakIsQ0FBQztJQUVELHVDQUFXLEdBQVg7UUFDSSxJQUFJLENBQUMsWUFBWSxDQUFDLElBQUksRUFBRSxDQUFDO1FBQ3pCLElBQUksQ0FBQyxZQUFZLENBQUMsUUFBUSxFQUFFLENBQUM7SUFDakMsQ0FBQztJQUVELHNDQUFVLEdBQVYsVUFBVyxLQUFLO1FBQ1IsS0FBSyxDQUFDLE1BQU0sR0FBRyxDQUFDLENBQUMsS0FBSyxDQUFDLEdBQUcsSUFBSSxFQUFFLENBQUMsQ0FBQyxNQUFNLElBQUksQ0FBQyxLQUFLLENBQUMsTUFBTSxDQUFDO1FBQzFELElBQUksTUFBTSxHQUFHLEVBQUMsS0FBSyxFQUFDLEtBQUssQ0FBQyxjQUFjLEVBQUMsQ0FBQztRQUMxQyxJQUFJLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxrQ0FBaUIsRUFBRSxNQUFNLENBQUMsQ0FBQztJQUM1QyxDQUFDO0lBaktOO1FBQUMsWUFBSyxFQUFFOztxREFBQTtJQUNSO1FBQUMsWUFBSyxFQUFFOztxREFBQTtJQUNSO1FBQUMsWUFBSyxFQUFFOzttREFBQTtJQUNSO1FBQUMsWUFBSyxFQUFFOzt1REFBQTtJQUNSO1FBQUMsWUFBSyxFQUFFOzt3REFBQTtJQVhaO1FBQUMsZ0JBQVMsQ0FBQztZQUNQLFFBQVEsRUFBRSxXQUFXO1lBQ3JCLFdBQVcsRUFBRSwyQ0FBMkM7WUFDeEQsVUFBVSxFQUFFLENBQUMsZ0NBQWdCLENBQUM7U0FDakMsQ0FBQzs7eUJBQUE7SUFxS0Ysd0JBQUM7QUFBRCxDQW5LQSxBQW1LQyxJQUFBO0FBbktZLHlCQUFpQixvQkFtSzdCLENBQUE7Ozs7Ozs7Ozs7Ozs7QUNqTEQsOEJBQStDLGVBQWUsQ0FBQyxDQUFBO0FBQy9ELHFCQUFxRCxlQUFlLENBQUMsQ0FBQTtBQWtCckU7SUFRQTtRQUhVLHNCQUFpQixHQUFzQixJQUFJLG1CQUFZLEVBQUUsQ0FBQztJQUdwRCxDQUFDO0lBRWpCLHdDQUFZLEdBQVosVUFBYSxJQUFlO1FBQzVCLElBQUksQ0FBQyxpQkFBaUIsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUM7SUFDbEMsQ0FBQztJQUVELG9DQUFRLEdBQVIsVUFBUyxJQUFlO1FBQ3BCLEVBQUUsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQztZQUNWLE1BQU0sQ0FBQztRQUVmLElBQUksQ0FBQyxVQUFVLEdBQUcsQ0FBQyxJQUFJLENBQUMsVUFBVSxDQUFDO0lBS25DLENBQUM7SUFFQSxxQ0FBUyxHQUFULFVBQVUsTUFBaUI7UUFDdkIsT0FBTyxDQUFDLEdBQUcsQ0FBQyxlQUFlLENBQUMsQ0FBQztRQUM3QixNQUFNLENBQUM7SUFDWCxDQUFDO0lBMUJGO1FBQUMsWUFBSyxFQUFFOztvREFBQTtJQUNSO1FBQUMsWUFBSyxFQUFFOzsyREFBQTtJQUVSO1FBQUMsYUFBTSxFQUFFOztnRUFBQTtJQVhUO1FBQUMsZ0JBQVMsQ0FBQztZQUNYLFFBQVEsRUFBRSxXQUFXO1lBQ2pCLFdBQVcsRUFBRSwyQ0FBMkM7WUFDeEQsVUFBVSxFQUFFLENBQUMsaUJBQWlCLEVBQUUsZ0NBQWdCLENBQUM7U0FDcEQsQ0FBQzs7eUJBQUE7SUErQkYsd0JBQUM7QUFBRCxDQTdCQSxBQTZCQyxJQUFBO0FBN0JZLHlCQUFpQixvQkE2QjdCLENBQUE7Ozs7Ozs7QUNoREQsaUJBQWMsV0FBVyxDQUFDLEVBQUE7Ozs7Ozs7Ozs7Ozs7QUNBMUIscUJBQThDLGVBQWUsQ0FBQyxDQUFBO0FBSTlEO0lBQ0MsaUJBQW1CLFFBQWtCLEVBQVMsVUFBc0I7UUFBakQsYUFBUSxHQUFSLFFBQVEsQ0FBVTtRQUFTLGVBQVUsR0FBVixVQUFVLENBQVk7SUFBSSxDQUFDO0lBRXpFLDBCQUFRLEdBQVI7UUFBQSxpQkFjQztRQVpBLE1BQU0sQ0FBQztRQUVQLElBQU0sV0FBVyxHQUFHLElBQUksQ0FBQyxVQUFVLENBQUMsYUFBYSxDQUFDLGFBQWEsQ0FBQyxPQUFPLENBQUMsQ0FBQztRQUN6RSxVQUFVLENBQUM7WUFFVixLQUFJLENBQUMsUUFBUSxDQUFDLG1CQUFtQixDQUFDLFdBQVcsRUFBRSxtQkFBbUIsRUFBRSxDQUFDLENBQUMsRUFBRSxHQUFHLENBQUMsQ0FBQyxDQUFDO1FBQy9FLENBQUMsRUFBRSxHQUFHLENBQUMsQ0FBQztRQUNSLFVBQVUsQ0FBQztZQUVWLEtBQUksQ0FBQyxRQUFRLENBQUMsbUJBQW1CLENBQUMsV0FBVyxFQUFFLE9BQU8sRUFBRSxFQUFFLENBQUMsQ0FBQztRQUU3RCxDQUFDLEVBQUUsR0FBRyxDQUFDLENBQUM7SUFDVCxDQUFDO0lBcEJGO1FBQUMsZ0JBQVMsQ0FBQztZQUNWLFFBQVEsRUFBRSxXQUFXO1NBQ3JCLENBQUM7O2VBQUE7SUFtQkYsY0FBQztBQUFELENBbEJBLEFBa0JDLElBQUE7QUFsQlksZUFBTyxVQWtCbkIsQ0FBQTs7OztBQ3RCRCxJQUFZLE1BQU0sV0FBTSxxQkFBcUIsQ0FBQyxDQUFBO0FBSXRDLHVDQUFPLENBQXVCO0FBWXRDLG1CQUEwQixHQUFHLEVBQUUsSUFBSTtJQUMvQixZQUFZLENBQUMsT0FBTyxDQUFDLEdBQUcsRUFBRSxJQUFJLENBQUMsU0FBUyxDQUFDLElBQUksSUFBSSxFQUFFLENBQUMsQ0FBQyxDQUFDO0FBQzFELENBQUM7QUFGZSxpQkFBUyxZQUV4QixDQUFBO0FBRUQsbUJBQTBCLEdBQUc7SUFDekIsTUFBTSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsWUFBWSxDQUFDLE9BQU8sQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDO0FBQ2pELENBQUM7QUFGZSxpQkFBUyxZQUV4QixDQUFBO0FBRUQsNEJBQW1DLElBQUk7SUFDbkMsSUFBSSxLQUFLLEdBQUcsTUFBTSxDQUFDLE1BQU0sR0FBRyxJQUFJLEdBQUcsVUFBVSxDQUFDLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLENBQUM7SUFDMUUsTUFBTSxDQUFDLEtBQUssSUFBSSxrQkFBa0IsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUMsT0FBTyxDQUFDLEtBQUssRUFBRSxHQUFHLENBQUMsQ0FBQyxDQUFDO0FBQ3JFLENBQUM7QUFIZSwwQkFBa0IscUJBR2pDLENBQUE7QUFFRCwwQkFBaUMsS0FBTSxFQUFFLEtBQU07SUFDM0MsSUFBSSxHQUFHLEdBQUcsSUFBSSxDQUFDLFFBQVEsQ0FBQyxNQUFNLEdBQUcsUUFBUSxDQUFDLFFBQVEsRUFBRSxLQUFLLEVBQUUsS0FBSyxDQUFDLENBQUM7SUFDbEUsSUFBSSxDQUFDO1FBQUEsTUFBTSxDQUFDLE9BQU8sQ0FBQyxZQUFZLENBQUUsRUFBRSxFQUFHLEVBQUUsRUFBRSxHQUFHLENBQUUsQ0FBQztJQUFBLENBQ2pEO0lBQUEsS0FBSyxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUEsQ0FBQyxDQUFBLENBQUM7QUFDakIsQ0FBQztBQUplLHdCQUFnQixtQkFJL0IsQ0FBQTtBQUdELHNCQUE2QixJQUFJO0lBQzdCLElBQUksV0FBVyxHQUFHLEtBQUssQ0FBQztJQUN4QixFQUFFLENBQUMsQ0FBQyxDQUFDLFdBQVcsSUFBSSxDQUFDLE9BQU8sQ0FBQywrQ0FBK0MsQ0FBQyxDQUFDLENBQUMsQ0FBQztRQUM1RSxJQUFJLFNBQVMsR0FBRyxtR0FBbUcsR0FBRyxNQUFNLENBQUMsVUFBVSxDQUFDO0lBRTVJLENBQUM7SUFDRCxJQUFJO1FBQ0EsQ0FBQztBQUNMLENBQUM7QUFSVyxvQkFBWSxlQVF2QixDQUFBO0FBRUwsa0JBQXlCLE1BQU07SUFDM0IsRUFBRSxDQUFDLENBQUMsQ0FBQyxNQUFNLElBQUksTUFBTSxDQUFDLE1BQU0sR0FBRyxDQUFDLENBQUM7UUFDN0IsTUFBTSxDQUFDLElBQUksQ0FBQztJQUNoQixFQUFFLENBQUMsQ0FBQyxPQUFPLE1BQU0sQ0FBQyxTQUFTLElBQUksV0FBVyxDQUFDLENBQUMsQ0FBQztRQUN4QyxNQUFNLENBQUMsQ0FBQyxJQUFJLE1BQU0sQ0FBQyxTQUFTLEVBQUUsQ0FBQyxDQUFDLGVBQWUsQ0FBQyxNQUFNLEVBQUUsVUFBVSxDQUFDLENBQUM7SUFDekUsQ0FBQztJQUFDLElBQUksQ0FBQyxFQUFFLENBQUMsQ0FBQyxPQUFPLE1BQU0sQ0FBQyxhQUFhLElBQUksV0FBVztRQUNqRCxJQUFJLE1BQU0sQ0FBQyxhQUFhLENBQUMsa0JBQWtCLENBQUMsQ0FBQyxDQUFDLENBQUM7UUFDM0MsSUFBSSxNQUFNLEdBQUcsSUFBSSxNQUFNLENBQUMsYUFBYSxDQUFDLGtCQUFrQixDQUFDLENBQUM7UUFDMUQsTUFBTSxDQUFDLEtBQUssR0FBRyxPQUFPLENBQUM7UUFDdkIsTUFBTSxDQUFDLE9BQU8sQ0FBQyxNQUFNLENBQUMsQ0FBQztRQUN2QixNQUFNLENBQUMsTUFBTSxDQUFDO0lBQ3RCLENBQUM7SUFBQyxJQUFJLENBQUMsQ0FBQztRQUNKLE9BQU8sQ0FBQyxHQUFHLENBQUMscUJBQXFCLENBQUMsQ0FBQztRQUNuQyxNQUFNLENBQUMsSUFBSSxDQUFDO0lBQ2hCLENBQUM7QUFDTCxDQUFDO0FBZmUsZ0JBQVEsV0FldkIsQ0FBQTtBQUVELGNBQXNCLEdBQVcsRUFBRSxLQUFhLEVBQUUsS0FBVztJQUNyRCxFQUFFLENBQUMsQ0FBQyxDQUFDLEdBQUcsSUFBSSxDQUFDLEtBQUssSUFBSSxDQUFDLEtBQUssQ0FBQztRQUN6QixNQUFNLENBQUMsR0FBRyxDQUFDO0lBQ25CLElBQUksT0FBTyxHQUFHLElBQUksTUFBTSxDQUFDLE1BQU0sR0FBQyxLQUFLLEdBQUMsY0FBYyxDQUFDLENBQUM7SUFDdEQsRUFBRSxDQUFDLENBQUMsR0FBRyxDQUFDLE1BQU0sQ0FBQyxPQUFPLENBQUMsSUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDO1FBQ3pCLE1BQU0sQ0FBQyxHQUFHLENBQUMsT0FBTyxDQUFDLE9BQU8sRUFBQyxJQUFJLEdBQUcsS0FBSyxHQUFHLElBQUksQ0FBQyxDQUFDO0lBQ3BELENBQUM7SUFDRCxHQUFHLEdBQUcsR0FBRyxDQUFDLE9BQU8sQ0FBQyxPQUFPLEVBQUMsRUFBRSxDQUFDLENBQUM7SUFDOUIsTUFBTSxDQUFDLEdBQUcsR0FBRyxDQUFDLEdBQUcsQ0FBQyxPQUFPLENBQUMsR0FBRyxDQUFDLEdBQUMsQ0FBQyxHQUFHLEdBQUcsR0FBRyxHQUFHLENBQUMsR0FBRyxLQUFLLEdBQUcsR0FBRyxHQUFHLEtBQUssQ0FBQztBQUN2RSxDQUFDO0FBVGMsWUFBSSxPQVNsQixDQUFBO0FBRUYscUJBQTZCLElBQUksRUFBRSxTQUFTLEVBQUUsSUFBSSxFQUFDLEdBQUc7SUFDOUMsSUFBSSxHQUFHLEdBQUcsTUFBTSxDQUFDLE9BQU8sQ0FBQztJQUN6QixFQUFFLENBQUMsQ0FBQyxTQUFTLENBQUM7UUFDVixHQUFHLEdBQUcsSUFBSSxDQUFDLEdBQUcsRUFBRSxLQUFLLEVBQUUsU0FBUyxDQUFDLENBQUM7SUFDdEMsR0FBRyxHQUFHLElBQUksQ0FBQyxHQUFHLEVBQUUsTUFBTSxFQUFFLElBQUksQ0FBQyxDQUFDO0lBQzlCLEdBQUcsR0FBRyxJQUFJLENBQUMsR0FBRyxFQUFFLEtBQUssRUFBRSxHQUFHLENBQUMsQ0FBQztJQUl4QixhQUFhLENBQUMsR0FBRyxDQUFDLENBQUM7QUFDL0IsQ0FBQztBQVZlLG1CQUFXLGNBVTFCLENBQUE7QUFFRCxvQkFBNEIsU0FBUyxFQUFFLElBQUksRUFBQyxHQUFHO0lBQ3ZDLElBQUksR0FBRyxHQUFHLGNBQVksR0FBRyxTQUFJLElBQUksU0FBSSxTQUFTLHdCQUFxQixDQUFDO0lBQ2hFLGFBQWEsQ0FBQyxHQUFHLENBQUMsQ0FBQztBQUMvQixDQUFDO0FBSGUsa0JBQVUsYUFHekIsQ0FBQTtBQUdELG9CQUEyQixHQUFHO0lBQzFCLE1BQU0sQ0FBQyxNQUFNLENBQUMsR0FBRyxDQUFDO1NBU2IsT0FBTyxDQUFDLElBQUksRUFBRSxNQUFNLENBQUM7U0FDckIsT0FBTyxDQUFDLElBQUksRUFBRSxNQUFNLENBQUMsQ0FFekI7QUFDTCxDQUFDO0FBZGUsa0JBQVUsYUFjekIsQ0FBQTtBQUVELG9CQUE0QixLQUFLLEVBQUUsSUFBSTtJQUMvQixLQUFLLEdBQUcsQ0FBQyxLQUFLLElBQUksRUFBRSxDQUFDLENBQUMsSUFBSSxFQUFFLENBQUM7SUFDN0IsSUFBSSxPQUFPLEdBQUcsSUFBSSxDQUFDO0lBQ25CLEVBQUUsQ0FBQyxDQUFDLEtBQUssQ0FBQyxNQUFNLENBQUM7UUFDYixLQUFLLEdBQUcsS0FBSzthQUNSLE9BQU8sQ0FBQyxjQUFjLEVBQUUsSUFBSSxDQUFDO2FBQzdCLE9BQU8sQ0FBQyxnQkFBZ0IsRUFBRSxJQUFJLENBQUM7YUFDL0IsT0FBTyxDQUFDLEtBQUssRUFBRSxFQUFFLENBQUM7YUFDbEIsT0FBTyxDQUFDLE9BQU8sRUFBRSxPQUFPLEdBQUcsSUFBSSxHQUFHLE1BQU0sQ0FBQyxDQUFDO0lBRW5ELE1BQU0sQ0FBQyxLQUFLLENBQUM7QUFDakIsQ0FBQztBQVhXLGtCQUFVLGFBV3JCLENBQUE7QUFFUSxxQkFBYSxHQUFHO0lBQ3pCLFVBQVUsRUFBRSxjQUFhLE1BQU0sQ0FBQyxZQUFZLENBQUMsT0FBTyxDQUFDLFlBQVksQ0FBQyxLQUFLLE1BQU0sQ0FBQSxDQUFBLENBQUM7SUFDOUUsVUFBVSxFQUFFLFVBQVMsSUFBSSxFQUFFLElBQUksRUFBRSxPQUFPO1FBQ2hDLE1BQU0sQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQyxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsQ0FBQztJQUMxQyxDQUFDO0lBRUQsUUFBUSxFQUFHLFVBQVUsR0FBRztRQUNwQixFQUFFLENBQUEsQ0FBQyxDQUFDLEdBQUcsQ0FBQztZQUFDLE1BQU0sQ0FBQyxLQUFLLENBQUM7UUFDdEIsTUFBTSxDQUFBLENBQUMsR0FBRyxDQUFDLElBQUksRUFBRSxDQUFDLEtBQUssQ0FBQywwQkFBMEIsQ0FBQyxLQUFLLElBQUksQ0FBQyxDQUFDO0lBQ2xFLENBQUM7SUFFRCxRQUFRLEVBQUcsVUFBVSxNQUFNLEVBQUUsS0FBSztRQUM5QixJQUFJLFVBQVUsR0FBRyxNQUFNLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDO1FBQ3BDLEdBQUcsQ0FBQyxDQUFDLElBQUksQ0FBQyxHQUFHLFVBQVUsQ0FBQyxNQUFNLEVBQUUsQ0FBQyxFQUFFLEdBQUcsQ0FBQyxHQUFFLENBQUM7WUFDdEMsSUFBSSxHQUFHLEdBQUcsVUFBVSxDQUFDLENBQUMsQ0FBQyxDQUFDO1lBQ3hCLEdBQUcsR0FBRyxHQUFHLENBQUMsT0FBTyxDQUFDLGFBQWEsRUFBRSxFQUFFLENBQUMsQ0FBQztZQUNyQyxFQUFFLENBQUEsQ0FBQyxHQUFHLENBQUMsT0FBTyxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztnQkFDM0IsTUFBTSxDQUFDLFVBQVUsQ0FBQyxDQUFDLENBQUMsQ0FBQztZQUN6QixDQUFDO1FBQ0wsQ0FBQztRQUNELE1BQU0sQ0FBQyxFQUFFLENBQUM7SUFDZCxDQUFDO0lBRUQsT0FBTyxFQUFHLFVBQVUsSUFBSSxFQUFFLEtBQUs7UUFFM0IsSUFBSSxNQUFNLEdBQUcsS0FBSyxDQUFDLE1BQU0sQ0FBQztRQUMxQixJQUFJLFNBQVMsR0FBRyxFQUFFLENBQUM7UUFDbkIsRUFBRSxDQUFDLENBQUMsTUFBTSxDQUFDLENBQ1gsQ0FBQztZQUNHLElBQUksU0FBUyxHQUFHLElBQUksQ0FBQyxLQUFLLENBQUMsa0JBQWtCLENBQUMsQ0FBQztZQUMvQyxHQUFHLENBQUEsQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQyxHQUFHLE1BQU0sRUFBRSxDQUFDLEVBQUUsRUFBQyxDQUFDO2dCQUM1QixJQUFJLElBQUksR0FBRyxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDO2dCQUN6QixJQUFJLEdBQUcscUJBQWEsQ0FBQyxVQUFVLENBQUMsSUFBSSxFQUFFLEdBQUcsR0FBQyxJQUFJLEVBQUUsS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDLFVBQVUsR0FBRyxFQUFFLEdBQUkscUJBQWEsQ0FBQyxXQUFXLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDLEdBQUcsRUFBQyxJQUFJLENBQUMsQ0FBQyxDQUFDO2dCQUMxSCxTQUFTLENBQUMsR0FBRyxHQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsQ0FBQyxFQUFFLElBQUksQ0FBQyxXQUFXLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBQyxHQUFHLENBQUMsR0FBRyxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUMsR0FBRyxDQUFDO1lBQy9FLENBQUM7WUFDRCxFQUFFLENBQUMsQ0FBQyxTQUFTLENBQUMsQ0FDZCxDQUFDO2dCQUNHLEdBQUcsQ0FBQSxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLEdBQUcsU0FBUyxDQUFDLE1BQU0sRUFBRSxDQUFDLEVBQUUsRUFBQyxDQUFDO29CQUN0QyxJQUFJLFFBQVEsR0FBRyxTQUFTLENBQUMsQ0FBQyxDQUFDLENBQUMsS0FBSyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDO29CQUN6QyxFQUFFLENBQUMsQ0FBQyxRQUFRLENBQUMsT0FBTyxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUNwQyxDQUFDO3dCQUNHLFFBQVEsR0FBRyxRQUFRLENBQUMsT0FBTyxDQUFDLFFBQVEsRUFBRSxFQUFFLENBQUMsQ0FBQztvQkFDOUMsQ0FBQztvQkFDRCxJQUFJLENBQ0osQ0FBQzt3QkFDRyxRQUFRLEdBQUcscUJBQWEsQ0FBQyxRQUFRLENBQUMsUUFBUSxDQUFDLEtBQUssQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsRUFBRSxTQUFTLENBQUMsQ0FBQzt3QkFDcEUsRUFBRSxDQUFBLENBQUMsUUFBUSxJQUFJLE9BQU0sQ0FBQyxTQUFTLENBQUMsUUFBUSxDQUFDLENBQUMsS0FBSyxXQUFZLENBQUMsQ0FBQyxDQUFDOzRCQUMxRCxRQUFRLEdBQUcsU0FBUyxDQUFDLFFBQVEsQ0FBQyxDQUFDO3dCQUNuQyxDQUFDO3dCQUNELElBQUk7NEJBQ0EsUUFBUSxHQUFHLEVBQUUsQ0FBQztvQkFDdEIsQ0FBQztvQkFDRCxFQUFFLENBQUMsQ0FBQyxRQUFRLENBQUMsTUFBTSxDQUFDO3dCQUNoQixJQUFJLEdBQUcscUJBQWEsQ0FBQyxVQUFVLENBQUMsSUFBSSxFQUFFLFNBQVMsQ0FBQyxDQUFDLENBQUMsRUFBRSxxQkFBYSxDQUFDLFdBQVcsQ0FBQyxRQUFRLEVBQUMsU0FBUyxDQUFDLENBQUMsQ0FBQyxDQUFDLEtBQUssQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7Z0JBQzNILENBQUM7WUFDTCxDQUFDO1lBRUQsRUFBRSxDQUFDLENBQUMsTUFBTSxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUM7Z0JBRWIsSUFBSSxHQUFHLHFCQUFhLENBQUMsVUFBVSxDQUFDLElBQUksRUFBRSxLQUFLLEVBQUUsSUFBSSxDQUFDLENBQUM7WUFDdkQsQ0FBQztZQUVELElBQUksR0FBRyxxQkFBYSxDQUFDLFVBQVUsQ0FBQyxJQUFJLEVBQUUsS0FBSyxFQUFFLElBQUksQ0FBQyxDQUFDO1FBRXZELENBQUM7UUFDRCxNQUFNLENBQUMsSUFBSSxDQUFDO0lBQ2hCLENBQUM7SUFFRCxXQUFXLEVBQUcsVUFBVSxJQUFJLEVBQUMsSUFBSTtRQUU3QixJQUFJLEdBQUcsR0FBRSxFQUFFLENBQUM7UUFDWixFQUFFLENBQUMsQ0FBQyxxQkFBYSxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsSUFBSSxxQkFBYSxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsQ0FBQztZQUM3RCxHQUFHLEdBQUcsa0NBQWtDLEdBQUcsSUFBSSxHQUFHLEtBQUssQ0FBQztRQUM1RCxJQUFJO1lBQ0EsR0FBRyxHQUFHLDZLQUE2SyxHQUFHLENBQUMsSUFBSSxJQUFLLGtCQUFrQixDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsR0FBRyxDQUFDLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxHQUFHLGdCQUFnQixDQUFDO1FBQ3RRLE1BQU0sQ0FBQyxzRUFBc0U7WUFDekUsQ0FBQyxxQkFBYSxDQUFDLFVBQVUsRUFBRSxJQUFJLElBQUksR0FBRyxDQUFDLGtDQUFrQyxHQUFHLElBQUksR0FBRyw0REFBNEQsR0FBRyxHQUFHLEdBQUcsTUFBTSxDQUFDO2dCQUM5SixDQUFDLDRCQUE0QixHQUFFLElBQUksR0FBRyxLQUFLLEdBQUMsR0FBRyxHQUFHLE1BQU0sQ0FBQyxDQUFDLENBQUM7SUFDcEUsQ0FBQztDQUNKLENBQUM7QUFFTixpQkFBd0IsU0FBUztJQUM3QixNQUFNLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxFQUFFLEdBQUcsRUFBRSxTQUFTLEVBQUUsQ0FBQyxDQUFDO0FBRTVDLENBQUM7QUFIZSxlQUFPLFVBR3RCLENBQUE7QUFFRCxPQUFPLENBQUMsSUFBSSxHQUFHLE9BQU8sQ0FBQztBQUt2Qix1QkFBOEIsU0FBUztJQUVuQyxFQUFFLENBQUMsQ0FBQyxZQUFZLENBQUMsT0FBTyxDQUFDLFlBQVksQ0FBQyxLQUFLLE1BQU0sSUFBSSxNQUFNLENBQUMsQ0FBQyxDQUFDO1FBQzlELEVBQUUsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxRQUFRLENBQUMsV0FBVyxFQUFFLEtBQUssU0FBUyxDQUFDLENBQUMsQ0FBQztZQUM5QyxNQUFNLENBQUMsU0FBUyxDQUFDLEdBQUcsQ0FBQyxPQUFPLENBQUMsU0FBUyxFQUFFLEVBQUUsWUFBWSxFQUFFLElBQUksRUFBRSxDQUFDLENBQUM7UUFDcEUsQ0FBQztRQUNELElBQUksQ0FBQyxFQUFFLENBQUMsQ0FBQyxNQUFNLENBQUMsUUFBUSxDQUFDLFdBQVcsRUFBRSxLQUFLLEtBQUssQ0FBQyxDQUFDLENBQUM7WUFDaEQsTUFBTSxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsU0FBUyxFQUFFLFNBQVMsQ0FBQyxDQUFDO1FBQzVDLENBQUM7SUFDRCxDQUFDO0lBQ0QsTUFBTSxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsU0FBUyxFQUFFLFFBQVEsQ0FBQyxDQUFDO0FBQzdDLENBQUM7QUFYZSxxQkFBYSxnQkFXNUIsQ0FBQTtBQUdELHNCQUE2QixHQUFHO0lBQzVCLE1BQU0sQ0FBQyxNQUFNLENBQUMsR0FBRyxDQUFDO1NBTWIsT0FBTyxDQUFDLGNBQWMsRUFBRSxJQUFJLENBQUM7U0FDN0IsT0FBTyxDQUFDLGdCQUFnQixFQUFFLElBQUksQ0FBQztTQUMvQixPQUFPLENBQUMsS0FBSyxFQUFFLFNBQVMsQ0FBQyxDQUFDO0FBRW5DLENBQUM7QUFYZSxvQkFBWSxlQVczQixDQUFBO0FBRUQsaUNBQXdDLFNBQVUsRUFBRSxNQUFPO0lBQ3ZELElBQUksTUFBTSxHQUFZLEVBQUUsQ0FBQztJQUN6QixFQUFFLENBQUMsQ0FBQyxDQUFDLFNBQVMsQ0FBQztRQUNYLE1BQU0sR0FBRyxZQUFZLENBQUMsT0FBTyxDQUFDLFlBQVksQ0FBQyxLQUFLLEdBQUcsR0FBRyxZQUFZLEdBQUcsWUFBWSxDQUFDO0lBQ3RGLElBQUk7UUFDQSxNQUFNLEdBQUcsWUFBWSxDQUFDLE9BQU8sQ0FBQyxZQUFZLENBQUMsS0FBSyxHQUFHLEdBQUcsZUFBZSxHQUFHLGFBQWEsQ0FBQztJQUUxRixNQUFNLENBQUMsTUFBTSxHQUFHLENBQUMsTUFBTSxHQUFHLENBQUMsWUFBWSxDQUFDLE9BQU8sQ0FBQyxZQUFZLENBQUMsS0FBSyxHQUFHLEdBQUcsVUFBVSxHQUFHLFFBQVEsQ0FBQyxHQUFHLEVBQUUsQ0FBQyxDQUFDO0FBQ3pHLENBQUM7QUFSZSwrQkFBdUIsMEJBUXRDLENBQUE7QUFFRCwyQkFBMkIsU0FBVSxFQUFFLE1BQU87SUFDMUMsSUFBSSxNQUFNLEdBQVksRUFBRSxDQUFDO0lBQ3pCLEVBQUUsQ0FBQyxDQUFDLENBQUMsU0FBUyxDQUFDO1FBQ1gsTUFBTSxHQUFHLFlBQVksQ0FBQyxPQUFPLENBQUMsWUFBWSxDQUFDLEtBQUssR0FBRyxHQUFHLFFBQVEsR0FBRyxRQUFRLENBQUM7SUFDOUUsSUFBSTtRQUNBLE1BQU0sR0FBRyxZQUFZLENBQUMsT0FBTyxDQUFDLFlBQVksQ0FBQyxLQUFLLEdBQUcsR0FBRyxjQUFjLEdBQUcsWUFBWSxDQUFDO0lBRXhGLE1BQU0sQ0FBQyxNQUFNLEdBQUcsQ0FBQyxNQUFNLEdBQUcsQ0FBQyxZQUFZLENBQUMsT0FBTyxDQUFDLFlBQVksQ0FBQyxLQUFLLEdBQUcsR0FBRyxXQUFXLEdBQUcsUUFBUSxDQUFDLEdBQUcsRUFBRSxDQUFDLENBQUM7QUFDMUcsQ0FBQztBQUVELHFCQUE0QixJQUFJLEVBQUUsU0FBVSxFQUFFLE1BQU87SUFDakQsTUFBTSxDQUFDLFVBQVUsQ0FBQyxJQUFJLEVBQUUsaUJBQWlCLENBQUMsU0FBUyxFQUFFLE1BQU0sQ0FBQyxDQUFDLENBQUM7QUFDbEUsQ0FBQztBQUZlLG1CQUFXLGNBRTFCLENBQUE7QUFFRCxxQkFBNEIsS0FBSztJQUM3QixNQUFNLENBQUMsWUFBWSxDQUFDLE9BQU8sQ0FBQyxVQUFVLENBQUMsR0FBRyxNQUFNLENBQUMsS0FBSyxJQUFJLEdBQUcsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUMsQ0FBQyxRQUFRLEVBQUUsQ0FBQztBQUN6RixDQUFDO0FBRmUsbUJBQVcsY0FFMUIsQ0FBQTtBQUdELHFCQUE2QixTQUFTLEVBQUMsUUFBUSxFQUFDLEtBQUssRUFBQyxJQUFLO0lBQ25ELElBQUksS0FBSyxHQUFHLEVBQUUsQ0FBQztJQUNmLEVBQUUsQ0FBQyxDQUFDLElBQUksQ0FBQztRQUNMLEtBQUssR0FBRyxJQUFJLEdBQUcsR0FBRyxDQUFDO0lBQ3ZCLEVBQUUsQ0FBQyxDQUFDLFFBQVEsQ0FBQztRQUNULEtBQUssSUFBSSxRQUFRLEdBQUcsR0FBRyxDQUFDO0lBQzVCLEVBQUUsQ0FBQyxDQUFDLFNBQVMsQ0FBQztRQUNWLEtBQUssSUFBSSxTQUFTLEdBQUcsR0FBRyxDQUFDO0lBQzdCLEVBQUUsQ0FBQyxDQUFDLEtBQUssSUFBSSxLQUFLLENBQUMsT0FBTyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFBLENBQUM7UUFDakMsRUFBRSxDQUFDLENBQUMsQ0FBQyxLQUFLLENBQUMsSUFBSSxFQUFFLENBQUM7WUFDZCxLQUFLLEdBQUcsS0FBSyxDQUFDO1FBQ2xCLElBQUksQ0FBQyxFQUFFLENBQUMsQ0FBQyxJQUFJLENBQUM7WUFDVixLQUFLLElBQUksSUFBSSxHQUFHLEtBQUssR0FBRyxHQUFHLENBQUM7SUFDcEMsQ0FBQztJQUNELE1BQU0sQ0FBQyxLQUFLLElBQUksUUFBUSxDQUFDO0FBQzdCLENBQUM7QUFmVyxtQkFBVyxjQWV0QixDQUFBO0FBRUwscUJBQTRCLEdBQUc7SUFDN0IsTUFBTSxDQUFDLEdBQUcsQ0FBQyxPQUFPLENBQUMsUUFBUSxFQUFFLFVBQVMsR0FBRyxJQUFJLE1BQU0sQ0FBQyxHQUFHLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQyxDQUFDLFdBQVcsRUFBRSxHQUFHLEdBQUcsQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDLENBQUMsV0FBVyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztBQUNwSCxDQUFDO0FBRmUsbUJBQVcsY0FFMUIsQ0FBQTtBQUVELCtCQUFzQyxFQUFFO0lBQ3BDLElBQUksQ0FBQyxHQUFHLFFBQVEsQ0FBQyxRQUFRLENBQUM7SUFDMUIsSUFBSSxDQUFDLEdBQUcsTUFBTSxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUM7SUFDN0IsSUFBSSxDQUFDLEdBQUcsR0FBRyxDQUFDO0lBQ1osSUFBSSxDQUFDLEdBQUcsRUFBRSxJQUFJLEVBQUUsQ0FBQztJQUNqQixJQUFJLFVBQVUsR0FBRyxRQUFRLENBQUM7SUFFMUIsSUFBSSxDQUFDLEdBQUcsUUFBUSxDQUFDLGFBQWEsQ0FBQyxRQUFRLENBQUMsQ0FBQztJQUN6QyxDQUFDLENBQUMsSUFBSSxHQUFHLGlCQUFpQixDQUFDO0lBQzNCLENBQUMsQ0FBQyxLQUFLLEdBQUcsSUFBSSxDQUFDO0lBQ2YsQ0FBQyxDQUFDLEdBQUcsR0FBRyxvQ0FBb0MsR0FBRyxrQkFBa0IsQ0FBQyxVQUFVLENBQUM7UUFDekUsVUFBVSxHQUFHLGtCQUFrQixDQUFDLENBQUMsQ0FBQyxHQUFHLEtBQUssR0FBRyxrQkFBa0IsQ0FBQyxDQUFDLENBQUM7UUFDbEUsS0FBSyxHQUFHLGtCQUFrQixDQUFDLENBQUMsQ0FBQyxHQUFHLEtBQUssR0FBRyxrQkFBa0IsQ0FBQyxDQUFDLENBQUMsQ0FBQztJQUNsRSxJQUFJLENBQUMsR0FBRyxRQUFRLENBQUMsb0JBQW9CLENBQUMsUUFBUSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7SUFDbkQsQ0FBQyxDQUFDLFVBQVUsQ0FBQyxZQUFZLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDO0FBQ3BDLENBQUM7QUFmZSw2QkFBcUIsd0JBZXBDLENBQUE7QUFFRDtJQUNJLElBQUksR0FBRyxHQUFHLElBQUksS0FBSyxFQUFFLENBQUM7SUFDdEIsSUFBSSxHQUFHLEdBQUcsUUFBUSxDQUFDLG9CQUFvQixDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO0lBRW5ELEdBQUcsQ0FBQyxNQUFNLEdBQUc7UUFDVCxHQUFHLENBQUMsV0FBVyxDQUFDLEdBQUcsQ0FBQyxDQUFDO0lBQ3pCLENBQUMsQ0FBQztJQUVGLEdBQUcsQ0FBQyxHQUFHLEdBQUcsa0NBQWtDLENBQUM7SUFDN0MsSUFBSSxJQUFJLEdBQUcsSUFBSSxJQUFJLEVBQUUsQ0FBQztJQUN0QixJQUFJLENBQUMsR0FBRyxHQUFHLElBQUksQ0FBQyxHQUFHLElBQUksRUFBRSxDQUFDO0lBQzFCLElBQUksQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDO1FBQ1YsSUFBSSxDQUFDLEtBQUssQ0FBQyxRQUFRLENBQUMsTUFBTSxDQUFDLENBQUM7UUFFNUIsSUFBSSxDQUFDLEtBQUssQ0FBQyxhQUFhLENBQUMsUUFBUSxDQUFDLENBQUM7UUFDbkMsSUFBSSxDQUFDLEtBQUssQ0FBQyxJQUFJLEVBQUUsQ0FBQztJQUN0QixDQUFDLENBQUMsQ0FBQztBQUNQLENBQUM7QUFqQmUsaUNBQXlCLDRCQWlCeEMsQ0FBQTtBQUVELElBQUksVUFBVSxHQUFTLFVBQVUsSUFBSyxFQUFFLElBQUssRUFBRSxHQUFJO0lBQy9DLElBQUksS0FBSyxHQUFHLGdFQUFnRSxFQUN4RSxRQUFRLEdBQUcsc0lBQXNJLEVBQ2pKLFlBQVksR0FBRyxhQUFhLEVBQzVCLEdBQUcsR0FBRyxVQUFVLEdBQUksRUFBRSxHQUFJO1FBQ3RCLEdBQUcsR0FBRyxNQUFNLENBQUMsR0FBRyxDQUFDLENBQUM7UUFDbEIsR0FBRyxHQUFHLEdBQUcsSUFBSSxDQUFDLENBQUM7UUFDZixPQUFPLEdBQUcsQ0FBQyxNQUFNLEdBQUcsR0FBRztZQUFFLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxDQUFDO1FBQ3pDLE1BQU0sQ0FBQyxHQUFHLENBQUM7SUFDZixDQUFDLENBQUM7SUFHTixNQUFNLENBQUMsVUFBVSxJQUFJLEVBQUUsSUFBSSxFQUFFLEdBQUc7UUFDNUIsSUFBSSxFQUFFLEdBQUcsVUFBVSxDQUFDO1FBR3BCLEVBQUUsQ0FBQyxDQUFDLFNBQVMsQ0FBQyxNQUFNLElBQUksQ0FBQyxJQUFJLE1BQU0sQ0FBQyxTQUFTLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsSUFBSSxpQkFBaUIsSUFBSSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDO1lBQ3pHLElBQUksR0FBRyxJQUFJLENBQUM7WUFDWixJQUFJLEdBQUcsU0FBUyxDQUFDO1FBQ3JCLENBQUM7UUFHRCxJQUFJLEdBQUcsSUFBSSxHQUFHLElBQUksSUFBSSxDQUFDLElBQUksQ0FBQyxHQUFHLElBQUksSUFBSSxDQUFDO1FBQ3hDLEVBQUUsQ0FBQyxDQUFDLEtBQUssQ0FBQyxJQUFJLENBQUMsQ0FBQztZQUFDLE1BQU0sV0FBVyxDQUFDLGNBQWMsQ0FBQyxDQUFDO1FBRW5ELElBQUksR0FBRyxNQUFNLENBQUMsRUFBRSxDQUFDLEtBQUssQ0FBQyxJQUFJLENBQUMsSUFBSSxJQUFJLElBQUksRUFBRSxDQUFDLEtBQUssQ0FBQyxTQUFTLENBQUMsQ0FBQyxDQUFDO1FBRzdELEVBQUUsQ0FBQyxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxJQUFJLE1BQU0sQ0FBQyxDQUFDLENBQUM7WUFDN0IsSUFBSSxHQUFHLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUM7WUFDckIsR0FBRyxHQUFHLElBQUksQ0FBQztRQUNmLENBQUM7UUFFRCxJQUFPLENBQUMsR0FBRyxHQUFHLEdBQUcsUUFBUSxHQUFHLEtBQUssRUFDN0IsQ0FBQyxHQUFHLElBQUksQ0FBQyxDQUFDLEdBQUcsTUFBTSxDQUFDLEVBQUUsRUFDdEIsQ0FBQyxHQUFHLElBQUksQ0FBQyxDQUFDLEdBQUcsS0FBSyxDQUFDLEVBQUUsRUFDckIsQ0FBQyxHQUFHLElBQUksQ0FBQyxDQUFDLEdBQUcsT0FBTyxDQUFDLEVBQUUsRUFDdkIsQ0FBQyxHQUFHLElBQUksQ0FBQyxDQUFDLEdBQUcsVUFBVSxDQUFDLEVBQUUsRUFDMUIsQ0FBQyxHQUFHLElBQUksQ0FBQyxDQUFDLEdBQUcsT0FBTyxDQUFDLEVBQUUsRUFDdkIsQ0FBQyxHQUFHLElBQUksQ0FBQyxDQUFDLEdBQUcsU0FBUyxDQUFDLEVBQUUsRUFDekIsQ0FBQyxHQUFHLElBQUksQ0FBQyxDQUFDLEdBQUcsU0FBUyxDQUFDLEVBQUUsRUFDekIsQ0FBQyxHQUFHLElBQUksQ0FBQyxDQUFDLEdBQUcsY0FBYyxDQUFDLEVBQUUsRUFDOUIsQ0FBQyxHQUFHLEdBQUcsR0FBRyxDQUFDLEdBQUcsSUFBSSxDQUFDLGlCQUFpQixFQUFFLEVBQ3RDLEtBQUssR0FBRztZQUNKLENBQUMsRUFBSyxDQUFDO1lBQ1AsRUFBRSxFQUFJLEdBQUcsQ0FBQyxDQUFDLENBQUM7WUFDWixHQUFHLEVBQUcsRUFBRSxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQyxDQUFDO1lBQ3pCLElBQUksRUFBRSxFQUFFLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDO1lBQzdCLENBQUMsRUFBSyxDQUFDLEdBQUcsQ0FBQztZQUNYLEVBQUUsRUFBSSxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQztZQUNoQixHQUFHLEVBQUcsRUFBRSxDQUFDLElBQUksQ0FBQyxVQUFVLENBQUMsQ0FBQyxDQUFDO1lBQzNCLElBQUksRUFBRSxFQUFFLENBQUMsSUFBSSxDQUFDLFVBQVUsQ0FBQyxDQUFDLEdBQUcsRUFBRSxDQUFDO1lBQ2hDLEVBQUUsRUFBSSxNQUFNLENBQUMsQ0FBQyxDQUFDLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQztZQUN4QixJQUFJLEVBQUUsQ0FBQztZQUNQLENBQUMsRUFBSyxDQUFDLEdBQUcsRUFBRSxJQUFJLEVBQUU7WUFDbEIsRUFBRSxFQUFJLEdBQUcsQ0FBQyxDQUFDLEdBQUcsRUFBRSxJQUFJLEVBQUUsQ0FBQztZQUN2QixDQUFDLEVBQUssQ0FBQztZQUNQLEVBQUUsRUFBSSxHQUFHLENBQUMsQ0FBQyxDQUFDO1lBQ1osQ0FBQyxFQUFLLENBQUM7WUFDUCxFQUFFLEVBQUksR0FBRyxDQUFDLENBQUMsQ0FBQztZQUNaLENBQUMsRUFBSyxDQUFDO1lBQ1AsRUFBRSxFQUFJLEdBQUcsQ0FBQyxDQUFDLENBQUM7WUFDWixDQUFDLEVBQUssR0FBRyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUM7WUFDZixDQUFDLEVBQUssR0FBRyxDQUFDLENBQUMsR0FBRyxFQUFFLEdBQUcsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDLEdBQUcsRUFBRSxDQUFDLEdBQUcsQ0FBQyxDQUFDO1lBQzFDLENBQUMsRUFBSyxDQUFDLEdBQUcsRUFBRSxHQUFHLEdBQUcsR0FBSSxHQUFHO1lBQ3pCLEVBQUUsRUFBSSxDQUFDLEdBQUcsRUFBRSxHQUFHLElBQUksR0FBRyxJQUFJO1lBQzFCLENBQUMsRUFBSyxDQUFDLEdBQUcsRUFBRSxHQUFHLEdBQUcsR0FBSSxHQUFHO1lBQ3pCLEVBQUUsRUFBSSxDQUFDLEdBQUcsRUFBRSxHQUFHLElBQUksR0FBRyxJQUFJO1lBQzFCLENBQUMsRUFBSyxHQUFHLEdBQUcsS0FBSyxHQUFHLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxDQUFDLEtBQUssQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsR0FBRyxFQUFFLENBQUMsT0FBTyxDQUFDLFlBQVksRUFBRSxFQUFFLENBQUM7WUFDMUYsQ0FBQyxFQUFLLENBQUMsQ0FBQyxHQUFHLENBQUMsR0FBRyxHQUFHLEdBQUcsR0FBRyxDQUFDLEdBQUcsR0FBRyxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsR0FBRyxFQUFFLENBQUMsR0FBRyxHQUFHLEdBQUcsSUFBSSxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsR0FBRyxFQUFFLEVBQUUsQ0FBQyxDQUFDO1lBQ3pGLENBQUMsRUFBSyxDQUFDLElBQUksRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLElBQUksQ0FBQyxDQUFDLENBQUMsR0FBRyxFQUFFLEdBQUcsQ0FBQyxHQUFHLENBQUMsR0FBRyxNQUFNLENBQUMsQ0FBQyxHQUFHLEdBQUcsR0FBRyxDQUFDLEdBQUcsRUFBRSxJQUFJLEVBQUUsQ0FBQyxHQUFHLENBQUMsR0FBRyxFQUFFLENBQUM7U0FDM0YsQ0FBQztRQUVOLE1BQU0sQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLEtBQUssRUFBRSxVQUFVLEVBQUU7WUFDbkMsTUFBTSxDQUFDLEVBQUUsSUFBSSxLQUFLLEdBQUcsS0FBSyxDQUFDLEVBQUUsQ0FBQyxHQUFHLEVBQUUsQ0FBQyxLQUFLLENBQUMsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxNQUFNLEdBQUcsQ0FBQyxDQUFDLENBQUM7UUFDaEUsQ0FBQyxDQUFDLENBQUM7SUFDUCxDQUFDLENBQUM7QUFDTixDQUFDLEVBQUUsQ0FBQztBQUdKLFVBQVUsQ0FBQyxLQUFLLEdBQUc7SUFDZixTQUFTLEVB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LENBQUMsT0FBTyxJQUFJLEVBQUUsQ0FBQyxDQUFDLFFBQVEsSUFBSSxJQUFJLENBQUMsRUFBRSxDQUFDLFVBQVUsSUFBSSxDQUFDLENBQUMsQ0FBQztRQUM1SSxJQUFJLFVBQVUsR0FBRyxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsT0FBTyxJQUFJLEVBQUUsQ0FBQyxDQUFDLEVBQUUsSUFBSSxJQUFJLENBQUMsT0FBTyxDQUFDLFVBQVUsSUFBSSxDQUFDLE1BQU0sQ0FBQyxPQUFPLElBQUksRUFBRSxDQUFDLENBQUMsUUFBUSxJQUFJLENBQUMsQ0FBQztRQUNwSCxJQUFJLFdBQVcsR0FBRyxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsUUFBUSxJQUFJLEVBQUUsQ0FBQyxDQUFDLEVBQUUsSUFBSSxJQUFJLENBQUMsT0FBTyxDQUFDLFdBQVcsSUFBSSxDQUFDLE1BQU0sQ0FBQyxRQUFRLElBQUksRUFBRSxDQUFDLENBQUMsUUFBUSxJQUFJLENBQUMsQ0FBQztRQUN4SCxJQUFJLFdBQVcsR0FBRyxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsUUFBUSxJQUFJLEVBQUUsQ0FBQyxDQUFDLEVBQUUsSUFBSSxJQUFJLENBQUMsT0FBTyxDQUFDLFdBQVcsSUFBSSxDQUFDLE1BQU0sQ0FBQyxRQUFRLElBQUksRUFBRSxDQUFDLENBQUMsUUFBUSxJQUFJLENBQUMsQ0FBQztRQUV4SCxJQUFJLENBQUMsT0FBTyxHQUFHO1lBQ1gsU0FBUyxFQUFFO2dCQUNQLElBQUksRUFBRSxTQUFTO2dCQUNmLEtBQUssRUFBRSxJQUFJLENBQUMsT0FBTyxDQUFDLFlBQVksSUFBSSxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsT0FBTyxJQUFJLEVBQUUsQ0FBQyxDQUFDLElBQUksSUFBSSxDQUFDLE1BQU0sQ0FBQyxPQUFPLElBQUksRUFBRSxDQUFDLENBQUMsS0FBSyxJQUFJLElBQUksQ0FBQyxFQUFFLENBQUMsWUFBWTtnQkFDN0gsUUFBUSxFQUFFLElBQUksQ0FBQyxVQUFVO2dCQUN6QixHQUFHLEVBQUUsNkNBQTZDO2dC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RUFBRSxDQUFDO1FBQ3RDLElBQUksQ0FBQyxLQUFLLEdBQUcsRUFBRSxJQUFJLEVBQUUsQ0FBQyxFQUFFLENBQUM7UUFFakIsSUFBSSxDQUFDLEVBQUUsR0FBRyxJQUFJLENBQUMsTUFBTSxDQUFDLFVBQVUsQ0FBQyxNQUFNLENBQUMsQ0FBQztRQUV6QyxJQUFJLE1BQU0sR0FBUyxFQUFFLENBQUM7UUFFdEIsRUFBRSxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLE1BQU0sSUFBSSxDQUFDLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxPQUFPLElBQUksRUFBRSxDQUFDLENBQUMsRUFBRSxDQUFDLENBQ3ZELENBQUM7WUFDRyxNQUFNLEdBQUcsSUFBSSxDQUFDLE1BQU0sQ0FBQyxPQUFPLENBQUMsTUFBTSxJQUFJLEVBQUUsQ0FBQztRQUM5QyxDQUFDO1FBRUQsSUFBSSxDQUFDLFVBQVUsR0FBRyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsT0FBTyxJQUFJLEVBQUUsQ0FBQyxDQUFDLEVBQUUsSUFBSSxJQUFJLENBQUMsSUFBSSxDQUFDLFVBQVUsSUFBSSxDQUFDLE1BQU0sQ0FBQyxPQUFPLElBQUksRUFBRSxDQUFDLENBQUMsUUFBUSxJQUFJLElBQUksQ0FBQyxFQUFFLENBQUMsVUFBVSxJQUFJLENBQUMsQ0FBQyxDQUFDO1FBQ3RJLElBQUksV0FBVyxHQUFHLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxRQUFRLElBQUksRUFBRSxDQUFDLENBQUMsRUFBRSxJQUFJLElBQUksQ0FBQyxJQUFJLENBQUMsV0FBVyxJQUFJLENBQUMsTUFBTSxDQUFDLFFBQVEsSUFBSSxFQUFFLENBQUMsQ0FBQyxRQUFRLElBQUksQ0FBQyxDQUFDO1FBQ2xILElBQUksVUFBVSxHQUFHLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxPQUFPLElBQUksRUFBRSxDQUFDLENBQUMsRUFBRSxJQUFJLElBQUksQ0FBQyxJQUFJLENBQUMsVUFBVSxJQUFJLENBQUMsTUFBTSxDQUFDLE9BQU8sSUFBSSxFQUFFLENB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QUFHLEtBQUssQ0FBQyxJQUFJLENBQUM7WUFDdEMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxRQUFRLENBQUMsS0FBSyxHQUFHLFFBQVEsQ0FBQztZQUN2QyxJQUFJLENBQUMsT0FBTyxDQUFDLFFBQVEsQ0FBQyxRQUFRLEdBQUcsQ0FBQyxDQUFDO1lBQ25DLElBQUksQ0FBQyxPQUFPLENBQUMsUUFBUSxDQUFDLEtBQUssR0FBRyxJQUFJLENBQUMsT0FBTyxDQUFDLFVBQVUsQ0FBQyxRQUFRO2dCQUMxRCxJQUFJLENBQUMsVUFBVSxDQUFDLE1BQU0sQ0FBQyxVQUFBLENBQUMsSUFBSSxPQUFBLENBQUMsQ0FBQyxXQUFXLEVBQWIsQ0FBYSxDQUFDLEdBQUcsSUFBSSxDQUFDLFVBQVUsQ0FBQyxNQUFNLENBQUMsVUFBQSxDQUFDLElBQUksT0FBQSxDQUFDLENBQUMsQ0FBQyxXQUFXLEVBQWQsQ0FBYyxDQUFDLENBQUM7WUFDN0YsSUFBSSxDQUFDLE9BQU8sQ0FBQyxRQUFRLENBQUMsTUFBTSxHQUFHLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxRQUFRLENBQUMsS0FBSyxDQUFDLE1BQU0sQ0FBQztRQUN2RSxDQUFDO1FBQ0QsSUFBSSxDQUFDLEVBQUUsQ0FBQyxDQUFDLElBQUksSUFBSSxVQUFVLENBQUMsQ0FDNUIsQ0FBQztZQUNHLElBQUksQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLENBQUMsUUFBUSxHQUFHLEtBQUssQ0FBQyxFQUFFLENBQUM7WUFDdkMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsQ0FBQyxLQUFLLEdBQUcsS0FBSyxDQUFDLElBQUksQ0FBQztRQUMxQyxDQUFDO1FBQ0QsSUFBSSxDQUFDLEVBQUUsQ0FBQyxDQUFDLElBQUksSUFBSSxZQUFZLENBQUMsQ0FDOUIsQ0FBQztZQUNHLElBQUksQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLENBQUMsUUFBUSxHQUFHLEtBQUssQ0FBQyxFQUFFLENBQUM7WUFDdkMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsQ0FBQyxLQUFL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LENBQUM7SUFDckIsQ0FBQztJQWhFVDtRQUFDLGlCQUFVLEVBQUU7O29CQUFBO0lBaUVULG1CQUFDO0FBQUQsQ0FoRUosQUFnRUssSUFBQTtBQWhFUSxvQkFBWSxlQWdFcEIsQ0FBQTs7O0FDM0VMIiwiZmlsZSI6ImdlbmVyYXRlZC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzQ29udGVudCI6WyIoZnVuY3Rpb24oKXtmdW5jdGlvbiByKGUsbix0KXtmdW5jdGlvbiBvKGksZil7aWYoIW5baV0pe2lmKCFlW2ldKXt2YXIgYz1cImZ1bmN0aW9uXCI9PXR5cGVvZiByZXF1aXJlJiZyZXF1aXJlO2lmKCFmJiZjKXJldHVybiBjKGksITApO2lmKHUpcmV0dXJuIHUoaSwhMCk7dmFyIGE9bmV3IEVycm9yKFwiQ2Fubm90IGZpbmQgbW9kdWxlICdcIitpK1wiJ1wiKTt0aHJvdyBhLmNvZGU9XCJNT0RVTEVfTk9UX0ZPVU5EXCIsYX12YXIgcD1uW2ldPXtleHBvcnRzOnt9fTtlW2ldWzBdLmNhbGwocC5leHBvcnRzLGZ1bmN0aW9uKHIpe3ZhciBuPWVbaV1bMV1bcl07cmV0dXJuIG8obnx8cil9LHAscC5leHBvcnRzLHIsZSxuLHQpfXJldHVybiBuW2ldLmV4cG9ydHN9Zm9yKHZhciB1PVwiZnVuY3Rpb25cIj09dHlwZW9mIHJlcXVpcmUmJnJlcXVpcmUsaT0wO2k8dC5sZW5ndGg7aSsrKW8odFtpXSk7cmV0dXJuIG99cmV0dXJuIHJ9KSgpIiwiaW1wb3J0IHtOZ1pvbmUsIFZpZXdDaGlsZH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQge0FwcCwgSW9uaWNBcHAsIENvbmZpZywgUGxhdGZvcm0sIE5hdiwgTmF2UGFyYW1zLCBFdmVudHMsIE1lbnVDb250cm9sbGVyLCBUb2FzdCwgQWxlcnR9IGZyb20gJ2lvbmljLWFuZ3VsYXInO1xuLy9pbXBvcnQge1N0YXR1c0JhciwgTmV0d29ya30gZnJvbSAnaW9uaWMtbmF0aXZlJztcbmltcG9ydCB7T25Jbml0LCBPbkRlc3Ryb3l9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0ICogYXMgcHJvdmlkZXJzIGZyb20gJy4vcHJvdmlkZXJzL3Byb3ZpZGVycyc7XG5pbXBvcnQge0FwcFNpdGUsIE1vYmlsZVNpdGUsIGRvbnRDbGVhckNhY2hlLCBhcHBWZXJzaW9ufSBmcm9tICcuL3Byb3ZpZGVycy9jb25maWcnO1xuaW1wb3J0IHtNT0NLU30gZnJvbSAnLi9wcm92aWRlcnMvbW9ja3MnO1xuaW1wb3J0IHtHcmF2YXRhclBpcGV9IGZyb20gJy4vcGlwZXMvcGlwZXMnO1xuaW1wb3J0ICogYXMgaGVscGVycyBmcm9tICcuL2RpcmVjdGl2ZXMvaGVscGVycyc7XG5pbXBvcnQgKiBhcyBwYWdlcyBmcm9tICcuL3BhZ2VzL3BhZ2VzJztcbmltcG9ydCAqIGFzIG1vZGFscyBmcm9tICcuL3BhZ2VzL21vZGFscy9tb2RhbHMnO1xuXG5cbmV4cG9ydCBpbnRlcmZhY2UgU2V0dGluZ3Mge1xuICBpc190ZWNoOiBib29sZWFuO1xuICBzdGF0OiBPYmplY3Q7XG4gIGtleTogc3RyaW5nO1xuICBvcmc6IHN0cmluZztcbiAgaW5zdGFuY2U6IHN0cmluZztcbiAgdXNlcjogT2JqZWN0O1xuICByZWNlbnQ6IE9iamVjdDtcbn1cblxuZXhwb3J0IGludGVyZmFjZSBTdGF0IHtcbiAgYWNjb3VudHM6IE9iamVjdDtcbiAgdGlja2V0czogT2JqZWN0O1xufVxuXG5AQXBwKHtcbiAgdGVtcGxhdGVVcmw6ICdidWlsZC9hcHAuaHRtbCcsXG4gIHByb3ZpZGVyczogW3Byb3ZpZGVycy5BcGlEYXRhLCBwcm92aWRlcnMuRGF0YVByb3ZpZGVyLCBwcm92aWRlcnMuVGlja2V0UHJvdmlkZXIsIHByb3ZpZGVycy5UaW1lUHJvdmlkZXIsIHByb3ZpZGVycy5Ub2RvUHJvdmlkZXJdLFxuICBwaXBlczogW0dyYXZhdGFyUGlwZV0sXG4gIHByb2RNb2RlIDogdHJ1ZSxcbiAgY29uZmlnOiB7XG4gICAgdGFiYmFyUGxhY2VtZW50OiAndG9wJyxcbiAgICBwYWdlVHJhbnNpdGlvbkRlbGF5OiAwLFxuICAgIHByb2RNb2RlOiB0cnVlLFxuICAgIGFjdGl2YXRvcjogXCJyaXBwbGVcIixcbiAgICBpb3M6IHtcbiAgICAgIGFjdGl2YXRvcjogJ3JpcHBsZSdcbiAgICB9IFxuICB9XG59KVxuY2xhc3MgTXlBcHAge1xuXG4gIEBWaWV3Q2hpbGQoTmF2KSBuYXY6IE5hdjtcbiAgcGFnZXM6IEFycmF5PGFueT47XG4gIHJvb3RQYWdlOiBhbnk7XG4gIGlzX29mZmxpbmU6IGJvb2xlYW4gPSBmYWxzZTtcbiAgaXNfcGhvbmVnYXA6IGJvb2xlYW4gPSBmYWxzZTtcbiAgb2ZmbGluZVRpbWVyOiBhbnk7XG4gIGRpc2Nvbm5lY3RTdWJzY3JpcHRpb246IGFueTtcbiAgY29ubmVjdFN1YnNjcmlwdGlvbjogYW55O1xuICBpbnRlcnZhbDogYW55O1xuICBpbWc6IGFueSA9IG5ldyBJbWFnZSgpO1xuXG4gIGNvbnN0cnVjdG9yKHByaXZhdGUgYXBwOiBJb25pY0FwcCwgcHJpdmF0ZSBwbGF0Zm9ybTogUGxhdGZvcm0sIHByaXZhdGUgY29uZmlnOiBDb25maWcsIHByaXZhdGUgZXZlbnRzOiBFdmVudHMsIHByaXZhdGUgbWVudTogTWVudUNvbnRyb2xsZXIsIHByaXZhdGUgdGlja2V0UHJvdmlkZXI6IHByb3ZpZGVycy5UaWNrZXRQcm92aWRlciwgcHJpdmF0ZSBkYXRhUHJvdmlkZXI6IHByb3ZpZGVycy5EYXRhUHJvdmlkZXIpIHtcblxuXG4gICAgaWYgKCF0aGlzLmlzU3RvcmFnZSgpKVxuICAgIHtcbiAgICAgIC8vdG9kbyByZWRpcmVjdCB0byBDb29raWVzIGFsZXJ0XG4gICAgICBjb25zb2xlLmxvZyhcIlBsZWFzZSBlbmFibGUgY29vY2tpZXMhXCIpXG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgdGhpcy5pc19waG9uZWdhcCA9IGxvY2FsU3RvcmFnZS5nZXRJdGVtKFwiaXNQaG9uZWdhcFwiKSA9PT0gXCJ0cnVlXCI7XG5cbiAgICAvLyBzZXQgdXAgb3VyIGFwcFxuICAgIHRoaXMuaW5pdGlhbGl6ZUFwcCgpO1xuXG4gICAgdGhpcy5FeHRlbmRDb25maWcoKTtcblxuICAgIHNldFRpbWVvdXQoKCkgPT5cbiAgICAgIHRoaXMuRXh0ZW5kTmF2QWxlcnQoKSwgMCk7XG5cbiAgICAvLyBkaXNhYmxlIGxvYWRpbmcgc2NyZWVuXG4gICAgLyp2YXIgbEVsID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJwcmUtYm9vdHN0cmFwMVwiKTtcbiAgICBpZiAobEVsKSB7XG4gICAgICBsRWwuY2xhc3NMaXN0LmFkZChcImxvYWRlZFwiKTtcbiAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uICgpIHsgZG9jdW1lbnQuZ2V0RWxlbWVudHNCeVRhZ05hbWUoXCJpb24tbG9hZGluZ1wiKVswXS5vdXRlckhUTUw9Jyc7fSxcbiAgICAgIDgwMCk7XG4gICAgfSovXG5cbiAgICAoZG9jdW1lbnQuZ2V0RWxlbWVudHNCeVRhZ05hbWUoXCJpb24tbG9hZGluZ1wiKVswXSB8fCB7fSkub3V0ZXJIVE1MPScnO1xuICAgIGxldCBmYWtlID0gZG9jdW1lbnQuZ2V0RWxlbWVudHNCeVRhZ05hbWUoXCJpb24tYXBwMVwiKTtcbiAgICBpZiAoZmFrZSAmJiBmYWtlWzBdKSB7XG4gICAgICBmYWtlWzBdLmNsYXNzTGlzdC5hZGQoXCJsb2FkZWRcIik7XG4gICAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uICgpIHsgZG9jdW1lbnQuZ2V0RWxlbWVudHNCeVRhZ05hbWUoXCJpb24tYXBwMVwiKVswXS5vdXRlckhUTUw9Jyc7fSwgMTUwMCk7XG4gICAgfVxuXG4gICAgLy9zYXZlIGRhc2ggY2FjaGVcbiAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uICgpIHsgaWYgKHdpbmRvdy5kYXNoIHx8IFwiXCIpIGxvY2FsU3RvcmFnZS5zZXRJdGVtKFwiZGFzaF9jYWNoZVwiLCB3aW5kb3cuZGFzaCB8fCBcIlwiKTt9LCA3MDAwKTtcblxuLypcbiAgZWwgPSBkb2N1bWVudC5lbGVtZW50RnJvbVBvaW50KHdpbmRvdy5pbm5lcldpZHRoLzIsIHdpbmRvdy5pbm5lckhlaWdodC8yKTtcbmNvbnRlbnQgPSBlbC5jbG9zZXN0KCdpb24tYXBwJyk7XG5jb250ZW50LmlubmVySFRNTC5yZXBsYWNlKC9cXHNcXHMrL2csJyAnKVxuKi9cblxudmFyIGlvc19hY3Rpb24gPSBsb2NhbFN0b3JhZ2UuZ2V0SXRlbSgnaW9zX2FjdGlvbicpIHx8IFwiXCI7XG5cbnZhciBrZXkgPSBoZWxwZXJzLmdldFBhcmFtZXRlckJ5TmFtZSgndCcpO1xudmFyIGVtYWlsID0gaGVscGVycy5nZXRQYXJhbWV0ZXJCeU5hbWUoJ2UnKTtcbnZhciBwbGF0Zm9ybV9zdHJpbmcgPSBoZWxwZXJzLmdldFBhcmFtZXRlckJ5TmFtZSgnaW9uaWNQbGF0Zm9ybScpO1xuXG5pZiAoa2V5KSB7XG4gIGNvbmZpZy5jbGVhckN1cnJlbnQoa2V5KTtcbiAgbG9jYWxTdG9yYWdlLnNldEl0ZW0oXCJpc0dvb2dsZVwiLCBcInRydWVcIik7XG4gIGxvY2FsU3RvcmFnZS5zZXRJdGVtKCd1c2VybmFtZScsIChlbWFpbCB8fCBcIlwiKS5yZXBsYWNlKFwiI1wiLCBcIlwiKSk7XG4gIGNvbmZpZy5zYXZlQ3VycmVudCgpO1xuICB0aGlzLnJvb3RQYWdlID0gcGFnZXMuT3JnYW5pemF0aW9uc1BhZ2U7XG4gIGhlbHBlcnMuY2xlYW5RdWVyeXN0cmluZygnaW9uaWNQbGF0Zm9ybScsIHBsYXRmb3JtX3N0cmluZyk7XG4gIHJldHVybjtcbn1cbmVsc2Uge1xuICB2YXIgZXJyb3IgPSBoZWxwZXJzLmdldFBhcmFtZXRlckJ5TmFtZSgnZicpO1xuICBpZiAoZXJyb3IpIHtcbiAgICBzZXRUaW1lb3V0KCgpID0+IHRoaXMubmF2LmFsZXJ0KGVycm9yLCB0cnVlKSwgMzAwMCk7XG4gIH1cbiAgbG9jYWxTdG9yYWdlLnNldEl0ZW0oXCJpc0dvb2dsZVwiLCBcIlwiKTtcbn1cbmhlbHBlcnMuY2xlYW5RdWVyeXN0cmluZygnaW9uaWNQbGF0Zm9ybScsIHBsYXRmb3JtX3N0cmluZyk7XG4vL3NldCB0ZXN0IGNvbmZpZyBvYmplY3RcbmlmIChkb250Q2xlYXJDYWNoZSlcbiAgY29uZmlnLnNldEN1cnJlbnQoTU9DS1NbXCJjb25maWdcIl0pO1xuZWxzZSBpZiAoIWNvbmZpZy5nZXRDdXJyZW50KFwiaXNfbG9nZ2VkXCIpKVxue1xuICB0aGlzLnJvb3RQYWdlID0gcGFnZXMuTG9naW5QYWdlO1xuICByZXR1cm47XG59XG5cbmlmICghY29uZmlnLmdldEN1cnJlbnQoXCJpc19jaG9zZW5cIikpXG57XG4gIHRoaXMucm9vdFBhZ2UgPSBwYWdlcy5Pcmdhbml6YXRpb25zUGFnZTtcbiAgcmV0dXJuO1xufVxuXG4vL2NvbmZpZy5zYXZlQ3VycmVudCgpO1xuXG5zZXRUaW1lb3V0KCgpID0+IHRoaXMucmVkaXJlY3QodHJ1ZSksIGRvbnRDbGVhckNhY2hlID8gMTAwMCA6IDApO1xufVxuXG5yZWRpcmVjdChpc1JlZGlyZWN0Pykge1xuICB0aGlzLmRhdGFQcm92aWRlci5nZXRDb25maWcoKS5zdWJzY3JpYmUoXG4gICAgZGF0YSA9PiB7XG4gICAgICB2YXIgc2t5cGUgPSBsb2NhbFN0b3JhZ2UuZ2V0SXRlbSgnc2t5cGUnKSB8fCBcIlwiO1xuICAgICAgaWYgKHNreXBlKVxuICAgICAgICB7XG4gICAgICAgICAgdGhpcy5yZWRpcmVjdF9za3lwZShkYXRhKTtcbiAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICAgIHRoaXMub25MaW5lKHRydWUpO1xuICAgICAgY2xlYXJJbnRlcnZhbCh0aGlzLmludGVydmFsKTtcbiAgICAgIHRoaXMuaW50ZXJ2YWwgPSBzZXRJbnRlcnZhbCgoKSA9PiB0aGlzLnJlZGlyZWN0KCksIDUgKiA2MCAqIDEwMDApO1xuICAgICAgdGhpcy5yZWRpcmVjdF9sb2dpYyhpc1JlZGlyZWN0LCBkYXRhKTtcbiAgICB9LFxuICAgIGVycm9yID0+IHtcbiAgICAgIGNsZWFySW50ZXJ2YWwodGhpcy5pbnRlcnZhbCk7XG4gICAgICB0aGlzLm5hdi5hbGVydChlcnJvciB8fCAnU2VydmVyIGVycm9yJywgdHJ1ZSk7XG4gICAgICBpZiAodGhpcy5pc19vZmZsaW5lICYmIHRoaXMuY29uZmlnLmdldEN1cnJlbnQoXCJ1c2VyXCIpLmZpcnN0bmFtZSkge1xuICAgICAgICB0aGlzLnJlZGlyZWN0X2xvZ2ljKGlzUmVkaXJlY3QsIHRoaXMuY29uZmlnLmdldEN1cnJlbnQoKSk7XG4gICAgICB9XG4gICAgICBlbHNlXG4gICAgICB7XG4gICAgICAgIHRoaXMuY29uZmlnLnNldEN1cnJlbnQoe29yZyA6IFwiXCJ9KTtcbiAgICAgIH1cbiAgICAgIC8vbG9jYWxTdG9yYWdlLmNsZWFyKCk7XG4gICAgICAvL2xvY2FsU3RvcmFnZS5zZXRJdGVtKFwidXNlcm5hbWVcIiwgdGhpcy5jb25maWcuY3VycmVudC51c2VybmFtZSB8fCBcIlwiKTtcbiAgICAgIC8vdGhpcy5uYXYuc2V0Um9vdChMb2dpblBhZ2UsIG51bGwsIHsgYW5pbWF0aW9uOiBcIndwLXRyYW5zaXRpb25cIiB9KTtcbiAgICB9XG4gICAgKTsgXG59XG5cbm9rICh2YWx1ZSkgeyAgICAgICAgIC8vY29uc29sZS5sb2coJ3ByZWYnLCB2YWx1ZSk7IFxufVxuZmFpbCAoZXJyb3IpIHthbGVydChlcnJvcik7fVxuXG5pbml0T3JnUHJlZmVyZW5jZXModmFsdWUpIHtcbiAgLy9jb25zb2xlLmxvZygndmFsdWUnLCB2YWx1ZSk7XG5cbiAgaWYgKHdpbmRvdy5jb3Jkb3ZhKXtcbiAgICB2YXIgcHJlZnMgPSAod2luZG93LnBsdWdpbnMgfHwge30pLmFwcFByZWZlcmVuY2VzO1xuICAgIGlmIChwcmVmcyl7XG4gICAgICB2YXIgc3VpdGVQcmVmcyA9IHByZWZzLmlvc1N1aXRlKFwiZ3JvdXAuaW8uc2hlcnBhZGVzay5tb2JpbGVcIik7XG4gICAgICBzdWl0ZVByZWZzLnN0b3JlICh0aGlzLm9rLCB0aGlzLmZhaWwsICdvcmcnLCB2YWx1ZSk7XG4gICAgfVxuICAgIGlmICh3aW5kb3cuc3N3Yyl7XG4gICAgdmFyIGRpZFJlY2VpdmVNZXNzYWdlID0gZnVuY3Rpb24obWVzc2FnZSl7XG4gICAgICAgIHZhciBvYmogPSBKU09OLnBhcnNlKG1lc3NhZ2UpO1xuICAgICAgICBjb25zb2xlLmxvZyhvYmoubWVzc2FnZSk7XG4gICAgfVxuICAgIHZhciBtc2dTZW5kU3VjY2VzcyA9IGZ1bmN0aW9uKCkge1xuICAgICAgICBjb25zb2xlLmxvZyhcIk1lc3NhZ2Ugc2VuZCBzdWNjZXNzXCIpO1xuICAgIH1cbiAgICB2YXIgZmFpbHVyZSA9IGZ1bmN0aW9uKCkge1xuICAgICAgICBjb25zb2xlLmxvZyhcIkVycm9yXCIpO1xuICAgIH1cbiAgICB2YXIgc3VjY2VzcyA9IGZ1bmN0aW9uKCkge1xuICAgICAgICB3aW5kb3cuc3N3Yy5tZXNzYWdlUmVjZWl2ZXIoZGlkUmVjZWl2ZU1lc3NhZ2UsIGZhaWx1cmUpO1xuICAgICAgICB3aW5kb3cuc3N3Yy5zZW5kTWVzc2FnZSh2YWx1ZSwgbXNnU2VuZFN1Y2Nlc3MsIGZhaWx1cmUpO1xuICAgIH1cbiAgICB3aW5kb3cuc3N3Yy5pbml0KHN1Y2Nlc3MsIGZhaWx1cmUpO1xuICAgIGNvbnNvbGUubG9nKFwid2luZG93LnNzd2NcIiwgd2luZG93LnNzd2MpO1xuICB9XG4gIGVsc2VcbiAgICBjb25zb2xlLmxvZyhcIm5vIHdhdGNoXCIpO1xuICB9XG59XG5cblxucmVkaXJlY3Rfc2t5cGUoZGF0YSlcbntcbiAgdGhpcy5jb25maWcuc2V0Q3VycmVudChkYXRhKTtcbiAgdGhpcy5uYXYuc2V0Um9vdChwYWdlcy5Ta3lwZVBhZ2UsIG51bGwsIHsgYW5pbWF0aW9uOiBcIndwLXRyYW5zaXRpb25cIiB9KTtcbn1cblxucmVkaXJlY3RfbG9naWMoaXNSZWRpcmVjdD8sIGRhdGE/KVxue1xuICAgIC8qXG4vL0RlYnVnIGNvbmZpZyB2YWx1ZXNcbi8vVGltZVxuZGF0YS5pc190aW1lX3RyYWNraW5nID0gZmFsc2U7XG4vL1Jlc29sdXRpb24gb24gY2xvc2UgdGlja2V0XG5kYXRhLmlzX3Jlc29sdXRpb25fdHJhY2tpbmcgPSBmYWxzZTtcbi8vQ29uZmlybWF0aW9uIG9uIGNsb3NlIHRpY2tldFxuZGF0YS5pc19jb25maXJtYXRpb25fdHJhY2tpbmcgPSBmYWxzZTtcbi8vUHJpb3JpdGllc1xuZGF0YS5pc19wcmlvcml0aWVzX2dlbmVyYWwgPSBmYWxzZTtcbi8vTG9jYXRpb25zXG5kYXRhLmlzX2xvY2F0aW9uX3RyYWNraW5nID0gZmFsc2U7XG4vL0V4cGVuc2VzXG5kYXRhLmlzX2V4cGVuc2VzID0gZmFsc2U7XG4vL0NsYXNzZXNcbmRhdGEuaXNfY2xhc3NfdHJhY2tpbmcgPSBmYWxzZTtcbi8vSW52b2ljZXNcbmRhdGEuaXNfaW52b2ljZSA9IGZhbHNlO1xuLy9Qcm9qZWN0c1xuZGF0YS5pc19wcm9qZWN0X3RyYWNraW5nID0gZmFsc2U7XG4vL1RvZG9zXG5kYXRhLmlzX3RvZG9zID0gZmFsc2U7XG4vL0xldmVsc1xuZGF0YS5pc190aWNrZXRfbGV2ZWxzID0gZmFsc2U7XG4vL1RlY2ggY2hvb3NlIExldmVsIG9uIFRpY2tldCBDcmVhdGlvblxuZGF0YS5pc190ZWNoX2Nob29zZV9sZXZlbHMgPSBmYWxzZTtcbi8vUmVzdHJpY3QgdGVjaCB0byBlc2NhbGF0ZSBvbmx5XG5kYXRhLmlzX3Jlc3RyaWN0X3RlY2hfZXNjYWxhdGUgPSBmYWxzZTtcbi8vQWNjb3VudHNcbmRhdGEuaXNfYWNjb3VudF9tYW5hZ2VyID0gZmFsc2U7XG4vL1F1ZXVlc1xuZGF0YS5pc191bmFzc2lnbmVkX3F1ZXVlID0gZmFsc2U7XG4vL05vdGUgcmVxdWlyZWQgb24gY2xvc2UgdGlja2V0XG5kYXRhLmlzX3RpY2tldF9yZXF1aXJlX2Nsb3N1cmVfbm90ZSA9IGZhbHNlO1xuLy9BbGwgT3BlbiB0aWNrZXRzICh0cnVlIHRvIGhpZGUpXG5kYXRhLnVzZXIuaXNfbGltaXRfYXNzaWduZWRfdGt0cyA9IHRydWU7XG4vL0lzIHVzZXIgQWRtaW5cbmRhdGEudXNlci5pc19hZG1pbiA9IGZhbHNlO1xuLy9vbmhvbGRfc3RhdHVzXG5kYXRhLmlzX29uaG9sZF9zdGF0dXMgPSB0cnVlO1xuLy9wYXltZW50cyBzdGF0dXNcbmRhdGEuaXNfcGF5bWVudHMgPSBmYWxzZVxuLy9iaWxsaW5nIHN0YXR1c1xuZGF0YS5pc19pbnZvaWNlID0gZmFsc2Vcbi8vYnVkZ2V0ZWQgaG91cnNcbmRhdGEuaXNfYnVkZ2V0X3RpbWUgPSBmYWxzZVxuLy9zaG93IGZpbmFuY2lhbCBpbmZvIGZvciB0ZWNoXG5kYXRhLmlzX2ZpbmFuY2lhbF9pbmZvX2Zvcl90ZWNoID0gZmFsc2VcbiovXG4vKlxuZGF0YS5uYW1lcyA9IHtcbiAgXCJ0aWNrZXRcIjoge3M6IFwiVGlja2V0MVwiLCBwOiBcIlRpY2tldHMxXCIsIGE6XCJUa3QxXCIsIGFwOiBcIlRrdHMxXCJ9LFxuICBcImFjY291bnRcIjoge3M6IFwiQWNjb3VudDFcIiwgcDogXCJBY2NvdW50czFcIiwgYTpcIkFjYzFcIiwgYXA6IFwiQWNjczFcIn0sXG4gIFwidGVjaFwiOiB7czogXCJUZWNobmljaWFuMVwiLCBwOiBcIlRlY2huaWNpYW5zMVwiLCBhOlwiVGVjaDFcIiwgYXA6IFwiVGVjaHMxXCJ9LFxuICBcImxvY2F0aW9uXCI6IHtzOiBcIkxvY2F0aW9uMVwiLCBwOiBcIkxvY2F0aW9uczFcIiwgYTpcIkxvYzFcIiwgYXA6IFwiTG9jczFcIn0sXG4gIFwidXNlclwiOiB7czogXCJFbmQgVXNlcjFcIiwgcDogXCJFbmQgVXNlcnMxXCIsIGE6XCJVc2VyMVwiLCBhcDogXCJVc2VyczFcIn1cbn07XG4qL1xudGhpcy5jb25maWcuc2V0Q3VycmVudChkYXRhKTtcbi8vIHNldCBvdXIgYXBwJ3MgcGFnZXNcbmlmICh0aGlzLmNvbmZpZy5jdXJyZW50LnVzZXIuaXNfdGVjaG9yYWRtaW4pXG4gIHRoaXMucGFnZXMgPSBbXG57IHRpdGxlOiAnUHJvZmlsZScsIGZpcnN0bmFtZTogZGF0YS51c2VyLmZpcnN0bmFtZSwgbGFzdG5hbWU6IGRhdGEudXNlci5sYXN0bmFtZSwgZW1haWw6IGRhdGEudXNlci5lbWFpbCwgY29tcG9uZW50OiBwYWdlcy5Qcm9maWxlUGFnZSwgaWNvbjogXCJzcGVlZG9tZXRlclwiLCBpc19wcm9maWxlOiB0cnVlIH0sXG57IHRpdGxlOiAnRGFzaGJvYXJkJywgY29tcG9uZW50OiBwYWdlcy5EYXNoYm9hcmRQYWdlLCBpY29uOiBcInNwZWVkb21ldGVyXCIsIGlzX2FjdGl2ZTogdHJ1ZSB9LFxueyB0aXRsZTogZGF0YS5uYW1lcy50aWNrZXQucCwgY29tcG9uZW50OiBwYWdlcy5UaWNrZXRzUGFnZSwgaWNvbjogXCJjcmVhdGVcIiwgaXNfYWN0aXZlOiB0cnVlIH0sXG57IHRpdGxlOiAnVGltZWxvZ3MnLCBjb21wb25lbnQ6IHBhZ2VzLlRpbWVsb2dzUGFnZSwgaWNvbjogXCJtZC10aW1lXCIsIGlzX2FjdGl2ZTogdGhpcy5jb25maWcuY3VycmVudC5pc190aW1lX3RyYWNraW5nIH0sXG57IHRpdGxlOiBkYXRhLm5hbWVzLmFjY291bnQucCwgY29tcG9uZW50OiBwYWdlcy5BY2NvdW50c1BhZ2UsIGljb246IFwicGVvcGxlXCIsIGlzX2FjdGl2ZTogdGhpcy5jb25maWcuY3VycmVudC5pc19hY2NvdW50X21hbmFnZXIgfSxcbnsgdGl0bGU6IGRhdGEubmFtZXMubG9jYXRpb24ucCwgY29tcG9uZW50OiBwYWdlcy5Mb2NhdGlvbnNQYWdlLCBpY29uOiBcIm5hdmlnYXRlXCIsIGlzX2FjdGl2ZTogdGhpcy5jb25maWcuY3VycmVudC5pc19sb2NhdGlvbl90cmFja2luZyB9LFxueyB0aXRsZTogZGF0YS5uYW1lcy50ZWNoLnAsIGNvbXBvbmVudDogcGFnZXMuVGVjaG5pY2lhbnNQYWdlLCBpY29uOiBcInBlb3BsZS1vdXRsaW5lXCIsIGlzX2FjdGl2ZTogdHJ1ZSB9LFxueyB0aXRsZTogJ0ludm9pY2VzJywgY29tcG9uZW50OiBwYWdlcy5JbnZvaWNlc1BhZ2UsIGljb246IFwiY2FyZFwiLCBpc19hY3RpdmU6IHRoaXMuY29uZmlnLmN1cnJlbnQuaXNfdGltZV90cmFja2luZyAmJiB0aGlzLmNvbmZpZy5jdXJyZW50LmlzX2ludm9pY2UgJiYgKHRoaXMuY29uZmlnLmN1cnJlbnQuaXNfZmluYW5jaWFsX2luZm9fZm9yX3RlY2ggfHwgdGhpcy5jb25maWcuY3VycmVudC51c2VyLmlzX2FkbWluKX0sXG57IHRpdGxlOiAnUXVldWVzJywgY29tcG9uZW50OiBwYWdlcy5RdWV1ZXNQYWdlLCBpY29uOiBcIm1kLWxpc3QtYm94XCIsIGlzX2FjdGl2ZTogdGhpcy5jb25maWcuY3VycmVudC5pc191bmFzc2lnbmVkX3F1ZXVlICYmICghdGhpcy5jb25maWcuY3VycmVudC51c2VyLmlzX2xpbWl0X2Fzc2lnbmVkX3RrdHMgfHwgdGhpcy5jb25maWcuY3VycmVudC51c2VyLmlzX2FkbWluKX0sXG57IHRpdGxlOiAnVG9Eb3MnLCBjb21wb25lbnQ6IHBhZ2VzLlRvZG9zUGFnZSwgaWNvbjogXCJsaXN0LWJveFwiLCBpc19hY3RpdmU6IHRoaXMuY29uZmlnLmN1cnJlbnQuaXNfdG9kb3MgfSxcbnsgdGl0bGU6ICdTd2l0Y2ggT3JnJywgY29tcG9uZW50OiBwYWdlcy5Pcmdhbml6YXRpb25zUGFnZSwgaWNvbjogXCJtZC1zd2FwXCIsIGlzX2FjdGl2ZTogdGhpcy5jb25maWcuY3VycmVudC5pc19tdWx0aXBsZV9vcmcgfSxcbnsgdGl0bGU6ICdTaWdub3V0JywgY29tcG9uZW50OiBwYWdlcy5Mb2dpblBhZ2UsIGljb246IFwibWQtbG9nLWluXCIsIGlzX2FjdGl2ZTogdHJ1ZSB9LFxueyB0aXRsZTogJ0Z1bGwgQXBwJywgY29tcG9uZW50OiBudWxsLCBpY29uOiBcIm1kLXNoYXJlLWFsdFwiLCBpc19hY3RpdmU6IHRydWUgfSxcbl07XG5lbHNlXG4gIHRoaXMucGFnZXMgPSBbXG57IHRpdGxlOiAnUHJvZmlsZScsIGZpcnN0bmFtZTogZGF0YS51c2VyLmZpcnN0bmFtZSwgbGFzdG5hbWU6IGRhdGEudXNlci5sYXN0bmFtZSwgZW1haWw6IGRhdGEudXNlci5lbWFpbCwgY29tcG9uZW50OiBwYWdlcy5Qcm9maWxlUGFnZSwgaWNvbjogXCJzcGVlZG9tZXRlclwiLCBpc19wcm9maWxlOiB0cnVlIH0sXG57IHRpdGxlOiBkYXRhLm5hbWVzLnRpY2tldC5wLCBjb21wb25lbnQ6IHBhZ2VzLlRpY2tldHNQYWdlLCBpY29uOiBcImNyZWF0ZVwiLCBpc19hY3RpdmU6IHRydWUgfSxcbnsgdGl0bGU6ICdTd2l0Y2ggT3JnJywgY29tcG9uZW50OiBwYWdlcy5Pcmdhbml6YXRpb25zUGFnZSwgaWNvbjogXCJtZC1zd2FwXCIsIGlzX2FjdGl2ZTogdGhpcy5jb25maWcuY3VycmVudC5pc19tdWx0aXBsZV9vcmcgfSxcbnsgdGl0bGU6ICdTaWdub3V0JywgY29tcG9uZW50OiBwYWdlcy5Mb2dpblBhZ2UsIGljb246IFwibWQtbG9nLWluXCIsIGlzX2FjdGl2ZTogdHJ1ZSB9LFxueyB0aXRsZTogJ0Z1bGwgQXBwJywgY29tcG9uZW50OiBudWxsLCBpY29uOiBcIm1kLXNoYXJlLWFsdFwiLCBpc19hY3RpdmU6IHRydWUgfSxcbl07XG5cbmlmIChsb2NhbFN0b3JhZ2UuZ2V0SXRlbShcImlzUGhvbmVnYXBcIikgPT09IFwidHJ1ZVwiKVxue1xuICB0aGlzLmluaXRPcmdQcmVmZXJlbmNlcyh0aGlzLmNvbmZpZy5jdXJyZW50Lm9yZyArIFwiLVwiICsgdGhpcy5jb25maWcuY3VycmVudC5pbnN0YW5jZSArIFwiOlwiICsgdGhpcy5jb25maWcuY3VycmVudC5rZXkpO1xuICBpZiAod2luZG93LmNvcmRvdmEgJiYgY29yZG92YS5wbHVnaW5zLmJhY2tncm91bmRNb2RlKXtcbiAgICBjb3Jkb3ZhLnBsdWdpbnMuYmFja2dyb3VuZE1vZGUuZW5hYmxlKCk7XG4gICAgaWYgKHR5cGVvZiBjb3Jkb3ZhLnBsdWdpbnMuYmFja2dyb3VuZE1vZGUub3ZlcnJpZGVCYWNrQnV0dG9uID09PSBcImZ1bmN0aW9uXCIpXG4gICAgICBjb3Jkb3ZhLnBsdWdpbnMuYmFja2dyb3VuZE1vZGUub3ZlcnJpZGVCYWNrQnV0dG9uKCk7XG4gIH1cbn1cblxuLy9pZiAobG9jYWxTdG9yYWdlLmdldEl0ZW0oXCJpc1Bob25lZ2FwXCIpID09PSBcInRydWVcIiAmJiB0aGlzLmNvbmZpZy5jdXJyZW50LmtleSlcbi8vICBpbml0T3JnUHJlZmVyZW5jZXModGhpcy5jb25maWcuY3VycmVudC5vcmcgKyBcIi1cIiArIHRoaXMuY29uZmlnLmN1cnJlbnQuaW5zdGFuY2UgKyBcIjpcIiArIHRoaXMuY29uZmlnLmN1cnJlbnQua2V5KTtcbi8vZ2V0SW5mbzRFeHRlbnNpb24oKTtcbi8vdmFyIGlzRXh0ZW5zaW9uID0gbG9jYWxTdG9yYWdlLmdldEl0ZW0oXCJpc0V4dGVuc2lvblwiKSA9PT0gXCJ0cnVlXCI7XG5pZiAoaXNSZWRpcmVjdCAmJiBsb2NhbFN0b3JhZ2UuZ2V0SXRlbShcImlzRXh0ZW5zaW9uXCIpID09PSBcInRydWVcIilcbntcbiAgdmFyIGxvZ2luU3RyID0gXCJsb2dpbj90PVwiICsgdGhpcy5jb25maWcuY3VycmVudC5rZXkgK1xuICBcIiZvPVwiICsgdGhpcy5jb25maWcuY3VycmVudC5vcmcgK1xuICBcIiZpPVwiICsgdGhpcy5jb25maWcuY3VycmVudC5pbnN0YW5jZTsgXG4gIHdpbmRvdy50b3AucG9zdE1lc3NhZ2UobG9naW5TdHIsXCIqXCIpO1xufVxudmFyIGFwcFZlciA9IGxvY2FsU3RvcmFnZS5nZXRJdGVtKFwidmVyc2lvblwiKTtcbmlmIChhcHBWZXIgIT09IGRhdGEubW9iaWxlX3ZlciAmJiBOdW1iZXIoZGF0YS5tb2JpbGVfdmVyKSA+IE51bWJlcihhcHBWZXIpKVxuICB0aGlzLnByZXNlbnRDb25maXJtKGRhdGEubW9iaWxlX3ZlciwgaXNSZWRpcmVjdCk7XG5lbHNlXG4gIHRoaXMuZm9yY2VfcmVkaXJlY3QoaXNSZWRpcmVjdCk7XG59XG5cbmZvcmNlX3JlZGlyZWN0KGlzUmVkaXJlY3QpXG57XG4gIGlmIChpc1JlZGlyZWN0KSB7XG5cbiAgICBsZXQgcGFyYW0gPSBudWxsO1xuXG4gICAgdmFyIHRpY2tldCA9IGxvY2FsU3RvcmFnZS5nZXRJdGVtKCdsb2FkVGlja2V0TnVtYmVyJykgfHwgJyc7XG4gICAgaWYgKHRpY2tldCkgXG4gICAge1xuICAgICAgbG9jYWxTdG9yYWdlLnNldEl0ZW0oJ2xvYWRUaWNrZXROdW1iZXInLCAnJyk7XG4gICAgICBsb2NhbFN0b3JhZ2Uuc2V0SXRlbSgnbG9hZE9yZ0tleScsIFwiXCIpO1xuICAgICAgcGFyYW0gPSB7a2V5OiB0aWNrZXR9O1xuICAgIH1cblxuICAgIGxldCBwYWdlIDogYW55ID0gdGhpcy5jb25maWcuY3VycmVudC51c2VyLmlzX3RlY2hvcmFkbWluICYmICF0aWNrZXQgPyBwYWdlcy5EYXNoYm9hcmRQYWdlIDogcGFnZXMuVGlja2V0c1BhZ2U7ICBcbiAgICAvLyBzZXQgZmlyc3QgcGFnZXNcbiAgICAvL3BhZ2UgPSBwYWdlcy5Mb2NhdGlvbnNQYWdlO1xuICAgIC8vcGFnZSA9IHBhZ2VzLlRpY2tldHNQYWdlOyBcbiAgICAvL3BhZ2UgPSBwYWdlcy5UaWNrZXREZXRhaWxzUGFnZTsgcGFyYW0gPSB7a2V5OiBcImUzbGptMlwifTtcbiAgICAvL3BhZ2UgPSBwYWdlcy5FeHBlbnNlc1BhZ2U7IFxuICAgIC8vcGFnZSA9IHBhZ2VzLlRvZG9zUGFnZTsgXG4gICAgLy9wYWdlID0gcGFnZXMuVG9kb0NyZWF0ZVBhZ2U7IFxuICAgIC8vcGFnZSA9IHBhZ2VzLkV4cGVuc2VDcmVhdGVQYWdlOyBcbiAgICAvL3BhZ2UgPSBwYWdlcy5UaW1lbG9nc1BhZ2U7IFxuICAgIC8vcGFnZSA9IHBhZ2VzLlRpbWVsb2dQYWdlOyBcbiAgICAvL3BhZ2UgPSBwYWdlcy5BY2NvdW50c1BhZ2U7IFxuICAgIC8vcGFnZSA9IG1vZGFscy5UaWNrZXRDcmVhdGVQYWdlOyBcbiAgICAvL3BhZ2UgPSBwYWdlcy5BZGRVc2VyTW9kYWw7XG4gICAgLy9wYWdlID0gcGFnZXMuSW52b2ljZUNyZWF0ZVBhZ2U7IFxuXG4gICAgdGhpcy5uYXYuc2V0Um9vdChwYWdlLCBwYXJhbSwgeyBhbmltYXRpb246IFwid3AtdHJhbnNpdGlvblwiIH0pO1xuICB9XG59XG5cbnByZXNlbnRDb25maXJtKHZlcnNpb24sIGlzUmVkaXJlY3QpIHtcbiAgbG9jYWxTdG9yYWdlLnNldEl0ZW0oXCJ2ZXJzaW9uXCIsIHZlcnNpb24pO1xuICB0aGlzLmNvbmZpZy5zYXZlQ3VycmVudCgpO1xuICBsZXQgYWxlcnQgPSBBbGVydC5jcmVhdGUoe1xuICAgIHRpdGxlOiBcIlRoZXJlIGlzIGEgbmV3IHVwZGF0ZSBhdmFpbGFibGUhXCIsXG4gICAgbWVzc2FnZTogJ1BhZ2Ugd2lsbCByZWxvYWQgaW4gMiBzZWNvbmRzJyxcbiAgICBjc3NDbGFzczogXCJoZWxsb1wiLFxuICAgIGJ1dHRvbnM6IFtcbiAgICB7XG4gICAgICB0ZXh0OiBcIlllcywgZG8gaXQgbm93XCIsXG4gICAgICByb2xlOiAnY2FuY2VsJyxcbiAgICAgIGhhbmRsZXI6ICgpID0+IHtcbiAgICAgICAgLy93aW5kb3cudDEgPSBudWxsO1xuICAgICAgICB2YXIgZWxlbWVudDEgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwic2NyaXB0XCIpO1xuICAgICAgICBlbGVtZW50MS5zcmMgPSBNb2JpbGVTaXRlICsgXCJidWlsZC9qcy9hcHAuanM/X2Q9XCIrRGF0ZS5ub3coKTtcbiAgICAgICAgZG9jdW1lbnQuYm9keS5hcHBlbmRDaGlsZChlbGVtZW50MSk7XG4gICAgICAgIHNldFRpbWVvdXQoKCkgPT4gbG9jYXRpb24ucmVsb2FkKHRydWUpLCAyMDAwKTtcbiAgICAgIH1cbiAgICB9LFxuICAgIHtcbiAgICAgIHRleHQ6IFwiTm8sIEknbGwgZG8gaXQgbGF0ZXJcIixcbiAgICAgIGhhbmRsZXI6ICgpID0+IHtcbiAgICAgICAgYWxlcnQuZGlzbWlzcygpLnRoZW4oKCkgPT4ge1xuICAgICAgICAgIHRoaXMuZm9yY2VfcmVkaXJlY3QoaXNSZWRpcmVjdCk7XG4gICAgICAgIH0pO1xuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICB9XG4gICAgfVxuICAgIF1cbiAgfSk7XG4gIC8vaWYgKGxvY2FsU3RvcmFnZS5nZXRJdGVtKFwiaXNQaG9uZWdhcFwiKSA9PT0gXCJ0cnVlXCIpXG4gIC8vICB0aGlzLm5hdi5hbGVydChcIlRoZXJlIGlzIGEgbmV3IHVwZGF0ZSBhdmFpbGFibGUhIFBsZWFzZSBraWxsIGFwcCBhbmQgc3RhcnQgYWdhaW4gdG8gdXBkYXRlXCIpO1xuICAvL2Vsc2UgIFxuICB0aGlzLm5hdi5wcmVzZW50KGFsZXJ0KTtcbn1cblxuaXNTdG9yYWdlKCkge1xuICB2YXIgbW9kID0gJ21vZGVybml6cic7XG4gIHRyeSB7XG4gICAgbG9jYWxTdG9yYWdlLnNldEl0ZW0obW9kLCBtb2QpO1xuICAgIGxvY2FsU3RvcmFnZS5yZW1vdmVJdGVtKG1vZCk7XG4gICAgcmV0dXJuIHRydWU7XG4gIH0gY2F0Y2goZSkge1xuICAgIGxldCB0b2FzdCA9IFRvYXN0LmNyZWF0ZSh7XG4gICAgICBtZXNzYWdlOiBcIlBsZWFzZSBlbmFibGUgQ29va2llcyB0byB3b3JrIHdpdGggc2l0ZSFcIixcbiAgICAgIGVuYWJsZUJhY2tkcm9wRGlzbWlzczogZmFsc2UsXG4gICAgICBzaG93Q2xvc2VCdXR0b246IHRydWUsXG4gICAgICBjc3NDbGFzczogXCJ0b2FzdC1lcnJvclwiXG4gICAgfSk7XG4gICAgdGhpcy5uYXYucHJlc2VudCh0b2FzdCk7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG59XG5cbmluaXRpYWxpemVBcHAoKSB7XG4gIHRoaXMucGxhdGZvcm0ucmVhZHkoKS50aGVuKCgpID0+IHtcbiAgICBpZiAobG9jYWxTdG9yYWdlLmdldEl0ZW0oXCJpc1Bob25lZ2FwXCIpID09PSBcInRydWVcIikge1xuICAgICAgY29uc29sZS5sb2coJ2NvcmRvdmEgcmVhZHknKTtcbiAgICAgIC8vU3RhdHVzQmFyLnN0eWxlRGVmYXVsdCgpO1xuLypcbiAgICAgIHRoaXMuZGlzY29ubmVjdFN1YnNjcmlwdGlvbiA9IE5ldHdvcmsub25EaXNjb25uZWN0KCkuc3Vic2NyaWJlKCgpID0+IHtcbiAgICAgICAgdGhpcy5vbkxpbmUoZmFsc2UpO1xuICAgICAgfSk7XG5cbiAgICAgIHRoaXMuY29ubmVjdFN1YnNjcmlwdGlvbiA9IE5ldHdvcmsub25Db25uZWN0KCkuc3Vic2NyaWJlKCgpID0+IHtcbiAgICAgICAgdGhpcy5vbkxpbmUodHJ1ZSk7XG4gICAgICB9KTsqL1xuICAgIH1cblxuICAgIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKCdvbmxpbmUnLCAgKCkgPT4gdGhpcy5vbkxpbmUodHJ1ZSkpO1xuICAgIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKCdvZmZsaW5lJywgKCkgPT4gdGhpcy5vbkxpbmUoZmFsc2UpKTtcbiAgICBkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKCdoYW5kbGUnLCAoZSkgPT4gdGhpcy5oYW5kbGUoZSksIGZhbHNlKTtcbiAgfSk7XG59XG5cbmhhbmRsZShlKSB7XG4gIGxldCBnb3RvID0gZS5kZXRhaWw7IFxuICAvL2NvbnNvbGUubG9nKCdnb3RvJywgZ290byk7XG5cbiAgbGV0IGtleSA9IE9iamVjdC5rZXlzKGdvdG8pWzBdO1xuXG4gIGxldCBwYWdlIDogYW55OyAgXG4gIGxldCBwYXJhbSA9IHt9XG4gIGxldCBpc19tb2RhbCA9IGZhbHNlO1xuXG4gIHN3aXRjaCAoa2V5KSB7XG4gICAgY2FzZSBcInRpY2tldFwiOlxuICAgIGlmICghdGhpcy5jb25maWcuZ2V0Q3VycmVudChcImlzX2xvZ2dlZFwiKSlcbiAgICAgIGxvY2FsU3RvcmFnZS5zZXRJdGVtKCdsb2FkVGlja2V0TnVtYmVyJywgZ290b1trZXldKTtcbiAgICBlbHNlIHtcbiAgICAgIHBhZ2UgPSBwYWdlcy5UaWNrZXRzUGFnZTtcbiAgICAgIHBhcmFtID0ge2tleTogZ290b1trZXldfTsgXG4gICAgfVxuICAgIGJyZWFrO1xuICAgIGNhc2UgXCJhZGRfdGltZVwiOlxuICAgIGlzX21vZGFsID0gdHJ1ZTtcbiAgICBwYWdlID0gcGFnZXMuVGltZWxvZ1BhZ2U7XG4gICAgYnJlYWs7XG5cbiAgICBjYXNlIFwiYWRkX3RrdFwiOlxuICAgIGlzX21vZGFsID0gdHJ1ZTtcbiAgICBwYWdlID0gbW9kYWxzLlRpY2tldENyZWF0ZVBhZ2U7XG4gICAgYnJlYWs7XG5cbiAgICBjYXNlIFwibGlzdFwiOlxuICAgIGlzX21vZGFsID0gdHJ1ZTtcbiAgICBwYWdlID0gcGFnZXMuVGlja2V0c1BhZ2U7XG4gICAgcGFyYW0gPSB7dGFiOiBnb3RvW2tleV19O1xuICAgIGJyZWFrO1xuXG4gICAgZGVmYXVsdDpcbiAgICAvLyBjb2RlLi4uXG4gICAgYnJlYWs7XG4gIH1cblxuICBpZiAocGFnZSl7XG4gICAgaWYgKGlzX21vZGFsKVxuICAgICAgdGhpcy5uYXYucHVzaChwYWdlLCBwYXJhbSwgeyBhbmltYXRpb246IFwid3AtdHJhbnNpdGlvblwiIH0pO1xuICAgIGVsc2VcbiAgICB7XG4gICAgICB0aGlzLm5hdi5zZXRSb290KHBhZ2UsIHBhcmFtLCB7IGFuaW1hdGlvbjogXCJ3cC10cmFuc2l0aW9uXCIgfSk7XG4gICAgfVxuICB9XG59XG5cbmNoZWNrQ29ubmVjdGlvbigpIHtcbiAgaWYgKG5hdmlnYXRvci5vbkxpbmUpIHtcbiAgICBpZiAobG9jYWxTdG9yYWdlLmdldEl0ZW0oXCJpc1Bob25lZ2FwXCIpICE9PSBcInRydWVcIil7XG4gICAgICAvL2ltZy5zdHlsZS5kaXNwbGF5ID0gJ25vbmUnO1xuICAgICAgdGhpcy5pbWcub25sb2FkID0gKCkgPT4gdGhpcy5vbkxpbmUodHJ1ZSk7XG4gICAgICB0aGlzLmltZy5vbmVycm9yID0gKCkgPT4gdGhpcy5vbkxpbmUoZmFsc2UpO1xuICAgICAgdGhpcy5pbWcuc3JjID0gTW9iaWxlU2l0ZSArIFwiaW1nL3NlbGVjdF9hcnJvdy5wbmc/cmFuZD1cIiArIE1hdGgucmFuZG9tKCk7XG4gICAgfVxuICB9XG4gIGVsc2Uge1xuICAgIHRoaXMub25MaW5lKGZhbHNlKTtcbiAgfVxufVxuXG5vbkxpbmUoaXNPbmxpbmU/KXtcbiAgaWYgKHRoaXMuaXNfb2ZmbGluZSAhPSAhaXNPbmxpbmUpXG4gIHtcbiAgICBpZiAodGhpcy5vZmZsaW5lVGltZXIgJiYgdGhpcy5vZmZsaW5lVGltZXIucnVuQ291bnQgPj0gMSlcbiAgICAgIHRoaXMubmF2LmFsZXJ0KCFpc09ubGluZSA/IFwiU29ycnkhIFlvdSBhcmUgb2ZmbGluZSBub3cuIFBsZWFzZSBjaGVjayB5b3VyIGludGVybmV0IGNvbm5lY3Rpb24hXCIgOiBcIkhleSEgWW91IG9ubGluZSBub3chIFRyeSBhZ2FpbiB5b3VyIGFjdGlvblwiLCAhaXNPbmxpbmUpO1xuICAgIGlmIChsb2NhbFN0b3JhZ2UuZ2V0SXRlbShcImlzUGhvbmVnYXBcIikgIT09IFwidHJ1ZVwiKSB7XG4gICAgICBpZiAoIWlzT25saW5lKSB7XG4gICAgICAgIGNsZWFySW50ZXJ2YWwodGhpcy5vZmZsaW5lVGltZXIpO1xuICAgICAgICB0aGlzLm9mZmxpbmVUaW1lciA9IG51bGw7XG4gICAgICAgIHRoaXMub2ZmbGluZVRpbWVyID0gc2V0SW50ZXJ2YWwoKCkgPT4gdGhpcy5jaGVja0Nvbm5lY3Rpb24oKSwgMTAgKiAxMDAwKTtcbiAgICAgIH1cbiAgICAgIGVsc2V7XG4gICAgICAgIGNsZWFySW50ZXJ2YWwodGhpcy5vZmZsaW5lVGltZXIpO1xuICAgICAgICB0aGlzLm9mZmxpbmVUaW1lciA9IG51bGw7XG4gICAgICB9XG4gICAgfVxuICB9XG4gIHRoaXMuaXNfb2ZmbGluZSA9ICFpc09ubGluZTtcbn1cblxub3BlblBhZ2UocGFnZSwgcGFyYW0/KSB7XG4gIHRoaXMubWVudS5jbG9zZSgpO1xuXG4gIC8vaWYgbnVsbCBvcGVuIG5ldyB0YWJcbiAgaWYgKCFwYWdlLmNvbXBvbmVudClcbiAge1xuICAgIGxldCBjdXJyID0gdGhpcy5jb25maWcuZ2V0Q3VycmVudCgpO1xuICAgIGhlbHBlcnMuZnVsbGFwcGxpbmsoQXBwU2l0ZSwgXCJcIiwgY3Vyci5pbnN0YW5jZSwgY3Vyci5vcmcpO1xuICAgIHJldHVybjtcbiAgfVxuICAvLyBjbG9zZSB0aGUgbWVudSB3aGVuIGNsaWNraW5nIGEgbGluayBmcm9tIHRoZSBtZW51XG4gIGlmICh0aGlzLmludGVydmFsICYmIChwYWdlLmNvbXBvbmVudCA9PSBwYWdlcy5Mb2dpblBhZ2UgfHwgcGFnZS5jb21wb25lbnQgPT0gcGFnZXMuT3JnYW5pemF0aW9uc1BhZ2UpKVxuICAgIGNsZWFySW50ZXJ2YWwodGhpcy5pbnRlcnZhbCk7XG5cbiAgaWYgKHBhZ2UuaW5kZXgpIHtcbiAgICB0aGlzLm5hdi5zZXRSb290KHBhZ2UuY29tcG9uZW50IHx8IHBhZ2UsIHt0YWJJbmRleDogcGFnZS5pbmRleH0pO1xuICB9IGVsc2Uge1xuICAgIHRoaXMubmF2LnNldFJvb3QocGFnZS5jb21wb25lbnQgfHwgcGFnZSk7XG4gIH1cbn1cblxubmdPbkluaXQoKSB7XG4gIHRoaXMuc3Vic2NyaWJlVG9FdmVudHMoKTtcbn1cblxubmdPbkRlc3Ryb3koKSB7XG4gIHRoaXMudW5zdWJzY3JpYmVUb0V2ZW50cygpO1xuICBjbGVhckludGVydmFsKHRoaXMub2ZmbGluZVRpbWVyKTtcbiAgY2xlYXJJbnRlcnZhbCh0aGlzLmludGVydmFsKTtcblxuICBpZiAobG9jYWxTdG9yYWdlLmdldEl0ZW0oXCJpc1Bob25lZ2FwXCIpID09PSBcInRydWVcIil7XG4gICAgdGhpcy5kaXNjb25uZWN0U3Vic2NyaXB0aW9uLnVuc3Vic2NyaWJlKCk7XG4gICAgdGhpcy5jb25uZWN0U3Vic2NyaXB0aW9uLnVuc3Vic2NyaWJlKCk7XG4gIH1cbn1cblxubG9nb3V0KGtleT8pXG57XG4gIHRoaXMuY29uZmlnLmNsZWFyQ3VycmVudChrZXkpO1xuICBpZiAobG9jYWxTdG9yYWdlLmdldEl0ZW0oXCJpc1Bob25lZ2FwXCIpID09PSBcInRydWVcIilcbiAgICB0aGlzLmluaXRPcmdQcmVmZXJlbmNlcyhcIlwiKTtcbn1cblxuc3Vic2NyaWJlVG9FdmVudHMoKSB7XG4gIHRoaXMuZXZlbnRzLnN1YnNjcmliZSgnbG9naW46ZmFpbGVkJywgKCkgPT4ge1xuICAgIHRoaXMubG9nb3V0KCk7XG4gICAgdGhpcy5vcGVuUGFnZSh7IGNvbXBvbmVudDogcGFnZXMuTG9naW5QYWdlIH0pO1xuICB9KTtcbiAgdGhpcy5ldmVudHMuc3Vic2NyaWJlKCdhcHA6bG9nb3V0JywgKGRhdGEpID0+IHtcbiAgICB0aGlzLmxvZ291dChkYXRhICYmIGRhdGFbMF0pO1xuICB9KTtcbiAgdGhpcy5ldmVudHMuc3Vic2NyaWJlKCdjb25uZWN0aW9uOmVycm9yJywgKGRhdGEpID0+IHtcbiAgICB0aGlzLmNoZWNrQ29ubmVjdGlvbigpO1xuICB9KTtcbiAgdGhpcy5ldmVudHMuc3Vic2NyaWJlKCdjb25maWc6Z2V0JywgKGRhdGEpID0+IHtcbiAgICB0aGlzLnJlZGlyZWN0KGRhdGEpO1xuICB9KTtcbn1cblxudW5zdWJzY3JpYmVUb0V2ZW50cygpIHtcbiAgdGhpcy5ldmVudHMudW5zdWJzY3JpYmUoJ2xvZ2luOmZhaWxlZCcsIG51bGwpO1xuICB0aGlzLmV2ZW50cy51bnN1YnNjcmliZSgnY29ubmVjdGlvbjplcnJvcicsIG51bGwpO1xuICB0aGlzLmV2ZW50cy51bnN1YnNjcmliZSgnY29uZmlnOmdldCcsIG51bGwpO1xuICB0aGlzLmV2ZW50cy51bnN1YnNjcmliZSgnYXBwOmxvZ291dCcsIG51bGwpO1xufVxuXG5FeHRlbmRDb25maWcoKSB7XG5cbiAgbG9jYWxTdG9yYWdlLnNldEl0ZW0oJ2lzRXh0ZW5zaW9uJywgd2luZG93LnNlbGYgIT09IHdpbmRvdy50b3AgPyBcInRydWVcIiA6IFwiXCIpO1xuICBsb2NhbFN0b3JhZ2Uuc2V0SXRlbShcInZlcnNpb25cIiwgYXBwVmVyc2lvbik7XG4gIC8vdGhpcy5jb25maWcuY3VycmVudC5pc1Bob25lZ2FwID0gbG9jYWxTdG9yYWdlLmdldEl0ZW0oXCJpc1Bob25lZ2FwXCIpID09PSBcInRydWVcIjtcblxuICB0aGlzLmNvbmZpZy5nZXRDdXJyZW50ID0gZnVuY3Rpb24ocHJvcGVydHkpIHtcbiAgICBsZXQgdGNvbmZpZyA9IHRoaXMuY3VycmVudCB8fCBKU09OLnBhcnNlKGxvY2FsU3RvcmFnZS5nZXRJdGVtKFwiY3VycmVudFwiKSB8fCBcIm51bGxcIikgfHwge307XG4gICAgdGNvbmZpZy5pc19sb2dnZWQgPSAhIXRjb25maWcua2V5O1xuICAgIHRjb25maWcuaXNfY2hvc2VuID0gISF0Y29uZmlnLmluc3RhbmNlICYmICEhdGNvbmZpZy5vcmcgJiYgISF0Y29uZmlnLmtleTtcbiAgICB0Y29uZmlnLmlzX29ubGluZSA9ICF0aGlzLmlzX29mZmxpbmU7XG5cbiAgICB2YXIgYXBwVmVyID0gbG9jYWxTdG9yYWdlLmdldEl0ZW0oXCJ2ZXJzaW9uXCIpO1xuICAgIHRjb25maWcuaXNfdXBkYXRlZCA9ICEoYXBwVmVyICE9PSB0Y29uZmlnLm1vYmlsZV92ZXIgJiYgTnVtYmVyKHRjb25maWcubW9iaWxlX3ZlcikgPiBOdW1iZXIoYXBwVmVyKSk7XG5cbiAgICBpZiAoIXRjb25maWcuc3RhdClcbiAgICAgIHRjb25maWcuc3RhdCA9IHt9O1xuICAgIGlmICghdGNvbmZpZy51c2VyKVxuICAgICAgdGNvbmZpZy51c2VyID0ge307XG4gICAgaWYgKCF0Y29uZmlnLnJlY2VudClcbiAgICAgIHRjb25maWcucmVjZW50ID0ge307XG4gICAgaWYgKCF0Y29uZmlnLmNhY2hlKVxuICAgICAgdGNvbmZpZy5jYWNoZSA9IHt9O1xuXG4gICAgaWYgKHByb3BlcnR5KVxuICAgICAgcmV0dXJuIHRjb25maWdbcHJvcGVydHldIHx8IFwiXCI7XG4gICAgcmV0dXJuIHRjb25maWc7IFxuICB9O1xuXG4gIHRoaXMuY29uZmlnLmN1cnJlbnQgPSB0aGlzLmNvbmZpZy5nZXRDdXJyZW50KCk7XG5cbiAgdGhpcy5jb25maWcuc2F2ZUN1cnJlbnQgPSBmdW5jdGlvbigpe1xuICAgIGxldCBjdXJyID0gdGhpcy5nZXRDdXJyZW50KCk7XG4gICAgbG9jYWxTdG9yYWdlLnNldEl0ZW0oXCJjdXJyZW50XCIsICBKU09OLnN0cmluZ2lmeShjdXJyKSk7XG4gICAgbG9jYWxTdG9yYWdlLnNldEl0ZW0oXCJkYXRlZm9ybWF0XCIsIGN1cnIudXNlci5kYXRlX2Zvcm1hdCB8fCAwKTtcbiAgICBsb2NhbFN0b3JhZ2Uuc2V0SXRlbSgndGltZWZvcm1hdCcsIGN1cnIudXNlci50aW1lX2Zvcm1hdCB8fCAwKTtcbiAgICBsb2NhbFN0b3JhZ2Uuc2V0SXRlbSgnY3VycmVuY3knLCBjdXJyLmN1cnJlbmN5IHx8IFwiJFwiKTtcbiAgfVxuXG4gIHRoaXMuY29uZmlnLnNldEN1cnJlbnQgPSBmdW5jdGlvbihuY29uZmlnLCBub3NhdmUpIHtcbiAgICB0aGlzLmN1cnJlbnQgPSBPYmplY3QuYXNzaWduKHt9LCB0aGlzLmN1cnJlbnQgfHwge30sIG5jb25maWcgfHwge30pO1xuICAgIGlmICghbm9zYXZlKSB0aGlzLnNhdmVDdXJyZW50KCk7XG4gIH07XG5cbiAgdGhpcy5jb25maWcuY2xlYXJDdXJyZW50ID0gZnVuY3Rpb24oa2V5KSB7XG4gICAgbG9jYWxTdG9yYWdlLnJlbW92ZUl0ZW0oXCJkYXNoX2NhY2hlXCIpO1xuICAgIGxvY2FsU3RvcmFnZS5yZW1vdmVJdGVtKFwiY3VycmVudFwiKTtcbiAgICB0aGlzLnNldEN1cnJlbnQoe2tleToga2V5IHx8IFwiXCIsIG9yZzogXCJcIiwgaW5zdGFuY2U6IFwiXCIsIHVzZXI6IHt9LCBzdGF0OiB7fSwgcmVjZW50OiB7fSwgY2FjaGU6IHt9fSk7XG4gICAgLy9yZXR1cm4gY29uZmlnO1xuICB9O1xuXG4gIHRoaXMuY29uZmlnLmdldFN0YXQgPSBmdW5jdGlvbihwcm9wZXJ0eSl7XG4gICAgbGV0IHN0YXQgPSB0aGlzLmdldEN1cnJlbnQoXCJzdGF0XCIpW3Byb3BlcnR5XTtcbiAgICBpZiAodHlwZW9mIHN0YXQgPT0gXCJ1bmRlZmluZWRcIilcbiAgICAgIHJldHVybiAtMTtcbiAgICByZXR1cm4gc3RhdCB8fCB7fTtcbiAgfVxuXG4gIHRoaXMuY29uZmlnLnNldFN0YXQgPSBmdW5jdGlvbihwcm9wZXJ0eSwgdmFsdWUpe1xuICAgIHRoaXMuY3VycmVudC5zdGF0W3Byb3BlcnR5XSAgPSB2YWx1ZTtcbiAgfVxuXG4gIHRoaXMuY29uZmlnLmdldFJlY2VudCA9IGZ1bmN0aW9uKHByb3BlcnR5KXtcbiAgICBsZXQgcmVjZW50ID0gdGhpcy5nZXRDdXJyZW50KFwicmVjZW50XCIpW3Byb3BlcnR5XTtcbiAgICByZXR1cm4gcmVjZW50IHx8IHt9O1xuICB9XG5cbiAgdGhpcy5jb25maWcuc2V0UmVjZW50ID0gZnVuY3Rpb24ocHJvcGVydHksIHZhbHVlKXtcbiAgICBpZiAoIXZhbHVlKVxuICAgICAgdGhpcy5jdXJyZW50LnJlY2VudCA9IE9iamVjdC5hc3NpZ24oe30sIHRoaXMuY3VycmVudC5yZWNlbnQgfHwge30sIHByb3BlcnR5IHx8IHt9KTtcbiAgICBlbHNlXG4gICAgICB0aGlzLmN1cnJlbnQucmVjZW50W3Byb3BlcnR5XSA9IHZhbHVlO1xuICB9XG5cbiAgdGhpcy5jb25maWcuZ2V0Q2FjaGUgPSBmdW5jdGlvbihwcm9wZXJ0eSl7XG4gICAgbGV0IGNhY2hlID0gdGhpcy5nZXRDdXJyZW50KFwiY2FjaGVcIilbcHJvcGVydHldO1xuICAgIGlmICh0eXBlb2YgY2FjaGUgPT0gXCJ1bmRlZmluZWRcIilcbiAgICAgIHJldHVybiBbXTtcbiAgICByZXR1cm4gY2FjaGUgfHwge307XG4gIH1cblxuICB0aGlzLmNvbmZpZy5zZXRDYWNoZSA9IGZ1bmN0aW9uKHByb3BlcnR5LCB2YWx1ZSl7XG4gICAgdGhpcy5jdXJyZW50LmNhY2hlW3Byb3BlcnR5XSAgPSB2YWx1ZTtcbiAgfVxuXG59XG5cbkV4dGVuZE5hdkFsZXJ0ICgpIHtcbiAgdGhpcy5uYXYuYWxlcnQgPSBmdW5jdGlvbihtZXNzYWdlLCBpc05lZykge1xuICAgIGxldCB0b2FzdCA9IFRvYXN0LmNyZWF0ZSh7XG4gICAgICBtZXNzYWdlOiBtZXNzYWdlLFxuICAgICAgZHVyYXRpb246IGlzTmVnID8gNzAwMCA6IDMwMDAsXG4gICAgICBjc3NDbGFzczogaXNOZWcgPyBcInRvYXN0LWVycm9yXCIgOiBcInRvYXN0LW9rXCIsXG4gICAgICBzaG93Q2xvc2VCdXR0b246IHRydWUsXG4gICAgICBjbG9zZUJ1dHRvblRleHQ6IFwiWFwiXG4gICAgfSk7XG4gICAgLy90b2FzdC5vbkRpc21pc3MoKCkgPT4ge1xuICAgICAgLy9jb25zb2xlLmxvZygnRGlzbWlzc2VkIHRvYXN0Jyk7XG4gICAgICAvL30pO1xuICAgICAgdGhpcy5wcmVzZW50KHRvYXN0KTtcbiAgICB9O1xuICB9XG5cbn1cbiIsIi8vaW4gY2FzZSBvbiB1c2luZyBpb25pYyBcImlvbi1jYXJkXCJcbmltcG9ydCB7SU9OSUNfRElSRUNUSVZFUywgTmF2LCBOYXZQYXJhbXMsIENvbmZpZ30gZnJvbSAnaW9uaWMtYW5ndWxhcic7XG5pbXBvcnQge0NvbXBvbmVudCwgSW5wdXQsIE9uQ2hhbmdlc30gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQge0FjY291bnREZXRhaWxzUGFnZX0gZnJvbSAnLi4vLi4vcGFnZXMvYWNjb3VudC1kZXRhaWxzL2FjY291bnQtZGV0YWlscyc7XG5pbXBvcnQge01vcmVQaXBlfSBmcm9tICcuLi8uLi9waXBlcy9waXBlcyc7XG5cbkBDb21wb25lbnQoe1xuICAgIHNlbGVjdG9yOiAnYWNjb3VudHMtbGlzdCcsXG4gICAgdGVtcGxhdGVVcmw6ICdidWlsZC9jb21wb25lbnRzL2FjY291bnRzLWxpc3QvYWNjb3VudHMtbGlzdC5odG1sJyxcbmRpcmVjdGl2ZXM6IFtJT05JQ19ESVJFQ1RJVkVTXSxcbnBpcGVzOiBbTW9yZVBpcGVdLFxufSlcblxuZXhwb3J0IGNsYXNzIEFjY291bnRzTGlzdENvbXBvbmVudCB7XG4gICAgQElucHV0KCkgYWNjb3VudHM6IEFycmF5PGFueT47XG4gICAgQElucHV0KCkgc2ltcGxlOiBib29sZWFuO1xuICAgIGlzX2VtcHR5OiBib29sZWFuO1xuXG4gICAgIGNvbnN0cnVjdG9yKHByaXZhdGUgbmF2OiBOYXYsIHByaXZhdGUgY29uZmlnOiBDb25maWcpIHtcbiAgICAgICAgIHRoaXMuaXNfZW1wdHkgPSBmYWxzZTtcbn1cbiAgICAgaXRlbVRhcHBlZChldmVudCwgYWNjb3VudCkge1xuICAgICAgICAgYWNjb3VudC5hY2NvdW50X3N0YXRpc3RpY3MudGlja2V0X2NvdW50cy5jbG9zZWQgPSBudWxsO1xuICAgICAgICAgdGhpcy5uYXYucHVzaChBY2NvdW50RGV0YWlsc1BhZ2UsIGFjY291bnQpO1xuICAgICAgICAgICAgICAgICAgIH1cbiAgICAgXG4gICAgIG5nT25DaGFuZ2VzKGV2ZW50KSB7XG4gICAgICAgICBpZiAoIXRoaXMuc2ltcGxlKVxuICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgIGlmIChcImFjY291bnRzXCIgaW4gZXZlbnQgKSB7XG4gICAgICAgICAgICAgaWYgKGV2ZW50LmFjY291bnRzLmlzRmlyc3RDaGFuZ2UoKSAmJiBldmVudC5hY2NvdW50cy5jdXJyZW50VmFsdWUgIT09IG51bGwpXG4gICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgICB0aGlzLmlzX2VtcHR5ID0gIWV2ZW50LmFjY291bnRzLmN1cnJlbnRWYWx1ZSB8fCBldmVudC5hY2NvdW50cy5jdXJyZW50VmFsdWUubGVuZ3RoID09IDA7XG4gICAgICAgICB9XG4gICAgIH1cbiAgICAgXG59XG4iLCJpbXBvcnQge1BhZ2UsIEFjdGlvblNoZWV0LCBJT05JQ19ESVJFQ1RJVkVTLCBOYXYsIE5hdlBhcmFtcywgTW9kYWwsIENvbmZpZ30gZnJvbSAnaW9uaWMtYW5ndWxhcic7XG5pbXBvcnQge0NvbXBvbmVudCwgSW5wdXQsIE91dHB1dCwgRXZlbnRFbWl0dGVyLCBPbkluaXQsIE9uRGVzdHJveX0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQge1RpY2tldENyZWF0ZVBhZ2V9IGZyb20gJy4uLy4uL3BhZ2VzL21vZGFscy9tb2RhbHMnO1xuaW1wb3J0IHtUaW1lbG9nUGFnZX0gZnJvbSAnLi4vLi4vcGFnZXMvdGltZWxvZy90aW1lbG9nJztcbmltcG9ydCB7VGlja2V0RGV0YWlsc1BhZ2V9IGZyb20gJy4uLy4uL3BhZ2VzL3RpY2tldC1kZXRhaWxzL3RpY2tldC1kZXRhaWxzJztcbmltcG9ydCB7RXhwZW5zZUNyZWF0ZVBhZ2V9IGZyb20gJy4uLy4uL3BhZ2VzL2V4cGVuc2UtY3JlYXRlL2V4cGVuc2UtY3JlYXRlJztcbmltcG9ydCB7VG9kb0NyZWF0ZVBhZ2V9IGZyb20gJy4uLy4uL3BhZ2VzL3RvZG8tY3JlYXRlL3RvZG8tY3JlYXRlJztcbmltcG9ydCB7SW52b2ljZXNQYWdlfSBmcm9tICcuLi8uLi9wYWdlcy9pbnZvaWNlcy9pbnZvaWNlcyc7XG5pbXBvcnQge0ludm9pY2VDcmVhdGVQYWdlfSBmcm9tICcuLi8uLi9wYWdlcy9pbnZvaWNlLWNyZWF0ZS9pbnZvaWNlLWNyZWF0ZSc7XG5cbkBDb21wb25lbnQoe1xuICAgIHNlbGVjdG9yOiAnYWN0aW9uLWJ1dHRvbicsXG4gICAgdGVtcGxhdGVVcmw6ICdidWlsZC9jb21wb25lbnRzL2FjdGlvbi1idXR0b24vYWN0aW9uLWJ1dHRvbi5odG1sJyxcbiAgICBkaXJlY3RpdmVzOiBbSU9OSUNfRElSRUNUSVZFU10sXG59KVxuXG5leHBvcnQgY2xhc3MgQWN0aW9uQnV0dG9uQ29tcG9uZW50IHtcblxuICAgIEBJbnB1dCgpIGRhdGE6IGFueTtcbiAgICBhY3Rpb25TaGVldDogYW55O1xuXG4gICAgY29uc3RydWN0b3IocHJpdmF0ZSBuYXZQYXJhbXM6IE5hdlBhcmFtcywgcHJpdmF0ZSBuYXY6IE5hdiwgcHJpdmF0ZSBjb25maWc6IENvbmZpZykge1xuICAgICAgICB0aGlzLmRhdGEgPSB7fTtcbiAgICB9XG4gICAgXG4gICAgbmdPbkluaXQoKSB7XG4gICAgICAgIC8vY29uc29sZS5sb2codGhpcy5kYXRhKTtcbiAgICAgICAgLy90aGlzLmRhdGEgPSB7J3RlY2gnOiB7IGlkOiBxdWV1ZS5pZCwgbmFtZTogcXVldWUuZnVsbG5hbWUgKyAnIFF1ZXVlJ307XG4gICAgfVxuICAgIFxuICAgIG9wZW5Nb2RhbChwYWdlKSB7XG4gICAgICAgIGxldCBteU1vZGFsID0gTW9kYWwuY3JlYXRlKHBhZ2UsIHRoaXMuZGF0YSk7XG4gICAgICAgIG15TW9kYWwub25EaXNtaXNzKGRhdGExID0+IHsgXG4gICAgICAgICAgICAvL2NvbnNvbGUubG9nKHRoaXMubmF2KTtcbiAgICAgICAgICAgIGlmIChkYXRhMSAmJiBkYXRhMS5udW1iZXIpXG4gICAgICAgICAgICAgICAgdGhpcy5uYXYucHVzaChUaWNrZXREZXRhaWxzUGFnZSwgZGF0YTEpO1xuICAgICAgICB9KTtcbiAgICAgICAgdGhpcy5uYXYucHJlc2VudChteU1vZGFsKTtcbiAgICB9XG4gICAgXG4gICAgcHJlc2VudEFjdGlvblNoZWV0KCkge1xuICAgICAgICBpZiAoIXRoaXMuY29uZmlnLmN1cnJlbnQudXNlci5pc190ZWNob3JhZG1pbilcbiAgICAgICAge1xuICAgICAgICAgICAgdGhpcy5vcGVuTW9kYWwoVGlja2V0Q3JlYXRlUGFnZSk7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICAgICAgbGV0IGJ1dCA9IFtcbiAgICAgICAge1xuICAgICAgICAgICAgaWNvbjogJ2NyZWF0ZScsXG4gICAgICAgICAgICB0ZXh0OiAnQWRkICcgKyB0aGlzLmNvbmZpZy5jdXJyZW50Lm5hbWVzLnRpY2tldC5zLFxuICAgICAgICAgICAgcm9sZTogJycsXG4gICAgICAgICAgICBoYW5kbGVyOiAoKSA9PiB7XG4gICAgICAgICAgICAgICAgdGhpcy5hY3Rpb25TaGVldC5kaXNtaXNzKCkudGhlbigoKSA9PiB0aGlzLm9wZW5Nb2RhbChUaWNrZXRDcmVhdGVQYWdlKSk7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XTtcbiAgICAgICAgaWYgKHRoaXMuY29uZmlnLmN1cnJlbnQuaXNfdGltZV90cmFja2luZykge1xuICAgICAgICAgICAgYnV0LnB1c2goe1xuICAgICAgICAgICAgICAgIGljb246ICdtZC10aW1lJyxcbiAgICAgICAgICAgICAgICB0ZXh0OiAnQWRkIFRpbWUnLFxuICAgICAgICAgICAgICAgIHJvbGU6ICcnLFxuICAgICAgICAgICAgICAgIGhhbmRsZXI6ICgpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5hY3Rpb25TaGVldC5kaXNtaXNzKCkudGhlbigoKSA9PiB0aGlzLm9wZW5Nb2RhbChUaW1lbG9nUGFnZSkpO1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICBpZiAodGhpcy5jb25maWcuY3VycmVudC5pc19pbnZvaWNlICYmICh0aGlzLmNvbmZpZy5jdXJyZW50LmlzX2ZpbmFuY2lhbF9pbmZvX2Zvcl90ZWNoIHx8IHRoaXMuY29uZmlnLmN1cnJlbnQudXNlci5pc19hZG1pbikpXG4gICAgICAgICAgICAgICAgYnV0LnB1c2goXG4gICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICBpY29uOiAnY2FyZCcsXG4gICAgICAgICAgICAgICAgICAgIHRleHQ6ICdDcmVhdGUgSW52b2ljZScsXG4gICAgICAgICAgICAgICAgICAgIHJvbGU6ICcnLFxuICAgICAgICAgICAgICAgICAgICBoYW5kbGVyOiAoKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLmFjdGlvblNoZWV0LmRpc21pc3MoKS50aGVuKCgpID0+IHRoaXMubmF2LnB1c2goSW52b2ljZUNyZWF0ZVBhZ2UsdGhpcy5kYXRhKSk7XG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIGlmICh0aGlzLmNvbmZpZy5jdXJyZW50LmlzX2ludm9pY2UgJiYgKHRoaXMuY29uZmlnLmN1cnJlbnQuaXNfZmluYW5jaWFsX2luZm9fZm9yX3RlY2ggfHwgdGhpcy5jb25maWcuY3VycmVudC51c2VyLmlzX2FkbWluKSlcbiAgICAgICAgICAgICAgICBidXQucHVzaChcbiAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgIGljb246ICdjYXJkJyxcbiAgICAgICAgICAgICAgICAgICAgdGV4dDogJ1Nob3cgSW52b2ljZXMnLFxuICAgICAgICAgICAgICAgICAgICByb2xlOiAnJyxcbiAgICAgICAgICAgICAgICAgICAgaGFuZGxlcjogKCkgPT4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5hY3Rpb25TaGVldC5kaXNtaXNzKCkudGhlbigoKSA9PiB0aGlzLm5hdi5wdXNoKEludm9pY2VzUGFnZSx0aGlzLmRhdGEpKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgaWYgKHRoaXMuY29uZmlnLmN1cnJlbnQuaXNfdG9kb3MpXG4gICAgICAgICAgICAgICAgYnV0LnB1c2goXG4gICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICBpY29uOiAnaW9zLWxpc3QtYm94LW91dGxpbmUnLFxuICAgICAgICAgICAgICAgICAgICB0ZXh0OiAnQWRkIFRvRG8nLFxuICAgICAgICAgICAgICAgICAgICByb2xlOiAnJyxcbiAgICAgICAgICAgICAgICAgICAgaGFuZGxlcjogKCkgPT4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5hY3Rpb25TaGVldC5kaXNtaXNzKCkudGhlbigoKSA9PiB0aGlzLm5hdi5wdXNoKFRvZG9DcmVhdGVQYWdlKSk7XG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgfVxuXG4gICAgICAgIGlmICh0aGlzLmNvbmZpZy5jdXJyZW50LmlzX2V4cGVuc2VzKVxuICAgICAgICAgICAgYnV0LnB1c2goe1xuICAgICAgICAgICAgICAgIGljb246ICdtZC1saXN0LWJveCcsXG4gICAgICAgICAgICAgICAgdGV4dDogJ0FkZCBFeHBlbnNlJyxcbiAgICAgICAgICAgICAgICByb2xlOiAnJyxcbiAgICAgICAgICAgICAgICBoYW5kbGVyOiAoKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuYWN0aW9uU2hlZXQuZGlzbWlzcygpLnRoZW4oKCkgPT4gdGhpcy5vcGVuTW9kYWwoRXhwZW5zZUNyZWF0ZVBhZ2UpKTtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0pO1xuXG4gICAgICAgIGJ1dC5wdXNoKHtcbiAgICAgICAgICAgIGljb246ICcnLFxuICAgICAgICAgICAgdGV4dDogJ0NhbmNlbCcsXG4gICAgICAgICAgICByb2xlOiAnY2FuY2VsJyxcbiAgICAgICAgICAgIGhhbmRsZXI6ICgpID0+IHtcbiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZygnQ2FuY2VsIGNsaWNrZWQnKTtcbiAgICAgICAgICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICApO1xuXG4gICAgICAgIHRoaXMuYWN0aW9uU2hlZXQgPSBBY3Rpb25TaGVldC5jcmVhdGUoe1xuICAgICAgICAgICAgdGl0bGU6ICcnLFxuICAgICAgICAgICAgYnV0dG9uczogYnV0XG4gICAgICAgIH0pO1xuXG4gICAgICAgIC8vc2V0VGltZW91dCggKCkgPT4ge1xuICAgICAgICAgICAgdGhpcy5uYXYucHJlc2VudCh0aGlzLmFjdGlvblNoZWV0KTtcbiAgICAgICAgLy99KTtcbiAgICB9XG59XG4iLCJpbXBvcnQge0lPTklDX0RJUkVDVElWRVMsIE5hdiwgTW9kYWwsIEFsZXJ0LCBDb25maWd9IGZyb20gJ2lvbmljLWFuZ3VsYXInO1xuaW1wb3J0IHtBcGlEYXRhfSBmcm9tICcuLi8uLi9wcm92aWRlcnMvYXBpLWRhdGEnO1xuaW1wb3J0IHtDb21wb25lbnQsIElucHV0LCBPdXRwdXQsIEV2ZW50RW1pdHRlciwgT25Jbml0fSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7VHJlZU1vZGFsfSBmcm9tICcuLi8uLi9wYWdlcy9tb2RhbHMvbW9kYWxzJztcbmltcG9ydCAncnhqcyc7XG5cbmNvbnN0IGFsZXJ0TGltaXQgPSAxMDtcblxuQENvbXBvbmVudCh7XG4gICAgc2VsZWN0b3I6ICdjbGFzcy1saXN0JyxcbiAgICB0ZW1wbGF0ZVVybDogJ2J1aWxkL2NvbXBvbmVudHMvY2xhc3MtbGlzdC9jbGFzcy1saXN0Lmh0bWwnLFxuICAgIGRpcmVjdGl2ZXM6IFtJT05JQ19ESVJFQ1RJVkVTXVxufSlcbmV4cG9ydCBjbGFzcyBDbGFzc0xpc3RDb21wb25lbnQge1xuICAgIEBJbnB1dCgpIGxpc3Q6IGFueSA9IHt9O1xuICAgIEBJbnB1dCgpIHByZWxvYWQ6IGJvb2xlYW47XG4gICAgQE91dHB1dCgpIHB1YmxpYyBvbkNoYW5nZWQ6RXZlbnRFbWl0dGVyPGFueT4gPSBuZXcgRXZlbnRFbWl0dGVyKGZhbHNlKTtcbiAgICBpbml0OiBib29sZWFuID0gdHJ1ZTtcbiAgICBzZWxlY3RlZDogT2JqZWN0ID0ge307XG4gICAgdXJsOiBhbnk7XG5cbiAgICAgY29uc3RydWN0b3IocHJpdmF0ZSBuYXY6IE5hdiwgcHJpdmF0ZSBhcGlEYXRhOiBBcGlEYXRhLCBwcml2YXRlIGNvbmZpZzogQ29uZmlnKSB7XG4gICAgIH0gIFxuXG4gICAgIG5nT25Jbml0KCkge1xuICAgICAgICAgaWYgKCF0aGlzLmNvbmZpZy5jdXJyZW50LmlzX2NsYXNzX3RyYWNraW5nKVxuICAgICAgICAge1xuICAgICAgICAgICAgIHRoaXMubGlzdC5oaWRkZW4gPSB0cnVlO1xuICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgIH1cbiAgICAgICAgIGlmICh0aGlzLmxpc3QudXJsKSB7XG4gICAgICAgICAgICAgdGhpcy51cmwgPSB0aGlzLmxpc3QudXJsO1xuICAgICAgICAgICAgIGlmICh0aGlzLnByZWxvYWQpIHtcbiAgICAgICAgICAgICAgICAgdGhpcy5sb2FkRGF0YShmYWxzZSk7XG4gICAgICAgICAgICAgfVxuICAgICAgICAgfVxuICAgICB9XG5cbiAgICAgb3BlbigpIHtcbiAgICAgICAgIHRoaXMubG9hZERhdGEodHJ1ZSk7XG4gICAgIH1cblxuICAgICBsb2FkRGF0YShzaG93KSB7XG4gICAgICAgICBpZiAodGhpcy51cmwgIT0gdGhpcy5saXN0LnVybCB8fCAhdGhpcy5saXN0Lml0ZW1zIHx8IHRoaXMubGlzdC5pdGVtcy5sZW5ndGggPT0gMCkge1xuICAgICAgICAgICAgIGlmICh0aGlzLmxpc3QudXJsKSB7XG4gICAgICAgICAgICAgICAgIHRoaXMuYXBpRGF0YS5nZXQodGhpcy5saXN0LnVybCkuc3Vic2NyaWJlKFxuICAgICAgICAgICAgICAgICAgICAgZGF0YSA9PiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5saXN0Lml0ZW1zID0gZGF0YTtcbiAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLnByb2NlZWRfbGlzdChzaG93KTtcbiAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLnVybCA9IHRoaXMubGlzdC51cmw7XG4gICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICAgZXJyb3IgPT4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuZXJyb3IoXCJDYW5ub3QgZ2V0IFwiICsgdGhpcy5saXN0Lm5hbWUgKyBcIiBsaXN0ISBFcnJvcjogXCIgKyBlcnJvcik7XG4gICAgICAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coZXJyb3IgfHwgJ1NlcnZlciBlcnJvcicpO1xuICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICApO1xuICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICBlbHNlXG4gICAgICAgICAgICAgICAgIHRoaXMuZXJyb3IodGhpcy5saXN0Lm5hbWUgKyAnIGxpc3QgaXMgZW1wdHkhJyk7XG4gICAgICAgICB9XG4gICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICB0aGlzLnByb2NlZWRfbGlzdChzaG93KTtcbiAgICAgICAgIH1cbiAgICAgfVxuXG4gICAgIGVycm9yKG1lc3NhZ2UpXG4gICAgIHtcblxuICAgICAgICAgdGhpcy5uYXYuYWxlcnQobWVzc2FnZSwgdHJ1ZSk7XG4gICAgIH1cblxuICAgICBwcm9jZWVkX2xpc3Qoc2hvdylcbiAgICAge1xuICAgICAgICAgaWYgKCF0aGlzLmNvbmZpZy5nZXRDdXJyZW50KFwidXNlclwiKS5pc190ZWNob3JhZG1pbilcbiAgICAgICAgICAgICB0aGlzLmxpc3QuaXRlbXMgPSB0aGlzLmxpc3QuaXRlbXMuZmlsdGVyKHYgPT4geyByZXR1cm4gIXYuaXNfcmVzdHJpY3RfdG9fdGVjaHMgfSk7XG5cbiAgICAgICAgIHRoaXMubGlzdC5pdGVtcyA9IHRoaXMubGlzdC5pdGVtcy5maWx0ZXIodiA9PiB7IHJldHVybiB2LmlzX2FjdGl2ZSB9KTtcblxuICAgICAgICAgaWYgKCF0aGlzLmxpc3QuaXRlbXMgfHwgdGhpcy5saXN0Lml0ZW1zLmxlbmd0aCA9PSAwKVxuICAgICAgICAge1xuICAgICAgICAgICAgIHRoaXMubGlzdC52YWx1ZSA9IFwiRGVmYXVsdCAobm90aGluZyB0byBzZWxlY3QpXCI7XG4gICAgICAgICAgICAgLy90aGlzLmVycm9yKHRoaXMubGlzdC5uYW1lICsgJyBsaXN0IGlzIGVtcHR5IScpO1xuICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgIH1cbiAgICAgICAgIGlmIChzaG93KSB7XG4gICAgICAgICAgICAgaWYgKHRoaXMubGlzdC5pdGVtc1swXS5uYW1lICE9IFwiRGVmYXVsdCAobm8gc2VsZWN0aW9uKVwiKVxuICAgICAgICAgICAgICAgdGhpcy5saXN0Lml0ZW1zLnNwbGljZSgwLCAwLCB7aGllcmFyY2h5X2xldmVsOjAsaWQ6MCxpc19hY3RpdmU6dHJ1ZSxpc19sYXN0Y2hpbGQ6dHJ1ZSxuYW1lOlwiRGVmYXVsdCAobm8gc2VsZWN0aW9uKVwifSk7ICBcbiAgICAgICAgIC8vbGV0IGlzX3BsYWluID0gIXRoaXMubGlzdC5pdGVtcy5maWx0ZXIodiA9PiB7IHJldHVybiB2LnN1YiB9KTtcblxuICAgICAgICAgLy9pZiAoaXNfcGxhaW4gJiYgdGhpcy5saXN0Lml0ZW1zLmxlbmd0aCA8PSBhbGVydExpbWl0KVxuICAgICAgICAgLy8gICAgdGhpcy5vcGVuUmFkaW8oKTtcbiAgICAgICAgIC8vZWxzZVxuICAgICAgICAgICAgIHRoaXMub3Blbk1vZGFsKCk7XG4gICAgIH1cbiAgICAgfVxuXG4gICAgIGVtaXRfY2hhbmdlZCh2YWx1ZSl7XG4gICAgICAgICB2YWx1ZS5uYW1lID0gdGhpcy5maW5kUGF0aChcIiBcIiwgdGhpcy5saXN0Lml0ZW1zLCB2YWx1ZS5pZCk7XG4gICAgICAgICAvL3RoaXMubGlzdC52YWx1ZSA9IHZhbHVlLm5hbWU7XG4gICAgICAgICB2YWx1ZS50eXBlID0gXCJjbGFzc1wiO1xuICAgICAgICAgdGhpcy5vbkNoYW5nZWQuZW1pdCh2YWx1ZSk7XG4gICAgIH1cblxuICAgICBmaW5kUGF0aChwYXRoLCBhcnJheSwgaWQpIHtcbiAgICAgICAgIGlmICh0eXBlb2YgYXJyYXkgIT0gJ3VuZGVmaW5lZCcgJiYgYXJyYXkpIHtcbiAgICAgICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IGFycmF5Lmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICAgICAgIGlmIChhcnJheVtpXS5pZCA9PSBpZCkgcmV0dXJuIGFycmF5W2ldLm5hbWU7XG4gICAgICAgICAgICAgICAgIHZhciBwYXRoID0gdGhpcy5maW5kUGF0aChwYXRoLCBhcnJheVtpXS5zdWIsIGlkKTtcbiAgICAgICAgICAgICAgICAgaWYgKHBhdGggIT0gbnVsbCkge1xuICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGFycmF5W2ldLm5hbWUgKyBcIiAvIFwiICsgcGF0aDtcbiAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgIH1cbiAgICAgICAgIH1cbiAgICAgICAgIHJldHVybiBudWxsO1xuICAgICB9XG5cbiAgICAgb3BlblJhZGlvKCkgeyAgICAgICAgIFxuICAgICAgICAgbGV0IHRpdGxlPXRoaXMubGlzdC5uYW1lO1xuXG4gICAgICAgICBsZXQgYWxlcnQgPSBBbGVydC5jcmVhdGUoe1xuICAgICAgICAgICAgIHRpdGxlOiAnQ2hvb3NlICcrdGl0bGUsXG4gICAgICAgICAgICAgYnV0dG9uczogW1xuICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgICB0ZXh0OiAnQ2FuY2VsJyxcbiAgICAgICAgICAgICAgICAgICAgIHJvbGU6ICdjYW5jZWwnLFxuICAgICAgICAgICAgICAgICAgICAgaGFuZGxlcjogKCkgPT4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKCdDYW5jZWwgY2xpY2tlZCcpO1xuICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgICB0ZXh0OiAnT0snLFxuICAgICAgICAgICAgICAgICAgICAgaGFuZGxlcjogZGF0YSA9PiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgaWYoZGF0YSl7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuc2VsZWN0ZWQgPSBkYXRhO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLmVtaXRfY2hhbmdlZChkYXRhKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICBdXG4gICAgICAgICB9KTtcblxuICAgICAgICAgdGhpcy5saXN0Lml0ZW1zLmZvckVhY2goaXRlbSA9PiB7XG4gICAgICAgICAgICAgYWxlcnQuYWRkSW5wdXQoe1xuICAgICAgICAgICAgICAgICB0eXBlOiAncmFkaW8nLFxuICAgICAgICAgICAgICAgICBsYWJlbDogaXRlbS5uYW1lLFxuICAgICAgICAgICAgICAgICB2YWx1ZTogaXRlbSxcbiAgICAgICAgICAgICAgICAgLy9jaGVja2VkOiB0aGlzLmxpc3Quc2VsZWN0ZWQgPT09IGl0ZW0uaWRcbiAgICAgICAgICAgICB9KTtcbiAgICAgICAgIH0pO1xuXG4gICAgICAgICB0aGlzLm5hdi5wcmVzZW50KGFsZXJ0KTtcbiAgICAgfVxuXG4gICAgIG9wZW5Nb2RhbCgpIHtcbiAgICAgICAgIGxldCBteU1vZGFsID0gTW9kYWwuY3JlYXRlKFRyZWVNb2RhbCwgdGhpcy5saXN0KTtcbiAgICAgICAgIG15TW9kYWwub25EaXNtaXNzKGRhdGEgPT4ge1xuICAgICAgICAgICAgIGlmIChkYXRhLm5hbWUpIHtcbiAgICAgICAgICAgICAgICAgdGhpcy5zZWxlY3RlZCA9IGRhdGE7XG4gICAgICAgICAgICAgICAgIHRoaXMuZW1pdF9jaGFuZ2VkKGRhdGEpO1xuICAgICAgICAgICAgIH1cbiAgICAgICAgIH0pO1xuICAgICAgICAgdGhpcy5uYXYucHJlc2VudChteU1vZGFsKTtcbiAgICAgfVxuXG4gICAgfVxuIiwiZXhwb3J0ICogZnJvbSAnLi9xdWV1ZXMtbGlzdC9xdWV1ZXMtbGlzdCc7XHJcbmV4cG9ydCAqIGZyb20gJy4vYWNjb3VudHMtbGlzdC9hY2NvdW50cy1saXN0JztcclxuZXhwb3J0ICogZnJvbSAnLi90b2RvLWxpc3QvdG9kby1saXN0JztcclxuZXhwb3J0ICogZnJvbSAnLi90aWNrZXRzLWxpc3QvdGlja2V0cy1saXN0JztcclxuZXhwb3J0ICogZnJvbSAnLi9wb3N0cy1saXN0L3Bvc3RzLWxpc3QnO1xyXG5leHBvcnQgKiBmcm9tICcuL3NlbGVjdC1saXN0L3NlbGVjdC1saXN0JztcclxuZXhwb3J0ICogZnJvbSAnLi9tdWx0aS1zZWxlY3QvbXVsdGktc2VsZWN0JztcclxuZXhwb3J0ICogZnJvbSAnLi9jbGFzcy1saXN0L2NsYXNzLWxpc3QnO1xyXG5leHBvcnQgKiBmcm9tICcuL2FjdGlvbi1idXR0b24vYWN0aW9uLWJ1dHRvbic7XHJcbmV4cG9ydCAqIGZyb20gJy4vbG9jYXRpb25zLWxpc3QvbG9jYXRpb25zLWxpc3QnO1xyXG5leHBvcnQgKiBmcm9tICcuL2xvY2F0aW9uLWxpc3QvbG9jYXRpb24tbGlzdCc7XHJcbmV4cG9ydCAqIGZyb20gJy4vdGVjaHMtbGlzdC90ZWNocy1saXN0JztcclxuZXhwb3J0ICogZnJvbSAnLi9jdXN0b20tZmllbGQvY3VzdG9tLWZpZWxkJzsiLCJpbXBvcnQge0lPTklDX0RJUkVDVElWRVMsIE5hdiwgTW9kYWwsIEFsZXJ0LCBDb25maWcsIExvYWRpbmd9IGZyb20gJ2lvbmljLWFuZ3VsYXInO1xuaW1wb3J0IHtBcGlEYXRhfSBmcm9tICcuLi8uLi9wcm92aWRlcnMvYXBpLWRhdGEnO1xuaW1wb3J0IHtnZXRGdWxsTmFtZSwgZ2V0UGlja2VyRGF0ZVRpbWVGb3JtYXR9IGZyb20gJy4uLy4uL2RpcmVjdGl2ZXMvaGVscGVycyc7XG5pbXBvcnQge0NvbXBvbmVudCwgSW5wdXQsIE91dHB1dCwgRXZlbnRFbWl0dGVyLCBPbkluaXR9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHtCYXNpY1NlbGVjdE1vZGFsLCBJbmZpbml0eVNlbGVjdE1vZGFsLCBBamF4U2VsZWN0TW9kYWx9IGZyb20gJy4uLy4uL3BhZ2VzL21vZGFscy9tb2RhbHMnO1xuXG5jb25zdCBhbGVydExpbWl0ID0gNTtcblxuQENvbXBvbmVudCh7XG4gICAgc2VsZWN0b3I6ICdjdXN0b20tZmllbGQnLFxuICAgIHRlbXBsYXRlVXJsOiAnYnVpbGQvY29tcG9uZW50cy9jdXN0b20tZmllbGQvY3VzdG9tLWZpZWxkLmh0bWwnLFxuICAgIGRpcmVjdGl2ZXM6IFtJT05JQ19ESVJFQ1RJVkVTXVxufSlcbmV4cG9ydCBjbGFzcyBDdXN0b21GaWVsZENvbXBvbmVudCB7XG4gICAgQElucHV0KCkgdHlwZTogc3RyaW5nO1xuICAgIEBJbnB1dCgpIGlkOiBudW1iZXI7XG4gICAgQElucHV0KCkgbmFtZTogc3RyaW5nIDtcbiAgICBASW5wdXQoKSBjaG9pY2VzOiBzdHJpbmc7XG4gICAgQElucHV0KCkgdmFsdWU6IHN0cmluZyA7XG4gICAgQElucHV0KCkgcmVxdWlyZWQ6IGJvb2xlYW4gO1xuICAgIEBPdXRwdXQoKSBwdWJsaWMgb25DaGFuZ2VkOiBFdmVudEVtaXR0ZXI8YW55PiA9IG5ldyBFdmVudEVtaXR0ZXIoZmFsc2UpO1xuICAgIHNlbGVjdGVkOiBPYmplY3QgPSB7fTtcbiAgICBpbml0OiBib29sZWFuID0gdHJ1ZTtcbiAgICB1cmw6IHN0cmluZztcbiAgICAvL25hbWU6IHN0cmluZyA9IFwiXCI7XG4gICAgY3VzdG9tX2Nob2ljZXM6IEFycmF5PGFueT47XG4gICAgY3VzdG9tX2RhdGU6IGFueTtcbiAgICBkaXNwbGF5Rm9ybWF0OiBzdHJpbmc7XG4gICAgY29uc3RydWN0b3IocHJpdmF0ZSBuYXY6IE5hdiwgcHJpdmF0ZSBhcGlEYXRhOiBBcGlEYXRhLCBwcml2YXRlIGNvbmZpZzogQ29uZmlnKSB7XG4gICAgIH0gIFxuXG4gICAgbmdPbkluaXQoKSB7XG4gICAgICAgIHRoaXMuZGlzcGxheUZvcm1hdCA9IGdldFBpY2tlckRhdGVUaW1lRm9ybWF0KGZhbHNlLCB0cnVlKTtcbiAgICAgICAgaWYgKHRoaXMudHlwZSA9PSBcInNlbGVjdFwiICkge1xuICAgICAgICAgICAgdGhpcy5jdXN0b21fY2hvaWNlcyA9IHRoaXMuY2hvaWNlcy5zcGxpdCgvXFxyP1xcbi8pO1xuICAgICAgICB9XG5cbiAgICAgICAgaWYgKHRoaXMudHlwZSA9PSBcImNoZWNrYm94XCIpIFxuICAgICAgICAgICAgdGhpcy5jdXN0b21fY2hvaWNlcyA9IHRoaXMuY2hvaWNlcy5zcGxpdCgvXFxyP1xcbi8pO1xuICAgICAgICBcbiAgICAgICAgaWYgKHRoaXMudHlwZSA9PSBcImRhdGVcIikgXG4gICAgICAgICAgeyAgXG4gICAgICAgICAgICB0aGlzLmN1c3RvbV9kYXRlID0gbmV3IERhdGUodGhpcy52YWx1ZSk7XG4gICAgICAgIH1cbiAgICAgfVxuXG5BZGRIb3VycyhkYXRlLCBob3VycylcbntcbiAgICBpZiAoZGF0ZSl7XG4gICAgICAgIGlmIChkYXRlLmxlbmd0aCA9PSAxOSlcbiAgICAgICAgICAgIGRhdGUgPSBkYXRlLnNsaWNlKDAsLTMpO1xuICAgICAgICBsZXQgdGVtcCA9IG5ldyBEYXRlKGRhdGUpO1xuICAgICAgICByZXR1cm4gbmV3IERhdGUodGVtcC5zZXRUaW1lKHRlbXAuZ2V0VGltZSgpICsgaG91cnMqNjAqNjAqMTAwMCkpLnRvSlNPTigpO1xuICAgIH1cbiAgICByZXR1cm4gZGF0ZTtcbn1cblxuICAgIGdldFN0YXJ0RGF0ZSh0aW1lKSB7XG4gICAgICAgIHJldHVybiAgdGltZSA9IHRoaXMuQWRkSG91cnModGltZSwgdGhpcy5jb25maWcuZ2V0Q3VycmVudChcInRpbWV6b25lX29mZnNldFwiKSk7XG4gICAgfVxuXG4gICAgc2V0U3RhcnREYXRlKHRpbWUpe1xuXG4gICAgICAgICAgICBsZXQgSnNvblRpbWUgPSB0aGlzLkFkZEhvdXJzKHRpbWUsIC0xICogdGhpcy5jb25maWcuZ2V0Q3VycmVudChcInRpbWV6b25lX29mZnNldFwiKSk7XG4gICAgICAgICAgICBsZXQgb2JqID0ge1xuICAgICAgICAgICAgICAgICAgICAgICBpZDogdGhpcy5pZCxcbiAgICAgICAgICAgICAgICAgICAgICAgbmFtZTogdGhpcy5uYW1lLFxuICAgICAgICAgICAgICAgICAgICAgICB2YWx1ZTogSnNvblRpbWVcbiAgICAgICAgICAgICAgICAgICAgIH07XG4gICAgICAgICAgICAgICAgICAgICB0aGlzLm9uQ2hhbmdlZC5lbWl0KG9iaik7ICAgICAgICAgICAgXG4gICAgfVxuXG4gZXJyb3IobWVzc2FnZSlcbiB7XG4gICAgIHRoaXMubmF2LmFsZXJ0KG1lc3NhZ2UsIHRydWUpO1xuIH1cblxuIGNoYW5nZVRleHQodGV4dDEpXG4ge1xuICAgICB0aGlzLnZhbHVlID0gdGV4dDEudmFsdWUudHJpbSgpO1xuICAgICBcbiAgICAgICAgICAgICAgICAgICAgIGxldCBvYmogPSB7XG4gICAgICAgICAgICAgICAgICAgICAgIGlkOiB0aGlzLmlkLFxuICAgICAgICAgICAgICAgICAgICAgICBuYW1lOiB0aGlzLm5hbWUsXG4gICAgICAgICAgICAgICAgICAgICAgIHZhbHVlOiB0aGlzLnZhbHVlXG4gICAgICAgICAgICAgICAgICAgICB9O1xuICAgICAgICAgICAgICAgICAgICAgdGhpcy5vbkNoYW5nZWQuZW1pdChvYmopO1xuIH1cblxuIG9wZW5SYWRpbygpIHsgICAgICAgXG4gICAgIGxldCB0aXRsZT10aGlzLm5hbWU7XG5cbiAgICAgbGV0IGFsZXJ0ID0gQWxlcnQuY3JlYXRlKHtcbiAgICAgICAgIHRpdGxlOiAnQ2hvb3NlICcrdGl0bGUsXG4gICAgICAgICBidXR0b25zOiBbXG4gICAgICAgICB7XG4gICAgICAgICAgICAgdGV4dDogJ0NhbmNlbCcsXG4gICAgICAgICAgICAgcm9sZTogJ2NhbmNlbCcsXG4gICAgICAgICAgICAgaGFuZGxlcjogKCkgPT4ge1xuICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZygnQ2FuY2VsIGNsaWNrZWQnKTtcbiAgICAgICAgICAgICB9XG4gICAgICAgICB9LFxuICAgICAgICAge1xuICAgICAgICAgICAgIHRleHQ6ICdPSycsXG4gICAgICAgICAgICAgaGFuZGxlcjogZGF0YSA9PiB7XG4gICAgICAgICAgICAgICAgIGlmKGRhdGEpe1xuICAgICAgICAgICAgICAgICAgICAgdGhpcy5zZWxlY3RlZCA9IGRhdGE7XG4gICAgICAgICAgICAgICAgICAgICAvL2NvbnNvbGUubG9nKGRhdGEpO1xuICAgICAgICAgICAgICAgICAgICAgdGhpcy52YWx1ZSA9IGRhdGE7XG4gICAgICAgICAgICAgICAgICAgICBsZXQgb2JqID0ge1xuICAgICAgICAgICAgICAgICAgICAgICBpZDogdGhpcy5pZCxcbiAgICAgICAgICAgICAgICAgICAgICAgbmFtZTogdGhpcy5uYW1lLFxuICAgICAgICAgICAgICAgICAgICAgICB2YWx1ZTogZGF0YVxuICAgICAgICAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgICAgICAgICAgIHRoaXMub25DaGFuZ2VkLmVtaXQob2JqKTsgIFxuICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgfVxuICAgICAgICAgfVxuICAgICAgICAgXVxuICAgICB9KTtcblxuICAgICB0aGlzLmN1c3RvbV9jaG9pY2VzLmZvckVhY2goaXRlbSA9PiB7XG4gICAgICAgICAgIGFsZXJ0LmFkZElucHV0KHtcbiAgICAgICAgICAgICB0eXBlOiAncmFkaW8nLFxuICAgICAgICAgICAgIGxhYmVsOiBpdGVtLFxuICAgICAgICAgICAgIHZhbHVlOiBpdGVtLFxuICAgICAgICAgICAgICAgICAvL2NoZWNrZWQ6IHRoaXMubGlzdC5zZWxlY3RlZCA9PT0gaXRlbS5pZFxuICAgICAgICAgICAgIH0pO1xuICAgICB9KTtcblxuICAgICB0aGlzLm5hdi5wcmVzZW50KGFsZXJ0KTtcbiAgICAgICAgIC8vLnRoZW4oKCkgPT4geyB0aGlzLnRlc3RSYWRpb09wZW4gPSB0cnVlO30pO1xuICAgICB9XG5cbiBvcGVuQ2hlY2tib3goKSB7ICAgICAgIFxuICAgICBsZXQgdGl0bGU9dGhpcy5uYW1lO1xuXG4gICAgIGxldCBhbGVydCA9IEFsZXJ0LmNyZWF0ZSh7XG4gICAgICAgICB0aXRsZTogJ0Nob29zZSAnK3RpdGxlLFxuICAgICAgICAgYnV0dG9uczogW1xuICAgICAgICAge1xuICAgICAgICAgICAgIHRleHQ6ICdDYW5jZWwnLFxuICAgICAgICAgICAgIHJvbGU6ICdjYW5jZWwnLFxuICAgICAgICAgICAgIGhhbmRsZXI6ICgpID0+IHtcbiAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coJ0NhbmNlbCBjbGlja2VkJyk7XG4gICAgICAgICAgICAgfVxuICAgICAgICAgfSxcbiAgICAgICAgIHtcbiAgICAgICAgICAgICB0ZXh0OiAnT0snLFxuICAgICAgICAgICAgIGhhbmRsZXI6IGRhdGEgPT4ge1xuICAgICAgICAgICAgICAgICBpZihkYXRhKXtcbiAgICAgICAgICAgICAgICAgICAgIHRoaXMudmFsdWUgPSBkYXRhLmpvaW4oXCIsIFwiKTtcbiAgICAgICAgICAgICAgICAgICAgIGxldCBvYmogPSB7XG4gICAgICAgICAgICAgICAgICAgICAgIGlkOiB0aGlzLmlkLFxuICAgICAgICAgICAgICAgICAgICAgICBuYW1lOiB0aGlzLm5hbWUsXG4gICAgICAgICAgICAgICAgICAgICAgIHZhbHVlOiB0aGlzLnZhbHVlXG4gICAgICAgICAgICAgICAgICAgICB9O1xuICAgICAgICAgICAgICAgICAgICB0aGlzLm9uQ2hhbmdlZC5lbWl0KG9iaik7ICBcbiAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgIH1cbiAgICAgICAgIH1cbiAgICAgICAgIF1cbiAgICAgfSk7XG4gICAgIGxldCBjaGVja1ZhbHVlID0gdGhpcy52YWx1ZS5zcGxpdChcIiwgXCIpO1xuICAgICB0aGlzLmN1c3RvbV9jaG9pY2VzLmZvckVhY2goaXRlbSA9PiB7XG4gICAgICAgICBhbGVydC5hZGRJbnB1dCh7XG4gICAgICAgICAgICAgdHlwZTogJ2NoZWNrYm94JyxcbiAgICAgICAgICAgICBsYWJlbDogaXRlbSxcbiAgICAgICAgICAgICB2YWx1ZTogaXRlbSxcbiAgICAgICAgICAgICBjaGVja2VkOiBjaGVja1ZhbHVlLmZpbHRlcih0YyA9PiB0YyA9PSBpdGVtKS5sZW5ndGg+MFxuICAgICAgICAgICAgIH0pO1xuICAgICB9KTtcblxuICAgICB0aGlzLm5hdi5wcmVzZW50KGFsZXJ0KTtcbiAgICAgICAgIC8vLnRoZW4oKCkgPT4geyB0aGlzLnRlc3RSYWRpb09wZW4gPSB0cnVlO30pO1xuICAgICB9ICAgICBcbiB9XG4iLCJpbXBvcnQge0lPTklDX0RJUkVDVElWRVMsIE5hdiwgTW9kYWwsIEFsZXJ0LCBDb25maWd9IGZyb20gJ2lvbmljLWFuZ3VsYXInO1xuaW1wb3J0IHtBcGlEYXRhfSBmcm9tICcuLi8uLi9wcm92aWRlcnMvYXBpLWRhdGEnO1xuaW1wb3J0IHtDb21wb25lbnQsIElucHV0LCBPdXRwdXQsIEV2ZW50RW1pdHRlciwgT25Jbml0fSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7VHJlZU1vZGFsfSBmcm9tICcuLi8uLi9wYWdlcy9tb2RhbHMvbW9kYWxzJztcbmltcG9ydCB7YWRkcH0gZnJvbSAnLi4vLi4vZGlyZWN0aXZlcy9oZWxwZXJzJztcbmltcG9ydCAncnhqcyc7XG5cbmNvbnN0IGFsZXJ0TGltaXQgPSAxMDtcblxuQENvbXBvbmVudCh7XG4gICAgc2VsZWN0b3I6ICdsb2NhdGlvbi1saXN0JyxcbiAgICB0ZW1wbGF0ZVVybDogJ2J1aWxkL2NvbXBvbmVudHMvbG9jYXRpb24tbGlzdC9sb2NhdGlvbi1saXN0Lmh0bWwnLFxuICAgIGRpcmVjdGl2ZXM6IFtJT05JQ19ESVJFQ1RJVkVTXVxufSlcbmV4cG9ydCBjbGFzcyBMb2NhdGlvbkxpc3RDb21wb25lbnQge1xuICAgIEBJbnB1dCgpIGxpc3Q6IGFueSA9IHt9O1xuICAgIEBJbnB1dCgpIHByZWxvYWQ6IGJvb2xlYW47XG4gICAgQE91dHB1dCgpIHB1YmxpYyBvbkNoYW5nZWQ6RXZlbnRFbWl0dGVyPGFueT4gPSBuZXcgRXZlbnRFbWl0dGVyKGZhbHNlKTtcbiAgICBpbml0OiBib29sZWFuID0gdHJ1ZTtcbiAgICBzZWxlY3RlZDogT2JqZWN0ID0ge307XG4gICAgdXJsOiBhbnk7XG4gICAgbmFtZTogc3RyaW5nO1xuXG4gICAgIGNvbnN0cnVjdG9yKHByaXZhdGUgbmF2OiBOYXYsIHByaXZhdGUgYXBpRGF0YTogQXBpRGF0YSwgcHJpdmF0ZSBjb25maWc6IENvbmZpZykge1xuICAgICB9ICBcblxuICAgICBuZ09uSW5pdCgpIHtcbiAgICAgICAgIGlmICghdGhpcy5jb25maWcuY3VycmVudC5pc19sb2NhdGlvbl90cmFja2luZylcbiAgICAgICAgIHtcbiAgICAgICAgICAgICB0aGlzLmxpc3QuaGlkZGVuID0gdHJ1ZTtcbiAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICB9XG4gICAgICAgICBcbiAgICAgICAgIHRoaXMubmFtZSA9ICh0aGlzLmNvbmZpZy5jdXJyZW50Lm5hbWVzW3RoaXMubGlzdC5uYW1lXSB8fCB7fSkucyB8fCB0aGlzLmxpc3QubmFtZTtcblxuICAgICAgICAgaWYgKHRoaXMubGlzdC51cmwpIHtcbiAgICAgICAgICAgICB0aGlzLnVybCA9IHRoaXMubGlzdC51cmw7XG4gICAgICAgICAgICAgaWYgKHRoaXMucHJlbG9hZCkge1xuICAgICAgICAgICAgICAgICB0aGlzLmxvYWREYXRhKGZhbHNlKTtcbiAgICAgICAgICAgICB9XG4gICAgICAgICB9XG4gICAgIH1cblxuICAgICBvcGVuKCkge1xuICAgICAgICAgdGhpcy5sb2FkRGF0YSh0cnVlKTtcbiAgICAgfVxuXG4gICAgIGxvYWREYXRhKHNob3cpIHtcbiAgICAgICAgIGlmICh0aGlzLnVybCAhPSB0aGlzLmxpc3QudXJsIHx8ICF0aGlzLmxpc3QuaXRlbXMgfHwgdGhpcy5saXN0Lml0ZW1zLmxlbmd0aCA9PSAwKSB7XG4gICAgICAgICAgICAgaWYgKHRoaXMubGlzdC51cmwpIHtcbiAgICAgICAgICAgICAgICAgdGhpcy5hcGlEYXRhLmdldChhZGRwKHRoaXMubGlzdC51cmwsXCJpc190cmVlXCIsIFwidHJ1ZVwiKSkuc3Vic2NyaWJlKFxuICAgICAgICAgICAgICAgICAgICAgZGF0YSA9PiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5saXN0Lml0ZW1zID0gZGF0YTtcbiAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLnByb2NlZWRfbGlzdChzaG93KTtcbiAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLnVybCA9IHRoaXMubGlzdC51cmw7XG4gICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICAgZXJyb3IgPT4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuZXJyb3IoXCJDYW5ub3QgZ2V0IFwiICsgdGhpcy5uYW1lICsgXCIgbGlzdCEgRXJyb3I6IFwiICsgZXJyb3IpO1xuICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKGVycm9yIHx8ICdTZXJ2ZXIgZXJyb3InKTtcbiAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgKTtcbiAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgZWxzZVxuICAgICAgICAgICAgICAgICB0aGlzLmVycm9yKHRoaXMubmFtZSArICcgbGlzdCBpcyBlbXB0eSEnKTtcbiAgICAgICAgIH1cbiAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgIHRoaXMucHJvY2VlZF9saXN0KHNob3cpO1xuICAgICAgICAgfVxuICAgICB9XG5cbiAgICAgZXJyb3IobWVzc2FnZSlcbiAgICAge1xuXG4gICAgICAgICB0aGlzLm5hdi5hbGVydChtZXNzYWdlLCB0cnVlKTtcbiAgICAgfVxuXG4gICAgIHByb2NlZWRfbGlzdChzaG93KVxuICAgICB7XG4gICAgICBcbiAgICAgIC8vICAgdGhpcy5saXN0Lml0ZW1zID0gdGhpcy5saXN0Lml0ZW1zLmZpbHRlcih2ID0+IHsgcmV0dXJuIHYuaXNfYWN0aXZlIH0pO1xuXG4gICAgICAgICBpZiAoIXRoaXMubGlzdC5pdGVtcyB8fCB0aGlzLmxpc3QuaXRlbXMubGVuZ3RoID09IDApXG4gICAgICAgICB7XG4gICAgICAgICAgICAgdGhpcy5saXN0LnZhbHVlID0gXCJEZWZhdWx0IChub3RoaW5nIHRvIHNlbGVjdClcIjtcbiAgICAgICAgICAgICAvL3RoaXMuZXJyb3IodGhpcy5saXN0Lm5hbWUgKyAnIGxpc3QgaXMgZW1wdHkhJyk7XG4gICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgfVxuICAgICAgICAgaWYgKHNob3cpIHtcbiAgICAgICAgICAgICBpZiAodGhpcy5saXN0Lml0ZW1zWzBdLm5hbWUgIT0gXCJEZWZhdWx0IChubyBzZWxlY3Rpb24pXCIpXG4gICAgICAgICAgICAgICB0aGlzLmxpc3QuaXRlbXMuc3BsaWNlKDAsIDAsIHtoaWVyYXJjaHlfbGV2ZWw6MCxpZDowLGlzX2FjdGl2ZTp0cnVlLGlzX2xhc3RjaGlsZDp0cnVlLG5hbWU6XCJEZWZhdWx0IChubyBzZWxlY3Rpb24pXCJ9KTsgIFxuICAgICAgICAgLy9sZXQgaXNfcGxhaW4gPSAhdGhpcy5saXN0Lml0ZW1zLmZpbHRlcih2ID0+IHsgcmV0dXJuIHYuc3ViIH0pO1xuXG4gICAgICAgICAvL2lmIChpc19wbGFpbiAmJiB0aGlzLmxpc3QuaXRlbXMubGVuZ3RoIDw9IGFsZXJ0TGltaXQpXG4gICAgICAgICAvLyAgICB0aGlzLm9wZW5SYWRpbygpO1xuICAgICAgICAgLy9lbHNlXG4gICAgICAgICAgICAgdGhpcy5vcGVuTW9kYWwoKTtcbiAgICAgfVxuICAgICB9XG5cbiAgICAgZW1pdF9jaGFuZ2VkKHZhbHVlKXtcbiAgICAgICAgIHZhbHVlLm5hbWUgPSB0aGlzLmZpbmRQYXRoKFwiIFwiLCB0aGlzLmxpc3QuaXRlbXMsIHZhbHVlLmlkKTtcbiAgICAgICAgIC8vdGhpcy5saXN0LnZhbHVlID0gdmFsdWUubmFtZTtcbiAgICAgICAgIHZhbHVlLnR5cGUgPSBcImxvY2F0aW9uXCI7XG4gICAgICAgICB0aGlzLm9uQ2hhbmdlZC5lbWl0KHZhbHVlKTtcbiAgICAgfVxuXG4gICAgIGZpbmRQYXRoKHBhdGgsIGFycmF5LCBpZCkge1xuICAgICAgICAgaWYgKHR5cGVvZiBhcnJheSAhPSAndW5kZWZpbmVkJyAmJiBhcnJheSkge1xuICAgICAgICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgYXJyYXkubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgICAgICAgaWYgKGFycmF5W2ldLmlkID09IGlkKSByZXR1cm4gYXJyYXlbaV0ubmFtZTtcbiAgICAgICAgICAgICAgICAgdmFyIHBhdGggPSB0aGlzLmZpbmRQYXRoKHBhdGgsIGFycmF5W2ldLnN1YiwgaWQpO1xuICAgICAgICAgICAgICAgICBpZiAocGF0aCAhPSBudWxsKSB7XG4gICAgICAgICAgICAgICAgICAgICByZXR1cm4gYXJyYXlbaV0ubmFtZSArIFwiIC8gXCIgKyBwYXRoO1xuICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgfVxuICAgICAgICAgfVxuICAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgIH1cblxuICAgICBvcGVuUmFkaW8oKSB7ICAgICAgICAgXG4gICAgICAgICBsZXQgdGl0bGU9dGhpcy5uYW1lO1xuXG4gICAgICAgICBsZXQgYWxlcnQgPSBBbGVydC5jcmVhdGUoe1xuICAgICAgICAgICAgIHRpdGxlOiAnQ2hvb3NlICcrdGl0bGUsXG4gICAgICAgICAgICAgYnV0dG9uczogW1xuICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgICB0ZXh0OiAnQ2FuY2VsJyxcbiAgICAgICAgICAgICAgICAgICAgIHJvbGU6ICdjYW5jZWwnLFxuICAgICAgICAgICAgICAgICAgICAgaGFuZGxlcjogKCkgPT4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKCdDYW5jZWwgY2xpY2tlZCcpO1xuICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgICB0ZXh0OiAnT0snLFxuICAgICAgICAgICAgICAgICAgICAgaGFuZGxlcjogZGF0YSA9PiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgaWYoZGF0YSl7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuc2VsZWN0ZWQgPSBkYXRhO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLmVtaXRfY2hhbmdlZChkYXRhKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICBdXG4gICAgICAgICB9KTtcblxuICAgICAgICAgdGhpcy5saXN0Lml0ZW1zLmZvckVhY2goaXRlbSA9PiB7XG4gICAgICAgICAgICAgYWxlcnQuYWRkSW5wdXQoe1xuICAgICAgICAgICAgICAgICB0eXBlOiAncmFkaW8nLFxuICAgICAgICAgICAgICAgICBsYWJlbDogaXRlbS5uYW1lLFxuICAgICAgICAgICAgICAgICB2YWx1ZTogaXRlbSxcbiAgICAgICAgICAgICAgICAgLy9jaGVja2VkOiB0aGlzLmxpc3Quc2VsZWN0ZWQgPT09IGl0ZW0uaWRcbiAgICAgICAgICAgICB9KTtcbiAgICAgICAgIH0pO1xuXG4gICAgICAgICB0aGlzLm5hdi5wcmVzZW50KGFsZXJ0KTtcbiAgICAgfVxuXG4gICAgIG9wZW5Nb2RhbCgpIHtcbiAgICAgICAgIGxldCBteU1vZGFsID0gTW9kYWwuY3JlYXRlKFRyZWVNb2RhbCwgdGhpcy5saXN0KTtcbiAgICAgICAgIG15TW9kYWwub25EaXNtaXNzKGRhdGEgPT4ge1xuICAgICAgICAgICAgIGlmIChkYXRhLm5hbWUpIHtcbiAgICAgICAgICAgICAgICAgdGhpcy5zZWxlY3RlZCA9IGRhdGE7XG4gICAgICAgICAgICAgICAgIHRoaXMuZW1pdF9jaGFuZ2VkKGRhdGEpO1xuICAgICAgICAgICAgIH1cbiAgICAgICAgIH0pO1xuICAgICAgICAgdGhpcy5uYXYucHJlc2VudChteU1vZGFsKTtcbiAgICAgfVxuXG4gICAgfVxuIiwiLy9pbiBjYXNlIG9uIHVzaW5nIGlvbmljIFwiaW9uLWNhcmRcIlxyXG5pbXBvcnQge0lPTklDX0RJUkVDVElWRVMsIE5hdiwgTmF2UGFyYW1zLCBDb25maWd9IGZyb20gJ2lvbmljLWFuZ3VsYXInO1xyXG5pbXBvcnQge0NvbXBvbmVudCwgSW5wdXQsIE9uQ2hhbmdlc30gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7TG9jYXRpb25EZXRhaWxzUGFnZX0gZnJvbSAnLi4vLi4vcGFnZXMvbG9jYXRpb24tZGV0YWlscy9sb2NhdGlvbi1kZXRhaWxzJztcclxuaW1wb3J0IHtNb3JlUGlwZX0gZnJvbSAnLi4vLi4vcGlwZXMvcGlwZXMnO1xyXG5cclxuQENvbXBvbmVudCh7XHJcbiAgICBzZWxlY3RvcjogJ2xvY2F0aW9ucy1saXN0JyxcclxuICAgIHRlbXBsYXRlVXJsOiAnYnVpbGQvY29tcG9uZW50cy9sb2NhdGlvbnMtbGlzdC9sb2NhdGlvbnMtbGlzdC5odG1sJyxcclxuZGlyZWN0aXZlczogW0lPTklDX0RJUkVDVElWRVNdLFxyXG5waXBlczogW01vcmVQaXBlXSxcclxufSlcclxuXHJcbmV4cG9ydCBjbGFzcyBMb2NhdGlvbnNMaXN0Q29tcG9uZW50IHtcclxuICAgIEBJbnB1dCgpIGxvY2F0aW9uczogQXJyYXk8YW55PjtcclxuICAgIEBJbnB1dCgpIHNpbXBsZTogYm9vbGVhbjtcclxuICAgIGlzX2VtcHR5OiBib29sZWFuO1xyXG5cclxuICAgICBjb25zdHJ1Y3Rvcihwcml2YXRlIG5hdjogTmF2LCBwcml2YXRlIGNvbmZpZzogQ29uZmlnKSB7XHJcbiAgICAgICAgIHRoaXMuaXNfZW1wdHkgPSBmYWxzZTtcclxufVxyXG4gICAgIGl0ZW1UYXBwZWQoZXZlbnQsIGxvY2F0aW9uKSB7XHJcbiAgICAgICAgLy8gbG9jYXRpb24ubG9jYXRpb25fc3RhdGlzdGljcy50aWNrZXRfY291bnRzLmNsb3NlZCA9IG51bGw7XHJcbiAgICAgICAgIHRoaXMubmF2LnB1c2goTG9jYXRpb25EZXRhaWxzUGFnZSwgbG9jYXRpb24pO1xyXG4gICAgICAgICAgICAgICAgICAgfVxyXG4gICAgIFxyXG4gICAgIG5nT25DaGFuZ2VzKGV2ZW50KSB7XHJcbiAgICAgICAgLy8gY29uc29sZS5sb2coZXZlbnQubG9jYXRpb25zKTtcclxuICAgICAgICAgaWYgKCF0aGlzLnNpbXBsZSlcclxuICAgICAgICAgICAgIHJldHVybjtcclxuICAgICAgICAgaWYgKFwibG9jYXRpb25zXCIgaW4gZXZlbnQgKSB7XHJcbiAgICAgICAgICAgICBpZiAoZXZlbnQubG9jYXRpb25zLmlzRmlyc3RDaGFuZ2UoKSAmJiBldmVudC5sb2NhdGlvbnMuY3VycmVudFZhbHVlICE9PSBudWxsKVxyXG4gICAgICAgICAgICAgICAgIHJldHVybjtcclxuICAgICAgICAgICAgIHRoaXMuaXNfZW1wdHkgPSAhZXZlbnQubG9jYXRpb25zLmN1cnJlbnRWYWx1ZSB8fCBldmVudC5sb2NhdGlvbnMuY3VycmVudFZhbHVlLmxlbmd0aCA9PSAwO1xyXG4gICAgICAgICB9XHJcbiAgICAgfVxyXG4gICAgIFxyXG59XHJcbiIsImltcG9ydCB7SU9OSUNfRElSRUNUSVZFUywgTmF2LCBNb2RhbCwgQWxlcnQsIENvbmZpZywgTG9hZGluZ30gZnJvbSAnaW9uaWMtYW5ndWxhcic7XG5pbXBvcnQge0FwaURhdGF9IGZyb20gJy4uLy4uL3Byb3ZpZGVycy9hcGktZGF0YSc7XG5pbXBvcnQge2dldEZ1bGxOYW1lfSBmcm9tICcuLi8uLi9kaXJlY3RpdmVzL2hlbHBlcnMnO1xuaW1wb3J0IHtUaWNrZXRQcm92aWRlcn0gZnJvbSAnLi4vLi4vcHJvdmlkZXJzL3Byb3ZpZGVycyc7XG5pbXBvcnQge0NvbXBvbmVudCwgSW5wdXQsIE91dHB1dCwgRXZlbnRFbWl0dGVyLCBPbkluaXQsIE9uQ2hhbmdlc30gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQge0Jhc2ljU2VsZWN0TW9kYWwsIEluZmluaXR5TXVsdGlTZWxlY3RNb2RhbCwgQWpheFNlbGVjdE1vZGFsfSBmcm9tICcuLi8uLi9wYWdlcy9tb2RhbHMvbW9kYWxzJztcblxuY29uc3QgYWxlcnRMaW1pdCA9IDU7XG5cbkBDb21wb25lbnQoe1xuICAgIHNlbGVjdG9yOiAnbXVsdGktc2VsZWN0JyxcbiAgICB0ZW1wbGF0ZVVybDogJ2J1aWxkL2NvbXBvbmVudHMvbXVsdGktc2VsZWN0L211bHRpLXNlbGVjdC5odG1sJyxcbiAgICBkaXJlY3RpdmVzOiBbSU9OSUNfRElSRUNUSVZFU11cbn0pXG5leHBvcnQgY2xhc3MgTXVsdGlTZWxlY3RDb21wb25lbnQge1xuICAgIEBJbnB1dCgpIGxpc3Q6IGFueTtcbiAgICBASW5wdXQoKSBhY2NvdW50X2lkOiBhbnk7XG4gICAgQElucHV0KCkgY2xhc3NfaWQ6IGFueTtcbiAgICBASW5wdXQoKSBpc2J1dHRvbjogYm9vbGVhbjtcbiAgICBASW5wdXQoKSBpc19lbmFibGVkOiBib29sZWFuID0gdHJ1ZTtcbiAgICBASW5wdXQoKSBpc19tZTogYm9vbGVhbjtcbiAgICBASW5wdXQoKSBwcmVsb2FkOiBib29sZWFuO1xuICAgIEBJbnB1dCgpIGFqYXg6IGJvb2xlYW47XG4gICAgQE91dHB1dCgpIHB1YmxpYyBvbkNoYW5nZWQ6IEV2ZW50RW1pdHRlcjxhbnk+ID0gbmV3IEV2ZW50RW1pdHRlcihmYWxzZSk7XG4gICAgc2VsZWN0ZWQ6IE9iamVjdCA9IHt9O1xuICAgIGluaXQ6IGJvb2xlYW4gPSB0cnVlO1xuICAgIGNsYXNzZXM6IGFueSA9IHt9O1xuICAgIHVybDogc3RyaW5nO1xuICAgIGNvbnRyYWN0b3JzOiBudW1iZXIgPSAwO1xuICAgIG5hbWU6IHN0cmluZyA9IFwiXCI7XG5cbiAgICBjb25zdHJ1Y3Rvcihwcml2YXRlIG5hdjogTmF2LCBwcml2YXRlIGFwaURhdGE6IEFwaURhdGEsIHByaXZhdGUgdGlja2V0UHJvdmlkZXI6IFRpY2tldFByb3ZpZGVyLCBwcml2YXRlIGNvbmZpZzogQ29uZmlnKSB7XG4gICAgICAgIHRoaXMubGlzdCA9IHt9O1xuICAgIH0gIFxuICAgIG5nT25DaGFuZ2VzKGV2ZW50KSB7XG4gICAgICAgIGlmICh0aGlzLmxpc3QubmFtZS50b0xvd2VyQ2FzZSgpID09IFwiYWx0IHRlY2hzXCIgJiYgIWV2ZW50LmFjY291bnRfaWQuaXNGaXJzdENoYW5nZSgpIHx8IHRoaXMubGlzdC5uYW1lLnRvTG93ZXJDYXNlKCkgPT0gXCJhbHQgdXNlcnNcIiAmJiAhZXZlbnQuYWNjb3VudF9pZC5pc0ZpcnN0Q2hhbmdlKCkpIHtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5saXN0Lml0ZW1zLnNwbGljZSgwLHRoaXMuY29udHJhY3RvcnMpOyBcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5nZXRDb250cmFjdG9yKHRoaXMuYWNjb3VudF9pZCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIGlmIChcImNsYXNzX2lkXCIgaW4gZXZlbnQgKSB7XG4gICAgICAgICAgICBpZiAodGhpcy5saXN0Lm5hbWUudG9Mb3dlckNhc2UoKSA9PSBcInRvZG8gdGVtcGxhdGVzXCIgJiYgIWV2ZW50LmNsYXNzX2lkLmlzRmlyc3RDaGFuZ2UoKSAmJiAhdGhpcy5saXN0LmhpZGRlbikge1xuICAgICAgICAgICAgICAgIHRoaXMuc2VsZWN0VG9kb1RlbXBsYXRlKCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgbmdPbkluaXQoKSB7XG4gICAgICAgIGxldCBsaXN0bmFtZSA9IHRoaXMubGlzdC5uYW1lLnRvTG93ZXJDYXNlKCk7XG4gICAgICAgIFxuICAgICAgICBpZiAoKGxpc3RuYW1lID09IFwicHJvamVjdFwiICYmICF0aGlzLmNvbmZpZy5jdXJyZW50LmlzX3Byb2plY3RfdHJhY2tpbmcpIHx8XG4gICAgICAgICAgICAobGlzdG5hbWUgPT0gXCJ0b2Rvc1wiICYmICF0aGlzLmNvbmZpZy5jdXJyZW50LmlzX3RvZG9zKSB8fFxuICAgICAgICAgICAgKGxpc3RuYW1lID09IFwidG9kbyB0ZW1wbGF0ZXNcIiAmJiAhdGhpcy5jb25maWcuY3VycmVudC5pc190b2RvcykgfHxcbiAgICAgICAgICAgIChsaXN0bmFtZSA9PSBcImxvY2F0aW9uXCIgJiYgIXRoaXMuY29uZmlnLmN1cnJlbnQuaXNfbG9jYXRpb25fdHJhY2tpbmcpIHx8XG4gICAgICAgICAgICAoKGxpc3RuYW1lID09IFwiY29udHJhY3RcIiB8fCBsaXN0bmFtZSA9PSBcInByZXBhaWQgcGFja1wiKSAmJiAhdGhpcy5jb25maWcuY3VycmVudC5pc19pbnZvaWNlKSB8fFxuICAgICAgICAgICAgKGxpc3RuYW1lID09IFwicHJpb3JpdHlcIiAmJiAhdGhpcy5jb25maWcuY3VycmVudC5pc19wcmlvcml0aWVzX2dlbmVyYWwpIHx8XG4gICAgICAgICAgICAobGlzdG5hbWUgPT0gXCJhY2NvdW50XCIgJiYgIXRoaXMuY29uZmlnLmN1cnJlbnQuaXNfYWNjb3VudF9tYW5hZ2VyKSB8fFxuICAgICAgICAgICAgKGxpc3RuYW1lID09IFwibGV2ZWxcIiAmJiAoIXRoaXMuY29uZmlnLmN1cnJlbnQuaXNfdGlja2V0X2xldmVscyB8fCAodGhpcy5jb25maWcuY3VycmVudC5pc19yZXN0cmljdF90ZWNoX2VzY2FsYXRlICYmICF0aGlzLmNvbmZpZy5jdXJyZW50LnVzZXIuaXNfYWRtaW4pKSkgfHxcbiAgICAgICAgICAgICgobGlzdG5hbWUgPT0gXCJyZXNvbHV0aW9uXCIgfHwgbGlzdG5hbWUgPT0gXCJjYXRlZ29yeVwiKSAmJiAhdGhpcy5jb25maWcuY3VycmVudC5pc19yZXNvbHV0aW9uX3RyYWNraW5nKSkgXG4gICAgICAgIHtcbiAgICAgICAgICAgIHRoaXMubGlzdC5oaWRkZW4gPSB0cnVlO1xuICAgICAgICB9XG5cbiAgICAgICAgdGhpcy5pc19lbmFibGVkID0gIXRoaXMubGlzdC5pc19kaXNhYmxlZDtcbiAgICAgICAgdGhpcy5pc19vbmNlID0gdGhpcy5saXN0LmlzX29uY2U7XG5cbiAgICAgICAgaWYgKHRoaXMubGlzdC5oaWRkZW4pXG4gICAgICAgICAgICByZXR1cm47XG5cbiAgICAgICAgdGhpcy5pc19lbmFibGVkID0gIXRoaXMubGlzdC5pc19kaXNhYmxlZDtcblxuICAgICAgICBpZiAobGlzdG5hbWUgPT0gXCJhbHQgdGVjaHNcIilcbiAgICAgICAgICAgIHRoaXMubmFtZSA9IFwiQWx0IFwiICsgdGhpcy5jb25maWcuY3VycmVudC5uYW1lcy50ZWNoLnA7XG4gICAgICAgIGVsc2UgaWYgKGxpc3RuYW1lID09IFwiYWx0IHVzZXJzXCIpXG4gICAgICAgICAgICB0aGlzLm5hbWUgPSBcIkFsdCBcIiArIHRoaXMuY29uZmlnLmN1cnJlbnQubmFtZXMudXNlci5wO1xuICAgICAgICBlbHNle1xuICAgICAgICAgICAgdGhpcy5uYW1lID0gdGhpcy5saXN0Lm5hbWU7XG4gICAgICAgICAgICB0aGlzLmdldENsYXNzZXMoKTtcbiAgICAgICAgfVxuICAgICAgICBcblxuXG4gICAgICAgIGlmICh0aGlzLmxpc3QudXJsKVxuICAgICAgICB7XG4gICAgICAgICAgICB0aGlzLnVybCA9IHRoaXMubGlzdC51cmw7XG4gICAgICAgICAgICAgaWYgKHRoaXMucHJlbG9hZClcbiAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgIHRoaXMubG9hZERhdGEoZmFsc2UpO1xuICAgICAgICAgICAgIH1cbiAgICAgICAgIH1cbiAgICAgfVxuXG4gICAgLy8gbWUoKVxuICAgIC8vIHtcbiAgICAvLyAgICBsZXQgaGUgPSB0aGlzLmNvbmZpZy5nZXRDdXJyZW50KFwidXNlclwiKTtcbiAgICAvLyAgICBsZXQgdmFsdWUgPSB7XG4gICAgIC8vICAgICAgIGlkOiBoZS51c2VyX2lkLFxuICAgICAvLyAgICAgICBuYW1lOiBnZXRGdWxsTmFtZShoZS5maXJzdG5hbWUsIGhlLmxhc3RuYW1lLCBoZS5lbWFpbClcbiAgICAgLy8gICB9O1xuICAgICAvLyAgIHRoaXMuZW1pdF9jaGFuZ2VkKHZhbHVlKTtcbiAgICAgLy99XG5cbiAgICAgb3BlbigpXG4gICAgIHtcbiAgICAgICAgIHRoaXMubG9hZERhdGEodHJ1ZSk7XG4gICAgIH1cblxuICAgICBsb2FkRGF0YSAoc2hvdylcbiAgICAge1xuICAgICAgICAgaWYgKHRoaXMudXJsICE9IHRoaXMubGlzdC51cmwgfHwgIXRoaXMubGlzdC5pdGVtcyB8fCB0aGlzLmxpc3QuaXRlbXMubGVuZ3RoID09IDApe1xuICAgICAgICAgICAgIGlmICh0aGlzLmxpc3QudXJsKSB7XG4gICAgICAgICAgICAgICAgIGxldCBsb2FkaW5nID0gbnVsbDtcbiAgICAgICAgICAgICAgICAgaWYgKHNob3cpe1xuICAgICAgICAgICAgICAgICAgICAgbG9hZGluZyA9IExvYWRpbmcuY3JlYXRlKHtcbiAgICAgICAgICAgICAgICAgICAgIGNvbnRlbnQ6IFwiUGxlYXNlIHdhaXQuLi5cIixcbiAgICAgICAgICAgICAgICAgICAgIC8vZHVyYXRpb246IDIwMDAsXG4gICAgICAgICAgICAgICAgICAgICBkaXNtaXNzT25QYWdlQ2hhbmdlOiB0cnVlXG4gICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgICB0aGlzLm5hdi5wcmVzZW50KGxvYWRpbmcpO1xuICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgICB0aGlzLmFwaURhdGEuZ2V0KHRoaXMubGlzdC51cmwpLnN1YnNjcmliZShcbiAgICAgICAgICAgICAgICAgICAgIGRhdGEgPT4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgIGlmKHRoaXMubmFtZSA9PSBcIkFsdCBcIiArIHRoaXMuY29uZmlnLmN1cnJlbnQubmFtZXMudGVjaC5wKVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLnNvcnRDaGVha0luKGRhdGEpO1xuICAgICAgICAgICAgICAgICAgICAgICAgIGVsc2VcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5saXN0Lml0ZW1zID0gZGF0YTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChzaG93KSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxvYWRpbmcuZGlzbWlzcygpO1xuICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLnByb2NlZWRfbGlzdChzaG93KTtcbiAgICAgICAgICAgICAgICAgICAgICAgICBpZiAodGhpcy5saXN0Lm5hbWUudG9Mb3dlckNhc2UoKSA9PSBcImFsdCB1c2Vyc1wiIHx8IHRoaXMubGlzdC5uYW1lLnRvTG93ZXJDYXNlKCkgPT0gXCJhbHQgdGVjaHNcIilcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5nZXRDb250cmFjdG9yKHRoaXMuYWNjb3VudF9pZCk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy51cmwgPSB0aGlzLmxpc3QudXJsO1xuICAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgIGVycm9yID0+IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoc2hvdykgbG9hZGluZy5kaXNtaXNzKCk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5lcnJvcihcIkNhbm5vdCBnZXQgXCIgKyB0aGlzLm5hbWUgKyBcIiBsaXN0ISBFcnJvcjogXCIgKyBlcnJvcik7XG4gICAgICAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coZXJyb3IgfHwgJ1NlcnZlciBlcnJvcicpO1xuICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICApO1xuICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICAgdGhpcy5saXN0LmhpZGRlbiA9IHRydWU7XG4gICAgICAgICAgICAgICAgIHRoaXMuZXJyb3IodGhpcy5uYW1lICsgJyBsaXN0IGlzIGVtcHR5IScpO1xuICAgICAgICAgICAgIH1cbiAgICAgfVxuICAgICBlbHNlXG4gICAgICAgICB0aGlzLnByb2NlZWRfbGlzdChzaG93KTtcbiB9XG5cbiBlcnJvcihtZXNzYWdlKVxuIHtcbiAgICAgdGhpcy5uYXYuYWxlcnQobWVzc2FnZSwgdHJ1ZSk7XG4gfVxuXG4gcHJvY2VlZF9saXN0KHNob3cpXG4ge1xuICAgICBpZiAoIXRoaXMubGlzdC5pdGVtcyB8fCB0aGlzLmxpc3QuaXRlbXMubGVuZ3RoID09IDApXG4gICAgIHtcbiAgICAgICAgIHRoaXMubGlzdC52YWx1ZSA9IFwiRGVmYXVsdCAobm90aGluZyB0byBzZWxlY3QpXCI7XG4gICAgICAgICAvL3RoaXMub3BlbiA9IGZ1bmN0aW9uIHsgcmV0dXJuIGZhbHNlOyB9O1xuICAgICAgICAgLy90aGlzLmVycm9yKHRoaXMubGlzdC5uYW1lICsgJyBsaXN0IGlzIGVtcHR5IScpO1xuICAgICAgICAgcmV0dXJuO1xuICAgICB9XG4gICAgIGlmIChzaG93KSB7XG4gICAgIGlmICghdGhpcy5saXN0Lml0ZW1zWzBdLm5hbWUpe1xuICAgICAgICAgdmFyIHJlc3VsdHMgPSBbXTtcbiAgICAgICAgIHRoaXMubGlzdC5pdGVtcy5mb3JFYWNoKGl0ZW0gPT4ge1xuICAgICAgICAgICAgIGxldCBuYW1lO1xuICAgICAgICAgICAgIGxldCBpZCA9IGl0ZW0uaWQ7XG4gICAgICAgICAgICAgICAgIC8vaWYgdXNlcnMgb3IgdGVjaHNcbiAgICAgICAgICAgICAgICAgaWYgKGl0ZW0uZW1haWwpXG4gICAgICAgICAgICAgICAgICAgICBuYW1lID0gZ2V0RnVsbE5hbWUoaXRlbS5maXJzdG5hbWUsIGl0ZW0ubGFzdG5hbWUsIGl0ZW0uZW1haWwsIHRoaXMuaXNidXR0b24gPyBcIlwiIDogXCIgXCIpO1xuICAgICAgICAgICAgICAgICAvL2lmIHRpY2tldHNcbiAgICAgICAgICAgICAgICAgZWxzZSBpZiAoaXRlbS5udW1iZXIpXG4gICAgICAgICAgICAgICAgICAgICBuYW1lID0gYCMke2l0ZW0ubnVtYmVyfTogJHtpdGVtLnN1YmplY3R9YDtcbiAgICAgICAgICAgICAgICAgZWxzZSBpZiAoaXRlbS5wcmVwYWlkX3BhY2tfaWQpIHtcbiAgICAgICAgICAgICAgICAgICAgIG5hbWUgPSBpdGVtLnByZXBhaWRfcGFja19uYW1lO1xuICAgICAgICAgICAgICAgICAgICAgaWQgPSBpdGVtLnByZXBhaWRfcGFja19pZDtcbiAgICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgIHJlc3VsdHMucHVzaCh7aWQ6IGlkLCBuYW1lOiBuYW1lLCBlbWFpbDogaXRlbS5lbWFpbH0pO1xuICAgICAgICAgICAgICAgICBcblxuICAgICAgICAgICAgIH0pO1xuICAgICAgICAgdGhpcy5saXN0Lml0ZW1zID0gcmVzdWx0cztcbiAgICAgfVxuXG5cblxuICAgICAvL2lmICh0aGlzLmxpc3QuaXRlbXMubGVuZ3RoIDw9IGFsZXJ0TGltaXQpXG4gICAgIC8vICAgIHRoaXMub3BlblJhZGlvKCk7XG4gICAgIC8vZWxzZVxuICAgICAgICAgdGhpcy5vcGVuTW9kYWwoKTtcbiAgICAgfVxuIH1cblxuIGVtaXRfY2hhbmdlZCh2YWx1ZSl7XG5cbiAgICAgbGV0IG5hbWVzID0gXCJcIjtcbiAgICAgbGV0IGlkcyA9IFwiXCI7XG4gICAgIGlmICh0aGlzLmxpc3QubmFtZSA9PSdUb0RvIFRlbXBsYXRlcycpe1xuICAgICBmb3IgKHZhciBuID0gMDsgIG4gPCB2YWx1ZS5sZW5ndGg7IG4rKykge1xuICAgICAgIG5hbWVzICs9IHZhbHVlW25dLm5hbWUgKyBcIiwgXCI7XG4gICAgICAgaWRzICs9IHZhbHVlW25dLmlkICsgXCIsIFwiO1xuICAgICB9fVxuICAgICBlbHNle1xuICAgICAgICAgZm9yICh2YXIgbiA9IDA7ICBuIDwgdmFsdWUubGVuZ3RoOyBuKyspIHtcbiAgICAgICAgICAgbmFtZXMgKz0gdmFsdWVbbl0ubmFtZS5yZXBsYWNlKFwiIChcIiArdmFsdWVbbl0uZW1haWwrIFwiKVwiLCBcIixcIik7XG4gICAgICAgICAgIGlkcyArPSB2YWx1ZVtuXS5pZCArIFwiLCBcIjtcbiAgICAgICAgIH1cbiAgICAgfVxuICAgICBpZHMgPSBpZHMuc2xpY2UoMCwtMSk7XG4gICAgIG5hbWVzID0gbmFtZXMuc2xpY2UoMCwtMik7XG4gICAgIHRoaXMubGlzdC52YWx1ZSA9IG5hbWVzO1xuICAgICB2YWx1ZSA9IHtcbiAgICAgICAgIGlkOiBpZHMsXG4gICAgICAgICBuYW1lOiBuYW1lcyxcbiAgICAgfTtcblxuICAgICB2YWx1ZS50eXBlID0gdGhpcy5saXN0Lm5hbWUuc3BsaXQoJyAnKS5qb2luKCcnKS50b0xvd2VyQ2FzZSgpO1xuICAgICB0aGlzLnNlbGVjdGVkID0gdGhpcy5saXN0LnZhbHVlO1xuICAgICB0aGlzLm9uQ2hhbmdlZC5lbWl0KHZhbHVlKTtcbiAgICAgfVxuXG4gICAgIGdldENvbnRyYWN0b3IoYWNjb3VudF9pZClcbiAgIHtcbiAgICAgdGhpcy50aWNrZXRQcm92aWRlci5nZXRDb250cmFjdG9yKGFjY291bnRfaWQpLnN1YnNjcmliZShcbiAgICAgICBkYXRhID0+IHtcbiAgICAgICAgIHRoaXMuY29udHJhY3RvcnM9ZGF0YS5sZW5ndGg7XG4gICAgICAgICBpZiAoZGF0YSl7XG4gICAgICAgICAgICAgZGF0YS5mb3JFYWNoKGl0ZW0gPT4ge1xuICAgICAgICAgICAgICAgICBpdGVtLmxhc3RuYW1lID0gXCJDb250cmFjdG9yOiBcIiArIGl0ZW0ubGFzdG5hbWU7XG4gICAgICAgICAgICAgICAgIHRoaXMubGlzdC5pdGVtcy5zcGxpY2UoMCwwLGl0ZW0pO1xuICAgICAgICAgICAgIH0pO1xuICAgICAgICAgfVxuICAgICAgIH0sXG4gICAgICAgZXJyb3IgPT4ge1xuICAgICAgICAgY29uc29sZS5sb2coZXJyb3IgfHwgJ1NlcnZlciBlcnJvcicpO1xuICAgICAgIH1cbiAgICAgICApO1xuICAgfVxuXG4gICAgZ2V0Q2xhc3Nlcygpe1xuICAgICB0aGlzLnRpY2tldFByb3ZpZGVyLmdldENsYXNzZXMoKS5zdWJzY3JpYmUoXG4gICAgICAgZGF0YSA9PiB7XG4gICAgICAgICBpZiAoZGF0YSl7XG4gICAgICAgICAgICAgdGhpcy5jbGFzc2VzID0gZGF0YTsgICAgICAgICB9XG4gICAgICAgfSxcbiAgICAgICBlcnJvciA9PiB7XG4gICAgICAgICBjb25zb2xlLmxvZyhlcnJvciB8fCAnU2VydmVyIGVycm9yJyk7XG4gICAgICAgfVxuICAgICAgICk7XG4gICB9XG5cbiAgIHNlbGVjdFRvZG9UZW1wbGF0ZSgpe1xuICAgICAgIGxldCBpdGVtVG9kbztcbiAgICAgICB0aGlzLmNsYXNzZXMuZm9yRWFjaChpdGVtID0+e1xuICAgICAgICAgICBpZihpdGVtLmlkID09dGhpcy5jbGFzc19pZClcbiAgICAgICAgICAgICAgIGl0ZW1Ub2RvID0gaXRlbS50b2RvX3RlbXBsYXRlcztcbiAgICAgICB9KTtcbiAgICAgICBpZiAoaXRlbVRvZG8pe1xuICAgICAgICBpdGVtVG9kbyA9IGl0ZW1Ub2RvLnJlcGxhY2UoLy0vZywgJycpOyAgIFxuICAgICAgICB0aGlzLmxpc3Quc2VsZWN0ZWQgPSBpdGVtVG9kbztcbiAgICAgICAgbGV0IHRvRG9zID0gaXRlbVRvZG8uc3BsaXQoXCIsXCIpO1xuICAgICAgICBsZXQgaXRlbXNTZWxlY3RlZCA9IFtdO1xuICAgICAgICB0aGlzLmxpc3QuaXRlbXMuZm9yRWFjaChpdGVtPT57XG4gICAgICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IHRvRG9zLmxlbmd0aDsgKytpKSB7XG4gICAgICAgICAgICAgICAgaWYgKGl0ZW0uaWQgPT0gdG9Eb3NbaV0pe1xuICAgICAgICAgICAgICAgICAgIGl0ZW1zU2VsZWN0ZWQucHVzaChpdGVtKTsgIFxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBlbHNlXG4gICAgICAgICAgICAgICAgICAgaXRlbS5pc19zZWxlY3RlZCA9IGZhbHNlOyAgXG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgICAgICBpdGVtc1NlbGVjdGVkLmZvckVhY2goaXRlbT0+e1xuICAgICAgICAgICBpdGVtLmlzX3NlbGVjdGVkID0gdHJ1ZTsgXG4gICAgICAgIH0pO1xuICAgICAgICB0aGlzLmxpc3Quc2VsZWN0ZWRfaXRlbXMgPSBpdGVtc1NlbGVjdGVkO1xuICAgICAgICB0aGlzLmVtaXRfY2hhbmdlZChpdGVtc1NlbGVjdGVkKTtcbiAgICAgICAgfVxuICAgICAgICBlbHNle1xuICAgICAgICAgICB0aGlzLmxpc3Quc2VsZWN0ZWRfaXRlbXMgPSBbXTtcbiAgICAgICAgICAgdGhpcy5saXN0LnNlbGVjdGVkID0gXCJcIjtcbiAgICAgICAgICAgdGhpcy5saXN0Lml0ZW1zLmZvckVhY2goaXRlbT0+e1xuICAgICAgICAgICAgICAgaXRlbS5pc19zZWxlY3RlZCA9IGZhbHNlO1xuICAgICAgICAgICB9KTtcbiAgICAgICAgICAgdGhpcy5lbWl0X2NoYW5nZWQodGhpcy5saXN0LnNlbGVjdGVkX2l0ZW1zKTtcbiAgICAgICAgfVxuICAgfVxuXG4gICBzb3J0Q2hlYWtJbihkYXRhKXtcbiAgICB2YXIgcmVzdWx0cyA9IFtdO1xuICAgIGlmICh0aGlzLmNvbmZpZy5jdXJyZW50LmlzX3RlY2hfY2hlY2tpbiAmJiB0aGlzLmNvbmZpZy5jdXJyZW50LmlzX3Jlc3RyaWN0X3RyYW5zZmVyX3RvX2luKXtcbiAgICAgICAgZGF0YS5mb3JFYWNoKGl0ZW0gPT4ge1xuICAgICAgICAgICAgaWYgKGl0ZW0uY2hlY2tpbl9zdGF0dXMgPT0gXCJJTlwiKVxuICAgICAgICAgICAgICAgIHJlc3VsdHMucHVzaChpdGVtKTtcbiAgICAgICAgfSk7XG4gICAgICAgIHRoaXMubGlzdC5pdGVtcyA9IHJlc3VsdHM7XG4gICAgfVxuICAgIGVsc2VcbiAgICAgICAgdGhpcy5saXN0Lml0ZW1zID0gZGF0YTtcbiAgfVxuXG4gICAgIG9wZW5Nb2RhbCgpIHtcbiAgICAgICAgIC8vVE9ETyBjaGVjayBjb3VudHM6IGlzIG1vcmUgdGhhbiAxMDAgLSBkbyBhamF4XG4gICAgICAgICB0aGlzLmxpc3QuaXNidXR0b24gPSB0aGlzLmlzYnV0dG9uO1xuICAgICAgICAgbGV0IGxlbiA9IHRoaXMubGlzdC5pdGVtcy5sZW5ndGggfHwgMDtcbiAgICAgICAgIGxldCBtb2RhbCA9IEluZmluaXR5TXVsdGlTZWxlY3RNb2RhbDtcbiAgICAgICAgIGxldCBteU1vZGFsID0gTW9kYWwuY3JlYXRlKG1vZGFsLCB0aGlzLmxpc3QpO1xuICAgICAgICAgbGV0IHZhbHVlID0gXCJcIjtcbiAgICAgICAgIG15TW9kYWwub25EaXNtaXNzKGRhdGEgPT4ge1xuICAgICAgICAgICAgICAgICBpZiAoIWRhdGEpXG4gICAgICAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICAgICAgIHRoaXMuc2VsZWN0ZWQgPSB0aGlzLmxpc3Quc2VsZWN0ZWRfaXRlbXMgPSBkYXRhO1xuICAgICAgICAgICAgICAgICAgICAgdGhpcy5saXN0LnNlbGVjdGVkX2l0ZW1zLmZvckVhY2goc2VsZWN0ID0+IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHNlbGVjdC5pc19zZWxlY3RlZCA9IHRydWU7XG4gICAgICAgICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgdGhpcy5lbWl0X2NoYW5nZWQoZGF0YSk7XG4gICAgICAgICAgICAgXG4gICAgICAgICB9KTtcbiAgICAgICAgIHRoaXMubmF2LnByZXNlbnQobXlNb2RhbCk7XG4gICAgIH1cblxuIH1cbiIsImltcG9ydCB7SU9OSUNfRElSRUNUSVZFUywgQ29uZmlnfSBmcm9tICdpb25pYy1hbmd1bGFyJztcbmltcG9ydCB7Q29tcG9uZW50LCBJbnB1dH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQge2dldERhdGVUaW1lLCBnZXRGdWxsTmFtZX0gZnJvbSAnLi4vLi4vZGlyZWN0aXZlcy9oZWxwZXJzJztcbmltcG9ydCB7TGluZWJyZWFrc1BpcGUsIEdyYXZhdGFyUGlwZSwgRGF5c29sZFBpcGUsIEZpbGVzUGlwZX0gZnJvbSAnLi4vLi4vcGlwZXMvcGlwZXMnO1xuXG5cbkBDb21wb25lbnQoe1xuICAgIHNlbGVjdG9yOiAncG9zdHMtbGlzdCcsXG4gICAgdGVtcGxhdGVVcmw6ICdidWlsZC9jb21wb25lbnRzL3Bvc3RzLWxpc3QvcG9zdHMtbGlzdC5odG1sJyxcbiAgICBkaXJlY3RpdmVzOiBbSU9OSUNfRElSRUNUSVZFU10sXG4gICAgcGlwZXM6IFtMaW5lYnJlYWtzUGlwZSwgR3JhdmF0YXJQaXBlLCBEYXlzb2xkUGlwZSwgRmlsZXNQaXBlXSxcbn0pXG5leHBvcnQgY2xhc3MgUG9zdHNMaXN0Q29tcG9uZW50IHtcbiAgICBASW5wdXQoKSBwb3N0czogQXJyYXk8YW55PiA9IFtdO1xuICAgIF9wb3N0cyA6IEFycmF5PGFueT4gPSBbXTtcbiAgICBASW5wdXQoKSBhdHRhY2htZW50czogQXJyYXk8YW55PiA9IFtdO1xuICAgIEBJbnB1dCgpIGlzX3Nob3dsb2dzOiBib29sZWFuO1xuICAgIEBJbnB1dCgpIGlzX2ZpcnN0OiBib29sZWFuOyBcblxuICAgICBcbiAgICBjb25zdHJ1Y3Rvcihwcml2YXRlIGNvbmZpZzogQ29uZmlnKSB7IFxuICAgIH0gIFxuXG4gICAgZmlsdGVyKClcbiAgICB7XG4gICAgICAgIGxldCBwb3N0cyA9IFtdO1xuICAgICAgICBpZiAoIXRoaXMuaXNfc2hvd2xvZ3MpXG4gICAgICAgICAgICBwb3N0cyA9ICB0aGlzLnBvc3RzLmZpbHRlcihpdGVtID0+ICEhfltcIkluaXRpYWwgUG9zdFwiLCBcIlJlc3BvbnNlXCIsIFwiQ2xvc2VkXCIsIFwiUmVPcGVuZWRcIl0uaW5kZXhPZihpdGVtLmxvZ190eXBlKSk7XG4gICAgICAgIGVsc2VcbiAgICAgICAgICAgIHBvc3RzID0gdGhpcy5wb3N0cztcbiAgICAgICAgdGhpcy5fcG9zdHMgPSB0aGlzLmlzX2ZpcnN0ID8gW3Bvc3RzWzBdXSA6IHBvc3RzLnNsaWNlKDEpO1xuICAgIH1cblxuICAgIG5nT25Jbml0KCkge1xuICAgICAgdGhpcy5maWx0ZXIoKTtcbiAgICB9XG5cbiAgICBuZ09uQ2hhbmdlcyhldmVudCkge1xuICAgICAgICBpZiAoXCJpc19zaG93bG9nc1wiIGluIGV2ZW50KVxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIHRoaXMuZmlsdGVyKCk7XG4gICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgfSBcbiAgICAgICAgaWYgKFwicG9zdHNcIiBpbiBldmVudCkgeyAgICAgICAgXG4gICAgICAgICAgICAgaWYgKFwicG9zdHNcIiBpbiBldmVudCAgJiYgKGV2ZW50LnBvc3RzLmlzRmlyc3RDaGFuZ2UoKSB8fCAoZXZlbnQucG9zdHMuY3VycmVudFZhbHVlWzBdIHx8IHt9KS5pZCA9PSAoZXZlbnQucG9zdHMucHJldmlvdXNWYWx1ZVswXSB8fCB7fSkuaWQpKVxuICAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICAgdGhpcy5maWx0ZXIoKTtcbiAgICAgICAgICB9XG5cbiAgICAgICAgLy9pZiAoXCJhdHRhY2htZW50c1wiIGluIGV2ZW50ICYmICFldmVudC5wb3N0cy5pc0ZpcnN0Q2hhbmdlKCkgJiYgdGhpcy5wb3N0cy5sZW5ndGggPT0gMSAmJiAoZXZlbnQuYXR0YWNobWVudHMuY3VycmVudFZhbHVlIHx8IFtdKS5sZW5ndGggPiAoZXZlbnQuYXR0YWNobWVudHMucHJldmlvdXNWYWx1ZSB8fCBbXSkubGVuZ3RoKVxuICAgICAgICAvLyAgIHRoaXMuZmlsdGVyKCk7IFxuICAgIH1cblxuICBcbiAgICBzZXREYXRlKGRhdGUsIHNob3dtb250aD8sIGlzdGltZT8pIHtcbiAgICAgICAgIGlmIChkYXRlKXtcbiAgICAgICAgLy92YXIgdGltZV9vZmZzZXQgPSB0aGlzLmNvbmZpZy5nZXRDdXJyZW50KFwidGltZXpvbmVfb2Zmc2V0XCIpOyAgICAgXG4gICAgICAgIGRhdGUgPSBuZXcgRGF0ZShkYXRlLnN1YnN0cmluZygwLDIzKStcIlpcIik7XG4gICAgICAgIC8vZGF0ZSA9IG5ldyBEYXRlKGRhdGUuc2V0VGltZShkYXRlLmdldFRpbWUoKSArIHRpbWVfb2Zmc2V0KjYwKjYwKjEwMDApKS50b0pTT04oKTtcbiAgICAgICAgcmV0dXJuIGdldERhdGVUaW1lKGRhdGUsIHNob3dtb250aCwgaXN0aW1lKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gbnVsbDtcbiAgICAgICB9XG5cbiAgICAvKmdldCBwb3N0cygpXG4gICAge1xuICAgICAgICByZXR1cm4gdGhpcy5wb3N0cy5maWx0ZXIoaXRlbSA9PiBpdGVtLmlkLmluZGV4T2YoYXJnc1swXSkgIT09IC0xKTtcbiAgICB9XG4gICAgKi9cbn1cbiIsImltcG9ydCB7SU9OSUNfRElSRUNUSVZFUywgTmF2LCBOYXZQYXJhbXN9IGZyb20gJ2lvbmljLWFuZ3VsYXInO1xuaW1wb3J0IHtDb21wb25lbnQsIElucHV0LCBPbkNoYW5nZXN9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHtRdWV1ZVRpY2tldHNQYWdlfSBmcm9tICcuLi8uLi9wYWdlcy9xdWV1ZS10aWNrZXRzL3F1ZXVlLXRpY2tldHMnO1xuaW1wb3J0IHtNb3JlUGlwZX0gZnJvbSAnLi4vLi4vcGlwZXMvcGlwZXMnO1xuXG5AQ29tcG9uZW50KHtcbiAgICBzZWxlY3RvcjogJ3F1ZXVlcy1saXN0JyxcbiAgICB0ZW1wbGF0ZVVybDogJ2J1aWxkL2NvbXBvbmVudHMvcXVldWVzLWxpc3QvcXVldWVzLWxpc3QuaHRtbCcsXG5kaXJlY3RpdmVzOiBbSU9OSUNfRElSRUNUSVZFU10sXG5waXBlczogW01vcmVQaXBlXSxcbn0pXG5cbmV4cG9ydCBjbGFzcyBRdWV1ZXNMaXN0Q29tcG9uZW50IHtcbiAgICBASW5wdXQoKSBxdWV1ZXM6IGFueTtcbiAgICBASW5wdXQoKSBzaW1wbGU6IGJvb2xlYW47XG4gICAgaXNfZW1wdHk6IGJvb2xlYW47XG5cbiAgICAgY29uc3RydWN0b3IocHJpdmF0ZSBuYXY6IE5hdikge1xuICAgICAgICAgdGhpcy5pc19lbXB0eSA9IGZhbHNlO1xufVxuICAgICBcbiAgICAgbmdPbkNoYW5nZXMoZXZlbnQpIHtcbiAgICAgICAgIGlmICghdGhpcy5zaW1wbGUpXG4gICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgaWYgKFwicXVldWVzXCIgaW4gZXZlbnQgKSB7XG4gICAgICAgICAgICAgLy9UT0RPOiBhZGQgbG9hZGluZyBldmVudFxuICAgICAgICAgICAgIGlmIChldmVudC5xdWV1ZXMuaXNGaXJzdENoYW5nZSgpICYmIGV2ZW50LnF1ZXVlcy5jdXJyZW50VmFsdWUgIT09IG51bGwpXG4gICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgICB0aGlzLmlzX2VtcHR5ID0gIWV2ZW50LnF1ZXVlcy5jdXJyZW50VmFsdWUgfHwgZXZlbnQucXVldWVzLmN1cnJlbnRWYWx1ZS5sZW5ndGggPT0gMDtcbiAgICAgICAgIH1cbiAgICAgfVxuICAgIFxuICAgICBnb1RvUXVldWVUaWNrZXRzUGFnZShxdWV1ZSkge1xuICAgICAgICAgdGhpcy5uYXYucHVzaChRdWV1ZVRpY2tldHNQYWdlLCBxdWV1ZSk7XG4gICAgIH1cbiAgICAgXG59XG4iLCJpbXBvcnQge0lPTklDX0RJUkVDVElWRVMsIE5hdiwgTW9kYWwsIEFsZXJ0LCBDb25maWcsIExvYWRpbmd9IGZyb20gJ2lvbmljLWFuZ3VsYXInO1xuaW1wb3J0IHtBcGlEYXRhfSBmcm9tICcuLi8uLi9wcm92aWRlcnMvYXBpLWRhdGEnO1xuaW1wb3J0IHtnZXRGdWxsTmFtZX0gZnJvbSAnLi4vLi4vZGlyZWN0aXZlcy9oZWxwZXJzJztcbmltcG9ydCB7VGlja2V0UHJvdmlkZXJ9IGZyb20gJy4uLy4uL3Byb3ZpZGVycy9wcm92aWRlcnMnO1xuaW1wb3J0IHtDb21wb25lbnQsIElucHV0LCBPdXRwdXQsIEV2ZW50RW1pdHRlciwgT25Jbml0LCBPbkNoYW5nZXN9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHtCYXNpY1NlbGVjdE1vZGFsLCBJbmZpbml0eVNlbGVjdE1vZGFsLCBBamF4U2VsZWN0TW9kYWx9IGZyb20gJy4uLy4uL3BhZ2VzL21vZGFscy9tb2RhbHMnO1xuXG5jb25zdCBhbGVydExpbWl0ID0gNTtcblxuQENvbXBvbmVudCh7XG4gICAgc2VsZWN0b3I6ICdzZWxlY3QtbGlzdCcsXG4gICAgdGVtcGxhdGVVcmw6ICdidWlsZC9jb21wb25lbnRzL3NlbGVjdC1saXN0L3NlbGVjdC1saXN0Lmh0bWwnLFxuICAgIGRpcmVjdGl2ZXM6IFtJT05JQ19ESVJFQ1RJVkVTXVxufSlcbmV4cG9ydCBjbGFzcyBTZWxlY3RMaXN0Q29tcG9uZW50IHtcbiAgICBASW5wdXQoKSBsaXN0OiBhbnk7XG4gICAgQElucHV0KCkgYWNjb3VudF9pZDogYW55O1xuICAgIEBJbnB1dCgpIGNsYXNzX2lkOiBhbnk7XG4gICAgQElucHV0KCkgaXNidXR0b246IGJvb2xlYW47XG4gICAgQElucHV0KCkgaXNfZW5hYmxlZDogYm9vbGVhbiA9IHRydWU7XG4gICAgQElucHV0KCkgaXNfb25jZTogYm9vbGVhbiA9IGZhbHNlO1xuICAgIC8vQElucHV0KCkgZGVmYXVsdDogc3RyaW5nID0gXCJcIjtcbiAgICBASW5wdXQoKSBpc19tZTogYm9vbGVhbjtcbiAgICBASW5wdXQoKSBwcmVsb2FkOiBib29sZWFuO1xuICAgIEBJbnB1dCgpIGFqYXg6IGJvb2xlYW47XG4gICAgQE91dHB1dCgpIHB1YmxpYyBvbkNoYW5nZWQ6IEV2ZW50RW1pdHRlcjxhbnk+ID0gbmV3IEV2ZW50RW1pdHRlcihmYWxzZSk7XG4gICAgc2VsZWN0ZWQ6IE9iamVjdCA9IHt9O1xuICAgIGluaXQ6IGJvb2xlYW4gPSB0cnVlO1xuICAgIGNvbnRyYWN0b3JzOiBudW1iZXIgPSAwO1xuICAgIHVybDogc3RyaW5nO1xuICAgIG5hbWU6IHN0cmluZyA9IFwiXCI7XG5cbiAgICBjb25zdHJ1Y3Rvcihwcml2YXRlIG5hdjogTmF2LCBwcml2YXRlIHRpY2tldFByb3ZpZGVyOiBUaWNrZXRQcm92aWRlciwgcHJpdmF0ZSBhcGlEYXRhOiBBcGlEYXRhLCBwcml2YXRlIGNvbmZpZzogQ29uZmlnKSB7XG4gICAgICAgIHRoaXMubGlzdCA9IHt9O1xuICAgIH0gIFxuXG5cbiBcbiAgICBuZ09uQ2hhbmdlcyhldmVudCkge1xuICAgICAgICBcbiAgICAgICAgaWYgKFwiYWNjb3VudF9pZFwiIGluIGV2ZW50ICkge1xuICAgICAgICAgICAgaWYgKHRoaXMubGlzdC5uYW1lLnRvTG93ZXJDYXNlKCkgPT0gXCJjb250cmFjdFwiICYmICFldmVudC5hY2NvdW50X2lkLmlzRmlyc3RDaGFuZ2UoKSAmJiAhdGhpcy5saXN0LmhpZGRlbikge1xuICAgICAgICAgICAgICAgIHRoaXMubG9hZERhdGEoZmFsc2UpO1xuICAgICAgICAgICAgfSAgICBcbiAgICAgICAgICAgIGVsc2UgaWYgKHRoaXMubGlzdC5uYW1lLnRvTG93ZXJDYXNlKCkgPT0gXCJ0ZWNoXCIgJiYgIWV2ZW50LmFjY291bnRfaWQuaXNGaXJzdENoYW5nZSgpICYmICF0aGlzLmxpc3QuaGlkZGVuKXtcbiAgICAgICAgICAgICAgICBpZiAgKHRoaXMubGlzdC5pdGVtcy5sZW5ndGgpe1xuICAgICAgICAgICAgICAgICAgICB0aGlzLmxpc3QuaXRlbXMuc3BsaWNlKDAsdGhpcy5jb250cmFjdG9ycyk7IFxuICAgICAgICAgICAgICAgICAgICB0aGlzLmdldENvbnRyYWN0b3IodGhpcy5hY2NvdW50X2lkKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgaWYgKFwiY2xhc3NfaWRcIiBpbiBldmVudCApIHtcbiAgICAgICAgICAgIGlmICh0aGlzLmxpc3QubmFtZS50b0xvd2VyQ2FzZSgpID09IFwidG9kb3NcIiAmJiAhZXZlbnQuY2xhc3NfaWQuaXNGaXJzdENoYW5nZSgpICYmICF0aGlzLmxpc3QuaGlkZGVuKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5sb2FkRGF0YShmYWxzZSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0gICAgICAgXG4gICAgICAgIC8qaWYgKFwibGlzdFwiIGluIGV2ZW50KSB7XG4gICAgICAgICAgICB0aGlzLmlzX2VuYWJsZWQgPSAhdGhpcy5saXN0LmlzX2Rpc2FibGVkO1xuICAgICAgICAgICAgY29uc29sZS5sb2codGhpcy51cmwpO1xuICAgICAgICAgICAgaWYgKCFldmVudC5saXN0LmlzRmlyc3RDaGFuZ2UoKSAmJiBldmVudC5saXN0LmN1cnJlbnRWYWx1ZS51cmwgIT09IHRoaXMudXJsKSB7XG4gICAgICAgICAgICAgICAgY29uc29sZS5sb2codGhpcy5saXN0Lml0ZW1zKVxuICAgICAgICAgICAgICAgIC8vdGhpcy5saXN0LmhpZGRlbiA9IHRydWU7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBcbiAgICAgICAgfSovXG4gICAgfVxuXG4gICAgbmdPbkluaXQoKSB7XG4gICAgICAgIGxldCBsaXN0bmFtZSA9IHRoaXMubGlzdC5uYW1lLnRvTG93ZXJDYXNlKCk7XG4gICAgICAgIGlmICgobGlzdG5hbWUgPT0gXCJwcm9qZWN0XCIgJiYgIXRoaXMuY29uZmlnLmN1cnJlbnQuaXNfcHJvamVjdF90cmFja2luZykgfHxcbiAgICAgICAgICAgIChsaXN0bmFtZSA9PSBcInRvZG9zXCIgJiYgIXRoaXMuY29uZmlnLmN1cnJlbnQuaXNfdG9kb3MpIHx8XG4gICAgICAgICAgICAobGlzdG5hbWUgPT0gXCJsb2NhdGlvblwiICYmICF0aGlzLmNvbmZpZy5jdXJyZW50LmlzX2xvY2F0aW9uX3RyYWNraW5nKSB8fFxuICAgICAgICAgICAgKChsaXN0bmFtZSA9PSBcImNvbnRyYWN0XCIgfHwgbGlzdG5hbWUgPT0gXCJwcmVwYWlkIHBhY2tcIikgJiYgIXRoaXMuY29uZmlnLmN1cnJlbnQuaXNfaW52b2ljZSkgfHxcbiAgICAgICAgICAgIChsaXN0bmFtZSA9PSBcInByaW9yaXR5XCIgJiYgIXRoaXMuY29uZmlnLmN1cnJlbnQuaXNfcHJpb3JpdGllc19nZW5lcmFsKSB8fFxuICAgICAgICAgICAgKGxpc3RuYW1lID09IFwiYWNjb3VudFwiICYmICF0aGlzLmNvbmZpZy5jdXJyZW50LmlzX2FjY291bnRfbWFuYWdlcikgfHxcbiAgICAgICAgICAgIChsaXN0bmFtZSA9PSBcImxldmVsXCIgJiYgKCF0aGlzLmNvbmZpZy5jdXJyZW50LmlzX3RpY2tldF9sZXZlbHMgfHwgKHRoaXMuY29uZmlnLmN1cnJlbnQuaXNfcmVzdHJpY3RfdGVjaF9lc2NhbGF0ZSAmJiAhdGhpcy5jb25maWcuY3VycmVudC51c2VyLmlzX2FkbWluKSkpIHx8XG4gICAgICAgICAgICAoKGxpc3RuYW1lID09IFwicmVzb2x1dGlvblwiIHx8IGxpc3RuYW1lID09IFwiY2F0ZWdvcnlcIikgJiYgIXRoaXMuY29uZmlnLmN1cnJlbnQuaXNfcmVzb2x1dGlvbl90cmFja2luZykpIFxuICAgICAgICB7XG4gICAgICAgICAgICB0aGlzLmxpc3QuaGlkZGVuID0gdHJ1ZTtcbiAgICAgICAgfVxuXG4gICAgICAgIHRoaXMuaXNfZW5hYmxlZCA9ICF0aGlzLmxpc3QuaXNfZGlzYWJsZWQ7XG4gICAgICAgIHRoaXMuaXNfb25jZSA9IHRoaXMubGlzdC5pc19vbmNlO1xuXG4gICAgICAgIGlmICggbGlzdG5hbWUgPT0gXCJ0ZWNoXCIgfHwgbGlzdG5hbWUgPT0gXCJ1c2VyXCIpXG4gICAgICAgICAgICB0aGlzLmxpc3QuZGlzcGxheW5hbWUgPSB0aGlzLm5hbWUgPSAodGhpcy5jb25maWcuY3VycmVudC5uYW1lc1tsaXN0bmFtZV0gfHwge30pLmE7XG4gICAgICAgIGVsc2VcbiAgICAgICAgICAgIHRoaXMubGlzdC5kaXNwbGF5bmFtZSA9IHRoaXMubmFtZSA9ICh0aGlzLmNvbmZpZy5jdXJyZW50Lm5hbWVzW2xpc3RuYW1lXSB8fCB7fSkucyB8fCB0aGlzLmxpc3QubmFtZTtcblxuICAgICAgICBpZiAodGhpcy5saXN0LmhpZGRlbilcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgXG4gICAgICAgIGlmICh0aGlzLmxpc3QudXJsKVxuICAgICAgICB7XG4gICAgICAgICAgICB0aGlzLnVybCA9IHRoaXMubGlzdC51cmw7XG4gICAgICAgICAgICAgaWYgKHRoaXMucHJlbG9hZClcbiAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgIHRoaXMubG9hZERhdGEoZmFsc2UpO1xuICAgICAgICAgICAgIH1cblxuICAgICAgICAgfVxuICAgICB9XG5cbiAgICAgbWUoKVxuICAgICB7XG4gICAgICAgIGxldCBoZSA9IHRoaXMuY29uZmlnLmdldEN1cnJlbnQoXCJ1c2VyXCIpO1xuICAgICAgICBsZXQgdmFsdWUgPSB7XG4gICAgICAgICAgICBpZDogaGUudXNlcl9pZCxcbiAgICAgICAgICAgIG5hbWU6IGdldEZ1bGxOYW1lKGhlLmZpcnN0bmFtZSwgaGUubGFzdG5hbWUsIGhlLmVtYWlsKVxuICAgICAgICB9O1xuICAgICAgICB0aGlzLmVtaXRfY2hhbmdlZCh2YWx1ZSk7XG4gICAgIH1cblxuICAgICBvcGVuKClcbiAgICAge1xuICAgICAgICB0aGlzLmlzX2VuYWJsZWQgPSAhdGhpcy5saXN0LmlzX2Rpc2FibGVkO1xuICAgICAgICBpZiAodGhpcy5pc19lbmFibGVkKXtcbiAgICAgICAgIHRoaXMubG9hZERhdGEodHJ1ZSk7XG4gICAgICAgIH1cbiAgICAgfVxuXG4gICAgIGxvYWREYXRhIChzaG93KVxuICAgICB7ICAgIFxuICAgICAgICAgaWYgKHRoaXMudXJsICE9IHRoaXMubGlzdC51cmwgfHwgIXRoaXMubGlzdC5pdGVtcyB8fCB0aGlzLmxpc3QuaXRlbXMubGVuZ3RoID09IDApe1xuICAgICAgICAgICAgbGV0IGxvYWRpbmcgPSBudWxsO1xuICAgICAgICAgICAgIGlmICh0aGlzLmxpc3QudXJsKSB7XG4gICAgICAgICAgICAgICAgIGlmIChzaG93KXtcbiAgICAgICAgICAgICAgICAgICAgIGxvYWRpbmcgPSBMb2FkaW5nLmNyZWF0ZSh7XG4gICAgICAgICAgICAgICAgICAgICBjb250ZW50OiBcIlBsZWFzZSB3YWl0Li4uXCIsXG4gICAgICAgICAgICAgICAgICAgICBkdXJhdGlvbjogMjAwMCxcbiAgICAgICAgICAgICAgICAgICAgIGRpc21pc3NPblBhZ2VDaGFuZ2U6IHRydWVcbiAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgIHRoaXMubmF2LnByZXNlbnQobG9hZGluZyk7XG4gICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgIHRoaXMuYXBpRGF0YS5nZXQodGhpcy5saXN0LnVybCkuc3Vic2NyaWJlKFxuICAgICAgICAgICAgICAgICAgICAgZGF0YSA9PiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgaWYodGhpcy5uYW1lID09XCJUZWNoXCIpXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuc29ydENoZWFrSW4oZGF0YSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgZWxzZVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLmxpc3QuaXRlbXMgPSBkYXRhO1xuICAgICAgICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChsb2FkaW5nKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxvYWRpbmcuZGlzbWlzcygpO1xuICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLnByb2NlZWRfbGlzdChzaG93KTtcbiAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLnVybCA9IHRoaXMubGlzdC51cmw7XG4gICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHRoaXMubGlzdC5uYW1lLnRvTG93ZXJDYXNlKCkgPT0gXCJjb250cmFjdFwiICYmICF0aGlzLmxpc3QuaXNfZGVmYXVsdCl7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuZGVmYXVsdENvbnRyYWN0KCk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgIGlmICh0aGlzLmxpc3QubmFtZS50b0xvd2VyQ2FzZSgpID09IFwidGVjaFwiKVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLmdldENvbnRyYWN0b3IodGhpcy5hY2NvdW50X2lkKTtcbiAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgICBlcnJvciA9PiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGxvYWRpbmcpIGxvYWRpbmcuZGlzbWlzcygpO1xuICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuZXJyb3IoXCJDYW5ub3QgZ2V0IFwiICsgdGhpcy5uYW1lICsgXCIgbGlzdCEgRXJyb3I6IFwiICsgZXJyb3IpO1xuICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKGVycm9yIHx8ICdTZXJ2ZXIgZXJyb3InKTtcbiAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgKTtcbiAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgIHRoaXMubGlzdC5oaWRkZW4gPSB0cnVlO1xuICAgICAgICAgICAgICAgICB0aGlzLmVycm9yKHRoaXMubmFtZSArICcgbGlzdCBpcyBlbXB0eSEnKTtcbiAgICAgICAgICAgICB9XG4gICAgIH1cbiAgICAgZWxzZVxuICAgICAgICAgdGhpcy5wcm9jZWVkX2xpc3Qoc2hvdyk7XG4gfVxuXG4gZGVmYXVsdENvbnRyYWN0KCl7XG4gICAgIHRoaXMubGlzdC5pdGVtcy5mb3JFYWNoKGl0ZW0gPT4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGl0ZW0uZGVmYXVsdCl7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5saXN0LnNlbGVjdGVkID0gaXRlbS5pZDtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLmxpc3QudmFsdWUgPSBpdGVtLm5hbWU7IFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KTtcbiB9XG5cbiBzb3J0Q2hlYWtJbihkYXRhKXtcbiAgICB2YXIgcmVzdWx0cyA9IFtdO1xuICAgIGlmICh0aGlzLmNvbmZpZy5jdXJyZW50LmlzX3RlY2hfY2hlY2tpbiAmJiB0aGlzLmNvbmZpZy5jdXJyZW50LmlzX3Jlc3RyaWN0X3RyYW5zZmVyX3RvX2luKXtcbiAgICAgICAgZGF0YS5mb3JFYWNoKGl0ZW0gPT4ge1xuICAgICAgICAgICAgaWYgKGl0ZW0uY2hlY2tpbl9zdGF0dXMgPT0gXCJJTlwiKVxuICAgICAgICAgICAgICAgIHJlc3VsdHMucHVzaChpdGVtKTtcbiAgICAgICAgfSk7XG4gICAgICAgIHRoaXMubGlzdC5pdGVtcyA9IHJlc3VsdHM7XG4gICAgfVxuICAgIGVsc2VcbiAgICAgICAgdGhpcy5saXN0Lml0ZW1zID0gZGF0YTtcbiB9XG5cbiBlcnJvcihtZXNzYWdlKVxuIHtcbiAgICAgdGhpcy5uYXYuYWxlcnQobWVzc2FnZSwgdHJ1ZSk7XG4gfVxuXG4gcHJvY2VlZF9saXN0KHNob3cpXG4ge1xuICAgICBpZiAoIXRoaXMubGlzdC5pdGVtcyB8fCB0aGlzLmxpc3QuaXRlbXMubGVuZ3RoID09IDApXG4gICAgIHsgICAgXG4gICAgICAgICB0aGlzLmxpc3QudmFsdWUgPSB0aGlzLmxpc3QuZGVmYXVsdCB8fCBcIkRlZmF1bHQgKG5vdGhpbmcgdG8gc2VsZWN0KVwiO1xuICAgICAgICAgdGhpcy5vbkNoYW5nZWQuZW1pdCh7dHlwZTogdGhpcy5uYW1lLnNwbGl0KCcgJykuam9pbignJykudG9Mb3dlckNhc2UoKSwgaWQ6IDB9KTtcbiAgICAgICAgIC8vdGhpcy5vcGVuID0gZnVuY3Rpb24geyByZXR1cm4gZmFsc2U7IH07XG4gICAgICAgICAvL3RoaXMuZXJyb3IodGhpcy5saXN0Lm5hbWUgKyAnIGxpc3QgaXMgZW1wdHkhJyk7XG4gICAgICAgICByZXR1cm47XG4gICAgIH1cbiAgICAgaWYgKHNob3cpIHtcbiAgICAgaWYgKCF0aGlzLmxpc3QuaXRlbXNbMF0ubmFtZSl7XG4gICAgICAgICB2YXIgcmVzdWx0cyA9IFtdO1xuICAgICAgICAgdGhpcy5saXN0Lml0ZW1zLmZvckVhY2goaXRlbSA9PiB7XG4gICAgICAgICAgICAgbGV0IG5hbWU7XG4gICAgICAgICAgICAgbGV0IGlkID0gaXRlbS5pZDtcbiAgICAgICAgICAgICAgICAgLy9pZiB1c2VycyBvciB0ZWNoc1xuICAgICAgICAgICAgICAgICBpZiAoaXRlbS5lbWFpbClcbiAgICAgICAgICAgICAgICAgICAgIG5hbWUgPSBnZXRGdWxsTmFtZShpdGVtLmZpcnN0bmFtZSwgaXRlbS5sYXN0bmFtZSwgaXRlbS5lbWFpbCwgdGhpcy5pc2J1dHRvbiA/IFwiXCIgOiBcIiBcIik7XG4gICAgICAgICAgICAgICAgIC8vaWYgdGlja2V0c1xuICAgICAgICAgICAgICAgICBlbHNlIGlmIChpdGVtLmZ1bGxuYW1lKVxuICAgICAgICAgICAgICAgICAgICAgbmFtZSA9IGl0ZW0uZnVsbG5hbWU7XG4gICAgICAgICAgICAgICAgIGVsc2UgaWYgKGl0ZW0ubnVtYmVyKVxuICAgICAgICAgICAgICAgICAgICAgbmFtZSA9IGAjJHtpdGVtLm51bWJlcn06ICR7aXRlbS5zdWJqZWN0fWA7XG4gICAgICAgICAgICAgICAgIGVsc2UgaWYgKGl0ZW0ucHJlcGFpZF9wYWNrX2lkKSB7XG4gICAgICAgICAgICAgICAgICAgICBuYW1lID0gaXRlbS5wcmVwYWlkX3BhY2tfbmFtZTtcbiAgICAgICAgICAgICAgICAgICAgIGlkID0gaXRlbS5wcmVwYWlkX3BhY2tfaWQ7XG4gICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgICByZXN1bHRzLnB1c2goe2lkOiBpZCwgbmFtZTogbmFtZSwgZW1haWw6IGl0ZW0uZW1haWx9KTtcbiAgICAgICAgICAgICAgICAgXG5cbiAgICAgICAgICAgICB9KTtcbiAgICAgICAgIHRoaXMubGlzdC5pdGVtcyA9IHJlc3VsdHM7XG4gICAgIH1cblxuXG5cbiAgICAgLy9pZiAodGhpcy5saXN0Lml0ZW1zLmxlbmd0aCA8PSBhbGVydExpbWl0KVxuICAgICAvLyAgICB0aGlzLm9wZW5SYWRpbygpO1xuICAgICAvL2Vsc2VcbiAgICAgICAgIHRoaXMub3Blbk1vZGFsKCk7XG4gICAgIH1cbiB9XG5cbiBlbWl0X2NoYW5nZWQodmFsdWUpe1xuICAgICBpZiAodmFsdWUgJiYgdGhpcy5pc19vbmNlKVxuICAgICAgICB0aGlzLmlzX2VuYWJsZWQgPSBmYWxzZTtcbiAgICAgdGhpcy5saXN0LnZhbHVlID0gdmFsdWUubmFtZTtcbiAgICAgdmFsdWUudHlwZSA9IHRoaXMubGlzdC5uYW1lLnNwbGl0KCcgJykuam9pbignJykudG9Mb3dlckNhc2UoKTtcbiAgICAgdGhpcy5vbkNoYW5nZWQuZW1pdCh2YWx1ZSk7XG4gfVxuXG4gb3BlblJhZGlvKCkgeyAgICAgICAgIFxuICAgICBsZXQgdGl0bGU9dGhpcy5uYW1lO1xuXG4gICAgIGxldCBhbGVydCA9IEFsZXJ0LmNyZWF0ZSh7XG4gICAgICAgICB0aXRsZTogJ0Nob29zZSAnK3RpdGxlLFxuICAgICAgICAgYnV0dG9uczogW1xuICAgICAgICAge1xuICAgICAgICAgICAgIHRleHQ6ICdDYW5jZWwnLFxuICAgICAgICAgICAgIHJvbGU6ICdjYW5jZWwnLFxuICAgICAgICAgICAgIGhhbmRsZXI6ICgpID0+IHtcbiAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coJ0NhbmNlbCBjbGlja2VkJyk7XG4gICAgICAgICAgICAgfVxuICAgICAgICAgfSxcbiAgICAgICAgIHtcbiAgICAgICAgICAgICB0ZXh0OiAnT0snLFxuICAgICAgICAgICAgIGhhbmRsZXI6IGRhdGEgPT4ge1xuICAgICAgICAgICAgICAgICBpZihkYXRhKXtcbiAgICAgICAgICAgICAgICAgICAgIHRoaXMuc2VsZWN0ZWQgPSBkYXRhO1xuICAgICAgICAgICAgICAgICAgICAgdGhpcy5lbWl0X2NoYW5nZWQoZGF0YSk7XG4gICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICB9XG4gICAgICAgICB9XG4gICAgICAgICBdXG4gICAgIH0pO1xuXG4gICAgIHRoaXMubGlzdC5pdGVtcy5mb3JFYWNoKGl0ZW0gPT4ge1xuICAgICAgICAgYWxlcnQuYWRkSW5wdXQoe1xuICAgICAgICAgICAgIHR5cGU6ICdyYWRpbycsXG4gICAgICAgICAgICAgbGFiZWw6IGl0ZW0ubmFtZSxcbiAgICAgICAgICAgICB2YWx1ZTogaXRlbSxcbiAgICAgICAgICAgICAgICAgLy9jaGVja2VkOiB0aGlzLmxpc3Quc2VsZWN0ZWQgPT09IGl0ZW0uaWRcbiAgICAgICAgICAgICB9KTtcbiAgICAgfSk7XG5cbiAgICAgdGhpcy5uYXYucHJlc2VudChhbGVydCk7XG4gICAgICAgICAvLy50aGVuKCgpID0+IHsgdGhpcy50ZXN0UmFkaW9PcGVuID0gdHJ1ZTt9KTtcbiAgICAgfVxuXG4gICAgIGdldENvbnRyYWN0b3IoYWNjb3VudF9pZClcbiAgIHtcbiAgICAgdGhpcy50aWNrZXRQcm92aWRlci5nZXRDb250cmFjdG9yKGFjY291bnRfaWQpLnN1YnNjcmliZShcbiAgICAgICBkYXRhID0+IHtcbiAgICAgICAgIHRoaXMuY29udHJhY3RvcnM9ZGF0YS5sZW5ndGg7XG4gICAgICAgICBpZiAoZGF0YSl7XG4gICAgICAgICAgICAgZGF0YS5mb3JFYWNoKGl0ZW0gPT4ge1xuICAgICAgICAgICAgICAgICBpdGVtLmxhc3RuYW1lID0gXCJDb250cmFjdG9yOiBcIiArIGl0ZW0ubGFzdG5hbWU7XG4gICAgICAgICAgICAgICAgIHRoaXMubGlzdC5pdGVtcy5zcGxpY2UoMCwwLGl0ZW0pO1xuICAgICAgICAgICAgIH0pO1xuICAgICAgICAgfVxuICAgICAgIH0sXG4gICAgICAgZXJyb3IgPT4ge1xuICAgICAgICAgY29uc29sZS5sb2coZXJyb3IgfHwgJ1NlcnZlciBlcnJvcicpO1xuICAgICAgIH1cbiAgICAgICApO1xuICAgfVxuXG4gICAgIG9wZW5Nb2RhbCgpIHtcbiAgICAgICAgIC8vVE9ETyBjaGVjayBjb3VudHM6IGlzIG1vcmUgdGhhbiAxMDAgLSBkbyBhamF4XG4gICAgICAgICB0aGlzLmxpc3QuaXNidXR0b24gPSB0aGlzLmlzYnV0dG9uO1xuICAgICAgICAgbGV0IGxlbiA9IHRoaXMubGlzdC5pdGVtcy5sZW5ndGggfHwgMDtcbiAgICAgICAgIGxldCBtb2RhbCA9IGxlbiA+PSAyNSAmJiBsZW4lMjUgPT0gMCAgPyBJbmZpbml0eVNlbGVjdE1vZGFsIDogQmFzaWNTZWxlY3RNb2RhbDtcbiAgICAgICAgIGxldCBteU1vZGFsID0gTW9kYWwuY3JlYXRlKG1vZGFsLCB0aGlzLmxpc3QpO1xuICAgICAgICAgbXlNb2RhbC5vbkRpc21pc3MoZGF0YSA9PiB7XG4gICAgICAgICAgICAgaWYgKGRhdGEubmFtZSkge1xuICAgICAgICAgICAgICAgICB0aGlzLnNlbGVjdGVkID0gZGF0YTtcbiAgICAgICAgICAgICAgICAgdGhpcy5lbWl0X2NoYW5nZWQoZGF0YSk7XG4gICAgICAgICAgICAgfVxuICAgICAgICAgfSk7XG4gICAgICAgICB0aGlzLm5hdi5wcmVzZW50KG15TW9kYWwpO1xuICAgICB9XG5cbiB9XG4iLCIvL2luIGNhc2Ugb24gdXNpbmcgaW9uaWMgXCJpb24tY2FyZFwiXG5pbXBvcnQge0lPTklDX0RJUkVDVElWRVMsIE5hdiwgTmF2UGFyYW1zLCBDb25maWd9IGZyb20gJ2lvbmljLWFuZ3VsYXInO1xuaW1wb3J0IHtDb21wb25lbnQsIElucHV0LCBPbkNoYW5nZXN9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHtUZWNoVGlja2V0c1BhZ2V9IGZyb20gJy4uLy4uL3BhZ2VzL3RlY2gtdGlja2V0cy90ZWNoLXRpY2tldHMnO1xuaW1wb3J0IHtNb3JlUGlwZX0gZnJvbSAnLi4vLi4vcGlwZXMvcGlwZXMnO1xuXG5AQ29tcG9uZW50KHtcbiAgICBzZWxlY3RvcjogJ3RlY2hzLWxpc3QnLFxuICAgIHRlbXBsYXRlVXJsOiAnYnVpbGQvY29tcG9uZW50cy90ZWNocy1saXN0L3RlY2hzLWxpc3QuaHRtbCcsXG5kaXJlY3RpdmVzOiBbSU9OSUNfRElSRUNUSVZFU10sXG5waXBlczogW01vcmVQaXBlXSxcbn0pXG5cbmV4cG9ydCBjbGFzcyBUZWNobmljaWFuc0xpc3RDb21wb25lbnQge1xuICAgIEBJbnB1dCgpIHRlY2huaWNpYW5zOiBBcnJheTxhbnk+O1xuICAgIEBJbnB1dCgpIHNpbXBsZTogYm9vbGVhbjtcbiAgICBpc19lbXB0eTogYm9vbGVhbjtcblxuICAgICBjb25zdHJ1Y3Rvcihwcml2YXRlIG5hdjogTmF2LCBwcml2YXRlIGNvbmZpZzogQ29uZmlnKSB7XG4gICAgICAgICB0aGlzLmlzX2VtcHR5ID0gZmFsc2U7XG59XG4gICAgIGl0ZW1UYXBwZWQoZXZlbnQsIGFjY291bnQpIHtcbiAgICAgLy8gICAgYWNjb3VudC5hY2NvdW50X3N0YXRpc3RpY3MudGlja2V0X2NvdW50cy5jbG9zZWQgPSBudWxsO1xuICAgICAvLyAgICB0aGlzLm5hdi5wdXNoKEFjY291bnREZXRhaWxzUGFnZSwgYWNjb3VudCk7XG4gICAgICAgICAgICAgICAgICAgfVxuICAgICBcbiAgICBnb1RvVGVjaFRpY2tldHNQYWdlKHRlY2huaWNpYW4pIHtcbiAgICAgICAgIHRoaXMubmF2LnB1c2goVGVjaFRpY2tldHNQYWdlLCB0ZWNobmljaWFuKTtcbiAgICAgfVxuXG4gICAgIG5nT25DaGFuZ2VzKGV2ZW50KSB7XG4gICAgICAgICBpZiAoIXRoaXMuc2ltcGxlKVxuICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgIGlmIChcInRlY2huaWNpYW5zXCIgaW4gZXZlbnQgKSB7XG4gICAgICAgICAgICAgaWYgKGV2ZW50LnRlY2huaWNpYW5zLmlzRmlyc3RDaGFuZ2UoKSAmJiBldmVudC50ZWNobmljaWFucy5jdXJyZW50VmFsdWUgIT09IG51bGwpXG4gICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgICB0aGlzLmlzX2VtcHR5ID0gIWV2ZW50LnRlY2huaWNpYW5zLmN1cnJlbnRWYWx1ZSB8fCBldmVudC50ZWNobmljaWFucy5jdXJyZW50VmFsdWUubGVuZ3RoID09IDA7XG4gICAgICAgICB9XG4gICAgIH1cbiAgICAgXG59XG4iLCJpbXBvcnQge0lPTklDX0RJUkVDVElWRVMsIE5hdiwgTmF2UGFyYW1zLCBDb25maWcsIE1vZGFsLCBBbGVydH0gZnJvbSAnaW9uaWMtYW5ndWxhcic7XG5pbXBvcnQge0NvbXBvbmVudCwgSW5wdXQsIE9uQ2hhbmdlcywgT25Jbml0fSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7VGlja2V0UHJvdmlkZXJ9IGZyb20gJy4uLy4uL3Byb3ZpZGVycy90aWNrZXQtcHJvdmlkZXInO1xuaW1wb3J0IHtUaWNrZXREZXRhaWxzUGFnZX0gZnJvbSAnLi4vLi4vcGFnZXMvdGlja2V0LWRldGFpbHMvdGlja2V0LWRldGFpbHMnO1xuaW1wb3J0IHtDbG9zZVRpY2tldE1vZGFsfSBmcm9tICcuLi8uLi9wYWdlcy9tb2RhbHMvbW9kYWxzJztcbmltcG9ydCB7aHRtbEVzY2FwZX0gZnJvbSAnLi4vLi4vZGlyZWN0aXZlcy9oZWxwZXJzJztcbmltcG9ydCB7R3JhdmF0YXJQaXBlLCBMaW5lYnJlYWtzUGlwZSwgQ2FwaXRhbGl6ZVBpcGUsIERheXNhZ29QaXBlLCBIdG1sc2FmZVBpcGV9IGZyb20gJy4uLy4uL3BpcGVzL3BpcGVzJztcblxuQENvbXBvbmVudCh7XG4gICAgc2VsZWN0b3I6ICd0aWNrZXRzLWxpc3QnLFxuICAgIHRlbXBsYXRlVXJsOiAnYnVpbGQvY29tcG9uZW50cy90aWNrZXRzLWxpc3QvdGlja2V0cy1saXN0Lmh0bWwnLFxuICAgIGRpcmVjdGl2ZXM6IFtJT05JQ19ESVJFQ1RJVkVTXSxcbiAgICBwaXBlczogW0dyYXZhdGFyUGlwZSwgTGluZWJyZWFrc1BpcGUsIENhcGl0YWxpemVQaXBlLCBEYXlzYWdvUGlwZSwgSHRtbHNhZmVQaXBlXSxcbn0pXG5leHBvcnQgY2xhc3MgVGlja2V0c0xpc3RDb21wb25lbnQge1xuICAgIExJTUlUOiBudW1iZXIgPSA2O1xuXG4gICAgQElucHV0KCkgbW9kZTogQXJyYXk8YW55PjtcbiAgICBASW5wdXQoKSBjb3VudDogbnVtYmVyO1xuICAgIEBJbnB1dCgpIHByZWxvYWQ6IG51bWJlcjtcbiAgICBASW5wdXQoKSBmaWx0ZXI6IHN0cmluZztcbiAgICB0aWNrZXRzOiBhbnk7XG4gICAgY2FjaGVsZW46IG51bWJlcjtcbiAgICBjYWNoZW5hbWU6IHN0cmluZztcbiAgICBwYWdlcjogYW55O1xuICAgIGlzX2VtcHR5OiBib29sZWFuID0gZmFsc2U7XG4gICAgYnVzeTogYm9vbGVhbjtcbiAgICBoZTogYW55O1xuXG4gICAgY29uc3RydWN0b3IocHJpdmF0ZSBuYXY6IE5hdiwgcHJpdmF0ZSBuYXZQYXJhbXM6IE5hdlBhcmFtcywgcHJpdmF0ZSBjb25maWc6IENvbmZpZywgcHJpdmF0ZSB0aWNrZXRQcm92aWRlcjogVGlja2V0UHJvdmlkZXIpIHtcbiAgICAgICAgdGhpcy5wYWdlciA9IHsgcGFnZTogMCwgbGltaXQ6IHRoaXMuTElNSVR9O1xuICAgIH1cblxuICAgIFxuICAgIG5nT25DaGFuZ2VzKGV2ZW50KSB7XG4gICAgICAgIHJldHVybjtcbiAgICAgICAgaWYgKFwiY291bnRcIiBpbiBldmVudCkge1xuICAgICAgICAgICAgIC8vVE9ETzogYWRkIGxvYWRpbmcgZXZlbnRcbiAgICAgICAgICAgICBpZiAoZXZlbnQuY291bnQuaXNGaXJzdENoYW5nZSgpKVxuICAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICAgdGhpcy5jb3VudCA9IGV2ZW50LmNvdW50LmN1cnJlbnRWYWx1ZTtcbiAgICAgICAgICAgICBpZiAodGhpcy5jb3VudCA8IDEpXG4gICAgICAgICAgICAgICAgIHRoaXMuaXNfZW1wdHkgPSB0cnVlO1xuICAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgICB0aGlzLnBhZ2VyLmxpbWl0ID0gdGhpcy5jb3VudDtcbiAgICAgICAgICAgICAgICAgdGhpcy5vbkxvYWQoKTtcbiAgICAgICAgICAgICAgICAgdGhpcy5pc19lbXB0eSA9IGZhbHNlO1xuICAgICAgICAgICAgIH1cbiAgICAgICAgIH1cbiAgICAgfVxuXG4gICAgIG5nT25Jbml0KCkge1xuICAgICAgICAgdGhpcy5oZSA9IHRoaXMuY29uZmlnLmdldEN1cnJlbnQoXCJ1c2VyXCIpO1xuICAgICAgICAgdGhpcy5jYWNoZW5hbWUgPSB0aGlzLm1vZGVbMF0gKyAodGhpcy5tb2RlWzFdIHx8IFwiXCIpICsgKHRoaXMubW9kZVsyXSB8fCBcIlwiKTtcbiAgICAgICAgIHRoaXMuY2FjaGVsZW4gPSAodGhpcy50aWNrZXRQcm92aWRlci5fZGF0YVN0b3JlW3RoaXMuY2FjaGVuYW1lXSB8fCB7fSkubGVuZ3RoO1xuICAgICAgICAgaWYgKHRoaXMubW9kZVswXSA9PSBcImFsbFwiKVxuICAgICAgICAge1xuICAgICAgICAgICAgIHRoaXMucGFnZXIubGltaXQgPSB0aGlzLkxJTUlUID0gMTU7XG4gICAgICAgICB9XG4gICAgICAgICBpZiAodGhpcy5wcmVsb2FkICYmICF0aGlzLmNhY2hlbGVuKSB7XG4gICAgICAgICAgICAgc2V0VGltZW91dCgoKSA9PiB7XG4gICAgICAgICAgICAgICAgIHRoaXMub25Mb2FkKCk7XG4gICAgICAgICAgICAgfSwgdGhpcy5wcmVsb2FkKTtcbiAgICAgICAgIH1cbiAgICAgICAgIGVsc2VcbiAgICAgICAgICAgICB0aGlzLm9uTG9hZCgpO1xuICAgICB9XG5cbiAgICAgb25Mb2FkKClcbiAgICAge1xuICAgICAgICAgaWYgKCF0aGlzLm1vZGUpXG4gICAgICAgICAgICAgcmV0dXJuO1xuXG4gICAgICAgICBsZXQgc3RhdCA9IHRoaXMuY29uZmlnLmdldFN0YXQoXCJ0aWNrZXRzXCIpW3RoaXMubW9kZVswXV07XG4gICAgICAgICAvL2NvbnNvbGUubG9nKHRoaXMuY2FjaGVuYW1lICsgXCIgLSBzdGF0OlwiICsgc3RhdCk7XG4gICAgICAgICB0aGlzLmNvdW50ID0gIXN0YXQgPyB0aGlzLmNvdW50IDogc3RhdDtcbiAgICAgICAgIC8vY29uc29sZS5sb2codGhpcy5jYWNoZW5hbWUgKyBcIiAtIGNvdW50OlwiICsgdGhpcy5jb3VudCk7XG4gICAgICAgICBpZiAodGhpcy5jb3VudCAhPT0gMCkge1xuICAgICAgICAgICAgIHRoaXMudGlja2V0UHJvdmlkZXIuZ2V0VGlja2V0c0xpc3QodGhpcy5tb2RlWzBdLCB0aGlzLm1vZGVbMV0sIHRoaXMubW9kZVsyXSwgdGhpcy5wYWdlcik7XG4gICAgICAgICAgICAgdGhpcy50aWNrZXRzID0gdGhpcy50aWNrZXRQcm92aWRlci50aWNrZXRzJFt0aGlzLmNhY2hlbmFtZV07XG4gICAgICAgICAgICAgaWYgKCF0aGlzLnRpY2tldFByb3ZpZGVyLl9kYXRhU3RvcmVbdGhpcy5jYWNoZW5hbWVdLmxlbmd0aCkge1xuICAgICAgICAgICAgICAgICB2YXIgdGltZXIgPSBzZXRUaW1lb3V0KCgpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgIHRoaXMuYnVzeSA9IHRydWU7XG4gICAgICAgICAgICAgICAgIH0sIDUwMCk7XG4gICAgICAgICAgICAgICAgIHRoaXMudGlja2V0cy5zdWJzY3JpYmUoXG4gICAgICAgICAgICAgICAgICAgICBkYXRhID0+IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICBjbGVhclRpbWVvdXQodGltZXIpO1xuICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuYnVzeSA9IGZhbHNlO1xuICAgICAgICAgICAgICAgICAgICAgICAgIC8vY29uc29sZS5sb2coIWRhdGEubGVuZ3RoKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLmlzX2VtcHR5ID0gIWRhdGEubGVuZ3RoO1xuICAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgfVxuICAgICAgICAgfVxuICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgdGhpcy5pc19lbXB0eSA9IHRydWU7XG4gICAgICAgICB9XG4gICAgIH1cblxuICAgICBpdGVtVGFwcGVkKGV2ZW50LCB0aWNrZXQsIHNsaWRpbmdJdGVtKSB7XG4gICAgICAgICBpZiAoZXZlbnQuc3JjRWxlbWVudC50YWdOYW1lLnRvVXBwZXJDYXNlKCkgIT0gXCJJT04tSVRFTS1TTElESU5HXCIpIHtcbiAgICAgICAgICAgICBzbGlkaW5nSXRlbS5jbG9zZSgpO1xuICAgICAgICAgICAgIHRpY2tldC5jbGlja2VkID0gdHJ1ZTtcbiAgICAgICAgICAgICAvL29ubHkgaWYgbm8gcGFnZWxvYWRlZFxuICAgICAgICAgICAgIC8vaWYgKH5bJ2FsbCcsJ2FsdCcsJ3VzZXInLCd0ZWNoJ10uaW5kZXhPZih0aGlzLm1vZGVbMF0pKVxuICAgICAgICAgICAgIC8vICAgIHRoaXMubmF2LnRpY2tldHNfdGFiID0gdGhpcy5tb2RlWzBdO1xuICAgICAgICAgICAgIHRpY2tldC5jYWNoZW5hbWUgPSB0aGlzLmNhY2hlbmFtZTtcbiAgICAgICAgICAgICBpZiAodGlja2V0LnRlY2huaWNpYW5fZW1haWwgPT0gdGhpcy5oZS5lbWFpbClcbiAgICAgICAgICAgICAgICAgdGlja2V0LmlzX25ld190ZWNoX3Bvc3QgPSBmYWxzZTsgXG4gICAgICAgICAgICAgaWYgKHRpY2tldC50ZWNobmljaWFuX2VtYWlsID09IHRoaXMuaGUuZW1haWwpXG4gICAgICAgICAgICAgICAgIHRpY2tldC5pc19uZXdfdXNlcl9wb3N0ID0gZmFsc2U7XG4gICAgICAgICAgICAgdGhpcy5uYXYucHVzaChUaWNrZXREZXRhaWxzUGFnZSwgdGlja2V0KTtcbiAgICAgICAgIH1cbiAgICAgfVxuXG4gICAgIGFkZFBvc3QodGlja2V0LCBzbGlkaW5nSXRlbSkge1xuICAgICAgICAgc2xpZGluZ0l0ZW0uY2xvc2UoKTtcbiAgICAgICAgIGxldCBwcm9tcHQgPSBBbGVydC5jcmVhdGUoe1xuICAgICAgICAgICAgIHRpdGxlOiAnQWRkIFJlc3BvbnNlIHRvICMnICsgdGlja2V0Lm51bWJlcixcbiAgICAgICAgICAgICBpbnB1dHM6IFtcbiAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgIG5hbWU6ICdub3RlJyxcbiAgICAgICAgICAgICAgICAgcGxhY2Vob2xkZXI6ICdOb3RlJ1xuICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgXSxcbiAgICAgICAgICAgICBidXR0b25zOiBbXG4gICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICB0ZXh0OiAnQ2FuY2VsJyxcbiAgICAgICAgICAgICAgICAgaGFuZGxlcjogZGF0YSA9PiB7XG4gICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZygnQ2FuY2VsIGNsaWNrZWQnKTtcbiAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICB0ZXh0OiAnUG9zdCcsXG4gICAgICAgICAgICAgICAgIGhhbmRsZXI6IGRhdGEgPT4ge1xuICAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgICBpZiAoIWRhdGEubm90ZS50cmltKCkpXG4gICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuO1xuXG4gICAgICAgICAgICAgICAgICAgICB2YXIgcG9zdCA9IGh0bWxFc2NhcGUoZGF0YS5ub3RlLnRyaW0oKSkuc3Vic3RyKDAsIDUwMDApO1xuXG4gICAgICAgICAgICAgICAgICAgICB0aGlzLnRpY2tldFByb3ZpZGVyLmFkZFRpY2tldFBvc3QodGlja2V0LmlkLCBwb3N0KS5zdWJzY3JpYmUoXG4gICAgICAgICAgICAgICAgICAgICAgICAgZGF0YSA9PiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMubmF2LmFsZXJ0KCdOb3RlIGFkZGVkIDopJyk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgICBlcnJvciA9PiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMubmF2LmFsZXJ0KGVycm9yLCB0cnVlKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coZXJyb3IgfHwgJ1NlcnZlciBlcnJvcicpO1xuICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICApO1xuICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgfVxuICAgICAgICAgICAgIF1cbiAgICAgICAgIH0pO1xuXG4gICAgICAgICB0aGlzLm5hdi5wcmVzZW50KHByb21wdCk7XG4gICAgIH1cblxuICAgICBjbG9zZVRpY2tldCh0aWNrZXQsIHNsaWRpbmdJdGVtKSB7XG4gICAgICAgICBzbGlkaW5nSXRlbS5jbG9zZSgpO1xuICAgICAgICAgaWYgKHRpY2tldC5zdGF0dXMgPT0gJ0Nsb3NlZCcpe1xuICAgICAgICAgICAgIHRoaXMucmVvcGVuVGlja2V0KHRpY2tldCk7XG4gICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgfVxuICAgICAgICAgaWYgKHRoaXMuY29uZmlnLmN1cnJlbnQuaXNfZm9yY2VfdGltZV9vbl9jbG9zaW5nX3RpY2tldHMgJiYgMCA9PSB0aWNrZXQudG90YWxfaG91cnMpXG4gICAgICAgICB7XG4gICAgICAgICAgICB0aGlzLm5hdi5hbGVydChcIllvdXIgYWRtaW5pc3RyYXRvciBpcyByZXF1aXJpbmcgdGltZSBlbnRyaWVzIGJlZm9yZSBhIFwiICsgdGhpcy5jb25maWcuY3VycmVudC5uYW1lcy50aWNrZXQucyArIFwiIGNhbiBiZSBjbG9zZWQuXCIsIHRydWUpO1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgfVxuICAgICAgICAgbGV0IG15TW9kYWwgPSBNb2RhbC5jcmVhdGUoQ2xvc2VUaWNrZXRNb2RhbCwgdGlja2V0KTtcbiAgICAgICAgIG15TW9kYWwub25EaXNtaXNzKGRhdGEgPT4ge1xuICAgICAgICAgICAgIGlmICghZGF0YSlcbiAgICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgIHRoaXMuY291bnQgLT0gZGF0YTtcbiAgICAgICAgICAgICB0aGlzLnRpY2tldFByb3ZpZGVyLl9kYXRhU3RvcmVbdGhpcy5jYWNoZW5hbWVdLnNwbGljZSh0aGlzLnRpY2tldFByb3ZpZGVyLl9kYXRhU3RvcmVbdGhpcy5jYWNoZW5hbWVdLmluZGV4T2YodGlja2V0KSwxKTtcbiAgICAgICAgICAgICB0aGlzLnRpY2tldFByb3ZpZGVyLmdldFRpY2tldHNMaXN0KHRoaXMubW9kZVswXSwgdGhpcy5tb2RlWzFdLCB0aGlzLm1vZGVbMl0sIHsgXCJsaW1pdFwiOiAyNSB9KTtcbiAgICAgICAgICAgICAvL215QXJyYXkuZmluZEluZGV4KGVsID0+IGVsLmNvbG9yID09PSAnYmx1ZScpO1xuICAgICAgICAgICAgIC8vbXlBcnJheS5tYXAoKGVsKSA9PiBlbC5jb2xvcikuaW5kZXhPZignYmx1ZScpO1xuICAgICAgICAgICAgIGlmICh0aGlzLmNvdW50IDwgMSlcbiAgICAgICAgICAgICAgICAgdGhpcy5pc19lbXB0eSA9IHRydWU7XG4gICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgIC8vdGhpcy5wYWdlci5saW1pdCA9IHRoaXMuY291bnQ7XG4gICAgICAgICAgICAgICAgIC8vdGhpcy5vbkxvYWQoKTtcbiAgICAgICAgICAgICAgICAgdGhpcy5pc19lbXB0eSA9IGZhbHNlO1xuICAgICAgICAgICAgIH1cbiAgICAgICAgIH0pO1xuICAgICAgICAgdGhpcy5uYXYucHJlc2VudChteU1vZGFsKTtcbiAgICAgfVxuXG4gICAgIHJlb3BlblRpY2tldCh0aWNrZXQpIHtcbiAgICAgICAgIGxldCBkYXRhID0ge1xuICAgICAgICAgICAgIFwic3RhdHVzXCI6IFwib3BlblwiLFxuICAgICAgICAgICAgIFwibm90ZV90ZXh0XCI6IFwiXCJcbiAgICAgICAgIH07XG5cbiAgICAgICAgIHRoaXMudGlja2V0UHJvdmlkZXIuY2xvc2VPcGVuVGlja2V0KHRpY2tldC5rZXksIGRhdGEpLnN1YnNjcmliZShcbiAgICAgICAgICAgICBkYXRhID0+IHtcbiAgICAgICAgICAgICAgICAgdGhpcy5uYXYuYWxlcnQoJ1RpY2tldCBoYXMgYmVlbiBSZW9wZW5lZCEnKTtcbiAgICAgICAgICAgICAgICAgdGlja2V0LnN0YXR1cyA9IFwiT3BlblwiO1xuICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgZXJyb3IgPT4ge1xuICAgICAgICAgICAgICAgICB0aGlzLm5hdi5hbGVydChlcnJvciwgdHJ1ZSk7XG4gICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKGVycm9yIHx8ICdTZXJ2ZXIgZXJyb3InKTtcbiAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgKTtcbiAgICAgfVxuXG5cbiAgICAgZG9JbmZpbml0ZShpbmZpbml0ZVNjcm9sbCkge1xuICAgICAgICAgaWYgKHRoaXMuaXNfZW1wdHkgfHwgKHRoaXMuY291bnQgPiAwICYmICh0aGlzLmNvdW50IDwgdGhpcy5MSU1JVCkpIHx8ICh0aGlzLmNhY2hlbGVuID4gMCAmJiB0aGlzLmNhY2hlbGVuIDwgdGhpcy5MSU1JVCkpXG4gICAgICAgICB7XG4gICAgICAgICAgICAgaW5maW5pdGVTY3JvbGwuZW5hYmxlKGZhbHNlKTtcbiAgICAgICAgICAgICBpbmZpbml0ZVNjcm9sbC5jb21wbGV0ZSgpO1xuICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgIH1cbiAgICAgICAgIHRoaXMucGFnZXIucGFnZSArPSAxOyBcbiAgICAgICAgIGxldCBjYWNoZWRsZW4gPSAodGhpcy50aWNrZXRQcm92aWRlci5fZGF0YVN0b3JlW3RoaXMuY2FjaGVuYW1lXSB8fCB7fSkubGVuZ3RoO1xuICAgICAgICAgdGhpcy50aWNrZXRQcm92aWRlci5nZXRUaWNrZXRzTGlzdCh0aGlzLm1vZGVbMF0sIHRoaXMubW9kZVsxXSwgdGhpcy5tb2RlWzJdLCB0aGlzLnBhZ2VyKTtcbiAgICAgICAgIHRoaXMudGlja2V0cy5zdWJzY3JpYmUoXG4gICAgICAgICAgICAgZGF0YSA9PiB7IFxuICAgICAgICAgICAgICAgICBpbmZpbml0ZVNjcm9sbC5jb21wbGV0ZSgpO1xuICAgICAgICAgICAgICAgICBsZXQgbGVuID0gZGF0YS5sZW5ndGg7XG4gICAgICAgICAgICAgICAgIGluZmluaXRlU2Nyb2xsLmVuYWJsZSghKGNhY2hlZGxlbiA9PSBsZW4gfHwgbGVuICUgdGhpcy5MSU1JVCkpO1xuICAgICAgICAgICAgICAgICB0aGlzLmNhY2hlbGVuID0gbGVuO1xuICAgICAgICAgICAgIH0pO1xuICAgICB9XG4gfVxuIiwiaW1wb3J0IHtJT05JQ19ESVJFQ1RJVkVTLCBOYXYsIE5hdlBhcmFtcywgQ29uZmlnLCBNb2RhbH0gZnJvbSAnaW9uaWMtYW5ndWxhcic7XG5pbXBvcnQge0NvbXBvbmVudCwgSW5wdXQsIE9uQ2hhbmdlcywgT25Jbml0fSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7VG9kb1Byb3ZpZGVyfSBmcm9tICcuLi8uLi9wcm92aWRlcnMvdG9kby1wcm92aWRlcic7XG5pbXBvcnQge1RvZG9DcmVhdGVQYWdlfSBmcm9tICcuLi8uLi9wYWdlcy90b2RvLWNyZWF0ZS90b2RvLWNyZWF0ZSc7XG5pbXBvcnQge2FkZHAsIGdldERhdGVUaW1lfSBmcm9tICcuLi8uLi9kaXJlY3RpdmVzL2hlbHBlcnMnO1xuaW1wb3J0IHtUaWNrZXREZXRhaWxzUGFnZX0gZnJvbSAnLi4vLi4vcGFnZXMvdGlja2V0LWRldGFpbHMvdGlja2V0LWRldGFpbHMnO1xuaW1wb3J0IHtTdWJqZWN0fSBmcm9tICdyeGpzJztcblxuQENvbXBvbmVudCh7XG4gICAgc2VsZWN0b3I6ICd0b2RvLWxpc3QnLFxuICAgIHRlbXBsYXRlVXJsOiAnYnVpbGQvY29tcG9uZW50cy90b2RvLWxpc3QvdG9kby1saXN0Lmh0bWwnLFxuICAgIGRpcmVjdGl2ZXM6IFtJT05JQ19ESVJFQ1RJVkVTXSxcbn0pXG5cbmV4cG9ydCBjbGFzcyBUb2RvTGlzdENvbXBvbmVudCB7XG4gICAgQElucHV0KCkgc2ltcGxlOiBib29sZWFuO1xuICAgIEBJbnB1dCgpIHRpY2tldDogc3RyaW5nID0gXCJcIjtcbiAgICBASW5wdXQoKSB1c2VyOiBzdHJpbmcgPSBcIlwiO1xuICAgIEBJbnB1dCgpIGFzc2lnbmVkOiBzdHJpbmcgPSBcIlwiO1xuICAgIEBJbnB1dCgpIGNvbXBsZXRlZDogc3RyaW5nID0gXCJmYWxzZVwiO1xuICAgIExJTUlUOiBudW1iZXIgPSA1MDAwO1xuICAgIGlzX2VtcHR5OiBib29sZWFuID0gZmFsc2U7XG4gICAgaXNfZW1wdHlfbGlzdDogYm9vbGVhbiA9IHRydWU7XG4gICAgcGFyYW1zOiBhbnk7XG4gICAgcGFnZXI6IGFueTtcbiAgICBjYWNoZWxlbjogbnVtYmVyO1xuICAgIHVuZG9uZTogbnVtYmVyID0gMDtcbiAgICBjYWNoZW5hbWU6IHN0cmluZztcbiAgICB0b2RvTGlzdHM6IGFueTtcbiAgICBidXN5OiBib29sZWFuO1xuICAgIGhpZGRlbjogYm9vbGVhbjtcbiAgICBpbml0aWFsX2xvYWQ6IGJvb2xlYW4gPSB0cnVlO1xuICAgIHByaXZhdGUgdW5zdWJzY3JpYmUkOlN1YmplY3Q8dm9pZD4gPSBuZXcgU3ViamVjdCgpO1xuXG4gICAgIGNvbnN0cnVjdG9yKHByaXZhdGUgbmF2OiBOYXYsIHByaXZhdGUgdG9kb1Byb3ZpZGVyOiBUb2RvUHJvdmlkZXIsIHByaXZhdGUgY29uZmlnOiBDb25maWcsIHByaXZhdGUgbmF2UGFyYW1zOiBOYXZQYXJhbXMpIHtcbiAgICAgICAgIHRoaXMuaXNfZW1wdHkgPSBmYWxzZTtcbn1cblxuICAgIFxuICAgIG5nT25DaGFuZ2VzKGV2ZW50KSB7XG4gICAgICAgIGlmIChcImNvbXBsZXRlZFwiIGluIGV2ZW50KSB7XG4gICAgICAgICAgICBpZiAoZXZlbnQuY29tcGxldGVkLmlzRmlyc3RDaGFuZ2UoKSlcbiAgICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgIHRoaXMuY29tcGxldGVkID0gZXZlbnQuY29tcGxldGVkLmN1cnJlbnRWYWx1ZTtcbiAgICAgICAgICAgICB0aGlzLmNhY2hlbmFtZSA9IGFkZHAoXCJ0b2Rvc1wiLCBcImFzc2lnbmVkX2lkXCIsIHRoaXMuYXNzaWduZWQpO1xuICAgICAgICAgICAgIHRoaXMuY2FjaGVuYW1lID0gYWRkcCh0aGlzLmNhY2hlbmFtZSwgXCJ0aWNrZXRcIiwgdGhpcy50aWNrZXQgfHwgXCJcIik7XG4gICAgICAgICAgICAgdGhpcy5jYWNoZW5hbWUgPSBhZGRwKHRoaXMuY2FjaGVuYW1lLCBcImlzX2NvbXBsZXRlZFwiLCB0aGlzLmNvbXBsZXRlZCk7XG4gICAgICAgICAgICAgdGhpcy5jYWNoZWxlbiA9ICh0aGlzLnRvZG9Qcm92aWRlci5fZGF0YVN0b3JlW3RoaXMuY2FjaGVuYW1lXSB8fCB7fSkubGVuZ3RoO1xuICAgICAgICAgICAgIHRoaXMuZ2V0VG9kb3MoKTtcbiAgICAgICAgIH1cbiAgICAgICAgaWYgKFwiYXNzaWduZWRcIiBpbiBldmVudCkge1xuICAgICAgICAgICAgaWYgKGV2ZW50LmFzc2lnbmVkLmlzRmlyc3RDaGFuZ2UoKSlcbiAgICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgIHRoaXMuYXNzaWduZWQgPSBldmVudC5hc3NpZ25lZC5jdXJyZW50VmFsdWU7XG4gICAgICAgICAgICAgdGhpcy5jYWNoZW5hbWUgPSBhZGRwKFwidG9kb3NcIiwgXCJhc3NpZ25lZF9pZFwiLCB0aGlzLmFzc2lnbmVkKTtcbiAgICAgICAgICAgICB0aGlzLmNhY2hlbmFtZSA9IGFkZHAodGhpcy5jYWNoZW5hbWUsIFwidGlja2V0XCIsIHRoaXMudGlja2V0IHx8IFwiXCIpO1xuICAgICAgICAgICAgIHRoaXMuY2FjaGVuYW1lID0gYWRkcCh0aGlzLmNhY2hlbmFtZSwgXCJpc19jb21wbGV0ZWRcIiwgdGhpcy5jb21wbGV0ZWQpO1xuICAgICAgICAgICAgIHRoaXMuY2FjaGVsZW4gPSAodGhpcy50b2RvUHJvdmlkZXIuX2RhdGFTdG9yZVt0aGlzLmNhY2hlbmFtZV0gfHwge30pLmxlbmd0aDtcbiAgICAgICAgICAgICB0aGlzLmdldFRvZG9zKCk7XG4gICAgICAgICB9XG5cbiAgICAgICAgICAgICBcbiAgICAgICAgICAgIC8vIGVsc2Uge1xuICAgICAgICAgICAgICAvLyAgIHRoaXMucGFnZXIubGltaXQgPSB0aGlzLmNvdW50O1xuICAgICAgICAgICAgICAgLy8gIHRoaXMub25Mb2FkKCk7XG4gICAgICAgICAgICAgICAvLyAgdGhpcy5pc19lbXB0eSA9IGZhbHNlO1xuICAgICAgICAgICAgIC8vfVxuICAgICAgICAgXG4gICAgIH1cblxuICAgIG5nT25Jbml0KClcbiAgICB7XG4gICAgICAgIGlmICghdGhpcy5jb25maWcuY3VycmVudC51c2VyLmlzX3RlY2hvcmFkbWluKVxuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB0aGlzLmhpZGRlbiA9IHRoaXMuc2ltcGxlO1xuICAgICAgICB0aGlzLmlzX2VtcHR5X2xpc3QgPSB0aGlzLnNpbXBsZTtcbiAgICAgICAgdGhpcy5wYXJhbXMgPSB0aGlzLm5hdlBhcmFtcy5kYXRhIHx8IHt9O1xuICAgICAgICB0aGlzLnBhZ2VyID0geyBwYWdlOiAwIH07XG4gICAgICAgIHRoaXMucGFyYW1zLnVzZXIgPSB7IGlkOiB0aGlzLnBhcmFtcy51c2VyX2lkIHx8IHRoaXMuY29uZmlnLmN1cnJlbnQudXNlci51c2VyX2lkLCBuYW1lOiB0aGlzLnBhcmFtcy51c2VyX25hbWUgfHwgXCJcIiB9O1xuXG4gICAgICAgIGlmICh0aGlzLnVzZXIpXG4gICAgICAgICAgICB0aGlzLnBhcmFtcy51c2VyLmlkID0gdGhpcy51c2VyID09IFwiYWxsXCIgPyBcIlwiIDogdGhpcy51c2VyO1xuICAgICAgICB0aGlzLmFzc2lnbmVkID0gdGhpcy5wYXJhbXMudXNlci5pZDtcbiAgICAgICAgdGhpcy5jYWNoZW5hbWUgPSBcInRvZG9zXCI7XG4gICAgICAgIGlmICh0aGlzLnBhcmFtcy51c2VyLmlkKVxuICAgICAgICAgICAgdGhpcy5jYWNoZW5hbWUgPSBhZGRwKHRoaXMuY2FjaGVuYW1lLCBcImFzc2lnbmVkX2lkXCIsIHRoaXMucGFyYW1zLnVzZXIuaWQpO1xuICAgICAgICBpZiAodGhpcy50aWNrZXQpXG4gICAgICAgICAgICB0aGlzLmNhY2hlbmFtZSA9IGFkZHAodGhpcy5jYWNoZW5hbWUsIFwidGlja2V0XCIsIHRoaXMudGlja2V0IHx8IFwiXCIpOyAgXG4gICAgICAgIHRoaXMuY2FjaGVuYW1lID0gYWRkcCh0aGlzLmNhY2hlbmFtZSwgXCJpc19jb21wbGV0ZWRcIiwgdGhpcy5jb21wbGV0ZWQpOyBcbiAgICAgICAgdGhpcy5jYWNoZWxlbiA9ICh0aGlzLnRvZG9Qcm92aWRlci5fZGF0YVN0b3JlW3RoaXMuY2FjaGVuYW1lXSB8fCB7fSkubGVuZ3RoO1xuXG4gICAgICAgIGlmICh0aGlzLnBhcmFtcy5pc19lbXB0eSlcbiAgICAgICAgICAgIHRoaXMucGFyYW1zLmNvdW50ID0gMDtcblxuICAgICAgICAvL2lmICh0aGlzLnBhcmFtcy5jb3VudCAhPT0gMCkge1xuICAgICAgICAgICAgdGhpcy5nZXRUb2RvcygpO1xuICAgICAgICAvL31cbiAgICAgICAgLy9lbHNlXG4gICAgICAgIC8vICAgIHRoaXMuaXNfZW1wdHkgPSB0cnVlO1xuICAgIH1cblxuICAgIGdldFRvZG9zKClcbiAgICB7XG4gICAgICAgIHRoaXMudG9kb1Byb3ZpZGVyLmdldFRvZG9zKHRoaXMuYXNzaWduZWQsIHRoaXMudGlja2V0LCB0aGlzLmNvbXBsZXRlZCwgdGhpcy5wYWdlcik7XG4gICAgICAgIHRoaXMudG9kb0xpc3RzID0gdGhpcy50b2RvUHJvdmlkZXIudG9kb3MkW3RoaXMuY2FjaGVuYW1lXTtcbiAgICAgICAgLy9pZiAoIXRoaXMuY2FjaGVsZW4pXG4gICAgICAgIHtcbiAgICAgICAgICAgIHZhciB0aW1lciA9IHNldFRpbWVvdXQoKCkgPT4ge1xuICAgICAgICAgICAgICAgIHRoaXMuYnVzeSA9IHRydWU7XG4gICAgICAgICAgICB9LCA1MDApO1xuICAgICAgICAgICAgc2V0VGltZW91dCgoKSA9PiB7XG4gICAgICAgICAgICAgICAgdGhpcy5idXN5ID0gZmFsc2U7XG4gICAgICAgICAgICB9LCAzMDAwKTtcbiAgICAgICAgICAgIHRoaXMudG9kb0xpc3RzLnRha2VVbnRpbCh0aGlzLnVuc3Vic2NyaWJlJCkuc3Vic2NyaWJlKFxuICAgICAgICAgICAgICAgIGRhdGEgPT4ge1xuICAgICAgICAgICAgICAgICAgICBjbGVhclRpbWVvdXQodGltZXIpO1xuICAgICAgICAgICAgICAgICAgICAvL3RoaXMudG9kb0xpc3RzID0gdGhpcy50b2RvUHJvdmlkZXIudG9kb3MkW3RoaXMuY2FjaGVuYW1lXTtcbiAgICAgICAgICAgICAgICAgICAgdmFyIHRlc3QgPSBbXTtcbiAgICAgICAgICAgICAgICAgICAgaWYgKGRhdGEubGVuZ3RoICYmIGRhdGEuZmlsdGVyKHQgPT4gdC50eXBlID09IDEpLmxlbmd0aCA9PSAwKVxuICAgICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgICAgIHRlc3RbMF0gPSBkYXRhWzBdO1xuICAgICAgICAgICAgICAgICAgICAgICB0ZXN0WzBdLnN1YiA9IGRhdGE7XG4gICAgICAgICAgICAgICAgICAgICAgIGRhdGEgPSB0ZXN0O1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuYnVzeSA9IGZhbHNlO1xuICAgICAgICAgICAgICAgICAgICB0aGlzLmlzX2VtcHR5ID0gIWRhdGEubGVuZ3RoO1xuICAgICAgICAgICAgICAgICAgICBsZXQgY291bnQgPSAwLCB0b3RhbCA9IDA7XG4gICAgICAgICAgICAgICAgICAgIGZvciAobGV0IGsgaW4gZGF0YSkgZm9yIChsZXQgbCBpbiBkYXRhW2tdLnN1Yikge3RvdGFsKys7IGlmICghZGF0YVtrXS5zdWJbbF0uaXNfY29tcGxldGVkKSBjb3VudCsrfTtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy51bmRvbmUgPSBjb3VudDtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5pc19lbXB0eV9saXN0ID0gdGhpcy5zaW1wbGUgJiYgIXRvdGFsO1xuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgQWRkVG9kbyh0bGlzdClcbiAgICB7XG4gICAgICAgIC8vdGltZSA9IHRpbWUgfHwge307XG4gICAgICAgIC8vdGltZS5hY2NvdW50ID0gdGltZS5hY2NvdW50IHx8IHRoaXMucGFyYW1zLmFjY291bnQ7XG4gICAgICAgIC8vdGltZS5jYWNoZW5hbWUgPSB0aGlzLmNhY2hlbmFtZTtcbiAgICAgICAgdGxpc3QuaGlkZGVuID0gISh0bGlzdC5zdWIgfHwge30pLmxlbmd0aCB8fCAhdGxpc3QuaGlkZGVuO1xuICAgICAgICBsZXQgbXlNb2RhbCA9IE1vZGFsLmNyZWF0ZShUb2RvQ3JlYXRlUGFnZSwge1wibGlzdF9pZFwiIDogKHRsaXN0IHx8IHt9KS5saXN0X2lkIHx8IFwiXCIgfSk7XG4gICAgICAgIHRoaXMubmF2LnByZXNlbnQobXlNb2RhbCk7XG4gICAgfVxuXG4gICAgc2V0RG9uZSh0b2RvKXtcbiAgICAgICAgdGhpcy51bmRvbmUgPSBNYXRoLm1heCh0b2RvLmlzX2NvbXBsZXRlZCA/IC0tdGhpcy51bmRvbmUgOiArK3RoaXMudW5kb25lLCAwKTtcbiAgICAgICAgKCh0aGlzLnRvZG9Qcm92aWRlci5fZGF0YVN0b3JlW3RoaXMuY2FjaGVuYW1lXS5maWx0ZXIodCA9PiB0Lmxpc3RfaWQgPT0gdG9kby5saXN0X2lkKSB8fCBbe31dKVswXS5zdWIuZmlsdGVyKGQgPT4gZC5pZCA9PSB0b2RvLmlkKVswXSB8fCB7fSkuaXNfY29tcGxldGVkID0gdG9kby5pc19jb21wbGV0ZWQ7XG4gICAgICAgIHRoaXMudG9kb1Byb3ZpZGVyLnNldENvbXBsZXRlZFRvZG8odG9kby5pZCwgdG9kby5pc19jb21wbGV0ZWQpO1xuICAgIH1cblxuICAgIHNldERhdGUoZGF0ZSwgc2hvd21vbnRoPywgaXN0aW1lPykge1xuICAgICAgICBpZiAoZGF0ZSl7XG4gICAgICAgIC8vdmFyIHRpbWVfb2Zmc2V0ID0gdGhpcy5jb25maWcuZ2V0Q3VycmVudChcInRpbWV6b25lX29mZnNldFwiKTsgICAgIFxuICAgICAgICBkYXRlID0gbmV3IERhdGUoZGF0ZS5zdWJzdHJpbmcoMCwyMykrXCJaXCIpO1xuICAgICAgICAvL2RhdGUgPSBuZXcgRGF0ZShkYXRlLnNldFRpbWUoZGF0ZS5nZXRUaW1lKCkgKyB0aW1lX29mZnNldCo2MCo2MCoxMDAwKSkudG9KU09OKCk7XG4gICAgICAgIHJldHVybiBnZXREYXRlVGltZShkYXRlLCBzaG93bW9udGgsIGlzdGltZSk7XG4gICAgfVxuICAgICByZXR1cm4gbnVsbDtcbiAgICB9XG5cbiAgICBnZXRGaXhlZCh2YWx1ZSl7XG4gICAgICAgIHZhbHVlID0gKHZhbHVlIHx8IFwiMFwiKS50b1N0cmluZygpXG4gICAgICAgIGlmICh+dmFsdWUuaW5kZXhPZihcIi5cIikpXG4gICAgICAgICAgICByZXR1cm4gTnVtYmVyKHZhbHVlKS50b0ZpeGVkKDIpLnRvU3RyaW5nKCk7XG4gICAgICAgIHJldHVybiB2YWx1ZTtcbiAgICB9XG5cbiAgICBuZ09uRGVzdHJveSgpeyAgXG4gICAgICAgIHRoaXMudW5zdWJzY3JpYmUkLm5leHQoKTtcbiAgICAgICAgdGhpcy51bnN1YnNjcmliZSQuY29tcGxldGUoKTsgXG4gICAgfVxuXG4gICAgaXRlbVRhcHBlZCh0bGlzdCkge1xuICAgICAgICAgICAgdGxpc3QuaGlkZGVuID0gISh0bGlzdC5zdWIgfHwge30pLmxlbmd0aCB8fCAhdGxpc3QuaGlkZGVuO1xuICAgICAgICAgICAgdmFyIHRpY2tldCA9IHtcImtleVwiOnRsaXN0Lmxpc3RfdGlja2V0X2lkfTtcbiAgICAgICAgICAgIHRoaXMubmF2LnB1c2goVGlja2V0RGV0YWlsc1BhZ2UsIHRpY2tldCk7XG4gICAgICAgICB9XG59XG4iLCJpbXBvcnQge0lPTklDX0RJUkVDVElWRVMsIE5hdiwgTmF2UGFyYW1zfSBmcm9tICdpb25pYy1hbmd1bGFyJztcbmltcG9ydCB7Q29tcG9uZW50LCBJbnB1dCwgT3V0cHV0LCBFdmVudEVtaXR0ZXJ9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG5leHBvcnQgaW50ZXJmYWNlIElUcmVlTm9kZSB7XG5pZDogbnVtYmVyO1xubmFtZTogc3RyaW5nO1xuc3ViOiBBcnJheTxJVHJlZU5vZGU+O1xuaXNFeHBhbmRlZDogYm9vbGVhbjtcbiAgICBpc19hY3RpdmU6IGJvb2xlYW47XG4gICAgaXNfcmVzdHJpY3RfdG9fdGVjaHM6IGJvb2xlYW47XG4gICAgcGFyZW50OiBzdHJpbmc7XG59XG5cbkBDb21wb25lbnQoe1xuc2VsZWN0b3I6IFwidHJlZS12aWV3XCIsXG4gICAgdGVtcGxhdGVVcmw6IFwiYnVpbGQvY29tcG9uZW50cy90cmVlLXZpZXcvdHJlZS12aWV3Lmh0bWxcIixcbiAgICBkaXJlY3RpdmVzOiBbVHJlZVZpZXdDb21wb25lbnQsIElPTklDX0RJUkVDVElWRVNdXG59KVxuXG5leHBvcnQgY2xhc3MgVHJlZVZpZXdDb21wb25lbnQge1xuXG5ASW5wdXQoKSBOb2RlczogQXJyYXk8SVRyZWVOb2RlPjtcbkBJbnB1dCgpIFNlbGVjdGVkTm9kZTogSVRyZWVOb2RlO1xuXG5AT3V0cHV0KCkgb25TZWxlY3RlZENoYW5nZWQ6IEV2ZW50RW1pdHRlcjxhbnk+ID0gbmV3IEV2ZW50RW1pdHRlcigpO1xuLy9AT3V0cHV0KCkgb25SZXF1ZXN0Tm9kZXM6IEV2ZW50RW1pdHRlcjxJVHJlZU5vZGU+ID0gbmV3IEV2ZW50RW1pdHRlcigpO1xuXG5jb25zdHJ1Y3RvcigpIHsgfVxuXG5vblNlbGVjdE5vZGUobm9kZTogSVRyZWVOb2RlKSB7XG50aGlzLm9uU2VsZWN0ZWRDaGFuZ2VkLmVtaXQobm9kZSk7XG59XG5cbm9uRXhwYW5kKG5vZGU6IElUcmVlTm9kZSkge1xuICAgIGlmICghbm9kZS5zdWIpXG4gICAgICAgIHJldHVybjtcbiAgICBcbm5vZGUuaXNFeHBhbmRlZCA9ICFub2RlLmlzRXhwYW5kZWQ7XG5cbiAgIC8vIGlmIChub2RlLmlzRXhwYW5kZWQgJiYgKCFub2RlLnN1YiB8fCBub2RlLnN1Yi5sZW5ndGggPT0gMCkpIHtcbi8vdGhpcy5vblJlcXVlc3ROb2Rlcy5lbWl0KHBhcmVudCk7XG4vL31cbn1cbiBcbiBvblJlcXVlc3QocGFyZW50OiBJVHJlZU5vZGUpIHtcbiAgICAgY29uc29sZS5sb2coXCJpbm5lciByZXF1ZXN0XCIpO1xuICAgICByZXR1cm47XG4gfVxufSIsImV4cG9ydCAqIGZyb20gJy4vZm9jdXNlcic7IiwiaW1wb3J0IHtEaXJlY3RpdmUsIFJlbmRlcmVyLCBFbGVtZW50UmVmfSBmcm9tIFwiQGFuZ3VsYXIvY29yZVwiO1xuQERpcmVjdGl2ZSh7XG5cdHNlbGVjdG9yOiAnW2ZvY3VzZXJdJ1xufSlcbmV4cG9ydCBjbGFzcyBGb2N1c2VyIHtcblx0Y29uc3RydWN0b3IocHVibGljIHJlbmRlcmVyOiBSZW5kZXJlciwgcHVibGljIGVsZW1lbnRSZWY6IEVsZW1lbnRSZWYpIHsgfVxuXG5cdG5nT25Jbml0KCkge1xuXHRcdC8vZGlzYWJsZWQgZm9jdXNlclxuXHRcdHJldHVybjtcblx0XHQvL3NlYXJjaCBiYXIgaXMgd3JhcHBlZCB3aXRoIGEgZGl2IHNvIHdlIGdldCB0aGUgY2hpbGQgaW5wdXRcblx0XHRjb25zdCBzZWFyY2hJbnB1dCA9IHRoaXMuZWxlbWVudFJlZi5uYXRpdmVFbGVtZW50LnF1ZXJ5U2VsZWN0b3IoJ2lucHV0Jyk7XG5cdFx0c2V0VGltZW91dCgoKSA9PiB7XG5cdFx0XHQvL2RlbGF5IHJlcXVpcmVkIG9yIGlvbmljIHN0eWxpbmcgZ2V0cyBmaW5pY2t5XG5cdFx0XHR0aGlzLnJlbmRlcmVyLmludm9rZUVsZW1lbnRNZXRob2Qoc2VhcmNoSW5wdXQsICdzZXRTZWxlY3Rpb25SYW5nZScsIFswLCA5OTldKTtcblx0XHR9LCA1MDApO1xuXHRcdHNldFRpbWVvdXQoKCkgPT4ge1xuXHRcdFx0Ly9kZWxheSByZXF1aXJlZCBvciBpb25pYyBzdHlsaW5nIGdldHMgZmluaWNreVxuXHRcdFx0dGhpcy5yZW5kZXJlci5pbnZva2VFbGVtZW50TWV0aG9kKHNlYXJjaElucHV0LCAnZm9jdXMnLCBbXSk7XG5cdFx0XHQvL3RoaXMucmVuZGVyZXIuc2V0RWxlbWVudFByb3BlcnR5KHNlYXJjaElucHV0LCAnYXV0b2ZvY3VzJywgJ2F1dG9mb2N1cycpO1xuXHRcdH0sIDMwMCk7XG5cdH1cbn0iLCJpbXBvcnQgKiBhcyBDb25maWcgZnJvbSAnLi4vcHJvdmlkZXJzL2NvbmZpZyc7XG4vL2ltcG9ydCB7IFBsdWdpbnMgfSBmcm9tICdAY2FwYWNpdG9yL2NvcmUnO1xuLy9pbXBvcnQge0V2ZW50c30gZnJvbSAnaW9uaWMtYW5ndWxhcic7XG5cbmNvbnN0IHsgQnJvd3NlciB9ID0gQ2FwYWNpdG9yLlBsdWdpbnM7XG5cbi8qT2JqZWN0LnByb3RvdHlwZS5lID0gZnVuY3Rpb24gKHApIHtcbiAgICByZXR1cm4gcCA/IHAuc3BsaXQoJy4nKS5yZWR1Y2UoZnVuY3Rpb24gKG8sIGspIHtcbiAgICAgICAgdmFyIG0gPSBrLmluZGV4T2YoXCJbXCIpOyBpZiAofm0pIHsgdmFyIHM9ay5zdWJzdHJpbmcoMCxrLmluZGV4T2YoXCJbXCIpKTsgcmV0dXJuIChvICYmIG9bc10gJiYgb1tzXVtrLnN1YnN0cmluZyhtKzEsIGsuaW5kZXhPZihcIl1cIikpXSkgfHwge307fVxuICAgICAgICByZXR1cm4gKG8gJiYgb1trXSkgfHwge307XG4gICAgfSwgdGhpcykgOiB0aGlzO1xufVxuXG5PYmplY3QucHJvdG90eXBlLmU9ZnVuY3Rpb24oYil7cmV0dXJuIGI/Yi5zcGxpdChcIi5cIikucmVkdWNlKGZ1bmN0aW9uKGMsYSl7dmFyIGI9YS5pbmRleE9mKFwiW1wiKTtpZih+Yil7dmFyIGQ9YS5zdWJzdHJpbmcoMCxhLmluZGV4T2YoXCJbXCIpKTtyZXR1cm4gYyYmY1tkXSYmY1tkXVthLnN1YnN0cmluZyhiKzEsYS5pbmRleE9mKFwiXVwiKSldfHx7fX1yZXR1cm4gYyYmY1thXXx8e319LHRoaXMpOnRoaXN9O1xufSovXG4gXG5leHBvcnQgZnVuY3Rpb24gc2F2ZUNhY2hlKHVybCwgZGF0YSkge1xuICAgIGxvY2FsU3RvcmFnZS5zZXRJdGVtKHVybCwgSlNPTi5zdHJpbmdpZnkoZGF0YSB8fCB7fSkpOyBcbn1cbiAgICBcbmV4cG9ydCBmdW5jdGlvbiBsb2FkQ2FjaGUodXJsKSB7XG4gICAgcmV0dXJuIEpTT04ucGFyc2UobG9jYWxTdG9yYWdlLmdldEl0ZW0odXJsKSk7IFxufVxuXG5leHBvcnQgZnVuY3Rpb24gZ2V0UGFyYW1ldGVyQnlOYW1lKG5hbWUpIHtcbiAgICB2YXIgbWF0Y2ggPSBSZWdFeHAoJ1s/Jl0nICsgbmFtZSArICc9KFteJl0qKScpLmV4ZWMod2luZG93LmxvY2F0aW9uLmhyZWYpO1xuICAgIHJldHVybiBtYXRjaCAmJiBkZWNvZGVVUklDb21wb25lbnQobWF0Y2hbMV0ucmVwbGFjZSgvXFwrL2csICcgJykpO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gY2xlYW5RdWVyeXN0cmluZyhwYXJhbT8sIHZhbHVlPykge1xuICAgIHZhciB1cmwgPSBhZGRwKGxvY2F0aW9uLm9yaWdpbiArIGxvY2F0aW9uLnBhdGhuYW1lLCBwYXJhbSwgdmFsdWUpO1xuICAgIHRyeSB7d2luZG93Lmhpc3RvcnkucmVwbGFjZVN0YXRlKCB7fSAsICcnLCB1cmwgKTt9XG4gICAgY2F0Y2ggKGVycil7fVxufVxuICAgIFxuICAgIC8vZ2xvYmFsIGhlbHBlciBmdW5jdGlvbnNcbmV4cG9ydCBmdW5jdGlvbiBHb29nbGVsb2dPdXQobWVzcykge1xuICAgIHZhciBpc0V4dGVuc2lvbiA9IGZhbHNlO1xuICAgIGlmICghaXNFeHRlbnNpb24gJiYgIWNvbmZpcm0oXCJEbyB5b3Ugd2FudCB0byBzdGF5IGxvZ2dlZCBpbiBHb29nbGUgYWNjb3VudD9cIikpIHtcbiAgICAgICAgdmFyIGxvZ291dFVybCA9IFwiaHR0cHM6Ly93d3cuZ29vZ2xlLmNvbS9hY2NvdW50cy9Mb2dvdXQ/Y29udGludWU9aHR0cHM6Ly9hcHBlbmdpbmUuZ29vZ2xlLmNvbS9fYWgvbG9nb3V0P2NvbnRpbnVlPVwiICsgQ29uZmlnLk1vYmlsZVNpdGU7XG4gICAgICAgIC8vZG9jdW1lbnQubG9jYXRpb24uaHJlZiA9IENvbmZpZy5Nb2JpbGVTaXRlICsgYWRkcChcImxvZ2luLmh0bWxcIixcImZcIixtZXNzKTtcbiAgICB9XG4gICAgZWxzZVxuICAgICAgICA7Ly93aW5kb3cubG9jYXRpb24gPSBcImxvZ2luLmh0bWxcIiArIG1lc3M7XG4gICAgfVxuICAgIFxuZXhwb3J0IGZ1bmN0aW9uIHBhcnNlWG1sKHhtbFN0cikge1xuICAgIGlmICgheG1sU3RyIHx8IHhtbFN0ci5sZW5ndGggPCA5KVxuICAgICAgICByZXR1cm4gbnVsbDtcbiAgICBpZiAodHlwZW9mIHdpbmRvdy5ET01QYXJzZXIgIT0gXCJ1bmRlZmluZWRcIikge1xuICAgICAgICAgcmV0dXJuIChuZXcgd2luZG93LkRPTVBhcnNlcigpKS5wYXJzZUZyb21TdHJpbmcoeG1sU3RyLCBcInRleHQveG1sXCIpO1xuICAgIH0gZWxzZSBpZiAodHlwZW9mIHdpbmRvdy5BY3RpdmVYT2JqZWN0ICE9IFwidW5kZWZpbmVkXCIgJiZcbiAgICAgICAgbmV3IHdpbmRvdy5BY3RpdmVYT2JqZWN0KFwiTWljcm9zb2Z0LlhNTERPTVwiKSkge1xuICAgICAgICAgICAgdmFyIHhtbERvYyA9IG5ldyB3aW5kb3cuQWN0aXZlWE9iamVjdChcIk1pY3Jvc29mdC5YTUxET01cIik7XG4gICAgICAgICAgICB4bWxEb2MuYXN5bmMgPSBcImZhbHNlXCI7XG4gICAgICAgICAgICB4bWxEb2MubG9hZFhNTCh4bWxTdHIpO1xuICAgICAgICAgICAgcmV0dXJuIHhtbERvYztcbiAgICB9IGVsc2Uge1xuICAgICAgICBjb25zb2xlLmxvZyhcIk5vIFhNTCBwYXJzZXIgZm91bmRcIik7XG4gICAgICAgIHJldHVybiBudWxsO1xuICAgIH1cbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGFkZHAgKHVybDogc3RyaW5nLCBwYXJhbTogc3RyaW5nLCB2YWx1ZT86IGFueSkge1xuICAgICAgICBpZiAoIXVybCB8fCAhdmFsdWUgfHwgIXBhcmFtKVxuICAgICAgICAgICAgcmV0dXJuIHVybDtcbiAgICB2YXIgcGF0dGVybiA9IG5ldyBSZWdFeHAoJ1xcXFxiKCcrcGFyYW0rJz0pLio/KCZ8I3wkKScpO1xuICAgIGlmICh1cmwuc2VhcmNoKHBhdHRlcm4pPj0wKSB7XG4gICAgICAgIHJldHVybiB1cmwucmVwbGFjZShwYXR0ZXJuLCckMScgKyB2YWx1ZSArICckMicpO1xuICAgIH1cbiAgICB1cmwgPSB1cmwucmVwbGFjZSgvWz8jXSQvLCcnKTtcbiAgICByZXR1cm4gdXJsICsgKHVybC5pbmRleE9mKCc/Jyk+MCA/ICcmJyA6ICc/JykgKyBwYXJhbSArICc9JyArIHZhbHVlO1xuIH1cblxuZXhwb3J0IGZ1bmN0aW9uIGZ1bGxhcHBsaW5rIChzaXRlLCB0aWNrZXRrZXksIGluc3Qsb3JnKXtcbiAgICAgICAgbGV0IHVybCA9IENvbmZpZy5BcHBTaXRlO1xuICAgICAgICBpZiAodGlja2V0a2V5KVxuICAgICAgICAgICAgdXJsID0gYWRkcCh1cmwsIFwidGt0XCIsIHRpY2tldGtleSk7XG4gICAgICAgIHVybCA9IGFkZHAodXJsLCBcImRlcHRcIiwgaW5zdCk7XG4gICAgICAgIHVybCA9IGFkZHAodXJsLCBcIm9yZ1wiLCBvcmcpO1xuICAgICAgICAvL2lmIChsb2NhbFN0b3JhZ2UuZ2V0SXRlbShcImlzUGhvbmVnYXBcIikgPT09IFwidHJ1ZVwiKVxuICAgICAgICAvLyAgICBvcGVuVVJMc3lzdGVtKHVybCk7XG4gICAgICAgIC8vZWxzZSAvL2lmIChsb2NhbFN0b3JhZ2UuZ2V0SXRlbShcImlzRXh0ZW5zaW9uXCIpID09PSBcInRydWVcIilcbiAgICAgICAgICAgIG9wZW5VUkxzeXN0ZW0odXJsKTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIG1haWx0b2xpbmsgKHRpY2tldGtleSwgaW5zdCxvcmcpe1xuICAgICAgICBsZXQgdXJsID0gYG1haWx0bzpyLiR7b3JnfS4ke2luc3R9LiR7dGlja2V0a2V5fUBhcHAuc2hlcnBhZGVzay5jb21gO1xuICAgICAgICAgICAgb3BlblVSTHN5c3RlbSh1cmwpO1xufVxuXG4vL0hUTUwgZW5jb2RlXG5leHBvcnQgZnVuY3Rpb24gaHRtbEVzY2FwZShzdHIpIHtcbiAgICByZXR1cm4gU3RyaW5nKHN0cilcbiAgICAgICAgLy8ucmVwbGFjZSgvJi9nLCAnJmFtcDthbXA7JylcbiAgICAgICAgLy8ucmVwbGFjZSgvJnF1b3Q7L2csICcmYW1wO3F1b3Q7JylcbiAgICAgICAgLy8ucmVwbGFjZSgvJmFwb3M7L2csICcmYW1wO2Fwb3M7JylcbiAgICAgICAgLy8ucmVwbGFjZSgvJmx0Oy9nLCAnJmFtcDtsdDsnKVxuICAgICAgICAvLy5yZXBsYWNlKC8mZ3Q7L2csICcmYW1wO2d0OycpXG4gICAgICAgIC8vLnJlcGxhY2UoLyYvZywgJyZhbXA7JylcbiAgICAgICAgLy8ucmVwbGFjZSgvXCIvZywgJyZxdW90OycpXG4gICAgICAgIC8vLnJlcGxhY2UoLycvZywgJyZhcG9zOycpXG4gICAgICAgIC5yZXBsYWNlKC88L2csICcmbHQ7JylcbiAgICAgICAgLnJlcGxhY2UoLz4vZywgJyZndDsnKVxuICAgIC8vLnJlcGxhY2UoL1xcbi9nLCBcIjxiciAvPlwiKVxuICAgIDtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGxpbmVicmVha3MgKHZhbHVlLCBhcmdzKSB7XG4gICAgICAgIHZhbHVlID0gKHZhbHVlIHx8IFwiXCIpLnRyaW0oKTtcbiAgICAgICAgbGV0IGlzX2VkaXQgPSBhcmdzOyBcbiAgICAgICAgaWYgKHZhbHVlLmxlbmd0aClcbiAgICAgICAgICAgIHZhbHVlID0gdmFsdWVcbiAgICAgICAgICAgICAgICAucmVwbGFjZSgvJmx0O2JyJmd0Oy9naSwgXCJcXG5cIilcbiAgICAgICAgICAgICAgICAucmVwbGFjZSgvPGJyXFxzKltcXC9dPz4vZ2ksIFwiXFxuXCIpXG4gICAgICAgICAgICAgICAgLnJlcGxhY2UoL1xcci9nLCAnJylcbiAgICAgICAgICAgICAgICAucmVwbGFjZSgvXFxuXFxuL2csIGlzX2VkaXQgPyBcIlxcblwiIDogXCI8YnI+XCIpO1xuICAgICAgICAvL3ZhbHVlID0gdmFsdWUucmVwbGFjZSgvJmx0O2JyJmd0Oy9naSwgXCJcXG5cIikucmVwbGFjZSgvXFxyL2csICcnKS5yZXBsYWNlKC9cXG5cXHMqXFxuL2csICdcXG4nKS5yZXBsYWNlKC9cXG4vZywgXCI8YnI+XCIpO1xuICAgICAgICByZXR1cm4gdmFsdWU7XG4gICAgfVxuICAgIFxuZXhwb3J0IGNvbnN0IEZpbGVVcmxIZWxwZXIgPSB7XG4gICAgaXNQaG9uZWdhcDogZnVuY3Rpb24oKSB7IHJldHVybiBsb2NhbFN0b3JhZ2UuZ2V0SXRlbShcImlzUGhvbmVnYXBcIikgPT09IFwidHJ1ZVwifSxcbiAgICBSZXBsYWNlQWxsOiBmdW5jdGlvbihub3RlLCBmaW5kLCByZXBsYWNlKSB7XG4gICAgICAgICAgICByZXR1cm4gbm90ZS5zcGxpdChmaW5kKS5qb2luKHJlcGxhY2UpO1xuICAgICAgICB9LFxuXG4gICAgICAgIGNoZWNrVVJMIDogZnVuY3Rpb24gKHVybCkge1xuICAgICAgICAgICAgaWYoIXVybCkgcmV0dXJuIGZhbHNlO1xuICAgICAgICAgICAgcmV0dXJuKHVybC50cmltKCkubWF0Y2goLy4oanBlZ3xqcGd8Z2lmfHBuZ3xpY28pL2kpICE9PSBudWxsKTtcbiAgICAgICAgfSxcblxuICAgICAgICBtYXRjaEtleSA6IGZ1bmN0aW9uIChzZWFyY2gsIGFycmF5KXtcbiAgICAgICAgICAgIGxldCBwcm9wZXJ0aWVzID0gT2JqZWN0LmtleXMoYXJyYXkpO1xuICAgICAgICAgICAgZm9yICh2YXIgaSA9IHByb3BlcnRpZXMubGVuZ3RoOyBpLS0gPiAwOyl7XG4gICAgICAgICAgICAgICAgdmFyIGtleSA9IHByb3BlcnRpZXNbaV07XG4gICAgICAgICAgICAgICAga2V5ID0ga2V5LnJlcGxhY2UoL1teMC05YS16XS9naSwgJycpO1xuICAgICAgICAgICAgICAgIGlmKGtleS5pbmRleE9mKHNlYXJjaCkgIT0gLTEpIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHByb3BlcnRpZXNbaV07XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIFwiXCI7XG4gICAgICAgIH0sXG5cbiAgICAgICAgYWRkVXJscyA6IGZ1bmN0aW9uIChub3RlLCBmaWxlcylcbiAgICAgICAge1xuICAgICAgICAgICAgdmFyIGxlbmd0aCA9IGZpbGVzLmxlbmd0aDtcbiAgICAgICAgICAgIHZhciBmaWxlYXJyYXkgPSB7fTtcbiAgICAgICAgICAgIGlmIChsZW5ndGgpXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgdmFyIGlubGluZUltZyA9IG5vdGUubWF0Y2goL1xcW2NpZDpbXlxcW1xcXV0qXS9nKTtcbiAgICAgICAgICAgICAgICBmb3IodmFyIGkgPSAwOyBpIDwgbGVuZ3RoOyBpKyspe1xuICAgICAgICAgICAgICAgICAgICB2YXIgbmFtZSA9IGZpbGVzW2ldLm5hbWU7XG4gICAgICAgICAgICAgICAgICAgIG5vdGUgPSBGaWxlVXJsSGVscGVyLlJlcGxhY2VBbGwobm90ZSwgXCIgXCIrbmFtZSwgZmlsZXNbaV0uaXNfZGVsZXRlZCA/IFwiXCIgOiAgRmlsZVVybEhlbHBlci5nZXRGaWxlTGluayhmaWxlc1tpXS51cmwsbmFtZSkpO1xuICAgICAgICAgICAgICAgICAgICBmaWxlYXJyYXlbJ1wiJytuYW1lLnN1YnN0cmluZygwLCBuYW1lLmxhc3RJbmRleE9mKFwiLlwiKSkrJ1wiJ10gPSBmaWxlc1tpXS51cmw7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGlmIChpbmxpbmVJbWcpXG4gICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICBmb3IodmFyIGogPSAwOyBqIDwgaW5saW5lSW1nLmxlbmd0aDsgaisrKXtcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhciBmaWxlbmFtZSA9IGlubGluZUltZ1tqXS5zbGljZSg1LCAtMSk7IFxuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGZpbGVuYW1lLmluZGV4T2YoXCJfbGlua19cIikgPj0gMClcbiAgICAgICAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBmaWxlbmFtZSA9IGZpbGVuYW1lLnJlcGxhY2UoXCJfbGlua19cIiwgXCJcIik7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICBlbHNlXG4gICAgICAgICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZmlsZW5hbWUgPSBGaWxlVXJsSGVscGVyLm1hdGNoS2V5KGZpbGVuYW1lLnNsaWNlKDAsIC0zKSwgZmlsZWFycmF5KTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZihmaWxlbmFtZSAmJiB0eXBlb2YoZmlsZWFycmF5W2ZpbGVuYW1lXSkgIT09ICd1bmRlZmluZWQnICkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBmaWxlbmFtZSA9IGZpbGVhcnJheVtmaWxlbmFtZV07XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGVsc2VcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZmlsZW5hbWUgPSBcIlwiO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGZpbGVuYW1lLmxlbmd0aClcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBub3RlID0gRmlsZVVybEhlbHBlci5SZXBsYWNlQWxsKG5vdGUsIGlubGluZUltZ1tqXSwgRmlsZVVybEhlbHBlci5nZXRGaWxlTGluayhmaWxlbmFtZSxpbmxpbmVJbWdbal0uc2xpY2UoNSwgLTEpKSk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgLy9ub3RlID0gbm90ZS5yZXBsYWNlQWxsKFwiRm9sbG93aW5nIGZpbGUgd2FzIFwiLCBcIlwiKTtcbiAgICAgICAgICAgICAgICBpZiAobGVuZ3RoID4gMSkge1xuICAgICAgICAgICAgICAgICAgICAvL25vdGUgPSBub3RlLnJlcGxhY2VBbGwoXCJGb2xsb3dpbmcgZmlsZXMgd2VyZSBcIiwgXCJcIik7XG4gICAgICAgICAgICAgICAgICAgIG5vdGUgPSBGaWxlVXJsSGVscGVyLlJlcGxhY2VBbGwobm90ZSwgXCJhPixcIiwgXCJhPlwiKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgLy9ub3RlID0gbm90ZS5yZXBsYWNlQWxsKFwidXBsb2FkZWQ6XCIsIFwiXCIpO1xuICAgICAgICAgICAgICAgIG5vdGUgPSBGaWxlVXJsSGVscGVyLlJlcGxhY2VBbGwobm90ZSwgXCJhPi5cIiwgXCJhPlwiKTtcbiAgICAgICAgICAgICAgICAvL25vdGUgKz0gXCI8ZGl2IGNsYXNzPSdhdHRhY2htZW50Qm9yZGVyJz48L2Rpdj5cIjsgXG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gbm90ZTtcbiAgICAgICAgfSxcbiAgICAgICAgLy9nZXQgZmlsZSBvZiB0aGUgZm9sbGxvd2luZyBvcHRpb25zOiBmaWxlLCBuYW1lXG4gICAgICAgIGdldEZpbGVMaW5rIDogZnVuY3Rpb24gKGZpbGUsbmFtZSlcbiAgICAgICAge1xuICAgICAgICAgICAgdmFyIGltZyA9XCJcIjtcbiAgICAgICAgICAgIGlmIChGaWxlVXJsSGVscGVyLmNoZWNrVVJMKGZpbGUpIHx8IEZpbGVVcmxIZWxwZXIuY2hlY2tVUkwobmFtZSkpXG4gICAgICAgICAgICAgICAgaW1nID0gXCI8aW1nIGNsYXNzPVxcXCJhdHRhY2htZW50XFxcIiBzcmM9XFxcIlwiICsgZmlsZSArIFwiXFxcIj5cIjtcbiAgICAgICAgICAgIGVsc2VcbiAgICAgICAgICAgICAgICBpbWcgPSBcIjxpb24taWNvbiBuYW1lPVxcXCJtZC1kb2N1bWVudFxcXCIgcm9sZT1pbWcgZGFyayBjbGFzcz1cXFwiYnV0dG9uX2NpcmNsZSBpb24tbWQtZG9jdW1lbnRcXFwiIGFyaWEtbGFiZWw9XFxcIm1kLWRvY3VtZW50XFxcIj48L2lvbi1pY29uPiZuYnNwOzxzcGFuIGNsYXNzPVxcXCJkZWNvcmF0aW9uIHdpZHRoMTAwIGNvbG9yXFxcIj5cIiArIChuYW1lIHx8ICBkZWNvZGVVUklDb21wb25lbnQoZmlsZS5zcGxpdChcIi9cIikuc2xpY2UoLTEpKSkgKyBcIjwvc3Bhbj48cD48L3A+XCI7XG4gICAgICAgICAgICByZXR1cm4gXCI8cC8+PGEgY2xhc3M9XFxcImNvbW1lbnRfaW1hZ2VfbGluayBmaWxlcy10a3RzIGNvbG9yIG1hcmdpbi1yaWdodF8xMFxcXCJcIiArXG4gICAgICAgICAgICAgICAgKEZpbGVVcmxIZWxwZXIuaXNQaG9uZWdhcCgpIHx8IHRydWUgPyAoXCIgaHJlZj0jIG9uY2xpY2s9J3dyYXBwZXIub3BlbihcXFwiXCIgKyBmaWxlICsgXCJcXFwiLCBcXFwiX2JsYW5rXFxcIiwgXFxcImxvY2F0aW9uPW5vLEVuYWJsZVZpZXdQb3J0U2NhbGU9eWVzXFxcIiknPlwiICsgaW1nICsgXCI8L2E+XCIpIDpcbiAgICAgICAgICAgICAgICAgKFwiIHRhcmdldD1cXFwiX2JsYW5rXFxcIiBocmVmPVxcXCJcIiArZmlsZSArIFwiXFxcIj5cIitpbWcgKyBcIjwvYT5cIikpO1xuICAgICAgICB9XG4gICAgfTtcblxuZXhwb3J0IGZ1bmN0aW9uIG9wZW5VUkwodXJsU3RyaW5nKSB7XG4gICAgcmV0dXJuIEJyb3dzZXIub3Blbih7IHVybDogdXJsU3RyaW5nIH0pO1xuICAgIC8vcmV0dXJuIHdpbmRvdy5vcGVuKHVybFN0cmluZywgJ19ibGFuaycsICdsb2NhdGlvbj1ubyxFbmFibGVWaWV3UG9ydFNjYWxlPXllcycpO1xufVxuXG53cmFwcGVyLm9wZW4gPSBvcGVuVVJMO1xuXG4vL21vZHVsZS5leHBvcnRzLm9wZW5VUkwgPSBvcGVuVVJMO1xuXG4vL29wZW4gbGluayBpbiBzeXN0ZW1cbmV4cG9ydCBmdW5jdGlvbiBvcGVuVVJMc3lzdGVtKHVybFN0cmluZykge1xuICAgIC8vIEhhbmRsZSBjbGljayBldmVudHMgZm9yIGFsbCBleHRlcm5hbCBVUkxzXG4gICAgaWYgKGxvY2FsU3RvcmFnZS5nZXRJdGVtKFwiaXNQaG9uZWdhcFwiKSA9PT0gXCJ0cnVlXCIgJiYgZGV2aWNlKSB7XG4gICAgaWYgKGRldmljZS5wbGF0Zm9ybS50b1VwcGVyQ2FzZSgpID09PSAnQU5EUk9JRCcpIHtcbiAgICAgICAgcmV0dXJuIG5hdmlnYXRvci5hcHAubG9hZFVybCh1cmxTdHJpbmcsIHsgb3BlbkV4dGVybmFsOiB0cnVlIH0pO1xuICAgIH1cbiAgICBlbHNlIGlmIChkZXZpY2UucGxhdGZvcm0udG9VcHBlckNhc2UoKSA9PT0gJ0lPUycpIHtcbiAgICAgICByZXR1cm4gd2luZG93Lm9wZW4odXJsU3RyaW5nLCAnX3N5c3RlbScpO1xuICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIHdyYXBwZXIub3Blbih1cmxTdHJpbmcsICdfYmxhbmsnKTtcbn1cblxuLy9IVE1MIGRlY29kZVxuZXhwb3J0IGZ1bmN0aW9uIHN5bWJvbEVzY2FwZShzdHIpIHtcbiAgICByZXR1cm4gU3RyaW5nKHN0cilcbiAgICAvLy5yZXBsYWNlKC8mbHQ7L2csICc8JylcbiAgICAvLyAucmVwbGFjZSgvJmd0Oy9nLCAnPicpXG4gICAgLy8gLnJlcGxhY2UoLyZxdW90Oy9nLCAnXCInKVxuICAgIC8vIC5yZXBsYWNlKC8mYXBvczsvZywgXCInXCIpXG4gICAgLy8gLnJlcGxhY2UoLyYvZywgJyZhbXA7JylcbiAgICAgICAgLnJlcGxhY2UoLyZsdDticiZndDsvZ2ksIFwiXFxuXCIpXG4gICAgICAgIC5yZXBsYWNlKC88YnJcXHMqW1xcL10/Pi9naSwgXCJcXG5cIilcbiAgICAgICAgLnJlcGxhY2UoL1xcbi9nLCBcIjxwPjwvcD5cIik7XG5cbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGdldFBpY2tlckRhdGVUaW1lRm9ybWF0KHNob3dtb250aD8sIGlzdGltZT8pIHtcbiAgICBsZXQgZm9ybWF0IDogc3RyaW5nID0gXCJcIjtcbiAgICBpZiAoIXNob3dtb250aClcbiAgICAgICAgZm9ybWF0ID0gbG9jYWxTdG9yYWdlLmdldEl0ZW0oXCJkYXRlZm9ybWF0XCIpICE9PSBcIjFcIiA/IFwiTU0vREQvWVlZWVwiIDogXCJERC9NTS9ZWVlZXCI7XG4gICAgZWxzZVxuICAgICAgICBmb3JtYXQgPSBsb2NhbFN0b3JhZ2UuZ2V0SXRlbShcImRhdGVmb3JtYXRcIikgIT09IFwiMVwiID8gXCJNTU0gREQgLyBZWVlZXCIgOiBcIkREIE1NTSBZWVlZXCI7XG5cbiAgICByZXR1cm4gZm9ybWF0ICsgKGlzdGltZSA/IChsb2NhbFN0b3JhZ2UuZ2V0SXRlbShcInRpbWVmb3JtYXRcIikgIT09IFwiMVwiID8gXCIgaGg6bW0gQVwiIDogXCIgSEg6bW1cIikgOiBcIlwiKTtcbn1cblxuZnVuY3Rpb24gZ2V0RGF0ZVRpbWVGb3JtYXQoc2hvd21vbnRoPywgaXN0aW1lPykge1xuICAgIGxldCBmb3JtYXQgOiBzdHJpbmcgPSBcIlwiO1xuICAgIGlmICghc2hvd21vbnRoKSBcbiAgICAgICAgZm9ybWF0ID0gbG9jYWxTdG9yYWdlLmdldEl0ZW0oXCJkYXRlZm9ybWF0XCIpICE9PSBcIjFcIiA/IFwibS9kL3l5XCIgOiBcImQvbS95eVwiO1xuICAgIGVsc2VcbiAgICAgICAgZm9ybWF0ID0gbG9jYWxTdG9yYWdlLmdldEl0ZW0oXCJkYXRlZm9ybWF0XCIpICE9PSBcIjFcIiA/IFwibW1tIGQgLyB5eXl5XCIgOiBcImQgbW1tIHl5eXlcIjtcblxuICAgIHJldHVybiBmb3JtYXQgKyAoaXN0aW1lID8gKGxvY2FsU3RvcmFnZS5nZXRJdGVtKFwidGltZWZvcm1hdFwiKSAhPT0gXCIxXCIgPyBcIiBoaDpNTSBUVFwiIDogXCIgSEg6TU1cIikgOiBcIlwiKTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGdldERhdGVUaW1lKGRhdGUsIHNob3dtb250aD8sIGlzdGltZT8pIHtcbiAgICByZXR1cm4gZGF0ZUZvcm1hdChkYXRlLCBnZXREYXRlVGltZUZvcm1hdChzaG93bW9udGgsIGlzdGltZSkpO1xufVxuIFxuZXhwb3J0IGZ1bmN0aW9uIGdldEN1cnJlbmN5KHZhbHVlKSB7XG4gICAgcmV0dXJuIGxvY2FsU3RvcmFnZS5nZXRJdGVtKFwiY3VycmVuY3lcIikgKyBOdW1iZXIodmFsdWUgfHwgXCIwXCIpLnRvRml4ZWQoMikudG9TdHJpbmcoKTtcbn1cbiAgICBcbiAgICAvL2dldCB0aGUgZnVsbCBuYW1lIG9mIHRoZSBmb2xsb3dpbmcgb3B0aW9uczpmaXJzdG5hbWUsIGxhc3RuYW1lLCBlbWFpbCxuYW1lXG5leHBvcnQgZnVuY3Rpb24gZ2V0RnVsbE5hbWUgKGZpcnN0bmFtZSxsYXN0bmFtZSxlbWFpbCxuYW1lPykge1xuICAgICAgICB2YXIgZm5hbWUgPSBcIlwiO1xuICAgICAgICBpZiAobmFtZSlcbiAgICAgICAgICAgIGZuYW1lID0gbmFtZSArIFwiIFwiO1xuICAgICAgICBpZiAobGFzdG5hbWUpXG4gICAgICAgICAgICBmbmFtZSArPSBsYXN0bmFtZSArIFwiIFwiO1xuICAgICAgICBpZiAoZmlyc3RuYW1lKVxuICAgICAgICAgICAgZm5hbWUgKz0gZmlyc3RuYW1lICsgXCIgXCI7XG4gICAgICAgIGlmIChlbWFpbCAmJiBlbWFpbC5pbmRleE9mKFwiQFwiKSA+IDApe1xuICAgICAgICAgICAgaWYgKCFmbmFtZS50cmltKCkpXG4gICAgICAgICAgICAgICAgZm5hbWUgPSBlbWFpbDtcbiAgICAgICAgICAgIGVsc2UgaWYgKG5hbWUpXG4gICAgICAgICAgICAgICAgZm5hbWUgKz0gXCIgKFwiICsgZW1haWwgKyBcIilcIjtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gZm5hbWUgfHwgXCJOb05hbWVcIjtcbiAgICB9XG5cbmV4cG9ydCBmdW5jdGlvbiB0b1RpdGxlQ2FzZShzdHIpIHtcbiAgcmV0dXJuIHN0ci5yZXBsYWNlKC9cXHdcXFMqL2csIGZ1bmN0aW9uKHR4dCkgeyByZXR1cm4gdHh0LmNoYXJBdCgwKS50b1VwcGVyQ2FzZSgpICsgdHh0LnN1YnN0cigxKS50b0xvd2VyQ2FzZSgpOyB9KTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGdldGFwcFRyYWNrQ29udmVyc2lvbihpZCkge1xuICAgIHZhciByID0gZG9jdW1lbnQucmVmZXJyZXI7XG4gICAgdmFyIGggPSB3aW5kb3cubG9jYXRpb24uaHJlZjtcbiAgICB2YXIgcCA9ICcxJzsgLy8gUHJpY2Ugb2YgY29udmVyc2lvbiAob3B0aW9uYWwpXG4gICAgdmFyIGUgPSBpZCB8fCAnJzsgLy8gRXh0ZXJuYWwgSUQgKG9wdGlvbmFsKVxuICAgIHZhciBsaXN0aW5nX2lkID0gJzEwMjQ1OSc7XG5cbiAgICB2YXIgYSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3NjcmlwdCcpO1xuICAgIGEudHlwZSA9ICd0ZXh0L2phdmFzY3JpcHQnO1xuICAgIGEuYXN5bmMgPSB0cnVlO1xuICAgIGEuc3JjID0gJ2h0dHBzOi8vd3d3LmdldGFwcC5jb20vY29udmVyc2lvbi8nICsgZW5jb2RlVVJJQ29tcG9uZW50KGxpc3RpbmdfaWQpICtcbiAgICAgICAgJy9yLmpzP3A9JyArIGVuY29kZVVSSUNvbXBvbmVudChwKSArICcmaD0nICsgZW5jb2RlVVJJQ29tcG9uZW50KGgpICtcbiAgICAgICAgJyZyPScgKyBlbmNvZGVVUklDb21wb25lbnQocikgKyAnJmU9JyArIGVuY29kZVVSSUNvbXBvbmVudChlKTtcbiAgICB2YXIgcyA9IGRvY3VtZW50LmdldEVsZW1lbnRzQnlUYWdOYW1lKCdzY3JpcHQnKVswXTtcbiAgICBzLnBhcmVudE5vZGUuaW5zZXJ0QmVmb3JlKGEsIHMpO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gc3BpY2VQaXhlbFRyYWNrQ29udmVyc2lvbigpIHtcbiAgICB2YXIgaW1nID0gbmV3IEltYWdlKCk7XG4gICAgdmFyIGRpdiA9IGRvY3VtZW50LmdldEVsZW1lbnRzQnlUYWdOYW1lKCdib2R5JylbMF07XG5cbiAgICBpbWcub25sb2FkID0gZnVuY3Rpb24oKSB7XG4gICAgICAgIGRpdi5hcHBlbmRDaGlsZChpbWcpO1xuICAgIH07XG5cbiAgICBpbWcuc3JjID0gJ2h0dHA6Ly9weC5zcGljZXdvcmtzLmNvbS9weC84b3h6JztcbiAgICB2YXIgU1dQWCA9IFNXUFggfHwge307XG4gICAgU1dQWC5jbWQgPSBTV1BYLmNtZCB8fCBbXTtcbiAgICBTV1BYLmNtZC5wdXNoKGZ1bmN0aW9uKCkge1xuICAgICAgICBTV1BYLnBpeGVsLnNldFBpeGVsKCc4b3h6Jyk7XG4gICAgICAgIC8vIFVuY29tbWVudCB0aGUgZm9sbG93aW5nIGxpbmUgdG8gcGxhY2UgYW4gaWRlbnRpZmVyXG4gICAgICAgIFNXUFgucGl4ZWwuc2V0SWRlbnRpZmllcignMTIxODA2Jyk7XG4gICAgICAgIFNXUFgucGl4ZWwuZmlyZSgpO1xuICAgIH0pO1xufVxuXG52YXIgZGF0ZUZvcm1hdCA6IGFueSA9IGZ1bmN0aW9uIChkYXRlPywgbWFzaz8sIHV0Yz8pIHtcbiAgICB2YXIgdG9rZW4gPSAvZHsxLDR9fG17MSw0fXx5eSg/Onl5KT98KFtIaE1zVHRdKVxcMT98W0xsb1NaXXxcIlteXCJdKlwifCdbXiddKicvZyxcbiAgICAgICAgdGltZXpvbmUgPSAvXFxiKD86W1BNQ0VBXVtTRFBdVHwoPzpQYWNpZmljfE1vdW50YWlufENlbnRyYWx8RWFzdGVybnxBdGxhbnRpYykgKD86U3RhbmRhcmR8RGF5bGlnaHR8UHJldmFpbGluZykgVGltZXwoPzpHTVR8VVRDKSg/OlstK11cXGR7NH0pPylcXGIvZyxcbiAgICAgICAgdGltZXpvbmVDbGlwID0gL1teLStcXGRBLVpdL2csXG4gICAgICAgIHBhZCA9IGZ1bmN0aW9uICh2YWw/LCBsZW4/KSB7XG4gICAgICAgICAgICB2YWwgPSBTdHJpbmcodmFsKTtcbiAgICAgICAgICAgIGxlbiA9IGxlbiB8fCAyO1xuICAgICAgICAgICAgd2hpbGUgKHZhbC5sZW5ndGggPCBsZW4pIHZhbCA9IFwiMFwiICsgdmFsO1xuICAgICAgICAgICAgcmV0dXJuIHZhbDtcbiAgICAgICAgfTtcblxuICAgIC8vIFJlZ2V4ZXMgYW5kIHN1cHBvcnRpbmcgZnVuY3Rpb25zIGFyZSBjYWNoZWQgdGhyb3VnaCBjbG9zdXJlXG4gICAgcmV0dXJuIGZ1bmN0aW9uIChkYXRlLCBtYXNrLCB1dGMpIHtcbiAgICAgICAgdmFyIGRGID0gZGF0ZUZvcm1hdDtcblxuICAgICAgICAvLyBZb3UgY2FuJ3QgcHJvdmlkZSB1dGMgaWYgeW91IHNraXAgb3RoZXIgYXJncyAodXNlIHRoZSBcIlVUQzpcIiBtYXNrIHByZWZpeClcbiAgICAgICAgaWYgKGFyZ3VtZW50cy5sZW5ndGggPT0gMSAmJiBPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwoZGF0ZSkgPT0gXCJbb2JqZWN0IFN0cmluZ11cIiAmJiAhL1xcZC8udGVzdChkYXRlKSkge1xuICAgICAgICAgICAgbWFzayA9IGRhdGU7XG4gICAgICAgICAgICBkYXRlID0gdW5kZWZpbmVkO1xuICAgICAgICB9XG5cbiAgICAgICAgLy8gUGFzc2luZyBkYXRlIHRocm91Z2ggRGF0ZSBhcHBsaWVzIERhdGUucGFyc2UsIGlmIG5lY2Vzc2FyeVxuICAgICAgICBkYXRlID0gZGF0ZSA/IG5ldyBEYXRlKGRhdGUpIDogbmV3IERhdGU7XG4gICAgICAgIGlmIChpc05hTihkYXRlKSkgdGhyb3cgU3ludGF4RXJyb3IoXCJpbnZhbGlkIGRhdGVcIik7XG5cbiAgICAgICAgbWFzayA9IFN0cmluZyhkRi5tYXNrc1ttYXNrXSB8fCBtYXNrIHx8IGRGLm1hc2tzW1wiZGVmYXVsdFwiXSk7XG5cbiAgICAgICAgLy8gQWxsb3cgc2V0dGluZyB0aGUgdXRjIGFyZ3VtZW50IHZpYSB0aGUgbWFza1xuICAgICAgICBpZiAobWFzay5zbGljZSgwLCA0KSA9PSBcIlVUQzpcIikge1xuICAgICAgICAgICAgbWFzayA9IG1hc2suc2xpY2UoNCk7XG4gICAgICAgICAgICB1dGMgPSB0cnVlO1xuICAgICAgICB9XG5cbiAgICAgICAgdmFyICAgIF8gPSB1dGMgPyBcImdldFVUQ1wiIDogXCJnZXRcIixcbiAgICAgICAgICAgIGQgPSBkYXRlW18gKyBcIkRhdGVcIl0oKSxcbiAgICAgICAgICAgIEQgPSBkYXRlW18gKyBcIkRheVwiXSgpLFxuICAgICAgICAgICAgbSA9IGRhdGVbXyArIFwiTW9udGhcIl0oKSxcbiAgICAgICAgICAgIHkgPSBkYXRlW18gKyBcIkZ1bGxZZWFyXCJdKCksXG4gICAgICAgICAgICBIID0gZGF0ZVtfICsgXCJIb3Vyc1wiXSgpLFxuICAgICAgICAgICAgTSA9IGRhdGVbXyArIFwiTWludXRlc1wiXSgpLFxuICAgICAgICAgICAgcyA9IGRhdGVbXyArIFwiU2Vjb25kc1wiXSgpLFxuICAgICAgICAgICAgTCA9IGRhdGVbXyArIFwiTWlsbGlzZWNvbmRzXCJdKCksXG4gICAgICAgICAgICBvID0gdXRjID8gMCA6IGRhdGUuZ2V0VGltZXpvbmVPZmZzZXQoKSxcbiAgICAgICAgICAgIGZsYWdzID0ge1xuICAgICAgICAgICAgICAgIGQ6ICAgIGQsXG4gICAgICAgICAgICAgICAgZGQ6ICAgcGFkKGQpLFxuICAgICAgICAgICAgICAgIGRkZDogIGRGLmkxOG4uZGF5TmFtZXNbRF0sXG4gICAgICAgICAgICAgICAgZGRkZDogZEYuaTE4bi5kYXlOYW1lc1tEICsgN10sXG4gICAgICAgICAgICAgICAgbTogICAgbSArIDEsXG4gICAgICAgICAgICAgICAgbW06ICAgcGFkKG0gKyAxKSxcbiAgICAgICAgICAgICAgICBtbW06ICBkRi5pMThuLm1vbnRoTmFtZXNbbV0sXG4gICAgICAgICAgICAgICAgbW1tbTogZEYuaTE4bi5tb250aE5hbWVzW20gKyAxMl0sXG4gICAgICAgICAgICAgICAgeXk6ICAgU3RyaW5nKHkpLnNsaWNlKDIpLFxuICAgICAgICAgICAgICAgIHl5eXk6IHksXG4gICAgICAgICAgICAgICAgaDogICAgSCAlIDEyIHx8IDEyLFxuICAgICAgICAgICAgICAgIGhoOiAgIHBhZChIICUgMTIgfHwgMTIpLFxuICAgICAgICAgICAgICAgIEg6ICAgIEgsXG4gICAgICAgICAgICAgICAgSEg6ICAgcGFkKEgpLFxuICAgICAgICAgICAgICAgIE06ICAgIE0sXG4gICAgICAgICAgICAgICAgTU06ICAgcGFkKE0pLFxuICAgICAgICAgICAgICAgIHM6ICAgIHMsXG4gICAgICAgICAgICAgICAgc3M6ICAgcGFkKHMpLFxuICAgICAgICAgICAgICAgIGw6ICAgIHBhZChMLCAzKSxcbiAgICAgICAgICAgICAgICBMOiAgICBwYWQoTCA+IDk5ID8gTWF0aC5yb3VuZChMIC8gMTApIDogTCksXG4gICAgICAgICAgICAgICAgdDogICAgSCA8IDEyID8gXCJhXCIgIDogXCJwXCIsXG4gICAgICAgICAgICAgICAgdHQ6ICAgSCA8IDEyID8gXCJhbVwiIDogXCJwbVwiLFxuICAgICAgICAgICAgICAgIFQ6ICAgIEggPCAxMiA/IFwiQVwiICA6IFwiUFwiLFxuICAgICAgICAgICAgICAgIFRUOiAgIEggPCAxMiA/IFwiQU1cIiA6IFwiUE1cIixcbiAgICAgICAgICAgICAgICBaOiAgICB1dGMgPyBcIlVUQ1wiIDogKFN0cmluZyhkYXRlKS5tYXRjaCh0aW1lem9uZSkgfHwgW1wiXCJdKS5wb3AoKS5yZXBsYWNlKHRpbWV6b25lQ2xpcCwgXCJcIiksXG4gICAgICAgICAgICAgICAgbzogICAgKG8gPiAwID8gXCItXCIgOiBcIitcIikgKyBwYWQoTWF0aC5mbG9vcihNYXRoLmFicyhvKSAvIDYwKSAqIDEwMCArIE1hdGguYWJzKG8pICUgNjAsIDQpLFxuICAgICAgICAgICAgICAgIFM6ICAgIFtcInRoXCIsIFwic3RcIiwgXCJuZFwiLCBcInJkXCJdW2QgJSAxMCA+IDMgPyAwIDogTnVtYmVyKGQgJSAxMDAgLSBkICUgMTAgIT0gMTApICogZCAlIDEwXVxuICAgICAgICAgICAgfTtcblxuICAgICAgICByZXR1cm4gbWFzay5yZXBsYWNlKHRva2VuLCBmdW5jdGlvbiAoJDApIHtcbiAgICAgICAgICAgIHJldHVybiAkMCBpbiBmbGFncyA/IGZsYWdzWyQwXSA6ICQwLnNsaWNlKDEsICQwLmxlbmd0aCAtIDEpO1xuICAgICAgICB9KTtcbiAgICB9O1xufSgpO1xuXG4vLyBTb21lIGNvbW1vbiBmb3JtYXQgc3RyaW5nc1xuZGF0ZUZvcm1hdC5tYXNrcyA9IHtcbiAgICBcImRlZmF1bHRcIjogICAgICBcImRkZCBtbW0gZGQgeXl5eSBISDpNTTpzc1wiLFxuICAgIHNob3J0RGF0ZTogICAgICBcIm0vZC95eVwiLFxuICAgIG1lZGl1bURhdGU6ICAgICBcIm1tbSBkLCB5eXl5XCIsXG4gICAgbG9uZ0RhdGU6ICAgICAgIFwibW1tbSBkLCB5eXl5XCIsXG4gICAgZnVsbERhdGU6ICAgICAgIFwiZGRkZCwgbW1tbSBkLCB5eXl5XCIsXG4gICAgc2hvcnRUaW1lOiAgICAgIFwiaDpNTSBUVFwiLFxuICAgIG1lZGl1bVRpbWU6ICAgICBcImg6TU06c3MgVFRcIixcbiAgICBsb25nVGltZTogICAgICAgXCJoOk1NOnNzIFRUIFpcIixcbiAgICBpc29EYXRlOiAgICAgICAgXCJ5eXl5LW1tLWRkXCIsXG4gICAgaXNvVGltZTogICAgICAgIFwiSEg6TU06c3NcIixcbiAgICBpc29EYXRlVGltZTogICAgXCJ5eXl5LW1tLWRkJ1QnSEg6TU06c3NcIixcbiAgICBpc29VdGNEYXRlVGltZTogXCJVVEM6eXl5eS1tbS1kZCdUJ0hIOk1NOnNzJ1onXCJcbn07XG5cbi8vIEludGVybmF0aW9uYWxpemF0aW9uIHN0cmluZ3NcbmRhdGVGb3JtYXQuaTE4biA9IHtcbiAgICBkYXlOYW1lczogW1xuICAgICAgICBcIlN1blwiLCBcIk1vblwiLCBcIlR1ZVwiLCBcIldlZFwiLCBcIlRodVwiLCBcIkZyaVwiLCBcIlNhdFwiLFxuICAgICAgICBcIlN1bmRheVwiLCBcIk1vbmRheVwiLCBcIlR1ZXNkYXlcIiwgXCJXZWRuZXNkYXlcIiwgXCJUaHVyc2RheVwiLCBcIkZyaWRheVwiLCBcIlNhdHVyZGF5XCJcbiAgICBdLFxuICAgIG1vbnRoTmFtZXM6IFtcbiAgICAgICAgXCJKYW5cIiwgXCJGZWJcIiwgXCJNYXJcIiwgXCJBcHJcIiwgXCJNYXlcIiwgXCJKdW5cIiwgXCJKdWxcIiwgXCJBdWdcIiwgXCJTZXBcIiwgXCJPY3RcIiwgXCJOb3ZcIiwgXCJEZWNcIixcbiAgICAgICAgXCJKYW51YXJ5XCIsIFwiRmVicnVhcnlcIiwgXCJNYXJjaFwiLCBcIkFwcmlsXCIsIFwiTWF5XCIsIFwiSnVuZVwiLCBcIkp1bHlcIiwgXCJBdWd1c3RcIiwgXCJTZXB0ZW1iZXJcIiwgXCJPY3RvYmVyXCIsIFwiTm92ZW1iZXJcIiwgXCJEZWNlbWJlclwiXG4gICAgXVxufTsiLCJpbXBvcnQge1BhZ2UsIENvbmZpZywgTmF2LCBOYXZQYXJhbXMsIFZpZXdDb250cm9sbGVyfSBmcm9tICdpb25pYy1hbmd1bGFyJztcbmltcG9ydCB7VGlja2V0UHJvdmlkZXIsIEFwaURhdGF9IGZyb20gJy4uLy4uL3Byb3ZpZGVycy9wcm92aWRlcnMnO1xuaW1wb3J0IHtEYXRhUHJvdmlkZXJ9IGZyb20gJy4uLy4uL3Byb3ZpZGVycy9kYXRhLXByb3ZpZGVyJztcbmltcG9ydCB7SW52b2ljZXNQYWdlfSBmcm9tICcuLi9pbnZvaWNlcy9pbnZvaWNlcyc7XG5pbXBvcnQge1RpbWVsb2dzUGFnZX0gZnJvbSAnLi4vdGltZWxvZ3MvdGltZWxvZ3MnO1xuaW1wb3J0IHtDb250cmFjdHNQYWdlfSBmcm9tICcuLi9jb250cmFjdHMvY29udHJhY3RzJztcbmltcG9ydCB7RmlsZVVybEhlbHBlciwgYWRkcH0gZnJvbSAnLi4vLi4vZGlyZWN0aXZlcy9oZWxwZXJzJztcbmltcG9ydCB7VGlja2V0c0xpc3RDb21wb25lbnR9IGZyb20gJy4uLy4uL2NvbXBvbmVudHMvdGlja2V0cy1saXN0L3RpY2tldHMtbGlzdCc7XG5pbXBvcnQge1RpY2tldERldGFpbHNQYWdlfSBmcm9tICcuLi90aWNrZXQtZGV0YWlscy90aWNrZXQtZGV0YWlscyc7XG5pbXBvcnQge0FjdGlvbkJ1dHRvbkNvbXBvbmVudH0gZnJvbSAnLi4vLi4vY29tcG9uZW50cy9hY3Rpb24tYnV0dG9uL2FjdGlvbi1idXR0b24nO1xuaW1wb3J0IHtNb3JlUGlwZX0gZnJvbSAnLi4vLi4vcGlwZXMvcGlwZXMnO1xuaW1wb3J0IHtFeHBlbnNlc1BhZ2V9IGZyb20gJy4uL2V4cGVuc2VzL2V4cGVuc2VzJztcbmltcG9ydCB7QWpheFNlYXJjaFBhZ2V9IGZyb20gJy4uL2FqYXgtc2VhcmNoL2FqYXgtc2VhcmNoJztcblxuQFBhZ2Uoe1xuICB0ZW1wbGF0ZVVybDogJ2J1aWxkL3BhZ2VzL2FjY291bnQtZGV0YWlscy9hY2NvdW50LWRldGFpbHMuaHRtbCcsXG4gICAgZGlyZWN0aXZlczogW1RpY2tldHNMaXN0Q29tcG9uZW50LCBBY3Rpb25CdXR0b25Db21wb25lbnRdLFxuICAgIHBpcGVzOiBbTW9yZVBpcGVdLFxufSlcbmV4cG9ydCBjbGFzcyBBY2NvdW50RGV0YWlsc1BhZ2Uge1xuXG4gICAgYWNjb3VudDogYW55O1xuICAgIHBhZ2VzOiBBcnJheTxhbnk+O1xuICAgIGRldGFpbHNfdGFiOiBzdHJpbmc7XG4gICAgdGFic1RpY2tldDogc3RyaW5nOyBcbiAgICBpc19lZGl0bm90ZTogYm9vbGVhbiA9IHRydWU7XG4gICAgaXNfcmVhZHk6IGJvb2xlYW4gPSBmYWxzZTtcbiAgICBzZWFyY2hfcmVzdWx0czogYW55O1xuICAgIHRlc3Q6IGJvb2xlYW47XG4gICAgdGVybTogc3RyaW5nID0gJyc7XG4gICAgYnVzeTogYm9vbGVhbjtcblxuICAgIGNvbnN0cnVjdG9yKHByaXZhdGUgbmF2OiBOYXYsIHByaXZhdGUgbmF2UGFyYW1zOiBOYXZQYXJhbXMscHJpdmF0ZSBhcGlEYXRhOiBBcGlEYXRhLCBwcml2YXRlIGRhdGFQcm92aWRlcjogRGF0YVByb3ZpZGVyLCBwcml2YXRlIHRpY2tldFByb3ZpZGVyOiBUaWNrZXRQcm92aWRlciwgcHJpdmF0ZSBjb25maWc6IENvbmZpZywgcHJpdmF0ZSB2aWV3OiBWaWV3Q29udHJvbGxlcikge1xuICAgICAgICB0aGlzLmRldGFpbHNfdGFiID0gXCJTdGF0XCI7XG4gICAgICAgIHRoaXMucGFnZXMgPSBbQ29udHJhY3RzUGFnZSwgRXhwZW5zZXNQYWdlLCBUaW1lbG9nc1BhZ2VdO1xuICB9XG5cbiAgICAgIG9uUGFnZURpZEVudGVyKCkge1xuICAgICAgICB2YXIgdCA9IGRvY3VtZW50LmdldEVsZW1lbnRzQnlDbGFzc05hbWUoXCJzZWFyY2hiYXItaW5wdXRcIik7XG4gICAgICAgIHQgPSB0W3QubGVuZ3RoIC0gMV07XG4gICAgICAgIHQgJiYgdC5mb2N1cygpO1xuICAgIH1cbiAgICBcbiAgICBvblBhZ2VMb2FkZWQoKVxuICAgIHtcbiAgICAgICAgLy8gSWYgd2UgbmF2aWdhdGVkIHRvIHRoaXMgcGFnZSwgd2Ugd2lsbCBoYXZlIGFuIGl0ZW0gYXZhaWxhYmxlIGFzIGEgbmF2IHBhcmFtXG4gICAgICAgIHRoaXMuYWNjb3VudCA9IHRoaXMubmF2UGFyYW1zLmRhdGEgfHwge307XG4gICAgICAgIHRoaXMuZGV0YWlsc190YWIgPSBcIlN0YXRcIjtcbiAgICAgICAgdGhpcy50YWJzVGlja2V0ID0gXCJPcGVuXCI7XG4gICAgfVxuXG4gICAgb25QYWdlV2lsbEVudGVyKClcbntcbiAgdGhpcy50aWNrZXRQcm92aWRlci5nZXRUaWNrZXRzTGlzdChcIm9wZW5cIiwgdGhpcy5hY2NvdW50LmlkLCBcIlwiLHsgXCJsaW1pdFwiOiAyNSB9KTtcbiAgICAgdGhpcy52aWV3LnNldEJhY2tCdXR0b25UZXh0KCcnKTtcbiAgICAgICAgICAgIHRoaXMuZGF0YVByb3ZpZGVyLmdldEFjY291bnREZXRhaWxzKHRoaXMuYWNjb3VudC5pZCkuc3Vic2NyaWJlKFxuICAgIGRhdGEgPT4ge1xuICAgICAgICB0aGlzLmFjY291bnQgPSBkYXRhO1xuICAgICAgICB0aGlzLmlzX2VkaXRub3RlID0gISh0aGlzLmFjY291bnQubm90ZSB8fCBcIlwiKS5sZW5ndGg7XG4gICAgICAgIHRoaXMuaXNfcmVhZHkgPSB0cnVlO1xuICAgIH0sXG4gICAgZXJyb3IgPT4ge1xuICAgICAgICBjb25zb2xlLmxvZyhlcnJvciB8fCAnU2VydmVyIGVycm9yJyk7XG4gICAgfVxuKTsgXG4gICAgICAgIH1cblxuICAgIHNhdmVOb3RlKGZvcm0pIHtcbiAgICAgICAgdmFyIG5vdGUgPSAoZm9ybS52YWx1ZSB8fCBcIlwiKS50cmltKCk7IFxuICAgICAgICBpZiAobm90ZSAhPSAodGhpcy5hY2NvdW50Lm5vdGUgfHwgXCJcIikudHJpbSgpKSB7XG4gICAgICAgIHRoaXMuZGF0YVByb3ZpZGVyLmFkZEFjY291bnROb3RlKHRoaXMuYWNjb3VudC5pZCwgbm90ZSkuc3Vic2NyaWJlKFxuICAgICAgICAgICAgZGF0YSA9PiB0aGlzLnNhdmVOb3RlU3VjY2Vzcyhub3RlKSxcbiAgICAgICAgICAgIGVycm9yID0+IHtcbiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhlcnJvciB8fCAnU2VydmVyIGVycm9yJyk7XG4gICAgICAgICAgICB9XG4gICAgICAgICk7fVxuICAgICAgICBlbHNlXG4gICAgICAgIHRoaXMuc2F2ZU5vdGVTdWNjZXNzKG5vdGUpO1xuICAgIH1cblxuICAgIHNhdmVOb3RlU3VjY2Vzcyhub3RlKXtcbiAgICAgICAgdGhpcy5uYXYuYWxlcnQoJ05vdGUgc2F2ZWQgOiknKTtcbiAgICAgICAgdGhpcy5hY2NvdW50Lm5vdGUgPSAobm90ZSB8fCBcIlwiKS50cmltKCk7XG4gICAgICAgIHRoaXMuaXNfZWRpdG5vdGUgPSAhdGhpcy5hY2NvdW50Lm5vdGUubGVuZ3RoO1xuICAgIH1cblxuICAgIG9uRGVsZXRlKGZpbGUpe1xuICAgICBsZXQgZGF0YSA9IHtcbiAgICAgICBcImZpbGVfaWRcIjogZmlsZS5pZFxuICAgICB9O1xuXG4gICAgIHRoaXMuZGF0YVByb3ZpZGVyLmRlbGV0ZUZpbGUoZGF0YSkuc3Vic2NyaWJlKFxuICAgICAgIGRhdGEgPT4ge1xuICAgICAgICAgdGhpcy5hY2NvdW50LmZpbGVzID0gdGhpcy5hY2NvdW50LmZpbGVzLmZpbHRlcihpdGVtID0+IGl0ZW0gIT09IGZpbGUpO1xuICAgICAgICAgdGhpcy5uYXYuYWxlcnQoYEZpbGUgJHtmaWxlLm5hbWV9IGRlbGV0ZWQhYCk7XG4gICAgICAgfSxcbiAgICAgICBlcnJvciA9PiB7XG4gICAgICAgICBjb25zb2xlLmxvZyhlcnJvciB8fCAnU2VydmVyIGVycm9yJyk7XG4gICAgICAgfVxuICAgICAgICk7XG4gICB9XG5cbiAgICBvcGVuUGFnZShwYWdlLCBjb3VudClcbiAgICB7XG4gICAgICAgIHNldFRpbWVvdXQoKCkgPT5cbiAgICAgICAgdGhpcy5uYXYucHVzaCh0aGlzLnBhZ2VzW3BhZ2VdLCB7XCJpc19lbXB0eVwiOiAhY291bnQgJiYgIXRoaXMuaXNfcmVhZHksIFwiYWNjb3VudF9pZFwiOiB0aGlzLmFjY291bnQuaWQgfHwgXCItMVwiLCBcImFjY291bnRfbmFtZVwiOiB0aGlzLmFjY291bnQubmFtZX0pLFxuICAgICAgICB0aGlzLmlzX3JlYWR5ID8gMCA6IDIwMDApO1xuICAgIH1cbiAgICBcbiAgICBnZXRGaWxlTGluayhmaWxlKSB7XG4gICAgICAgIHJldHVybiBGaWxlVXJsSGVscGVyLmdldEZpbGVMaW5rKGZpbGUudXJsLGZpbGUubmFtZSk7XG4gICAgfVxuXG4gICAgYWRkRmlsZXNCdXR0b24oKSB7XG4gICAgY29uc29sZS5sb2coXCJGdW5jdGlvbiBjb25uZWN0XCIpO1xuICAgICAgIFxuICAgIH1cbiAgICBnb3RvVGlja2V0KGRhdGEpXG4gICAge1xuICAgICAgdGhpcy50ZXN0ID0gZmFsc2U7XG4gICAgICB0aGlzLmNsZWFyU2VhcmNoKCk7XG4gICAgICBpZiAoZGF0YSlcbiAgICAgIHtcbiAgICAgICAgc2V0VGltZW91dCgoKSA9PiB7XG4gICAgICAgICAgdGhpcy5uYXYucHVzaChUaWNrZXREZXRhaWxzUGFnZSwgZGF0YSk7XG4gICAgICAgIH0sIDUwMCk7XG4gICAgICB9XG4gICAgfVxuICAgIHNlYXJjaEl0ZW1zKHNlYXJjaGJhcikge1xuICAgICAgLy8gUmVzZXQgaXRlbXMgYmFjayB0byBhbGwgb2YgdGhlIGl0ZW1zXG4gICAgICB0aGlzLnNlYXJjaF9yZXN1bHRzID0gW107XG5cbiAgICAgIC8vIHNldCBxIHRvIHRoZSB2YWx1ZSBvZiB0aGUgc2VhcmNoYmFyXG4gICAgICB2YXIgcSA9IHNlYXJjaGJhci52YWx1ZTtcblxuICAgICAgLy8gaWYgdGhlIHZhbHVlIGlzIGFuIGVtcHR5IHN0cmluZyBkb24ndCBmaWx0ZXIgdGhlIHNlYXJjaF9yZXN1bHRzXG4gICAgICBpZiAocS50cmltKCkgPT0gJycgfHwgdGhpcy5idXN5KSB7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cblxuICAgICAgaWYgKHEubGVuZ3RoID4gMSlcbiAgICAgIHtcbiAgICAgICAgdmFyIHRpbWVyID0gc2V0VGltZW91dCgoKSA9PiB7IHRoaXMuYnVzeSA9IHRydWU7IH0sIDUwMCk7XG4gICAgICAgIHRoaXMuc2VhcmNoSXRlbXNBUEkocSwgdGltZXIpO1xuICAgICAgfVxuICAgIH1cblxuICAgIHNlYXJjaEl0ZW1zQVBJKHRlcm0sIHRpbWVyKSB7XG4gICAgICB0aGlzLnNlYXJjaF9yZXN1bHRzID0gW107XG4gICAgICBsZXQgdXJsID0gXCJ0aWNrZXRzP3F1ZXJ5PWFsbCZhY2NvdW50PVwiK3RoaXMuYWNjb3VudC5pZDsgLy9zdGF0dXM9YWxsb3BlbiZcbiAgICAgIGxldCBwYWdlciA9IHsgbGltaXQ6IDMgfTtcbiAgICAgIHRoaXMuYXBpRGF0YS5nZXRQYWdlZChhZGRwKHVybCwgXCJzZWFyY2hcIiwgdGVybSArIFwiKlwiKSwgcGFnZXIpLnN1YnNjcmliZShcbiAgICAgICAgZGF0YSA9PiB7XG4gICAgICAgICAgaWYgKHRpbWVyKSB7XG4gICAgICAgICAgICBjbGVhclRpbWVvdXQodGltZXIpO1xuICAgICAgICAgICAgdGhpcy5idXN5ID0gZmFsc2U7XG4gICAgICAgICAgfVxuICAgICAgICAgIHRoaXMuc2VhcmNoX3Jlc3VsdHMgPSBkYXRhO1xuICAgICAgICB9LFxuICAgICAgICBlcnJvciA9PiB7XG4gICAgICAgICAgaWYgKHRpbWVyKSB7XG4gICAgICAgICAgICBjbGVhclRpbWVvdXQodGltZXIpO1xuICAgICAgICAgICAgdGhpcy5idXN5ID0gZmFsc2U7XG4gICAgICAgICAgfVxuICAgICAgICAgIGNvbnNvbGUubG9nKGVycm9yIHx8ICdTZXJ2ZXIgZXJyb3InKTtcbiAgICAgICAgfVxuICAgICAgICApO1xuICAgIH1cblxuXG4gICAgY2xlYXJTZWFyY2goc2VhcmNoYmFyPylcbiAgICB7XG4gICAgICB0aGlzLnNlYXJjaF9yZXN1bHRzID0gW107XG4gICAgICB0aGlzLmJ1c3kgPSBmYWxzZTtcbiAgICAgIGlmIChzZWFyY2hiYXIpIHNlYXJjaGJhci52YWx1ZSA9IFwiXCI7XG4gICAgfVxuXG4gICAgZ2V0U2VhcmNoKHNlYXJjaGJhcikge1xuICAgICAgdGhpcy50ZXN0ID0gZmFsc2U7XG4gICAgICB0aGlzLmNsZWFyU2VhcmNoKCk7XG4gICAgICAvLyBSZXNldCBpdGVtcyBiYWNrIHRvIGFsbCBvZiB0aGUgaXRlbXNcbiAgICAgIC8vIHNldCBxIHRvIHRoZSB2YWx1ZSBvZiB0aGUgc2VhcmNoYmFyXG4gICAgICBsZXQgdGVybSA9IHNlYXJjaGJhci50YXJnZXQudmFsdWU7XG4gICAgICBpZiAodGVybS5sZW5ndGggPCA0KVxuICAgICAgICB0ZXJtICs9IFwiICAgIFwiO1xuICAgICAgbGV0IGxpc3QgPSB7IHNlYXJjaDogdGVybSwgbG9jYXRpb246IHRoaXMuYWNjb3VudCB9O1xuICAgICAgdGhpcy50ZXN0ID0gZmFsc2U7XG4gICAgICB0aGlzLm5hdi5wdXNoKEFqYXhTZWFyY2hQYWdlLCBsaXN0KTtcbiAgICB9XG5cbiAgICB0b2dnbGUoKXtcbiAgICAgICAgdGhpcy50ZXN0ID0gIXRoaXMudGVzdDtcbiAgICAgICAgaWYgKHRoaXMudGVzdCl7XG4gICAgICAgICAgICBzZXRUaW1lb3V0KCgpID0+IHtcbiAgICAgICAgdmFyIHQgPSBkb2N1bWVudC5nZXRFbGVtZW50c0J5Q2xhc3NOYW1lKFwic2VhcmNoYmFyLWlucHV0XCIpO1xuICAgICAgICB0ID0gdFt0Lmxlbmd0aCAtIDFdO1xuICAgICAgICB0ICYmIHQuZm9jdXMoKTtcbiAgICAgICAgfSwgNTAwKTtcbiAgICAgICAgfVxuICAgIH1cblxuICB9XG5cbiIsImltcG9ydCB7UGFnZSwgQ29uZmlnLCBOYXZ9IGZyb20gJ2lvbmljLWFuZ3VsYXInO1xuaW1wb3J0IHtEYXRhUHJvdmlkZXJ9IGZyb20gJy4uLy4uL3Byb3ZpZGVycy9kYXRhLXByb3ZpZGVyJztcbmltcG9ydCB7QWpheFNlYXJjaFBhZ2V9IGZyb20gJy4uL2FqYXgtc2VhcmNoL2FqYXgtc2VhcmNoJztcbmltcG9ydCB7QWNjb3VudHNMaXN0Q29tcG9uZW50LCBBY3Rpb25CdXR0b25Db21wb25lbnR9IGZyb20gJy4uLy4uL2NvbXBvbmVudHMvY29tcG9uZW50cyc7XG5cblxuQFBhZ2Uoe1xuICB0ZW1wbGF0ZVVybDogJ2J1aWxkL3BhZ2VzL2FjY291bnRzL2FjY291bnRzLmh0bWwnLFxuICAgIGRpcmVjdGl2ZXM6IFtBY2NvdW50c0xpc3RDb21wb25lbnQsIEFjdGlvbkJ1dHRvbkNvbXBvbmVudF0sXG59KVxuZXhwb3J0IGNsYXNzIEFjY291bnRzUGFnZSB7XG5cbiAgICBjb3VudDogbnVtYmVyO1xuICAgIGlzX2VtcHR5OiBib29sZWFuO1xuICAgIGJ1c3k6IGJvb2xlYW47XG4gICAgcGFyYW1zOiBhbnk7XG4gICAgdGVybTogc3RyaW5nID0gJyc7XG4gICAgcGFnZXI6IGFueTtcbiAgICB0ZXN0OiBib29sZWFuO1xuICAgIHNlYXJjaF9yZXN1bHRzOiBhbnk7XG4gICAgYWNjb3VudHM6IEFycmF5PGFueT47XG4gICAgaXRlbXM6IGFueSA9IFtdO1xuICAgIExJTUlUOiBudW1iZXIgPSAyNTA7XG5cbiAgICBjb25zdHJ1Y3Rvcihwcml2YXRlIG5hdjogTmF2LCBwcml2YXRlIGNvbmZpZzogQ29uZmlnLCBwcml2YXRlIGRhdGFQcm92aWRlcjogRGF0YVByb3ZpZGVyKSB7XG4gIH1cblxuXG5cbiAgICBvblBhZ2VMb2FkZWQoKVxuICAgIHtcbiAgICAgICAgdGhpcy5wYWdlciA9IHsgcGFnZTogMCwgbGltaXQ6IHRoaXMuTElNSVQgfTtcblxuICAgICAgICB2YXIgdGltZXIgPSBzZXRUaW1lb3V0KCgpID0+IHtcbiAgICAgICAgICAgIHRoaXMuYnVzeSA9IHRydWU7XG4gICAgICAgIH0sIDUwMCk7XG5cbiAgICAgICAgdGhpcy5nZXRJdGVtcyhudWxsLCB0aW1lcik7XG4gICAgfVxuXG4gICAgZ2V0SXRlbXMoaW5maW5pdGVTY3JvbGwsIHRpbWVyKSB7XG4gICAgICAgIHRoaXMuZGF0YVByb3ZpZGVyLmdldEFjY291bnRMaXN0KGZhbHNlLCB0aGlzLnBhZ2VyLCB0cnVlLCB0cnVlKS5zdWJzY3JpYmUoXG4gICAgICAgICAgICBkYXRhID0+IHtcbiAgICAgICAgICAgICAgICBpZiAodGltZXIpIHtcbiAgICAgICAgICAgICAgICAgICAgY2xlYXJUaW1lb3V0KHRpbWVyKTtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5idXN5ID0gZmFsc2U7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuYWNjb3VudHMgPSBkYXRhO1xuICAgICAgICAgICAgICAgICAgICAvL3RoaXMuY29uZmlnLnNldFN0YXQoXCJhY2NvdW50c1wiLCBkYXRhLmxlbmd0aCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGVsc2VcbiAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuYWNjb3VudHMucHVzaCguLi5kYXRhKTtcbiAgICAgICAgICAgICAgICAgICAgLy9UT0RPOiBob3cgZG8gZ2V0IGFjY291bnRzIHN0YXRcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5jb25maWcuY3VycmVudC5zdGF0LmFjY291bnRzICs9IGRhdGEubGVuZ3RoO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBpZiAoaW5maW5pdGVTY3JvbGwpIHtcbiAgICAgICAgICAgICAgICAgICAgaW5maW5pdGVTY3JvbGwuZW5hYmxlKGRhdGEubGVuZ3RoID09IHRoaXMuTElNSVQpO1xuICAgICAgICAgICAgICAgICAgICBpbmZpbml0ZVNjcm9sbC5jb21wbGV0ZSgpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB0aGlzLmNvdW50ID0gZGF0YS5sZW5ndGg7XG4gICAgICAgICAgICAgICAgdGhpcy5zZWFyY2hJdGVtcyh7dmFsdWUgOiB0aGlzLnRlcm19KTtcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBlcnJvciA9PiB7XG4gICAgICAgICAgICAgICAgaWYgKHRpbWVyKSB7XG4gICAgICAgICAgICAgICAgICAgIGNsZWFyVGltZW91dCh0aW1lcik7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuYnVzeSA9IGZhbHNlO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhlcnJvciB8fCAnU2VydmVyIGVycm9yJyk7XG4gICAgICAgICAgICB9XG4gICAgICAgICk7XG4gICAgfVxuXG4gICAgc2VhcmNoSXRlbXMoc2VhcmNoYmFyKSB7XG4gICAgICAgIC8vIFJlc2V0IGl0ZW1zIGJhY2sgdG8gYWxsIG9mIHRoZSBpdGVtc1xuICAgICAgICB0aGlzLml0ZW1zID0gdGhpcy5hY2NvdW50cztcblxuICAgICAgICAvLyBzZXQgcSB0byB0aGUgdmFsdWUgb2YgdGhlIHNlYXJjaGJhclxuICAgICAgICBsZXQgcSA9IHNlYXJjaGJhci52YWx1ZS50b0xvd2VyQ2FzZSgpO1xuXG4gICAgICAgIC8vIGlmIHRoZSB2YWx1ZSBpcyBhbiBlbXB0eSBzdHJpbmcgZG9uJ3QgZmlsdGVyIHRoZSBzZWFyY2hfcmVzdWx0c1xuICAgICAgICBpZiAocS50cmltKCkgPT0gJycgfHwgdGhpcy5idXN5KSB7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cblxuICAgICAgICBpZiAodGhpcy5hY2NvdW50cyAmJiBxLmxlbmd0aCA+IDEpXG4gICAgICAgIHtcbiAgICAgICAgICAgIHRoaXMuaXRlbXMgPSB0aGlzLmFjY291bnRzLmZpbHRlcigoYWNjb3VudCkgPT4gYWNjb3VudC5uYW1lLnRvTG93ZXJDYXNlKCkuaW5kZXhPZihxKSA+IC0xKTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIGNsZWFyU2VhcmNoKHNlYXJjaGJhcj8pXG4gICAge1xuICAgICAgICB0aGlzLnNlYXJjaF9yZXN1bHRzID0gW107XG4gICAgICAgIHRoaXMuYnVzeSA9IGZhbHNlO1xuICAgICAgICBpZiAoc2VhcmNoYmFyKSBzZWFyY2hiYXIudmFsdWUgPSBcIlwiO1xuICAgIH1cblxuICAgIGRvSW5maW5pdGUoaW5maW5pdGVTY3JvbGwpIHtcbiAgICAgICAgaWYgKHRoaXMuY291bnQgPCB0aGlzLkxJTUlUKSB7XG4gICAgICAgICAgICBpbmZpbml0ZVNjcm9sbC5lbmFibGUoZmFsc2UpO1xuICAgICAgICAgICAgaW5maW5pdGVTY3JvbGwuY29tcGxldGUoKTtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLnBhZ2VyLnBhZ2UgKz0gMTtcbiAgICAgICAgdGhpcy5nZXRJdGVtcyhpbmZpbml0ZVNjcm9sbCwgbnVsbCk7XG4gICAgfVxuICAgIHRvZ2dsZSgpe1xuICAgICAgICB0aGlzLnRlc3QgPSAhdGhpcy50ZXN0O1xuICAgICAgICBpZiAodGhpcy50ZXN0KXtcbiAgICAgICAgICAgIHNldFRpbWVvdXQoKCkgPT4ge1xuICAgICAgICB2YXIgdCA9IGRvY3VtZW50LmdldEVsZW1lbnRzQnlDbGFzc05hbWUoXCJzZWFyY2hiYXItaW5wdXRcIik7XG4gICAgICAgIHQgPSB0W3QubGVuZ3RoIC0gMV07XG4gICAgICAgIHQgJiYgdC5mb2N1cygpO1xuICAgICAgICB9LCA1MDApO1xuICAgICAgICB9XG4gICAgfVxufVxuIiwiaW1wb3J0IHtOYXYsIE5hdlBhcmFtcywgUGFnZSwgQ29uZmlnfSBmcm9tICdpb25pYy1hbmd1bGFyJztcbmltcG9ydCB7QXBpRGF0YSwgVGlja2V0UHJvdmlkZXJ9IGZyb20gJy4uLy4uL3Byb3ZpZGVycy9wcm92aWRlcnMnO1xuaW1wb3J0IHtnZXRGdWxsTmFtZSwgYWRkcH0gZnJvbSAnLi4vLi4vZGlyZWN0aXZlcy9oZWxwZXJzJztcbmltcG9ydCB7VGlja2V0RGV0YWlsc1BhZ2V9IGZyb20gJy4uL3RpY2tldC1kZXRhaWxzL3RpY2tldC1kZXRhaWxzJztcbmltcG9ydCB7Rm9jdXNlcn0gZnJvbSAnLi4vLi4vZGlyZWN0aXZlcy9kaXJlY3RpdmVzJztcblxuQFBhZ2Uoe1xuICAgIHRlbXBsYXRlVXJsOiAnYnVpbGQvcGFnZXMvYWpheC1zZWFyY2gvYWpheC1zZWFyY2guaHRtbCcsXG4gICAgZGlyZWN0aXZlczogW0ZvY3VzZXJdLFxufSlcbmV4cG9ydCBjbGFzcyBBamF4U2VhcmNoUGFnZSB7XG5cbiAgICB1cmw6IHN0cmluZztcbiAgICB0ZXJtOiBzdHJpbmc7XG4gICAgbG9jYXRpb246IGFueSA9IHt9O1xuICAgIHNlYXJjaDogc3RyaW5nO1xuICAgIG5hbWU6IHN0cmluZztcbiAgICBkYXRhOiBhbnkgPSBbXTtcbiAgICBpdGVtczogYW55ID0gW107XG4gICAgcGFnZXI6IGFueTtcbiAgICBjb3VudDogbnVtYmVyO1xuICAgIGlzX2VtcHR5OiBib29sZWFuID0gZmFsc2U7XG4gICAgYnVzeTogYm9vbGVhbjtcblxuICAgIGNvbnN0cnVjdG9yKHByaXZhdGUgbmF2OiBOYXYsIHByaXZhdGUgbmF2UGFyYW1zOiBOYXZQYXJhbXMsIHByaXZhdGUgY29uZmlnOiBDb25maWcsIHByaXZhdGUgYXBpRGF0YTogQXBpRGF0YSwgcHJpdmF0ZSB0aWNrZXRQcm92aWRlcjogVGlja2V0UHJvdmlkZXIpIHtcbiAgICB9XG5cbiAgICBuZ09uSW5pdCgpIHtcbiAgICAgICAgdGhpcy50ZXJtID0gdGhpcy5uYXZQYXJhbXMuZGF0YS5zZWFyY2ggfHwgXCJcIjtcbiAgICAgICAgdGhpcy5sb2NhdGlvbiA9IHRoaXMubmF2UGFyYW1zLmRhdGEubG9jYXRpb247XG4gICAgICAgIC8qXG4gICAgICAgIHRoaXMubmFtZSA9IHRoaXMubmF2UGFyYW1zLmRhdGEubmFtZSB8fCBcIkxpc3RcIjtcbiAgICAgICAgdGhpcy51cmwgPSB0aGlzLm5hdlBhcmFtcy5kYXRhLnVybCB8fCBcIlwiO1xuICAgICAgICB0aGlzLmRhdGEgPSB0aGlzLm5hdlBhcmFtcy5kYXRhLml0ZW1zIHx8IHt9O1xuICAgICAgICAqL1xuICAgICAgICB0aGlzLnBhZ2VyID0geyBsaW1pdDogMjAgfTtcbiAgICAgICAgbGV0IHEgPSB0aGlzLnRlcm0udG9Mb3dlckNhc2UoKTtcbiAgICAgICAgaWYgKCF0aGlzLmxvY2F0aW9uKVxuICAgICAgICB7XG4gICAgICAgIGlmICh0aGlzLnRpY2tldFByb3ZpZGVyLl9kYXRhU3RvcmUuYWxsLmxlbmd0aClcbiAgICAgICAgICAgIHRoaXMuZGF0YSA9IHRoaXMudGlja2V0UHJvdmlkZXIuX2RhdGFTdG9yZS5hbGw7XG4gICAgICAgIGVsc2UgaWYgKHRoaXMudGlja2V0UHJvdmlkZXIuX2RhdGFTdG9yZS50ZWNoLmxlbmd0aClcbiAgICAgICAgICAgIHRoaXMuZGF0YSA9IHRoaXMudGlja2V0UHJvdmlkZXIuX2RhdGFTdG9yZS50ZWNoO1xuICAgICAgICBlbHNlIGlmICh0aGlzLnRpY2tldFByb3ZpZGVyLl9kYXRhU3RvcmUudXNlci5sZW5ndGgpXG4gICAgICAgICAgICB0aGlzLmRhdGEgPSB0aGlzLnRpY2tldFByb3ZpZGVyLl9kYXRhU3RvcmUudXNlcjtcbiAgICAgICAgaWYgKHRoaXMuZGF0YS5sZW5ndGggJiYgcS5sZW5ndGggPCA0KXtcbiAgICAgICAgICAgIHRoaXMuaXRlbXMgPSB0aGlzLmRhdGEuZmlsdGVyKCh2KSA9PiB0aGlzLnNlYXJjaENyaXRlcmlhKHYsIHEpKTtcbiAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIHRoaXMuY291bnQgPSB0aGlzLml0ZW1zLmxlbmd0aDtcbiAgICAgICAgaWYgKHEubGVuZ3RoID4gMykge1xuICAgICAgICAgICAgdmFyIHRpbWVyID0gc2V0VGltZW91dCgoKSA9PiB7XG4gICAgICAgICAgICAgICAgdGhpcy5pc19lbXB0eSA9IHRydWU7XG4gICAgICAgICAgICAgICAgdGhpcy5idXN5ID0gdHJ1ZTtcbiAgICAgICAgICAgIH0sIDUwMCk7XG5cbiAgICAgICAgICAgIHRoaXMuZ2V0SXRlbXMocSwgdGltZXIpO1xuICAgICAgICB9XG4gICAgICAgIGVsc2VcbiAgICAgICAgICAgIHRoaXMuaXNfZW1wdHkgPSAhdGhpcy5pdGVtcy5sZW5ndGg7XG4gICAgfVxuXG4gICAgb25QYWdlRGlkRW50ZXIoKSB7XG4gICAgICAgIHZhciB0ID0gZG9jdW1lbnQuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZShcInNlYXJjaGJhci1pbnB1dFwiKTtcbiAgICAgICAgdCA9IHRbdC5sZW5ndGggLSAxXTtcbiAgICAgICAgdCAmJiB0LmZvY3VzKCk7XG4gICAgfVxuXG4gICAgZGlzbWlzcyh0aWNrZXQpXG4gICAge1xuICAgICAgICB0aGlzLm5hdi5wdXNoKFRpY2tldERldGFpbHNQYWdlLCB0aWNrZXQpO1xuICAgIH1cblxuICAgIHNlYXJjaENyaXRlcmlhICh0aWNrZXQsIHRlcm0pXG4gICAge1xuICAgICAgICByZXR1cm4gdGlja2V0Lm51bWJlci50b1N0cmluZygpLmluZGV4T2YodGVybSkgPiAtMVxuICAgICAgICAgICAgfHwgdGlja2V0LnN1YmplY3QudG9Mb3dlckNhc2UoKS5pbmRleE9mKHRlcm0pID4gLTFcbiAgICAgICAgICAgIHx8IHRpY2tldC5pbml0aWFsX3Bvc3QudG9Mb3dlckNhc2UoKS5pbmRleE9mKHRlcm0pID4gLTFcbiAgICAgICAgICAgIHx8IHRpY2tldC51c2VyX2ZpcnN0bmFtZS50b0xvd2VyQ2FzZSgpLmluZGV4T2YodGVybSkgPiAtMVxuICAgICAgICAgICAgfHwgdGlja2V0LnVzZXJfbGFzdG5hbWUudG9Mb3dlckNhc2UoKS5pbmRleE9mKHRlcm0pID4gLTFcbiAgICAgICAgICAgIHx8IHRpY2tldC5sb2NhdGlvbl9uYW1lLnRvTG93ZXJDYXNlKCkuaW5kZXhPZih0ZXJtKSA+IC0xXG4gICAgICAgICAgICB8fCB0aWNrZXQuY2xhc3NfbmFtZS50b0xvd2VyQ2FzZSgpLmluZGV4T2YodGVybSkgPiAtMVxuICAgIH1cblxuICAgIHNlYXJjaEl0ZW1zKHNlYXJjaGJhcikge1xuICAgICAgICAvLyBSZXNldCBpdGVtcyBiYWNrIHRvIGFsbCBvZiB0aGUgaXRlbXNcbiAgICAgICAgdGhpcy5pdGVtcyA9IHRoaXMuZGF0YTtcblxuICAgICAgICAvLyBzZXQgcSB0byB0aGUgdmFsdWUgb2YgdGhlIHNlYXJjaGJhclxuICAgICAgICB2YXIgcSA9IHNlYXJjaGJhci52YWx1ZTtcblxuICAgICAgICAvLyBpZiB0aGUgdmFsdWUgaXMgYW4gZW1wdHkgc3RyaW5nIGRvbid0IGZpbHRlciB0aGUgaXRlbXNcbiAgICAgICAgaWYgKHEudHJpbSgpID09ICcnIHx8IHRoaXMuYnVzeSkge1xuICAgICAgICAgICAgaWYgKHEudHJpbSgpID09ICcnKSB0aGlzLmlzX2VtcHR5ID0gIXRoaXMuaXRlbXMubGVuZ3RoO1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG5cbiAgICAgICAgaWYgKHEubGVuZ3RoIDwgNClcbiAgICAgICAge1xuICAgICAgICB0aGlzLml0ZW1zID0gdGhpcy5kYXRhLmZpbHRlcigodikgPT4gdGhpcy5zZWFyY2hDcml0ZXJpYSh2LCBxKSk7XG4gICAgICAgICAgICAgICAgdGhpcy5pc19lbXB0eSA9ICF0aGlzLml0ZW1zLmxlbmd0aDtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIHZhciB0aW1lciA9IHNldFRpbWVvdXQoKCkgPT4geyB0aGlzLmJ1c3kgPSB0cnVlOyB9LCA1MDApO1xuICAgICAgICAgICAgdGhpcy5nZXRJdGVtcyhxLCB0aW1lcik7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBnZXRJdGVtcyh0ZXJtLCB0aW1lcikge1xuICAgICAgICB0aGlzLml0ZW1zID0gW107XG4gICAgICAgIHRoaXMudXJsID0gXCJ0aWNrZXRzP3F1ZXJ5PWFsbCZsb2NhdGlvbj1cIisoKHRoaXMubG9jYXRpb24gfHwge30pLmlkIHx8IFwiXCIpOyAvL3N0YXR1cz1hbGxvcGVuJlxuICAgICAgICB0aGlzLmFwaURhdGEuZ2V0UGFnZWQoYWRkcCh0aGlzLnVybCwgXCJzZWFyY2hcIiwgdGVybStcIipcIiksIHRoaXMucGFnZXIpLnN1YnNjcmliZShcbiAgICAgICAgICAgIGRhdGEgPT4ge1xuICAgICAgICAgICAgICAgIGlmICh0aW1lcikge1xuICAgICAgICAgICAgICAgICAgICBjbGVhclRpbWVvdXQodGltZXIpO1xuICAgICAgICAgICAgICAgICAgICB0aGlzLmJ1c3kgPSBmYWxzZTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgdGhpcy5pc19lbXB0eSA9ICFkYXRhLmxlbmd0aDtcblxuICAgICAgICAgICAgICAgIGlmICghdGVybSlcbiAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuaXRlbXMgPSB0aGlzLmRhdGEgPSBkYXRhO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBlbHNlXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuaXRlbXMgPSBkYXRhO1xuXG4gICAgICAgICAgICAgICAgdGhpcy5jb3VudCA9IGRhdGEubGVuZ3RoO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGVycm9yID0+IHtcbiAgICAgICAgICAgICAgICBpZiAodGltZXIpIHtcbiAgICAgICAgICAgICAgICAgICAgY2xlYXJUaW1lb3V0KHRpbWVyKTtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5idXN5ID0gZmFsc2U7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKGVycm9yIHx8ICdTZXJ2ZXIgZXJyb3InKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgICk7XG4gICAgfVxufSIsImltcG9ydCB7UGFnZSwgQ29uZmlnLCBOYXYsIE5hdlBhcmFtcywgVmlld0NvbnRyb2xsZXJ9IGZyb20gJ2lvbmljLWFuZ3VsYXInO1xuaW1wb3J0IHtEYXRhUHJvdmlkZXJ9IGZyb20gJy4uLy4uL3Byb3ZpZGVycy9kYXRhLXByb3ZpZGVyJztcbmltcG9ydCB7Z2V0RGF0ZVRpbWUsIGdldEN1cnJlbmN5fSBmcm9tICcuLi8uLi9kaXJlY3RpdmVzL2hlbHBlcnMnO1xuaW1wb3J0IHtHcmF2YXRhclBpcGUsIE1vcmVQaXBlLCBMaW5lYnJlYWtzUGlwZX0gZnJvbSAnLi4vLi4vcGlwZXMvcGlwZXMnO1xuXG5AUGFnZSh7XG4gICAgdGVtcGxhdGVVcmw6ICdidWlsZC9wYWdlcy9jb250cmFjdHMvY29udHJhY3RzLmh0bWwnLFxuICAgIHBpcGVzOiBbR3JhdmF0YXJQaXBlLCBNb3JlUGlwZSwgTGluZWJyZWFrc1BpcGVdLFxufSlcbmV4cG9ydCBjbGFzcyBDb250cmFjdHNQYWdlIHtcbiAgICBMSU1JVDogbnVtYmVyID0gMTU7XG4gICAgY291bnQ6IG51bWJlcjtcbiAgICBhY2NvdW50OiBPYmplY3Q7XG4gICAgaXNfZW1wdHlfY29udHJhY3RzOiBib29sZWFuO1xuICAgIGlzX2VtcHR5X3ByZXBhaWQ6IGJvb2xlYW47XG4gICAgYnVzeTogYm9vbGVhbjtcbiAgICBwYXJhbXM6IGFueTtcbiAgICBwYWdlcjogYW55O1xuICAgIGNvbnRyYWN0czogQXJyYXk8YW55PjtcbiAgICBwcmVwYWlkX3BhY2tzOiBBcnJheTxhbnk+O1xuXG5cblxuICAgIGNvbnN0cnVjdG9yKHByaXZhdGUgbmF2OiBOYXYsIHByaXZhdGUgZGF0YVByb3ZpZGVyOiBEYXRhUHJvdmlkZXIsIHByaXZhdGUgY29uZmlnOiBDb25maWcsIHByaXZhdGUgbmF2UGFyYW1zOiBOYXZQYXJhbXMsIHByaXZhdGUgdmlldzogVmlld0NvbnRyb2xsZXIpIHtcbiAgICAgICAgdGhpcy5pc19lbXB0eV9jb250cmFjdHMgPSBmYWxzZTtcbiAgICAgICAgdGhpcy5pc19lbXB0eV9wcmVwYWlkID0gZmFsc2U7XG4gICAgfVxuICAgIFxuICAgIG9uUGFnZUxvYWRlZCgpIHtcbiAgICAgICAgdGhpcy5wYXJhbXMgPSB0aGlzLm5hdlBhcmFtcy5kYXRhIHx8IHt9O1xuICAgICAgICB0aGlzLnBhZ2VyID0geyBwYWdlOiAwIH07XG4gICAgICAgIHRoaXMucGFyYW1zLmFjY291bnQgPSB7IGlkOiB0aGlzLnBhcmFtcy5hY2NvdW50X2lkIHx8IC0xLCBuYW1lOiB0aGlzLnBhcmFtcy5hY2NvdW50X25hbWUgfHwgdGhpcy5jb25maWcuZ2V0Q3VycmVudChcInVzZXJcIikuYWNjb3VudF9uYW1lIH07XG4gICAgfVxuXG5vblBhZ2VXaWxsRW50ZXIoKVxuICAgIHtcbiAgICBpZiAodGhpcy5wYXJhbXMuYWNjb3VudF9uYW1lKVxuICAgICAgICAgICAgdGhpcy52aWV3LnNldEJhY2tCdXR0b25UZXh0KCcnKTtcblxuICAgIGlmICh0aGlzLnBhcmFtcy5pc19lbXB0eSlcbiAgICAgICAgdGhpcy5wYXJhbXMuY291bnQgPSAwO1xuXG4gICAgaWYgKHRoaXMucGFyYW1zLmNvdW50ICE9PSAwKSB7XG4gICAgICAgIHZhciB0aW1lciA9IHNldFRpbWVvdXQoKCkgPT4ge1xuICAgICAgICAgICAgdGhpcy5idXN5ID0gdHJ1ZTtcbiAgICAgICAgfSwgNTAwKTtcblxuICAgICAgICB0aGlzLmdldEl0ZW1zKG51bGwsIHRpbWVyKTtcbiAgICB9XG4gICAgZWxzZVxuICAgICAgICB0aGlzLmlzX2VtcHR5X3ByZXBhaWQgPSB0cnVlO1xuICAgICAgICB0aGlzLmlzX2VtcHR5X2NvbnRyYWN0cyA9IHRydWU7XG5cbiAgICB9XG5cblxuICAgIGdldEl0ZW1zKGluZmluaXRlU2Nyb2xsLCB0aW1lcikge1xuICAgICAgICB0aGlzLmRhdGFQcm92aWRlci5nZXRDb250cmFjdHModGhpcy5wYWdlcikuc3Vic2NyaWJlKFxuICAgICAgICAgICAgZGF0YSA9PiB7XG4gICAgICAgICAgICAgICAgaWYgKHRpbWVyKSB7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuaXNfZW1wdHlfY29udHJhY3RzID0gIWRhdGEubGVuZ3RoO1xuICAgICAgICAgICAgICAgICAgICBjbGVhclRpbWVvdXQodGltZXIpO1xuICAgICAgICAgICAgICAgICAgICB0aGlzLmJ1c3kgPSBmYWxzZTtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5jb250cmFjdHMgPSBkYXRhO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBlbHNlXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuY29udHJhY3RzLnB1c2goLi4uZGF0YSk7XG4gICAgICAgICAgICAgICAgaWYgKGluZmluaXRlU2Nyb2xsKSB7XG4gICAgICAgICAgICAgICAgICAgIGluZmluaXRlU2Nyb2xsLmVuYWJsZShkYXRhLmxlbmd0aCA9PSB0aGlzLkxJTUlUKTtcbiAgICAgICAgICAgICAgICAgICAgaW5maW5pdGVTY3JvbGwuY29tcGxldGUoKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgdGhpcy5jb3VudCA9IGRhdGEubGVuZ3RoO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGVycm9yID0+IHtcbiAgICAgICAgICAgICAgICBpZiAodGltZXIpIHtcbiAgICAgICAgICAgICAgICAgICAgY2xlYXJUaW1lb3V0KHRpbWVyKTtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5idXN5ID0gZmFsc2U7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKGVycm9yIHx8ICdTZXJ2ZXIgZXJyb3InKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgKTtcblxuICAgICAgICB0aGlzLmRhdGFQcm92aWRlci5nZXRQcmVwYWlkX3BhY2tzKHRoaXMucGFyYW1zLmFjY291bnQuaWQsIHRoaXMucGFnZXIpLnN1YnNjcmliZSggXG4gICAgICAgICAgICBkYXRhID0+IHtcbiAgICAgICAgICAgICAgICBpZiAodGltZXIpIHtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5pc19lbXB0eV9wcmVwYWlkID0gIWRhdGEubGVuZ3RoO1xuICAgICAgICAgICAgICAgICAgICBjbGVhclRpbWVvdXQodGltZXIpO1xuICAgICAgICAgICAgICAgICAgICB0aGlzLmJ1c3kgPSBmYWxzZTtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5wcmVwYWlkX3BhY2tzID0gZGF0YTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgZWxzZVxuICAgICAgICAgICAgICAgICAgICB0aGlzLnByZXBhaWRfcGFja3MucHVzaCguLi5kYXRhKTtcbiAgICAgICAgICAgICAgICBpZiAoaW5maW5pdGVTY3JvbGwpIHtcbiAgICAgICAgICAgICAgICAgICAgaW5maW5pdGVTY3JvbGwuZW5hYmxlKGRhdGEubGVuZ3RoID09IHRoaXMuTElNSVQpO1xuICAgICAgICAgICAgICAgICAgICBpbmZpbml0ZVNjcm9sbC5jb21wbGV0ZSgpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB0aGlzLmNvdW50ID0gZGF0YS5sZW5ndGg7XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgZXJyb3IgPT4ge1xuICAgICAgICAgICAgICAgIGlmICh0aW1lcikge1xuICAgICAgICAgICAgICAgICAgICBjbGVhclRpbWVvdXQodGltZXIpO1xuICAgICAgICAgICAgICAgICAgICB0aGlzLmJ1c3kgPSBmYWxzZTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgY29uc29sZS5sb2coZXJyb3IgfHwgJ1NlcnZlciBlcnJvcicpO1xuICAgICAgICAgICAgfVxuICAgICAgICApO1xuICAgIH1cblxuICAgIHNldERhdGUoZGF0ZSwgc2hvd21vbnRoPywgaXN0aW1lPykge1xuICAgICAgICBpZiAoZGF0ZSl7XG4gICAgICAgIC8vdmFyIHRpbWVfb2Zmc2V0ID0gdGhpcy5jb25maWcuZ2V0Q3VycmVudChcInRpbWV6b25lX29mZnNldFwiKTsgICAgIFxuICAgICAgICBkYXRlID0gbmV3IERhdGUoZGF0ZS5zdWJzdHJpbmcoMCwyMykrXCJaXCIpO1xuICAgICAgICAvL2RhdGUgPSBuZXcgRGF0ZShkYXRlLnNldFRpbWUoZGF0ZS5nZXRUaW1lKCkgKyB0aW1lX29mZnNldCo2MCo2MCoxMDAwKSkudG9KU09OKCk7XG4gICAgICAgIHJldHVybiBnZXREYXRlVGltZShkYXRlLCBzaG93bW9udGgsIGlzdGltZSk7XG4gICAgfVxuICAgICByZXR1cm4gbnVsbDtcbiAgICB9XG5cbiAgICBkb0luZmluaXRlKGluZmluaXRlU2Nyb2xsKSB7XG4gICAgICAgIGlmICh0aGlzLmlzX2VtcHR5X2NvbnRyYWN0cyB8fCB0aGlzLmNvdW50IDwgdGhpcy5MSU1JVCkge1xuICAgICAgICAgICAgaW5maW5pdGVTY3JvbGwuZW5hYmxlKGZhbHNlKTtcbiAgICAgICAgICAgIGluZmluaXRlU2Nyb2xsLmNvbXBsZXRlKCk7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5wYWdlci5wYWdlICs9IDE7XG4gICAgICAgIHRoaXMuZ2V0SXRlbXMoaW5maW5pdGVTY3JvbGwsIG51bGwpO1xuICAgIH1cblxuICAgIFxuXG4gICAgZ2V0Q3VycmVuY3kodmFsdWUpIHtcbiAgICAgICAgcmV0dXJuIGdldEN1cnJlbmN5KHZhbHVlKTtcbiAgICB9XG59XG4iLCJpbXBvcnQge1BhZ2UsIENvbmZpZywgTmF2fSBmcm9tICdpb25pYy1hbmd1bGFyJztcbmltcG9ydCB7QXBpRGF0YSwgRGF0YVByb3ZpZGVyLCBUaWNrZXRQcm92aWRlciwgVGltZVByb3ZpZGVyfSBmcm9tICcuLi8uLi9wcm92aWRlcnMvcHJvdmlkZXJzJztcbmltcG9ydCB7Z2V0RGF0ZVRpbWV9IGZyb20gJy4uLy4uL2RpcmVjdGl2ZXMvaGVscGVycyc7XG5pbXBvcnQge0ZvY3VzZXJ9IGZyb20gJy4uLy4uL2RpcmVjdGl2ZXMvZGlyZWN0aXZlcyc7XG5pbXBvcnQge1F1ZXVlc0xpc3RDb21wb25lbnQsIEFjY291bnRzTGlzdENvbXBvbmVudCwgQWN0aW9uQnV0dG9uQ29tcG9uZW50LCBUb2RvTGlzdENvbXBvbmVudH0gZnJvbSAnLi4vLi4vY29tcG9uZW50cy9jb21wb25lbnRzJztcbmltcG9ydCB7VGlja2V0c1BhZ2V9IGZyb20gJy4uL3RpY2tldHMvdGlja2V0cyc7XG5pbXBvcnQge1RpbWVsb2dzUGFnZX0gZnJvbSAnLi4vdGltZWxvZ3MvdGltZWxvZ3MnO1xuaW1wb3J0IHtBY2NvdW50RGV0YWlsc1BhZ2V9IGZyb20gJy4uL2FjY291bnQtZGV0YWlscy9hY2NvdW50LWRldGFpbHMnO1xuaW1wb3J0IHtUaWNrZXREZXRhaWxzUGFnZX0gZnJvbSAnLi4vdGlja2V0LWRldGFpbHMvdGlja2V0LWRldGFpbHMnO1xuaW1wb3J0IHtBamF4U2VhcmNoUGFnZX0gZnJvbSAnLi4vYWpheC1zZWFyY2gvYWpheC1zZWFyY2gnO1xuaW1wb3J0IHtNb3JlUGlwZX0gZnJvbSAnLi4vLi4vcGlwZXMvcGlwZXMnO1xuaW1wb3J0IHthZGRwfSBmcm9tICcuLi8uLi9kaXJlY3RpdmVzL2hlbHBlcnMnO1xuaW1wb3J0IHtTdWJqZWN0fSBmcm9tICdyeGpzJztcblxuQFBhZ2Uoe1xuICAgIHRlbXBsYXRlVXJsOiAnYnVpbGQvcGFnZXMvZGFzaGJvYXJkL2Rhc2hib2FyZC5odG1sJyxcbiAgICBkaXJlY3RpdmVzOiBbUXVldWVzTGlzdENvbXBvbmVudCwgQWNjb3VudHNMaXN0Q29tcG9uZW50LCBBY3Rpb25CdXR0b25Db21wb25lbnQsIFRvZG9MaXN0Q29tcG9uZW50LCBGb2N1c2VyXSxcbiAgICBwaXBlczogW01vcmVQaXBlXSxcbn0pXG5leHBvcnQgY2xhc3MgRGFzaGJvYXJkUGFnZSB7XG5cbiAgICBjb3VudHM6IE9iamVjdCA9IHsgb3Blbl9hc190ZWNoOiAwIH07XG4gICAgYWNjb3VudHM6IEFycmF5PGFueT4gPSBbXTtcbiAgICBxdWV1ZXM6IEFycmF5PGFueT4gPSBbXTtcbiAgICBxdWV1ZV9pZDogYW55ID0gW107XG4gICAgdGVybTogc3RyaW5nID0gJyc7XG4gICAgdGVzdDogYm9vbGVhbjtcbiAgICBzaW1wbGU6IGJvb2xlYW4gPSBmYWxzZTtcbiAgICB0aW1lcjogYW55O1xuICAgIHRpbWVsb2dzOiBhbnk7XG4gICAgY2FjaGVuYW1lOiBzdHJpbmc7XG4gICAgd29ya2luZzogbnVtYmVyID0gMDtcbiAgICBub25fd29ya2luZ19ob3VyczogbnVtYmVyID0gMDtcbiAgICBkb3dubG9hZFRpbWVyOiBhbnk7XG4gICAgc2VhcmNoX3Jlc3VsdHM6IGFueTtcbiAgICBidXN5OiBib29sZWFuO1xuICAgIGRhdGU6IGFueTtcbiAgICBwcml2YXRlIHVuc3Vic2NyaWJlJDpTdWJqZWN0PHZvaWQ+ID0gbmV3IFN1YmplY3QoKTtcblxuICAgIGNvbnN0cnVjdG9yKHByaXZhdGUgbmF2OiBOYXYsIHByaXZhdGUgY29uZmlnOiBDb25maWcsIHByaXZhdGUgYXBpRGF0YTogQXBpRGF0YSwgcHJpdmF0ZSBkYXRhUHJvdmlkZXI6IERhdGFQcm92aWRlciwgcHJpdmF0ZSB0aWNrZXRQcm92aWRlcjogVGlja2V0UHJvdmlkZXIsIHByaXZhdGUgdGltZVByb3ZpZGVyOiBUaW1lUHJvdmlkZXIpIHtcbiAgICAgICAgbGV0IGNvdW50cyA9IGNvbmZpZy5nZXRTdGF0KFwidGlja2V0c1wiKTtcbiAgICAgICAgaWYgKGNvdW50cyA9PSAtMSAmJiBjb25maWcuY3VycmVudC5pc19vbmxpbmUpe1xuICAgICAgICAgICAgdGhpcy5kb3dubG9hZFRpbWVyID0gc2V0SW50ZXJ2YWwoKCk9PnsgdGhpcy5jb3VudHMub3Blbl9hc190ZWNoID0gKyt0aGlzLmNvdW50cy5vcGVuX2FzX3RlY2g7fSw4MDApO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgaWYgKGNvbmZpZy5jdXJyZW50LnVzZXIuaXNfbGltaXRfYXNzaWduZWRfdGt0cyAmJiAhY29uZmlnLmN1cnJlbnQudXNlci5pc19hZG1pbilcbiAgICAgICAgICAgICAgICBjb3VudHMub3Blbl9hbGwgPSBNYXRoLm1heChjb3VudHMub3Blbl9hc191c2VyLCBjb3VudHMub3Blbl9hc190ZWNoKTsgXG4gICAgICAgICAgICB0aGlzLmNvdW50cyA9IHRoaXMuY291bnRzIHx8IGNvdW50czsgXG4gICAgICAgIH1cbiAgICB9XG4gICAgXG4gICAgb25QYWdlTG9hZGVkKClcbiAgICB7ICAgICAgIFxuICAgICAgICB0aGlzLnNpbXBsZSA9ICF0aGlzLmNvbmZpZy5jdXJyZW50LmlzX3RpbWVfdHJhY2tpbmcgJiYgIXRoaXMuY29uZmlnLmN1cnJlbnQuaXNfZXhwZW5zZXM7XG4gICAgICAgIGxldCBvcHRpb25zID0ge1xuICAgICAgICAgIG1vbnRoOiAnbG9uZycsXG4gICAgICAgICAgZGF5OiAnbnVtZXJpYycsXG4gICAgICAgICAgd2Vla2RheTogJ2xvbmcnLFxuICAgICAgICAgIHllYXI6ICdudW1lcmljJ1xuICAgICAgICB9O1xuICAgICAgICB0aGlzLmRhdGUgPSBuZXcgRGF0ZSgpLnRvTG9jYWxlU3RyaW5nKFwiZW4tVVNcIiwgb3B0aW9ucyk7XG5cbiAgICAgICAgbGV0IGxvY2FsUXVlcmVzX2lkID0gbG9jYWxTdG9yYWdlLmdldEl0ZW0oJ3F1ZXVlX2lkJyk7XG4gICAgICAgIHRoaXMucXVldWVfaWQgPSBsb2NhbFF1ZXJlc19pZCA/IGxvY2FsU3RvcmFnZS5nZXRJdGVtKCdxdWV1ZV9pZCcpLnNwbGl0KFwiLCBcIikgOiBbXTtcblxuICAgICAgICB0aGlzLnRpY2tldFByb3ZpZGVyLmdldFRpY2tldHNDb3VudHMoKTtcbiAgICAgICAgdGhpcy50aWNrZXRQcm92aWRlci50aWNrZXRzJFtcInRpY2tldHMvY291bnRzXCJdLnN1YnNjcmliZShcbiAgICAgICAgICAgIGRhdGEgPT4ge1xuXG4gICAgICAgICAgICAgICAgaWYgKHRoaXMuY29uZmlnLmN1cnJlbnQudXNlci5pc19saW1pdF9hc3NpZ25lZF90a3RzICYmICF0aGlzLmNvbmZpZy5jdXJyZW50LnVzZXIuaXNfYWRtaW4pXG4gICAgICAgICAgICAgICAgICAgIGRhdGEub3Blbl9hbGwgPSBNYXRoLm1heChkYXRhLm9wZW5fYXNfdXNlciwgZGF0YS5vcGVuX2FzX3RlY2gpOyAgICBcbiAgICAgICAgICAgICAgICBjbGVhckludGVydmFsKHRoaXMuZG93bmxvYWRUaW1lcik7XG4gICAgICAgICAgICAgICAgdGhpcy5jb3VudHMgPSBkYXRhO1xuICAgICAgICAgICAgICAgIHRoaXMuY29uZmlnLnNldFN0YXQoXCJ0aWNrZXRzXCIsXG4gICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICBcImFsbFwiOiBkYXRhLm9wZW5fYWxsLFxuICAgICAgICAgICAgICAgICAgICBcInRlY2hcIjogZGF0YS5vcGVuX2FzX3RlY2gsXG4gICAgICAgICAgICAgICAgICAgIFwiYWx0XCI6IGRhdGEub3Blbl9hc19hbHR0ZWNoLFxuICAgICAgICAgICAgICAgICAgICBcInVzZXJcIjogZGF0YS5vcGVuX2FzX3VzZXJcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICBzZXRUaW1lb3V0KCgpID0+IHt0aGlzLnNhdmVDYWNoZSgpfSwgMTAwMCk7XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgZXJyb3IgPT4ge1xuICAgICAgICAgICAgICAgIGNsZWFySW50ZXJ2YWwodGhpcy5kb3dubG9hZFRpbWVyKTtcbiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhlcnJvciB8fCAnU2VydmVyIGVycm9yJyk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICApO1xuXG4gICAgICAgIGlmICh0aGlzLmNvbmZpZy5jdXJyZW50LmlzX3VuYXNzaWduZWRfcXVldWUpIHtcbiAgICAgICAgICAgIHRoaXMucXVldWVzID0gdGhpcy5jb25maWcuZ2V0Q2FjaGUoXCJkYXNocXVldWVzXCIpO1xuICAgICAgICAgICAgaWYgKHRoaXMucXVldWVfaWQubGVuZ3RoID09IDApIHtcbiAgICAgICAgICAgIHRoaXMuZGF0YVByb3ZpZGVyLmdldFF1ZXVlTGlzdCgzKS5zdWJzY3JpYmUoXG4gICAgICAgICAgICAgICAgZGF0YSA9PiB7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMucXVldWVzID0gZGF0YTtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5jb25maWcuc2V0Q2FjaGUoXCJkYXNocXVldWVzXCIsIGRhdGEpO1xuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgZXJyb3IgPT4ge1xuICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhlcnJvciB8fCAnU2VydmVyIGVycm9yJyk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNle1xuICAgICAgICAgICAgICAgIHRoaXMuZGF0YVByb3ZpZGVyLmdldFF1ZXVlTGlzdCgpLnN1YnNjcmliZShcbiAgICAgICAgICAgICAgICBkYXRhID0+IHsgIFxuICAgICAgICAgICAgICAgICAgICB0aGlzLnF1ZXVlcyA9IGRhdGEuZmlsdGVyKCB2ID0+IHRoaXMucXVldWVfaWRbMF0gPT0gdi5pZCB8fCB0aGlzLnF1ZXVlX2lkWzFdID09IHYuaWQgfHwgdGhpcy5xdWV1ZV9pZFsyXSA9PSB2LmlkKTtcbiAgICAgICAgICAgICAgICAgICAgbGV0IGRlZmF1bHRfcXVldWVzID0gZGF0YS5maWx0ZXIoIHYgPT4gdGhpcy5xdWV1ZV9pZFswXSAhPSB2LmlkICAmJiB0aGlzLnF1ZXVlX2lkWzFdICE9IHYuaWQgJiYgdGhpcy5xdWV1ZV9pZFsyXSAhPSB2LmlkKTtcbiAgICAgICAgICAgICAgICAgICAgbGV0IGRpZmZlcmVuY2UgPSAzLXRoaXMucXVldWVzLmxlbmd0aDtcbiAgICAgICAgICAgICAgICAgICAgaWYgKGRpZmZlcmVuY2UgPiAwKVxuICAgICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLnF1ZXVlcy5wdXNoKC4uLmRlZmF1bHRfcXVldWVzLnNsaWNlKDAsZGlmZmVyZW5jZSkpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuY29uZmlnLnNldENhY2hlKFwiZGFzaHF1ZXVlc1wiLCB0aGlzLnF1ZXVlcyk7XG5cbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIGVycm9yID0+IHtcbiAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coZXJyb3IgfHwgJ1NlcnZlciBlcnJvcicpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICApO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgIH1cblxuICAgICAgICBpZiAodGhpcy5jb25maWcuY3VycmVudC5pc19hY2NvdW50X21hbmFnZXIpIHtcbiAgICAgICAgICAgIHRoaXMuYWNjb3VudHMgPSB0aGlzLmNvbmZpZy5nZXRDYWNoZShcImRhc2hhY2NvdW50c1wiKTtcblxuICAgICAgICAgICAgbGV0IGFjY291bnRzbGVuID0gNTAwOyAvL3RoaXMuY29uZmlnLmdldFN0YXQoXCJhY2NvdW50c1wiKTtcblxuICAgICAgICAgICAgbGV0IHBhZ2VyID0geyBsaW1pdDogfmFjY291bnRzbGVuID8gYWNjb3VudHNsZW4gOiA1MDAgfTtcblxuICAgICAgICAgICAgaWYgKCF0aGlzLmFjY291bnRzIHx8IHRoaXMuYWNjb3VudHMubGVuZ3RoID09IDApXG4gICAgICAgICAgICAgICAgdGhpcy5kYXRhUHJvdmlkZXIuZ2V0QWNjb3VudExpc3QodHJ1ZSwgcGFnZXIsIGZhbHNlLCB0cnVlKS5zdWJzY3JpYmUoXG4gICAgICAgICAgICAgICAgICAgIGRhdGEgPT4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5hY2NvdW50cyA9IGRhdGE7XG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLmNvbmZpZy5zZXRTdGF0KFwiYWNjb3VudHNcIiwgZGF0YS5sZW5ndGgpO1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHRoaXMuc2ltcGxlKVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuY29uZmlnLnNldENhY2hlKFwiZGFzaGFjY291bnRzXCIsIGRhdGEpO1xuICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICBlcnJvciA9PiB7XG4gICAgICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhlcnJvciB8fCAnU2VydmVyIGVycm9yJyk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgKTtcbiAgICAgICAgICAgIC8qaWYgKCF0aGlzLnNpbXBsZSlcbiAgICAgICAgICAgICAgICBzZXRUaW1lb3V0KCgpID0+IHtcbiAgICAgICAgICAgICAgICB0aGlzLmRhdGFQcm92aWRlci5nZXRBY2NvdW50TGlzdCh0cnVlLCBwYWdlcikuc3Vic2NyaWJlKFxuICAgICAgICAgICAgICAgICAgICBkYXRhID0+IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuYWNjb3VudHMgPSBkYXRhO1xuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5jb25maWcuc2V0Q2FjaGUoXCJkYXNoYWNjb3VudHNcIiwgZGF0YSk7XG4gICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgIGVycm9yID0+IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKGVycm9yIHx8ICdTZXJ2ZXIgZXJyb3InKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICApOyAgXG4gICAgICAgICAgICB9LCAxMDApOyovXG4gICAgICAgIH1cblxuICAgICAgICBpZiAoIXRoaXMudGlja2V0UHJvdmlkZXIuX2RhdGFTdG9yZS50ZWNoLmxlbmd0aCl7XG4gICAgICAgICAgICB0aGlzLnRpY2tldFByb3ZpZGVyLmdldFRpY2tldHNMaXN0KFwidGVjaFwiLCBcIlwiLCBcIlwiLHsgXCJsaW1pdFwiOiA2IH0pOyBcbiAgICAgICAgfVxuXG4gICAgICAgIHRoaXMudGltZXIgPSBzZXRUaW1lb3V0KCgpID0+IHtcbiAgICAgICAgICAgIGlmICghdGhpcy50aWNrZXRQcm92aWRlci5fZGF0YVN0b3JlLnVzZXIubGVuZ3RoKSB7XG4gICAgICAgICAgICAgICAgdGhpcy50aWNrZXRQcm92aWRlci5nZXRUaWNrZXRzTGlzdChcInVzZXJcIiwgXCJcIiwgXCJcIix7IFwibGltaXRcIjogNiB9KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmICh0aGlzLmNvbmZpZy5jdXJyZW50LmlzX3RpbWVfdHJhY2tpbmcgJiYgISh0aGlzLnRpbWVQcm92aWRlci5fZGF0YVN0b3JlW1widGltZVwiXSB8fCB7fSkubGVuZ3RoKXtcbiAgICAgICAgICAgICAgICB0aGlzLnRpbWVQcm92aWRlci5nZXRUaW1lbG9ncyhcIjBcIiwgXCJcIiwgeyBcImxpbWl0XCI6IDI1IH0pO1xuICAgICAgICAgICB9XG4gICAgICAgIH0sIDI1MDApO1xuICAgIFxuICAgICAgICBpZiAodGhpcy5jb25maWcuY3VycmVudC5pc190aW1lX3RyYWNraW5nKXtcbiAgICAgICAgICAgICAgICBsZXQgZGF0ZSA9IG5ldyBEYXRlKCkudG9KU09OKCkuc3Vic3RyaW5nKDAsMTApO1xuICAgICAgICAgICAgICAgIGxldCBhY2NvdW50ID0gXCIwXCI7XG4gICAgICAgICAgICAgICAgdGhpcy5jYWNoZW5hbWUgPSBhZGRwKFwidGltZVwiLCBcImFjY291bnRcIiwgYWNjb3VudCk7XG4gICAgICAgICAgICAgICAgdGhpcy5jYWNoZW5hbWUgPSBhZGRwKHRoaXMuY2FjaGVuYW1lLCBcInRlY2hcIiwgdGhpcy5jb25maWcuY3VycmVudC51c2VyLnVzZXJfaWQpO1xuICAgICAgICAgICAgICAgIHRoaXMuY2FjaGVuYW1lID0gYWRkcCh0aGlzLmNhY2hlbmFtZSwgXCJzdGFydF9kYXRlXCIsIGRhdGUpO1xuICAgICAgICAgICAgICAgIHRoaXMuY2FjaGVuYW1lID0gYWRkcCh0aGlzLmNhY2hlbmFtZSwgXCJlbmRfZGF0ZVwiLCBkYXRlKTtcbiAgICAgICAgICAgICAgICB0aGlzLmNvdW50SG91cnModGhpcy50aW1lUHJvdmlkZXIuX2RhdGFTdG9yZVt0aGlzLmNhY2hlbmFtZV0gfHwgW10pO1xuICAgICAgICAgICAgICAgIHRoaXMudGltZVByb3ZpZGVyLmdldFRpbWVsb2dzKGFjY291bnQsIHRoaXMuY29uZmlnLmN1cnJlbnQudXNlci51c2VyX2lkLCB7IFwibGltaXRcIjogMjUgfSwgZGF0ZSwgZGF0ZSk7XG4gICAgICAgICAgICAgICAgdGhpcy50aW1lbG9ncyA9IHRoaXMudGltZVByb3ZpZGVyLnRpbWVzJFt0aGlzLmNhY2hlbmFtZV07XG4gICAgICAgICAgICAgICAgdGhpcy50aW1lbG9ncy50YWtlVW50aWwodGhpcy51bnN1YnNjcmliZSQpLnN1YnNjcmliZShcbiAgICAgICAgICAgICAgICAgICAgICAgIGRhdGEgPT4gdGhpcy5jb3VudEhvdXJzKGRhdGEpXG4gICAgICAgICAgICAgICAgICAgICAgICApO1xuICAgICAgICAgfVxuICAgIH1cblxuICAgIGNvdW50SG91cnMoZGF0YSl7XG4gICAgICAgIGxldCBub25fd29ya2luZ19ob3VycyA9IDA7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbGV0IHdvcmtpbmcgPSAwO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRhdGEuZm9yRWFjaChpdGVtID0+IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHdvcmtpbmcgKz0gaXRlbS5ob3VycztcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChpdGVtLm5vbl93b3JraW5nX2hvdXJzICE9IC0xKVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5vbl93b3JraW5nX2hvdXJzICs9IGl0ZW0ubm9uX3dvcmtpbmdfaG91cnM7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5ub25fd29ya2luZ19ob3VycyA9IG5vbl93b3JraW5nX2hvdXJzO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMud29ya2luZyA9IHdvcmtpbmc7XG4gICAgfVxuXG4gICAgb25QYWdlRGlkRW50ZXIoKVxuICAgIHtcbiAgICAgICAgdGhpcy50ZXJtID0gXCJcIjtcbiAgICB9XG5cbiAgICBpdGVtVGFwcGVkKGV2ZW50KSB7XG4gICAgICAgICBsZXQgdGVjaCA9IHsgdGVjaF9pZDogdGhpcy5jb25maWcuY3VycmVudC51c2VyLnVzZXJfaWQsIHRlY2hfbmFtZTogdGhpcy5jb25maWcuY3VycmVudC51c2VyLmZpcnN0bmFtZStcIiBcIit0aGlzLmNvbmZpZy5jdXJyZW50LnVzZXIubGFzdG5hbWUgfTtcbiAgICAgICAgIHRoaXMubmF2LnB1c2goVGltZWxvZ3NQYWdlLCB0ZWNoKTtcbiAgICAgICAgICAgICAgICAgICB9XG5cbiAgICBzZXREYXRlKGRhdGUsIHNob3dtb250aD8sIGlzdGltZT8pIHtcbiAgICAgICAgcmV0dXJuIGRhdGUgPyBnZXREYXRlVGltZShkYXRlLCBzaG93bW9udGgsIGlzdGltZSkgOiBudWxsO1xuICAgIH1cbiAgICAgICAgICAgICAgICAgICBcbiAgICBzYXZlQ2FjaGUoKXtcbiAgICAgICAgbGV0IGVsID0gZG9jdW1lbnQuZWxlbWVudEZyb21Qb2ludCh3aW5kb3cuaW5uZXJXaWR0aC8yLCB3aW5kb3cuaW5uZXJIZWlnaHQvMik7XG4gICAgICAgIGxldCBjb250ZW50ID0gZWwuY2xvc2VzdCgnaW9uLW5hdicpO1xuICAgICAgICBpZiAoY29udGVudCl7XG4gICAgICAgICAgICB3aW5kb3cuZGFzaCA9IGNvbnRlbnQuaW5uZXJIVE1MLnJlcGxhY2UoL1xcc1xccysvZywnICcpO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgbmdPbkRlc3Ryb3koKXsgIFxuICAgICAgICB0aGlzLnVuc3Vic2NyaWJlJC5uZXh0KCk7XG4gICAgICAgIHRoaXMudW5zdWJzY3JpYmUkLmNvbXBsZXRlKCk7ICAgXG4gICAgICAgIGNsZWFyVGltZW91dCh0aGlzLnRpbWVyKTsgIFxuICAgIH1cblxuICAgIHNlYXJjaEl0ZW1zKHNlYXJjaGJhcikge1xuICAgICAgICAvLyBSZXNldCBpdGVtcyBiYWNrIHRvIGFsbCBvZiB0aGUgaXRlbXNcbiAgICAgICAgdGhpcy5zZWFyY2hfcmVzdWx0cyA9IFtdO1xuXG4gICAgICAgIC8vIHNldCBxIHRvIHRoZSB2YWx1ZSBvZiB0aGUgc2VhcmNoYmFyXG4gICAgICAgIHZhciBxID0gc2VhcmNoYmFyLnZhbHVlO1xuXG4gICAgICAgIC8vIGlmIHRoZSB2YWx1ZSBpcyBhbiBlbXB0eSBzdHJpbmcgZG9uJ3QgZmlsdGVyIHRoZSBzZWFyY2hfcmVzdWx0c1xuICAgICAgICBpZiAocS50cmltKCkgPT0gJycgfHwgdGhpcy5idXN5KSB7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cblxuICAgICAgICBpZiAocS5sZW5ndGggPiAxKVxuICAgICAgICB7XG4gICAgICAgICAgICB2YXIgdGltZXIgPSBzZXRUaW1lb3V0KCgpID0+IHsgdGhpcy5idXN5ID0gdHJ1ZTsgfSwgNTAwKTtcbiAgICAgICAgICAgIHRoaXMuZ2V0SXRlbXMocSwgdGltZXIpO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgZ2V0SXRlbXModGVybSwgdGltZXIpIHtcbiAgICAgICAgdGhpcy5zZWFyY2hfcmVzdWx0cyA9IFtdO1xuICAgICAgICBsZXQgdXJsID0gXCJ0aWNrZXRzP3F1ZXJ5PWFsbFwiOyAvL3N0YXR1cz1hbGxvcGVuJlxuICAgICAgICBsZXQgcGFnZXIgPSB7IGxpbWl0OiAzIH07XG4gICAgICAgIGxldCBpc190aWNrZXQgPSB0ZXJtW3Rlcm0ubGVuZ3RoIC0gMV0gPT0gXCIgXCIgfHwgdGVybVt0ZXJtLmxlbmd0aCAtIDFdID09IFwiLFwiO1xuICAgICAgICBpZiAoIWlzX3RpY2tldCkgdGVybSArPSBcIipcIjtcbiAgICAgICAgZWxzZSB1cmwgPSBcInRpY2tldHMvXCIgKyB0ZXJtLnRyaW0oKSArIFwiLFwiO1xuICAgICAgICB0aGlzLmFwaURhdGEuZ2V0UGFnZWQoYWRkcCh1cmwsIFwic2VhcmNoXCIsIHRlcm0pLCBwYWdlcikuc3Vic2NyaWJlKFxuICAgICAgICAgICAgZGF0YSA9PiB7XG4gICAgICAgICAgICAgICAgaWYgKHRpbWVyKSB7XG4gICAgICAgICAgICAgICAgICAgIGNsZWFyVGltZW91dCh0aW1lcik7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuYnVzeSA9IGZhbHNlO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB0aGlzLnNlYXJjaF9yZXN1bHRzID0gZGF0YTtcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBlcnJvciA9PiB7XG4gICAgICAgICAgICAgICAgaWYgKHRpbWVyKSB7XG4gICAgICAgICAgICAgICAgICAgIGNsZWFyVGltZW91dCh0aW1lcik7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuYnVzeSA9IGZhbHNlO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhlcnJvciB8fCAnU2VydmVyIGVycm9yJyk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICApO1xuICAgIH1cblxuICAgIGdvdG9UaWNrZXQodGlja2V0LCBzZWFyY2hCYXIpXG4gICAge1xuICAgICAgICB0aGlzLnRlc3QgPSBmYWxzZTtcbiAgICAgICAgdGhpcy5jbGVhclNlYXJjaCgpO1xuICAgICAgICB0aGlzLm5hdi5wdXNoKFRpY2tldERldGFpbHNQYWdlLCB0aWNrZXQpO1xuICAgIH1cblxuICAgIGNsZWFyU2VhcmNoKHNlYXJjaGJhcj8pXG4gICAge1xuICAgICAgICB0aGlzLnNlYXJjaF9yZXN1bHRzID0gW107XG4gICAgICAgIHRoaXMuYnVzeSA9IGZhbHNlO1xuICAgICAgICBpZiAoc2VhcmNoYmFyKSBzZWFyY2hiYXIudmFsdWUgPSBcIlwiO1xuICAgIH1cblxuICAgIGdldFNlYXJjaChzZWFyY2hiYXIpIHtcbiAgICAgICAgdGhpcy50ZXN0ID0gZmFsc2U7XG4gICAgICAgIHRoaXMuY2xlYXJTZWFyY2goKTtcbiAgICAgICAgLy8gUmVzZXQgaXRlbXMgYmFjayB0byBhbGwgb2YgdGhlIGl0ZW1zXG4gICAgICAgIC8vIHNldCBxIHRvIHRoZSB2YWx1ZSBvZiB0aGUgc2VhcmNoYmFyXG4gICAgICAgIC8vaWYgKHNlYXJjaGJhci50YXJnZXQudmFsdWUudHJpbSgpLmxlbmd0aCA+IDIpIHtcbiAgICAgICAgICAgIGxldCB0ZXJtID0gc2VhcmNoYmFyLnRhcmdldC52YWx1ZTtcbiAgICAgICAgICAgIGlmICh0ZXJtLmxlbmd0aCA8IDQpXG4gICAgICAgICAgICAgICAgdGVybSArPSBcIiAgICBcIjtcbiAgICAgICAgICAgIGxldCBsaXN0ID0geyBzZWFyY2g6IHRlcm0gfTtcbiAgICAgICAgICAgIHRoaXMudGVzdCA9IGZhbHNlO1xuICAgICAgICAgICAgdGhpcy5uYXYucHVzaChBamF4U2VhcmNoUGFnZSwgbGlzdCk7XG4gICAgICAgICAgICAvL31cbiAgICAgICAgfVxuXG4gICAgICAgIGl0ZW1UYXBwZWRUTCh0YWIpIHsgIFxuICAgICAgICAgICAgdGhpcy5uYXYuc2V0Um9vdChUaWNrZXRzUGFnZSwgdGFiKTtcbiAgICAgICAgfVxuXG4gICAgICAgIGl0ZW1UYXBwZWRBRCgpIHt0aGlzLm5hdi5zZXRSb290KEFjY291bnREZXRhaWxzUGFnZSk7fVxuXG4gICAgfVxuIiwiaW1wb3J0IHtQYWdlLCBDb25maWcsIE5hdiwgTmF2UGFyYW1zLCBWaWV3Q29udHJvbGxlcn0gZnJvbSAnaW9uaWMtYW5ndWxhcic7XG5pbXBvcnQge2ZvcndhcmRSZWZ9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHtnZXREYXRlVGltZSwgaHRtbEVzY2FwZSwgbGluZWJyZWFrcywgZ2V0RnVsbE5hbWV9IGZyb20gJy4uLy4uL2RpcmVjdGl2ZXMvaGVscGVycyc7XG5pbXBvcnQge0FwaURhdGF9IGZyb20gJy4uLy4uL3Byb3ZpZGVycy9hcGktZGF0YSc7XG5pbXBvcnQge0NsYXNzTGlzdENvbXBvbmVudH0gZnJvbSAnLi4vLi4vY29tcG9uZW50cy9jbGFzcy1saXN0L2NsYXNzLWxpc3QnO1xuaW1wb3J0IHtTZWxlY3RMaXN0Q29tcG9uZW50fSBmcm9tICcuLi8uLi9jb21wb25lbnRzL3NlbGVjdC1saXN0L3NlbGVjdC1saXN0JztcblxuQFBhZ2Uoe1xuICAgIHRlbXBsYXRlVXJsOiAnYnVpbGQvcGFnZXMvZXhwZW5zZS1jcmVhdGUvZXhwZW5zZS1jcmVhdGUuaHRtbCcsXG4gICAgZGlyZWN0aXZlczogW2ZvcndhcmRSZWYoKCkgPT4gQ2xhc3NMaXN0Q29tcG9uZW50KSwgZm9yd2FyZFJlZigoKSA9PiBTZWxlY3RMaXN0Q29tcG9uZW50KV0sXG59KVxuZXhwb3J0IGNsYXNzIEV4cGVuc2VDcmVhdGVQYWdlIHtcblxuICAgIGV4cGVuc2U6IGFueSA9IHt9O1xuICAgIGlzYmlsbGFibGU6IGJvb2xlYW47XG4gICAgaXNfdGVjaG5pY2lhbl9wYXltZW50OiBib29sZWFuO1xuICAgIGhlOiBhbnk7XG4gICAgc2VsZWN0czogYW55O1xuICAgIHRpdGxlOiBzdHJpbmc7XG4gICAgYWNjb3VudF9pZDogYW55O1xuXG4gICAgY29uc3RydWN0b3IocHJpdmF0ZSBuYXY6IE5hdiwgcHJpdmF0ZSBuYXZQYXJhbXM6IE5hdlBhcmFtcywgcHJpdmF0ZSBhcGlEYXRhOiBBcGlEYXRhLCBwcml2YXRlIGNvbmZpZzogQ29uZmlnLCBwcml2YXRlIHZpZXc6IFZpZXdDb250cm9sbGVyKSB7XG4gICAgfVxuICAgIFxuICAgIG5nT25Jbml0KClcbiAgICB7XG4gICAgICAgIHRoaXMuZXhwZW5zZSA9IHRoaXMubmF2UGFyYW1zLmRhdGEgfHwge307XG5cbiAgICAgICAgbGV0IG5hbWUgPSAodGhpcy5leHBlbnNlLnVzZXJfbmFtZSArIFwiIFwiICsgdGhpcy5leHBlbnNlLnVzZXJfZW1haWwpLnRyaW0oKS5zcGxpdCgnICcpWzBdO1xuICAgICAgICBpZiAodGhpcy5leHBlbnNlLmV4cGVuc2VfaWQpe1xuICAgICAgICAgICAgdGhpcy50aXRsZSA9IGBFeHBlbnNlIGJ5ICR7bmFtZX0gb25cXHUwMGEwYCArIHRoaXMuc2V0RGF0ZSh0aGlzLmV4cGVuc2UuZGF0ZSwgZmFsc2UsIHRydWUpO1xuICAgICAgICAgICAgdGhpcy5leHBlbnNlLm5vdGUgPSBsaW5lYnJlYWtzKHRoaXMuZXhwZW5zZS5ub3RlLCB0cnVlKTtcbiAgICAgICAgICAgIHRoaXMuZXhwZW5zZS5ub3RlX2ludGVybmFsID0gbGluZWJyZWFrcyh0aGlzLmV4cGVuc2Uubm90ZV9pbnRlcm5hbCwgdHJ1ZSk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSBpZiAodGhpcy5leHBlbnNlLm51bWJlcilcbiAgICAgICAgICAgIHRoaXMudGl0bGUgPSBgQWRkIEV4cGVuc2UgdG9cXHUwMGEwIyR7dGhpcy5leHBlbnNlLm51bWJlcn0gJHt0aGlzLmV4cGVuc2Uuc3ViamVjdH1gO1xuICAgICAgICBlbHNlXG4gICAgICAgICAgICB0aGlzLnRpdGxlID0gXCJDcmVhdGUgRXhwZW5zZVwiO1xuICAgICAgICBpZih0aGlzLmV4cGVuc2UuYW1vdW50KVxuICAgICAgICB0aGlzLmV4cGVuc2UuYW1vdW50ID0gdGhpcy5nZXRGaXhlZCh0aGlzLmV4cGVuc2UuYW1vdW50KTtcbiAgICAgICAgdGhpcy5leHBlbnNlLnVuaXRzID0gKHR5cGVvZiB0aGlzLmV4cGVuc2UudW5pdHMgPT09ICd1bmRlZmluZWQnIHx8IHRoaXMuZXhwZW5zZS51bml0cyA9PT0gMCkgPyAxIDogdGhpcy5leHBlbnNlLnVuaXRzO1xuICAgICAgICB0aGlzLmV4cGVuc2UubWFya3VwX3ZhbHVlID0gKHR5cGVvZiB0aGlzLmV4cGVuc2UubWFya3VwX3ZhbHVlID09PSAndW5kZWZpbmVkJyB8fCB0aGlzLmV4cGVuc2UubWFya3VwX3ZhbHVlIDw9IDApID8gXCJcIiA6IHRoaXMuZ2V0Rml4ZWQodGhpcy5leHBlbnNlLm1hcmt1cF92YWx1ZSk7XG5cbiAgICAgICAgdGhpcy5pc2JpbGxhYmxlID0gdHlwZW9mIHRoaXMuZXhwZW5zZS5iaWxsYWJsZSA9PT0gJ3VuZGVmaW5lZCcgPyB0cnVlIDogdGhpcy5leHBlbnNlLmJpbGxhYmxlO1xuICAgICAgICB0aGlzLmlzX3RlY2huaWNpYW5fcGF5bWVudCA9IHR5cGVvZiB0aGlzLmV4cGVuc2UuaXNfdGVjaG5pY2lhbl9wYXltZW50ID09PSAndW5kZWZpbmVkJyA/IHRydWUgOiB0aGlzLmV4cGVuc2UuaXNfdGVjaG5pY2lhbl9wYXltZW50O1xuICAgICAgICBcbiAgICAgICAgdGhpcy5oZSA9IHRoaXMuY29uZmlnLmdldEN1cnJlbnQoXCJ1c2VyXCIpO1xuXG4gICAgICAgIGxldCByZWNlbnQgOiBhbnkgPSB7fTtcblxuICAgICAgICAgICAgaWYgKCF0aGlzLmV4cGVuc2UubnVtYmVyICYmICF0aGlzLmV4cGVuc2UuZXhwZW5zZV9pZCAmJiAhdGhpcy5leHBlbnNlLmFjY291bnQpXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgcmVjZW50ID0gdGhpcy5jb25maWcuY3VycmVudC5yZWNlbnQgfHwge307XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgdGhpcy5hY2NvdW50X2lkID0gKHRoaXMuZXhwZW5zZS5hY2NvdW50IHx8IHt9KS5pZCB8fCB0aGlzLmV4cGVuc2UuYWNjb3VudF9pZCB8fCAocmVjZW50LmFjY291bnQgfHwge30pLnNlbGVjdGVkIHx8IHRoaXMuaGUuYWNjb3VudF9pZCB8fCAtMTtcbiAgICAgICAgbGV0IHByb2plY3RfaWQgPSAodGhpcy5leHBlbnNlLnByb2plY3QgfHwge30pLmlkIHx8IHRoaXMuZXhwZW5zZS5wcm9qZWN0X2lkIHx8IChyZWNlbnQucHJvamVjdCB8fCB7fSkuc2VsZWN0ZWQgfHwgMDtcbiAgICAgICAgbGV0IGNvbnRyYWN0X2lkID0gKHRoaXMuZXhwZW5zZS5jb250cmFjdCB8fCB7fSkuaWQgfHwgdGhpcy5leHBlbnNlLmNvbnRyYWN0X2lkIHx8IChyZWNlbnQuY29udHJhY3QgfHwge30pLnNlbGVjdGVkIHx8IDA7XG4gICAgICAgIGxldCBjYXRlZ29yeV9pZCA9ICh0aGlzLmV4cGVuc2UuY2F0ZWdvcnkgfHwge30pLmlkIHx8IHRoaXMuZXhwZW5zZS5jYXRlZ29yeV9pZCB8fCAocmVjZW50LmNhdGVnb3J5IHx8IHt9KS5zZWxlY3RlZCB8fCAwO1xuXG4gICAgICAgIHRoaXMuc2VsZWN0cyA9IHtcbiAgICAgICAgICAgIFwiYWNjb3VudFwiOiB7XG4gICAgICAgICAgICAgICAgbmFtZTogXCJBY2NvdW50XCIsXG4gICAgICAgICAgICAgICAgdmFsdWU6IHRoaXMuZXhwZW5zZS5hY2NvdW50X25hbWUgfHwgKHRoaXMuZXhwZW5zZS5hY2NvdW50IHx8IHt9KS5uYW1lIHx8IChyZWNlbnQuYWNjb3VudCB8fCB7fSkudmFsdWUgfHwgdGhpcy5oZS5hY2NvdW50X25hbWUsXG4gICAgICAgICAgICAgICAgc2VsZWN0ZWQ6IHRoaXMuYWNjb3VudF9pZCxcbiAgICAgICAgICAgICAgICB1cmw6IFwiYWNjb3VudHM/aXNfd2l0aF9zdGF0aXN0aWNzPWZhbHNlJmxpbWl0PTUwMFwiLFxuICAgICAgICAgICAgICAgIGhpZGRlbjogdGhpcy5leHBlbnNlLmlzX2ZpeGVkXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgXCJ0aWNrZXRcIiA6IHtcbiAgICAgICAgICAgICAgICAgICAgbmFtZTogXCJUaWNrZXRcIiwgXG4gICAgICAgICAgICAgICAgICAgIHZhbHVlOiB0aGlzLmV4cGVuc2UudGlja2V0X251bWJlciA/IGAjJHt0aGlzLmV4cGVuc2UudGlja2V0X251bWJlcn06ICR7dGhpcy5leHBlbnNlLnRpY2tldF9zdWJqZWN0fWAgOiBcIkNob29zZSAob3B0aW9uYWwpXCIsXG4gICAgICAgICAgICAgICAgICAgIHNlbGVjdGVkOiB0aGlzLmV4cGVuc2UudGlja2V0X251bWJlciB8fCAwLFxuICAgICAgICAgICAgICAgICAgICB1cmw6IGB0aWNrZXRzP3N0YXR1cz1vcGVuJmFjY291bnQ9JHt0aGlzLmFjY291bnRfaWR9JnByb2plY3Q9JHtwcm9qZWN0X2lkfWAsXG4gICAgICAgICAgICAgICAgICAgIGhpZGRlbjogdGhpcy5leHBlbnNlLnByb2plY3RfaWQgfHwgdGhpcy5leHBlbnNlLmlzX2ZpeGVkIHx8IGZhbHNlLFxuICAgICAgICAgICAgICAgICAgICBpc19kaXNhYmxlZDogdGhpcy5leHBlbnNlLnRpY2tldF9pZCxcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgXCJwcm9qZWN0XCI6IHtcbiAgICAgICAgICAgICAgICBuYW1lOiBcIlByb2plY3RcIixcbiAgICAgICAgICAgICAgICB2YWx1ZTogdGhpcy5leHBlbnNlLnByb2plY3RfbmFtZSB8fCAocmVjZW50LnByb2plY3QgfHwge30pLnZhbHVlIHx8IFwiRGVmYXVsdFwiLFxuICAgICAgICAgICAgICAgIHNlbGVjdGVkOiBwcm9qZWN0X2lkLFxuICAgICAgICAgICAgICAgIHVybDogYHByb2plY3RzP2FjY291bnQ9JHt0aGlzLmFjY291bnRfaWR9JmlzX3dpdGhfc3RhdGlzdGljcz1mYWxzZWAsXG4gICAgICAgICAgICAgICAgaGlkZGVuOiB0aGlzLmV4cGVuc2UuaXNfZml4ZWQgfHwgdGhpcy5leHBlbnNlLnRpY2tldF9pZFxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBcImNvbnRyYWN0XCIgOiB7IFxuICAgICAgICAgICAgICAgICAgICBuYW1lOiBcIkNvbnRyYWN0XCIsIFxuICAgICAgICAgICAgICAgICAgICB2YWx1ZTogdGhpcy5leHBlbnNlLmNvbnRyYWN0X25hbWUgfHwgKHJlY2VudC5jb250cmFjdCB8fCB7fSkudmFsdWUgfHwgXCJDaG9vc2VcIixcbiAgICAgICAgICAgICAgICAgICAgc2VsZWN0ZWQ6IHRoaXMuZXhwZW5zZS5jb250cmFjdF9pZCB8fCB0aGlzLmNvbmZpZy5nZXRSZWNlbnQoXCJjb250cmFjdFwiKS5zZWxlY3RlZCB8fCAwLFxuICAgICAgICAgICAgICAgICAgICB1cmw6IGBjb250cmFjdHM/YWNjb3VudF9pZD0ke3RoaXMuYWNjb3VudF9pZH0mZm9yX3RpbWVfbG9ncz1mYWxzZWAsXG4gICAgICAgICAgICAgICAgICAgIGhpZGRlbjogdGhpcy5leHBlbnNlLmlzX2ZpeGVkLFxuICAgICAgICAgICAgICAgICAgICBpc19kaXNhYmxlZDogZmFsc2UsXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIFwiY2F0ZWdvcnlcIiA6IHsgXG4gICAgICAgICAgICAgICAgICAgIG5hbWU6IFwiQ2F0ZWdvcnlcIiwgXG4gICAgICAgICAgICAgICAgICAgIHZhbHVlOiB0aGlzLmV4cGVuc2UuY2F0ZWdvcnlfbmFtZSB8fCAocmVjZW50LmNhdGVnb3J5IHx8IHt9KS52YWx1ZSB8fCBcIkNob29zZVwiLFxuICAgICAgICAgICAgICAgICAgICBzZWxlY3RlZDogdGhpcy5leHBlbnNlLmNhdGVnb3J5X2lkIHx8IHRoaXMuY29uZmlnLmdldFJlY2VudChcImNhdGVnb3J5XCIpLnNlbGVjdGVkIHx8IG51bGwsXG4gICAgICAgICAgICAgICAgICAgIHVybDogYGV4cGVuc2VzL2NhdGVnb3JpZXNgLFxuICAgICAgICAgICAgICAgICAgICBpc19kaXNhYmxlZDogZmFsc2UsXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgfTsgICAgICBcbiAgICB9XG4gICAgXG4gICAgc2F2ZVNlbGVjdChldmVudCkge1xuICAgICAgICBsZXQgbmFtZSA9IGV2ZW50LnR5cGU7XG4gICAgICAgIHRoaXMuYWNjb3VudF9pZCA9IHRoaXMuc2VsZWN0cy5hY2NvdW50LnNlbGVjdGVkO1xuICAgICAgICBsZXQgdGlja2V0X2lkID0gdGhpcy5zZWxlY3RzLnRpY2tldC5zZWxlY3RlZDtcbiAgICAgICAgbGV0IHByb2plY3RfaWQgPSB0aGlzLnNlbGVjdHMucHJvamVjdC5zZWxlY3RlZDtcbiAgICAgICAgbGV0IGNvbnRyYWN0X2lkID0gdGhpcy5zZWxlY3RzLmNvbnRyYWN0LnNlbGVjdGVkO1xuICAgICAgICAvL2NoYW5nZSB1cmwgb24gcmVsYXRlZCBsaXN0c1xuICAgICAgICBzd2l0Y2ggKG5hbWUpIHtcbiAgICAgICAgICAgIGNhc2UgXCJhY2NvdW50XCI6XG4gICAgICAgICAgICBpZiAodGhpcy5zZWxlY3RzLmFjY291bnQuc2VsZWN0ZWQgPT09IGV2ZW50LmlkKSB7XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICB0aGlzLnNlbGVjdHMucHJvamVjdC51cmwgPSBgcHJvamVjdHM/YWNjb3VudD0ke2V2ZW50LmlkfSZpc193aXRoX3N0YXRpc3RpY3M9ZmFsc2VgO1xuICAgICAgICAgICAgdGhpcy5zZWxlY3RzLnByb2plY3QudmFsdWUgPSBcIkRlZmF1bHRcIjtcbiAgICAgICAgICAgIHRoaXMuc2VsZWN0cy5wcm9qZWN0LnNlbGVjdGVkID0gMDtcbiAgICAgICAgICAgIHRoaXMuYWNjb3VudF9pZCA9IGV2ZW50LmlkO1xuICAgICAgICAgICAgdGhpcy5zZWxlY3RzLnByb2plY3QuaGlkZGVuID0gZmFsc2U7XG4gICAgICAgICAgICB0aGlzLnNlbGVjdHMuY29udHJhY3QudXJsID0gYGNvbnRyYWN0cz9hY2NvdW50X2lkPSR7ZXZlbnQuaWR9JmZvcl90aW1lX2xvZ3M9ZmFsc2VgO1xuICAgICAgICAgICAgdGhpcy5zZWxlY3RzLmNvbnRyYWN0LnZhbHVlID0gXCJDaG9vc2VcIjtcbiAgICAgICAgICAgIHRoaXMuc2VsZWN0cy5jb250cmFjdC5zZWxlY3RlZCA9IDA7XG4gICAgICAgICAgICBjb250cmFjdF9pZCA9IDA7XG4gICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIGNhc2UgXCJwcm9qZWN0XCIgOlxuICAgICAgICAgICAgaWYgKHRoaXMuc2VsZWN0cy5wcm9qZWN0LnNlbGVjdGVkID09PSBldmVudC5pZClcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIC8vIGRvbnQgY2hhbmdlIHRpY2tldCBvbiBlZGl0XG4gICAgICAgICAgICBpZiAoIXRoaXMuZXhwZW5zZS50aWNrZXRfaWQpe1xuICAgICAgICAgICAgICAgIHRoaXMuc2VsZWN0cy50aWNrZXQudXJsID0gYHRpY2tldHM/c3RhdHVzPW9wZW4mYWNjb3VudD0ke3RoaXMuYWNjb3VudF9pZH0mcHJvamVjdD0ke2V2ZW50LmlkfWAsXG4gICAgICAgICAgICAgICAgdGhpcy5zZWxlY3RzLnRpY2tldC52YWx1ZSA9IFwiQ2hvb3NlIChvcHRpb25hbClcIjtcbiAgICAgICAgICAgICAgICB0aGlzLnNlbGVjdHMudGlja2V0LnNlbGVjdGVkID0gMDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHByb2plY3RfaWQgPSBldmVudC5pZDtcbiAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgY2FzZSBcImNvbnRyYWN0XCIgOlxuICAgICAgICAgICAgaWYgKHRoaXMuc2VsZWN0cy5jb250cmFjdC5zZWxlY3RlZCA9PT0gZXZlbnQuaWQpXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBjb250cmFjdF9pZCA9IGV2ZW50LmlkO1xuICAgICAgICAgICAgYnJlYWs7XG5cbiAgICAgICAgICAgIGNhc2UgXCJ0aWNrZXRcIiA6XG4gICAgICAgICAgICBpZiAodGhpcy5zZWxlY3RzLnRpY2tldC5zZWxlY3RlZCA9PT0gZXZlbnQuaWQpXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICB0aWNrZXRfaWQgPSBldmVudC5pZDtcbiAgICAgICAgICAgIHRoaXMuc2VsZWN0cy50aWNrZXQudmFsdWUgPSBldmVudC5uYW1lO1xuICAgICAgICAgICAgdGhpcy5zZWxlY3RzLnRpY2tldC5zZWxlY3RlZCA9IGV2ZW50LmlkO1xuICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgdGhpcy5zZWxlY3RzW25hbWVdLnNlbGVjdGVkID0gZXZlbnQuaWQ7XG4gICAgICAgICAgICB0aGlzLnNlbGVjdHNbbmFtZV0udmFsdWUgPSBldmVudC5uYW1lO1xuICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBvblN1Ym1pdChmb3JtKSB7XG4gICAgICAgIGlmIChmb3JtLnZhbGlkKSB7XG4gICAgICAgICAgICAvL3Byb29mIGRvdWJsZSBjbGlja1xuICAgICAgICAgICAgaWYgKHRoaXMuZXhwZW5zZS5pbl9wcm9ncmVzcyAmJiBEYXRlLm5vdygpIC0gdGhpcy5leHBlbnNlLmluX3Byb2dyZXNzIDwgMTUwMCkge3JldHVybjt9XG4gICAgICAgICAgICB0aGlzLmV4cGVuc2UuaW5fcHJvZ3Jlc3MgPSBEYXRlLm5vdygpO1xuICAgICAgICAgICAgbGV0IGFtb3VudCA9IGlzTmFOKGZvcm0udmFsdWUuYW1vdW50KSA/IDAgOiBOdW1iZXIoZm9ybS52YWx1ZS5hbW91bnQpO1xuICAgICAgICAgICAgaWYgKGFtb3VudCA9PSAwKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5uYXYuYWxlcnQoXCJOb3QgZW5vdWdoIGFtb3VudFwiLCB0cnVlKTtcbiAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBsZXQgdW5pdHMgPSBpc05hTihmb3JtLnZhbHVlLnVuaXRzKSA/IDAgOiBOdW1iZXIoZm9ybS52YWx1ZS51bml0cyk7XG4gICAgICAgICAgICBpZiAodW5pdHMgPD0gMCkge1xuICAgICAgICAgICAgICAgIHRoaXMubmF2LmFsZXJ0KFwiTm90IGVub3VnaCB1bml0c1wiLCB0cnVlKTtcbiAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBsZXQgbWFya3VwX3ZhbHVlID0gKCFmb3JtLnZhbHVlLm1hcmt1cF92YWx1ZSB8fCBpc05hTihmb3JtLnZhbHVlLm1hcmt1cF92YWx1ZSkpID8gLTEgOiBOdW1iZXIoZm9ybS52YWx1ZS5tYXJrdXBfdmFsdWUpO1xuXG4gICAgICAgICAgICB2YXIgbm90ZSA9IGh0bWxFc2NhcGUodGhpcy5leHBlbnNlLm5vdGUudHJpbSgpKS5zdWJzdHIoMCwgNTAwMCk7XG5cbiAgICAgICAgICAgIC8vVE9ETyBpZiBvdGhlciB1c2VyIGNoYW5nZXMgd2hhdCBpZCBzaG91bGQgSSB3cml0ZT8gXG4gICAgICAgICAgICBsZXQgZXhzRGF0YSA9IHtcbiAgICAgICAgICAgICAgICBcInRpY2tldF9rZXlcIjogdGhpcy5zZWxlY3RzLnRpY2tldC5zZWxlY3RlZCB8fCBudWxsLFxuICAgICAgICAgICAgICAgIFwidGlja2V0X25hbWVcIjogdGhpcy5zZWxlY3RzLnRpY2tldC52YWx1ZSB8fCBudWxsLFxuICAgICAgICAgICAgICAgIFwiYWNjb3VudF9pZFwiOiB0aGlzLnNlbGVjdHMuYWNjb3VudC5zZWxlY3RlZCxcbiAgICAgICAgICAgICAgICBcImNvbnRyYWN0X2lkXCI6IHRoaXMuc2VsZWN0cy5jb250cmFjdC5zZWxlY3RlZCxcbiAgICAgICAgICAgICAgICBcImNhdGVnb3J5X2lkXCI6IHRoaXMuc2VsZWN0cy5jYXRlZ29yeS5zZWxlY3RlZCxcbiAgICAgICAgICAgICAgICBcInByb2plY3RfaWRcIjogIXRoaXMuZXhwZW5zZS50aWNrZXRfbnVtYmVyID8gdGhpcy5zZWxlY3RzLnByb2plY3Quc2VsZWN0ZWQgOiBudWxsLFxuICAgICAgICAgICAgICAgIFwicHJvamVjdF9uYW1lXCI6IHRoaXMuc2VsZWN0cy5wcm9qZWN0LnZhbHVlLFxuICAgICAgICAgICAgICAgIFwidGVjaF9pZFwiOiAhIXRoaXMuZXhwZW5zZS5leHBlbnNlX2lkID8gdGhpcy5leHBlbnNlLnVzZXJfaWQgOiB0aGlzLmhlLnVzZXJfaWQsXG4gICAgICAgICAgICAgICAgXCJ1c2VyX25hbWVcIjogZ2V0RnVsbE5hbWUodGhpcy5oZS5maXJzdG5hbWUsIHRoaXMuaGUubGFzdG5hbWUsIHRoaXMuaGUuZW1haWwpLFxuICAgICAgICAgICAgICAgIFwibm90ZVwiOiB0aGlzLmV4cGVuc2Uubm90ZSxcbiAgICAgICAgICAgICAgICBcIm5vdGVfaW50ZXJuYWxcIjogdGhpcy5leHBlbnNlLm5vdGVfaW50ZXJuYWwsXG4gICAgICAgICAgICAgICAgXCJhbW91bnRcIjogYW1vdW50LFxuICAgICAgICAgICAgICAgIFwiaXNfYmlsbGFibGVcIjogdGhpcy5pc2JpbGxhYmxlLFxuICAgICAgICAgICAgICAgIFwiaXNfdGVjaG5pY2lhbl9wYXltZW50XCI6IHRoaXMuaXNfdGVjaG5pY2lhbl9wYXltZW50LFxuICAgICAgICAgICAgICAgIFwidmVuZG9yXCI6IHRoaXMuZXhwZW5zZS52ZW5kb3IsXG4gICAgICAgICAgICAgICAgXCJ1bml0c1wiOiB0aGlzLmV4cGVuc2UudW5pdHMsXG4gICAgICAgICAgICAgICAgXCJtYXJrdXBfdmFsdWVcIjogbWFya3VwX3ZhbHVlLFxuICAgICAgICAgICAgICAgIFwiZXhwZW5zZV9pZFwiOiB0aGlzLmV4cGVuc2UuZXhwZW5zZV9pZCB8fCBcIlwiXG4gICAgICAgICAgICB9O1xuXG4gICAgICAgICAgICB0aGlzLmFwaURhdGEuZ2V0KFwiZXhwZW5zZXNcIiwgZXhzRGF0YSwgXCJQT1NUXCIpLnN1YnNjcmliZShcbiAgICAgICAgICAgICAgICBkYXRhID0+IHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKCF0aGlzLmV4cGVuc2UubnVtYmVyICYmICF0aGlzLmV4cGVuc2UuZXhwZW5zZV9pZCAmJiAhdGhpcy5leHBlbnNlLmFjY291bnQpXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgdGhpcy5jb25maWcuc2V0UmVjZW50KHtcImFjY291bnRcIjogdGhpcy5zZWxlY3RzLmFjY291bnQsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcInByb2plY3RcIjogdGhpcy5zZWxlY3RzLnByb2plY3QsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcInRpY2tldFwiOiB0aGlzLnNlbGVjdHMudGlja2V0LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXCJjb250cmFjdFwiOiB0aGlzLnNlbGVjdHMuY29udHJhY3R9KTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgICAgICB0aGlzLm5hdi5hbGVydCgnRXhwZW5zZSB3YXMgc3VjY2Vzc2Z1bGx5IGFkZGVkIDopJyk7XG4gICAgICAgICAgICAgICAgICAgIHNldFRpbWVvdXQoKCkgPT4gdGhpcy5jbG9zZShleHNEYXRhKSwgNTAwKTtcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIGVycm9yID0+IHtcbiAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coZXJyb3IgfHwgJ1NlcnZlciBlcnJvcicpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICApO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgc2V0RGF0ZShkYXRlLCBzaG93bW9udGg/LCBpc3RpbWU/KSB7XG4gICAgICAgIGlmIChkYXRlKXtcbiAgICAgICAgLy92YXIgdGltZV9vZmZzZXQgPSB0aGlzLmNvbmZpZy5nZXRDdXJyZW50KFwidGltZXpvbmVfb2Zmc2V0XCIpOyAgICAgXG4gICAgICAgIGRhdGUgPSBuZXcgRGF0ZShkYXRlLnN1YnN0cmluZygwLDIzKStcIlpcIik7XG4gICAgICAgIC8vZGF0ZSA9IG5ldyBEYXRlKGRhdGUuc2V0VGltZShkYXRlLmdldFRpbWUoKSArIHRpbWVfb2Zmc2V0KjYwKjYwKjEwMDApKS50b0pTT04oKTtcbiAgICAgICAgcmV0dXJuIGdldERhdGVUaW1lKGRhdGUsIHNob3dtb250aCwgaXN0aW1lKTtcbiAgICB9XG4gICAgIHJldHVybiBudWxsO1xuICAgIH1cblxuICAgIFxuICAgIGdldEZpeGVkKHZhbHVlKXtcbiAgICAgICAgcmV0dXJuIE51bWJlcih2YWx1ZSB8fCBcIjBcIikudG9GaXhlZCgyKS50b1N0cmluZygpO1xuICAgIH1cbiAgICBcbiAgICBjbG9zZShkYXRhKSB7XG4gICAgICAgIHRoaXMudmlldy5kaXNtaXNzKGRhdGEpO1xuICAgIH1cbn1cblxuIiwiaW1wb3J0IHtQYWdlLCBDb25maWcsIE5hdiwgTmF2UGFyYW1zLCBWaWV3Q29udHJvbGxlcn0gZnJvbSAnaW9uaWMtYW5ndWxhcic7XG5pbXBvcnQge0RhdGFQcm92aWRlcn0gZnJvbSAnLi4vLi4vcHJvdmlkZXJzL2RhdGEtcHJvdmlkZXInO1xuaW1wb3J0IHtnZXREYXRlVGltZSwgZ2V0Q3VycmVuY3l9IGZyb20gJy4uLy4uL2RpcmVjdGl2ZXMvaGVscGVycyc7XG5pbXBvcnQge0V4cGVuc2VDcmVhdGVQYWdlfSBmcm9tICcuLi9leHBlbnNlLWNyZWF0ZS9leHBlbnNlLWNyZWF0ZSc7XG5pbXBvcnQge0dyYXZhdGFyUGlwZSwgTW9yZVBpcGUsIExpbmVicmVha3NQaXBlfSBmcm9tICcuLi8uLi9waXBlcy9waXBlcyc7XG5cbkBQYWdlKHtcbiAgICB0ZW1wbGF0ZVVybDogJ2J1aWxkL3BhZ2VzL2V4cGVuc2VzL2V4cGVuc2VzLmh0bWwnLFxuICAgIHBpcGVzOiBbR3JhdmF0YXJQaXBlLCBNb3JlUGlwZSwgTGluZWJyZWFrc1BpcGVdLFxufSlcbmV4cG9ydCBjbGFzcyBFeHBlbnNlc1BhZ2Uge1xuICAgIExJTUlUOiBudW1iZXIgPSAxNTtcbiAgICBjb3VudDogbnVtYmVyO1xuICAgIGFjY291bnQ6IE9iamVjdDtcbiAgICBpc19lbXB0eTogYm9vbGVhbjtcbiAgICBidXN5OiBib29sZWFuO1xuICAgIHBhcmFtczogYW55O1xuICAgIHBhZ2VyOiBhbnk7XG4gICAgdGVzdDogYm9vbGVhbjtcbiAgICB0ZXJtOiBzdHJpbmcgPSAnJztcbiAgICBpdGVtczogYW55ID0gW107XG4gICAgc2VhcmNoX3Jlc3VsdHM6IGFueTtcbiAgICBleHBlbnNlczogQXJyYXk8YW55PjtcblxuXG4gICAgY29uc3RydWN0b3IocHJpdmF0ZSBuYXY6IE5hdiwgcHJpdmF0ZSBkYXRhUHJvdmlkZXI6IERhdGFQcm92aWRlciwgcHJpdmF0ZSBjb25maWc6IENvbmZpZywgcHJpdmF0ZSBuYXZQYXJhbXM6IE5hdlBhcmFtcywgcHJpdmF0ZSB2aWV3OiBWaWV3Q29udHJvbGxlcikge1xuICAgICAgICB0aGlzLmlzX2VtcHR5ID0gZmFsc2U7XG4gICAgfVxuICAgIFxuICAgIG9uUGFnZUxvYWRlZCgpIHtcbiAgICAgICAgdGhpcy5wYXJhbXMgPSB0aGlzLm5hdlBhcmFtcy5kYXRhIHx8IHt9O1xuICAgICAgICB0aGlzLnBhZ2VyID0geyBwYWdlOiAwIH07XG4gICAgICAgIHRoaXMucGFyYW1zLmFjY291bnQgPSB7IGlkOiB0aGlzLnBhcmFtcy5hY2NvdW50X2lkIHx8IC0xLCBuYW1lOiB0aGlzLnBhcmFtcy5hY2NvdW50X25hbWUgfHwgdGhpcy5jb25maWcuZ2V0Q3VycmVudChcInVzZXJcIikuYWNjb3VudF9uYW1lIH07XG4gICAgfVxuXG5vblBhZ2VXaWxsRW50ZXIoKVxuICAgIHtcbiAgICBpZiAodGhpcy5wYXJhbXMuYWNjb3VudF9uYW1lKVxuICAgICAgICAgICAgdGhpcy52aWV3LnNldEJhY2tCdXR0b25UZXh0KCcnKTtcblxuICAgIGlmICh0aGlzLnBhcmFtcy5pc19lbXB0eSlcbiAgICAgICAgdGhpcy5wYXJhbXMuY291bnQgPSAwO1xuXG4gICAgaWYgKHRoaXMucGFyYW1zLmNvdW50ICE9PSAwKSB7XG4gICAgICAgIHZhciB0aW1lciA9IHNldFRpbWVvdXQoKCkgPT4ge1xuICAgICAgICAgICAgdGhpcy5idXN5ID0gdHJ1ZTtcbiAgICAgICAgfSwgNTAwKTtcblxuICAgICAgICB0aGlzLmdldEl0ZW1zKG51bGwsIHRpbWVyKTtcbiAgICB9XG4gICAgZWxzZVxuICAgICAgICB0aGlzLmlzX2VtcHR5ID0gdHJ1ZTtcbiAgICB9XG5cblxuICAgIGdldEl0ZW1zKGluZmluaXRlU2Nyb2xsLCB0aW1lcikge1xuICAgICAgICB0aGlzLmRhdGFQcm92aWRlci5nZXRFeHBlbnNlcyh0aGlzLnBhcmFtcy5hY2NvdW50LmlkLCB0aGlzLnBhZ2VyKS5zdWJzY3JpYmUoXG4gICAgICAgICAgICBkYXRhID0+IHtcbiAgICAgICAgICAgICAgICBpZiAodGltZXIpIHtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5pc19lbXB0eSA9ICFkYXRhLmxlbmd0aDtcbiAgICAgICAgICAgICAgICAgICAgY2xlYXJUaW1lb3V0KHRpbWVyKTtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5idXN5ID0gZmFsc2U7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuZXhwZW5zZXMgPSBkYXRhO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBlbHNlXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuZXhwZW5zZXMucHVzaCguLi5kYXRhKTtcbiAgICAgICAgICAgICAgICBpZiAoaW5maW5pdGVTY3JvbGwpIHtcbiAgICAgICAgICAgICAgICAgICAgaW5maW5pdGVTY3JvbGwuZW5hYmxlKGRhdGEubGVuZ3RoID09IHRoaXMuTElNSVQpO1xuICAgICAgICAgICAgICAgICAgICBpbmZpbml0ZVNjcm9sbC5jb21wbGV0ZSgpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB0aGlzLmNvdW50ID0gZGF0YS5sZW5ndGg7XG4gICAgICAgICAgICAgICAgdGhpcy5zZWFyY2hJdGVtcyh7dmFsdWUgOiB0aGlzLnRlcm19KTtcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBlcnJvciA9PiB7XG4gICAgICAgICAgICAgICAgaWYgKHRpbWVyKSB7XG4gICAgICAgICAgICAgICAgICAgIGNsZWFyVGltZW91dCh0aW1lcik7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuYnVzeSA9IGZhbHNlO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhlcnJvciB8fCAnU2VydmVyIGVycm9yJyk7XG4gICAgICAgICAgICB9XG4gICAgICAgICk7XG4gICAgfVxuXG4gICAgZG9JbmZpbml0ZShpbmZpbml0ZVNjcm9sbCkge1xuICAgICAgICBpZiAodGhpcy5pc19lbXB0eSB8fCB0aGlzLmNvdW50IDwgdGhpcy5MSU1JVCkge1xuICAgICAgICAgICAgaW5maW5pdGVTY3JvbGwuZW5hYmxlKGZhbHNlKTtcbiAgICAgICAgICAgIGluZmluaXRlU2Nyb2xsLmNvbXBsZXRlKCk7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5wYWdlci5wYWdlICs9IDE7XG4gICAgICAgIHRoaXMuZ2V0SXRlbXMoaW5maW5pdGVTY3JvbGwsIG51bGwpO1xuICAgIH1cblxuICAgIGl0ZW1UYXBwZWQoZXhwZW5zZSkge1xuICAgICAgICBleHBlbnNlID0gZXhwZW5zZSB8fCB7fTtcbiAgICAgICAgZXhwZW5zZS5hY2NvdW50ID0gZXhwZW5zZS5hY2NvdW50IHx8IHRoaXMucGFyYW1zLmFjY291bnQ7XG4gICAgICAgIHRoaXMubmF2LnB1c2goRXhwZW5zZUNyZWF0ZVBhZ2UsIGV4cGVuc2UpO1xuICAgIH1cbiAgICBcbiAgICBzZXREYXRlKGRhdGUsIHNob3dtb250aD8sIGlzdGltZT8pIHtcbiAgICAgICAgaWYgKGRhdGUpe1xuICAgICAgICAvL3ZhciB0aW1lX29mZnNldCA9IHRoaXMuY29uZmlnLmdldEN1cnJlbnQoXCJ0aW1lem9uZV9vZmZzZXRcIik7ICAgICBcbiAgICAgICAgZGF0ZSA9IG5ldyBEYXRlKGRhdGUuc3Vic3RyaW5nKDAsMjMpK1wiWlwiKTtcbiAgICAgICAgLy9kYXRlID0gbmV3IERhdGUoZGF0ZS5zZXRUaW1lKGRhdGUuZ2V0VGltZSgpICsgdGltZV9vZmZzZXQqNjAqNjAqMTAwMCkpLnRvSlNPTigpO1xuICAgICAgICByZXR1cm4gZ2V0RGF0ZVRpbWUoZGF0ZSwgc2hvd21vbnRoLCBpc3RpbWUpO1xuICAgIH1cbiAgICAgcmV0dXJuIG51bGw7XG4gICAgfVxuXG4gICAgZ2V0Q3VycmVuY3kodmFsdWUpIHtcbiAgICAgICAgcmV0dXJuIGdldEN1cnJlbmN5KHZhbHVlKTtcbiAgICB9XG5cbiAgICBzZWFyY2hJdGVtcyhzZWFyY2hiYXIpIHtcbiAgICAgICAgLy8gUmVzZXQgaXRlbXMgYmFjayB0byBhbGwgb2YgdGhlIGl0ZW1zXG4gICAgICAgIHRoaXMuaXRlbXMgPSB0aGlzLmV4cGVuc2VzO1xuXG4gICAgICAgIC8vIHNldCBxIHRvIHRoZSB2YWx1ZSBvZiB0aGUgc2VhcmNoYmFyXG4gICAgICAgIGxldCBxID0gc2VhcmNoYmFyLnZhbHVlLnRvTG93ZXJDYXNlKCk7XG5cbiAgICAgICAgLy8gaWYgdGhlIHZhbHVlIGlzIGFuIGVtcHR5IHN0cmluZyBkb24ndCBmaWx0ZXIgdGhlIHNlYXJjaF9yZXN1bHRzXG4gICAgICAgIGlmIChxLnRyaW0oKSA9PSAnJyB8fCB0aGlzLmJ1c3kpIHtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuXG4gICAgICAgIGlmICh0aGlzLmV4cGVuc2VzICYmIHEubGVuZ3RoID4gMSlcbiAgICAgICAge1xuICAgICAgICAgICAgdGhpcy5pdGVtcyA9IHRoaXMuZXhwZW5zZXMuZmlsdGVyKChleHBlbnNlKSA9PiBleHBlbnNlLnVzZXJfbmFtZS50b0xvd2VyQ2FzZSgpLmluZGV4T2YocSkgPiAtMSB8fCBcbiAgICAgICAgICAgIGV4cGVuc2UuY2F0ZWdvcnkudG9Mb3dlckNhc2UoKS5pbmRleE9mKHEpID4gLTEgfHxcbiAgICAgICAgICAgIGV4cGVuc2UudGlja2V0X251bWJlci50b1N0cmluZygpLnRvTG93ZXJDYXNlKCkuaW5kZXhPZihxKSA+IC0xIHx8XG4gICAgICAgICAgICBleHBlbnNlLnRpY2tldF9zdWJqZWN0LnRvU3RyaW5nKCkudG9Mb3dlckNhc2UoKS5pbmRleE9mKHEpID4gLTEgfHxcbiAgICAgICAgICAgIGV4cGVuc2UudW5pdHMudG9TdHJpbmcoKS50b0xvd2VyQ2FzZSgpLmluZGV4T2YocSkgPiAtMSB8fFxuICAgICAgICAgICAgZXhwZW5zZS52ZW5kb3IudG9TdHJpbmcoKS50b0xvd2VyQ2FzZSgpLmluZGV4T2YocSkgPiAtMSB8fFxuICAgICAgICAgICAgZXhwZW5zZS5hbW91bnQudG9TdHJpbmcoKS50b0xvd2VyQ2FzZSgpLmluZGV4T2YocSkgPiAtMSB8fFxuICAgICAgICAgICAgZXhwZW5zZS5kYXRlLnRvU3RyaW5nKCkudG9Mb3dlckNhc2UoKS5pbmRleE9mKHEpID4gLTEgfHxcbiAgICAgICAgICAgIGV4cGVuc2UuY29udHJhY3RfbmFtZS50b0xvd2VyQ2FzZSgpLmluZGV4T2YocSkgPiAtMSB8fFxuICAgICAgICAgICAgZXhwZW5zZS5wcm9qZWN0X25hbWUudG9Mb3dlckNhc2UoKS5pbmRleE9mKHEpID4gLTEgfHxcbiAgICAgICAgICAgIGV4cGVuc2Uubm90ZS50b0xvd2VyQ2FzZSgpLmluZGV4T2YocSkgPiAtMSk7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBjbGVhclNlYXJjaChzZWFyY2hiYXI/KVxuICAgIHtcbiAgICAgICAgdGhpcy5zZWFyY2hfcmVzdWx0cyA9IFtdO1xuICAgICAgICB0aGlzLmJ1c3kgPSBmYWxzZTtcbiAgICAgICAgaWYgKHNlYXJjaGJhcikgc2VhcmNoYmFyLnZhbHVlID0gXCJcIjtcbiAgICB9XG5cbiAgICB0b2dnbGUoKXtcbiAgICAgICAgdGhpcy50ZXN0ID0gIXRoaXMudGVzdDtcbiAgICAgICAgaWYgKHRoaXMudGVzdCl7XG4gICAgICAgICAgICBzZXRUaW1lb3V0KCgpID0+IHtcbiAgICAgICAgdmFyIHQgPSBkb2N1bWVudC5nZXRFbGVtZW50c0J5Q2xhc3NOYW1lKFwic2VhcmNoYmFyLWlucHV0XCIpO1xuICAgICAgICB0ID0gdFt0Lmxlbmd0aCAtIDFdO1xuICAgICAgICB0ICYmIHQuZm9jdXMoKTtcbiAgICAgICAgfSwgNTAwKTtcbiAgICAgICAgfVxuICAgIH1cblxufVxuIiwiaW1wb3J0IHtQYWdlLCBDb25maWcsIE5hdiwgTmF2UGFyYW1zLCBNb2RhbCwgVmlld0NvbnRyb2xsZXIsIExvYWRpbmd9IGZyb20gJ2lvbmljLWFuZ3VsYXInO1xuaW1wb3J0IHtmb3J3YXJkUmVmLCBWaWV3Q2hpbGR9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHtnZXREYXRlVGltZSwgZ2V0UGlja2VyRGF0ZVRpbWVGb3JtYXQsIGh0bWxFc2NhcGUsIGdldEZ1bGxOYW1lLCBsaW5lYnJlYWtzLCBnZXRDdXJyZW5jeX0gZnJvbSAnLi4vLi4vZGlyZWN0aXZlcy9oZWxwZXJzJztcbmltcG9ydCB7VGltZVByb3ZpZGVyfSBmcm9tICcuLi8uLi9wcm92aWRlcnMvdGltZS1wcm92aWRlcic7XG5pbXBvcnQge0RhdGFQcm92aWRlcn0gZnJvbSAnLi4vLi4vcHJvdmlkZXJzL2RhdGEtcHJvdmlkZXInO1xuaW1wb3J0IHtBcGlEYXRhfSBmcm9tICcuLi8uLi9wcm92aWRlcnMvYXBpLWRhdGEnO1xuaW1wb3J0IHtDbGFzc0xpc3RDb21wb25lbnR9IGZyb20gJy4uLy4uL2NvbXBvbmVudHMvY2xhc3MtbGlzdC9jbGFzcy1saXN0JztcbmltcG9ydCB7U2VsZWN0TGlzdENvbXBvbmVudH0gZnJvbSAnLi4vLi4vY29tcG9uZW50cy9zZWxlY3QtbGlzdC9zZWxlY3QtbGlzdCc7XG5pbXBvcnQge0ludm9pY2VEZXRhaWxzUGFnZX0gZnJvbSAnLi4vaW52b2ljZS1kZXRhaWxzL2ludm9pY2UtZGV0YWlscyc7XG5pbXBvcnQge0V4cGVuc2VDcmVhdGVQYWdlfSBmcm9tICcuLi8uLi9wYWdlcy9leHBlbnNlLWNyZWF0ZS9leHBlbnNlLWNyZWF0ZSc7XG5pbXBvcnQge0dyYXZhdGFyUGlwZSwgTW9yZVBpcGUsIExpbmVicmVha3NQaXBlfSBmcm9tICcuLi8uLi9waXBlcy9waXBlcyc7XG5pbXBvcnQge1RpbWVsb2dQYWdlfSBmcm9tICcuLi8uLi9wYWdlcy90aW1lbG9nL3RpbWVsb2cnOyBcbmltcG9ydCB7QWRkVXNlck1vZGFsLCBCYXNpY1NlbGVjdE1vZGFsLCBJbmZpbml0eVNlbGVjdE1vZGFsfSBmcm9tICcuLi9tb2RhbHMvbW9kYWxzJztcblxuQFBhZ2Uoe1xuICAgIHRlbXBsYXRlVXJsOiAnYnVpbGQvcGFnZXMvaW52b2ljZS1jcmVhdGUvaW52b2ljZS1jcmVhdGUuaHRtbCcsXG4gICAgZGlyZWN0aXZlczogW0NsYXNzTGlzdENvbXBvbmVudCwgZm9yd2FyZFJlZigoKSA9PiBTZWxlY3RMaXN0Q29tcG9uZW50KV0sXG4gICAgcGlwZXM6IFtHcmF2YXRhclBpcGUsIE1vcmVQaXBlLCBMaW5lYnJlYWtzUGlwZV0sXG59KVxuZXhwb3J0IGNsYXNzIEludm9pY2VDcmVhdGVQYWdlIHtcblxuICAgIGluYyA6IG51bWJlcjtcbiAgICBpc2JpbGxhYmxlOiBib29sZWFuO1xuICAgIGNvbnRyYWN0OiBhbnkgPSBbXTtcbiAgICB0aW1lY291bnQ6IGFueTtcbiAgICB0aW1lbG9nczogYW55ID0gW107XG4gICAgYWNjb3VudF9pZDogYW55O1xuICAgIGludm9pY2Vfc3RhcnRfZGF0ZTogYW55O1xuICAgIGludm9pY2VfZW5kX2RhdGU6IGFueTtcbiAgICB0b3RhbF9jb3N0OiBhbnk7XG4gICAgdG90YWxfaG91cnM6IGFueTtcbiAgICBleHNwZW5zZV90b3RhbDogYW55O1xuICAgIHBhZ2VyOiBhbnkgPSBbXTtcbiAgICBleHBlbnNlczogYW55ID0gW107XG4gICAgcmVjaXBpZW50czogYW55ID0gW107XG4gICAgbG9jYWxyZWNpcGllbnRzOiBhbnkgPSBbXTtcbiAgICB0aW1lY291bnRfbm9ud29yazogYW55O1xuICAgIG1pbnRpbWU6IG51bWJlcjtcbiAgICBkYXRhOiBhbnkgPSB7fTtcbiAgICB0aW1lZTogYW55ID0ge307XG4gICAgdGltZW5vdGU6IHN0cmluZztcbiAgICB0aXRsZTogc3RyaW5nID0gXCJcIjtcbiAgICBoZTogYW55O1xuICAgIHNlbGVjdHM6IGFueSA9IHt9O1xuICAgIGRpc3BsYXlGb3JtYXQ6IHN0cmluZztcbiAgICBVc2VyRGF0ZU9mZnNldDogbnVtYmVyID0gLTU7XG4gICAgaW5fcHJvZ3Jlc3M6IGFueTtcblxuICAgIGNvbnN0cnVjdG9yKHByaXZhdGUgbmF2OiBOYXYsIHByaXZhdGUgbmF2UGFyYW1zOiBOYXZQYXJhbXMsIHByaXZhdGUgYXBpRGF0YTogQXBpRGF0YSwgcHJpdmF0ZSBkYXRhUHJvdmlkZXI6IERhdGFQcm92aWRlciwgcHJpdmF0ZSB0aW1lUHJvdmlkZXI6IFRpbWVQcm92aWRlciwgcHJpdmF0ZSBjb25maWc6IENvbmZpZywgcHJpdmF0ZSB2aWV3OiBWaWV3Q29udHJvbGxlcikge1xuICAgIH1cblxuXG5uZ09uSW5pdCgpXG57ICAgIFxuICAgIHRoaXMuVXNlckRhdGVPZmZzZXQgPSB0aGlzLmNvbmZpZy5nZXRDdXJyZW50KFwidGltZXpvbmVfb2Zmc2V0XCIpO1xuICAgIHRoaXMuZGF0YSA9IHRoaXMubmF2UGFyYW1zLmRhdGEgfHwge307XG4gICAgdGhpcy5wYWdlciA9IHsgcGFnZTogMCB9O1xuXG4gICAgICAgICAgICB0aGlzLmhlID0gdGhpcy5jb25maWcuZ2V0Q3VycmVudChcInVzZXJcIik7XG5cbiAgICAgICAgICAgIGxldCByZWNlbnQgOiBhbnkgPSB7fTtcblxuICAgICAgICAgICAgaWYgKCF0aGlzLmRhdGEubnVtYmVyICYmICEodGhpcy5kYXRhLmFjY291bnQgfHwge30pLmlkKVxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIHJlY2VudCA9IHRoaXMuY29uZmlnLmN1cnJlbnQucmVjZW50IHx8IHt9O1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICB0aGlzLmFjY291bnRfaWQgPSAodGhpcy5kYXRhLmFjY291bnQgfHwge30pLmlkIHx8IHRoaXMuZGF0YS5hY2NvdW50X2lkIHx8IChyZWNlbnQuYWNjb3VudCB8fCB7fSkuc2VsZWN0ZWQgfHwgdGhpcy5oZS5hY2NvdW50X2lkIHx8IC0xO1xuICAgICAgICAgICAgbGV0IGNvbnRyYWN0X2lkID0gKHRoaXMuZGF0YS5jb250cmFjdCB8fCB7fSkuaWQgfHwgdGhpcy5kYXRhLmNvbnRyYWN0X2lkIHx8IChyZWNlbnQuY29udHJhY3QgfHwge30pLnNlbGVjdGVkIHx8IDA7XG4gICAgICAgICAgICBsZXQgcHJvamVjdF9pZCA9ICh0aGlzLmRhdGEucHJvamVjdCB8fCB7fSkuaWQgfHwgdGhpcy5kYXRhLnByb2plY3RfaWQgfHwgKHJlY2VudC5wcm9qZWN0IHx8IHt9KS5zZWxlY3RlZCB8fCAwO1xuICAgICAgICAgICAgaWYoY29udHJhY3RfaWQpXG4gICAgICAgICAgICAgICAgdGhpcy5nZXRDb250cmFjdEluZm8oY29udHJhY3RfaWQpO1xuICAgICAgICAgICAgaWYgKGNvbnRyYWN0X2lkICYmIHRoaXMuYWNjb3VudF9pZCAhPTApXG4gICAgICAgICAgICAgICAgdGhpcy5nZXRJbnZvaWNlKHRoaXMuYWNjb3VudF9pZCwgY29udHJhY3RfaWQpO1xuXG5cbiAgICAgICAgICAgIHRoaXMuc2VsZWN0cyA9IHtcbiAgICAgICAgICAgICAgICAgICAgXCJ1c2VyXCIgOiB7XG4gICAgICAgICAgICAgICAgICAgIG5hbWU6IFwiVXNlclwiLCBcbiAgICAgICAgICAgICAgICAgICAgdmFsdWU6IGdldEZ1bGxOYW1lKHRoaXMuaGUuZmlyc3RuYW1lLCB0aGlzLmhlLmxhc3RuYW1lLCB0aGlzLmhlLmVtYWlsKSxcbiAgICAgICAgICAgICAgICAgICAgc2VsZWN0ZWQ6IHRoaXMuaGUudXNlcl9pZCxcbiAgICAgICAgICAgICAgICAgICAgdXJsOiBcInVzZXJzXCIsXG4gICAgICAgICAgICAgICAgICAgIGhpZGRlbjogZmFsc2UsXG4gICAgICAgICAgICAgICAgICAgIC8vaXNfb25jZTogdHJ1ZVxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgXCJyZWNpcGllbnRfdXNlclwiIDoge1xuICAgICAgICAgICAgICAgICAgICBuYW1lOiBcInJlY2lwaWVudF91c2VyXCIsIFxuICAgICAgICAgICAgICAgICAgICB2YWx1ZTogZ2V0RnVsbE5hbWUodGhpcy5oZS5maXJzdG5hbWUsIHRoaXMuaGUubGFzdG5hbWUsIHRoaXMuaGUuZW1haWwpLFxuICAgICAgICAgICAgICAgICAgICBzZWxlY3RlZDogdGhpcy5oZS51c2VyX2lkLFxuICAgICAgICAgICAgICAgICAgICB1cmw6IFwidXNlcnNcIixcbiAgICAgICAgICAgICAgICAgICAgaGlkZGVuOiBmYWxzZVxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgXCJhY2NvdW50XCIgOiB7XG4gICAgICAgICAgICAgICAgICAgIG5hbWU6IFwiQWNjb3VudFwiLCBcbiAgICAgICAgICAgICAgICAgICAgdmFsdWU6ICAodGhpcy5kYXRhLmFjY291bnQgfHwge30pLm5hbWUgfHwgdGhpcy5kYXRhLmFjY291bnRfbmFtZSB8fCAocmVjZW50LmFjY291bnQgfHwge30pLnZhbHVlIHx8IHRoaXMuaGUuYWNjb3VudF9uYW1lLFxuICAgICAgICAgICAgICAgICAgICBzZWxlY3RlZDogdGhpcy5hY2NvdW50X2lkLFxuICAgICAgICAgICAgICAgICAgICB1cmw6IFwiYWNjb3VudHM/aXNfd2l0aF9zdGF0aXN0aWNzPWZhbHNlJmxpbWl0PTUwMFwiLFxuICAgICAgICAgICAgICAgICAgICBoaWRkZW46IGZhbHNlLFxuICAgICAgICAgICAgICAgICAgICAvL2lzX29uY2U6IHRydWUsXG4gICAgICAgICAgICAgICAgICAgIGlzX2Rpc2FibGVkOiB0aGlzLmRhdGEudGlja2V0X251bWJlclxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgXCJwcm9qZWN0XCIgOiB7XG4gICAgICAgICAgICAgICAgICAgIG5hbWU6IFwiUHJvamVjdFwiLCBcbiAgICAgICAgICAgICAgICAgICAgdmFsdWU6ICB0aGlzLmRhdGEucHJvamVjdF9uYW1lIHx8IChyZWNlbnQucHJvamVjdCB8fCB7fSkudmFsdWUgfHwgXCJEZWZhdWx0XCIsXG4gICAgICAgICAgICAgICAgICAgIHNlbGVjdGVkOiBwcm9qZWN0X2lkLFxuICAgICAgICAgICAgICAgICAgICB1cmw6IGBwcm9qZWN0cz9hY2NvdW50PSR7dGhpcy5hY2NvdW50X2lkfSZpc193aXRoX3N0YXRpc3RpY3M9ZmFsc2VgLFxuICAgICAgICAgICAgICAgICAgICBoaWRkZW46IGZhbHNlLFxuICAgICAgICAgICAgICAgICAgICBpc19kaXNhYmxlZDogdGhpcy5kYXRhLnRpY2tldF9udW1iZXIsXG4gICAgICAgICAgICAgICAgICAgIC8vaXNfb25jZTogdHJ1ZVxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgXCJ0aWNrZXRcIiA6IHtcbiAgICAgICAgICAgICAgICAgICAgbmFtZTogXCJUaWNrZXRcIiwgXG4gICAgICAgICAgICAgICAgICAgIHZhbHVlOiB0aGlzLmRhdGEudGlja2V0X251bWJlciA/IGAjJHt0aGlzLmRhdGEudGlja2V0X251bWJlcn06ICR7dGhpcy5kYXRhLnRpY2tldF9zdWJqZWN0fWAgOiBcIkNob29zZSAob3B0aW9uYWwpXCIsXG4gICAgICAgICAgICAgICAgICAgIHNlbGVjdGVkOiB0aGlzLmRhdGEudGlja2V0X251bWJlciB8fCAwLFxuICAgICAgICAgICAgICAgICAgICB1cmw6IGB0aWNrZXRzP3N0YXR1cz1vcGVuJmFjY291bnQ9JHt0aGlzLmFjY291bnRfaWR9JnByb2plY3Q9JHtwcm9qZWN0X2lkfWAsXG4gICAgICAgICAgICAgICAgICAgIGhpZGRlbjogdGhpcy5kYXRhLmlzX3Byb2plY3RfbG9nIHx8IGZhbHNlLFxuICAgICAgICAgICAgICAgICAgICBpc19kaXNhYmxlZDogdGhpcy5kYXRhLnRhc2tfdHlwZV9pZCxcbiAgICAgICAgICAgICAgICAgICAgLy9pc19vbmNlOiB0cnVlXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgXCJjb250cmFjdFwiIDogeyBcbiAgICAgICAgICAgICAgICAgICAgbmFtZTogXCJDb250cmFjdFwiLCBcbiAgICAgICAgICAgICAgICAgICAgdmFsdWU6IHRoaXMuZGF0YS5jb250cmFjdF9uYW1lIHx8IChyZWNlbnQuY29udHJhY3QgfHwge30pLnZhbHVlIHx8IFwiQ2hvb3NlXCIsXG4gICAgICAgICAgICAgICAgICAgIHNlbGVjdGVkOiB0aGlzLmRhdGEuY29udHJhY3RfaWQgfHwgdGhpcy5jb25maWcuZ2V0UmVjZW50KFwiY29udHJhY3RcIikuc2VsZWN0ZWQgfHwgMCxcbiAgICAgICAgICAgICAgICAgICAgdXJsOiBgY29udHJhY3RzP2FjY291bnRfaWQ9JHt0aGlzLmFjY291bnRfaWR9JmZvcl90aW1lX2xvZ3M9ZmFsc2VgLFxuICAgICAgICAgICAgICAgICAgICBoaWRkZW46IGZhbHNlLFxuICAgICAgICAgICAgICAgICAgICBpc19kaXNhYmxlZDogZmFsc2UsXG4gICAgICAgICAgICAgICAgICAgIC8vaXNfb25jZTogdHJ1ZVxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgXCJwcmVwYWlkcGFja1wiIDoge1xuICAgICAgICAgICAgICAgICAgICBuYW1lOiBcIlByZVBhaWQgUGFja1wiLCBcbiAgICAgICAgICAgICAgICAgICAgdmFsdWU6IHRoaXMuZGF0YS5wcmVwYWlkX3BhY2tfbmFtZSB8fCAocmVjZW50LnByZXBhaWRwYWNrIHx8IHt9KS52YWx1ZSB8fCBcIkNob29zZVwiLFxuICAgICAgICAgICAgICAgICAgICBzZWxlY3RlZDogdGhpcy5kYXRhLnByZXBhaWRfcGFja19pZCB8fCB0aGlzLmNvbmZpZy5nZXRSZWNlbnQoXCJwcmVwYWlkcGFja1wiKS5zZWxlY3RlZCB8fCAwLFxuICAgICAgICAgICAgICAgICAgICB1cmw6IGBwcmVwYWlkX3BhY2tzP2NvbnRyYWN0X2lkPSR7Y29udHJhY3RfaWR9YCxcbiAgICAgICAgICAgICAgICAgICAgaGlkZGVuOiBmYWxzZSxcbiAgICAgICAgICAgICAgICAgICAgLy9pc19vbmNlOiB0cnVlXG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfTtcbiAgICAgICAgfVxuXG4gICAgICAgIHNhdmVTZWxlY3QoZXZlbnQpe1xuICAgICAgICAgICAgbGV0IG5hbWUgPSBldmVudC50eXBlO1xuICAgICAgICAgICAgdGhpcy5hY2NvdW50X2lkID0gdGhpcy5zZWxlY3RzLmFjY291bnQuc2VsZWN0ZWQ7XG4gICAgICAgICAgICBsZXQgdGlja2V0X2lkID0gdGhpcy5zZWxlY3RzLnRpY2tldC5zZWxlY3RlZDtcbiAgICAgICAgICAgIGxldCBwcm9qZWN0X2lkID0gdGhpcy5zZWxlY3RzLnByb2plY3Quc2VsZWN0ZWQ7XG4gICAgICAgICAgICBsZXQgY29udHJhY3RfaWQgPSB0aGlzLnNlbGVjdHMuY29udHJhY3Quc2VsZWN0ZWQ7XG4gICAgICAgICAgICBsZXQgcHJlcGFpZHBhY2tfaWQgPSB0aGlzLnNlbGVjdHMucHJlcGFpZHBhY2suc2VsZWN0ZWQ7ICAgIFxuICAgICAgICAvL2NoYW5nZSB1cmwgb24gcmVsYXRlZCBsaXN0c1xuICAgICAgICBzd2l0Y2ggKG5hbWUpIHtcbiAgICAgICAgICAgIGNhc2UgXCJhY2NvdW50XCI6XG4gICAgICAgICAgICBpZiAodGhpcy5zZWxlY3RzLmFjY291bnQuc2VsZWN0ZWQgPT09IGV2ZW50LmlkKSB7XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICB0aGlzLnNlbGVjdHMucHJvamVjdC51cmwgPSBgcHJvamVjdHM/YWNjb3VudD0ke2V2ZW50LmlkfSZpc193aXRoX3N0YXRpc3RpY3M9ZmFsc2VgO1xuICAgICAgICAgICAgdGhpcy5zZWxlY3RzLnByb2plY3QudmFsdWUgPSBcIkRlZmF1bHRcIjtcbiAgICAgICAgICAgIHRoaXMuc2VsZWN0cy5wcm9qZWN0LnNlbGVjdGVkID0gMDtcbiAgICAgICAgICAgIHByb2plY3RfaWQgPSAwO1xuICAgICAgICAgICAgdGhpcy5zZWxlY3RzLmNvbnRyYWN0LnVybCA9IGBjb250cmFjdHM/YWNjb3VudF9pZD0ke2V2ZW50LmlkfSZmb3JfdGltZV9sb2dzPWZhbHNlYDtcbiAgICAgICAgICAgIHRoaXMuc2VsZWN0cy5jb250cmFjdC52YWx1ZSA9IFwiQ2hvb3NlXCI7XG4gICAgICAgICAgICB0aGlzLnNlbGVjdHMuY29udHJhY3Quc2VsZWN0ZWQgPSAwO1xuICAgICAgICAgICAgY29udHJhY3RfaWQgPSAwO1xuICAgICAgICAgICAgdGhpcy50aW1lbG9ncyA9IFtdO1xuICAgICAgICAgICAgdGhpcy5leHBlbnNlcyA9IFtdO1xuICAgICAgICAgICAgdGhpcy5yZWNpcGllbnRzID0gW107XG4gICAgICAgICAgICB0aGlzLnRvdGFsX2hvdXJzID0gZmFsc2U7XG4gICAgICAgICAgICB0aGlzLmV4c3BlbnNlX3RvdGFsID0gZmFsc2U7XG4gICAgICAgICAgICB0aGlzLnRvdGFsX2Nvc3QgPSBmYWxzZTtcbiAgICAgICAgICAgIHRoaXMuc2VsZWN0cy5wcmVwYWlkcGFjay51cmwgPSBgcHJlcGFpZF9wYWNrcz9jb250cmFjdF9pZD0wYDtcbiAgICAgICAgICAgIHRoaXMuc2VsZWN0cy5wcmVwYWlkcGFjay52YWx1ZSA9IFwiQ2hvb3NlIChvcHRpb25hbClcIjtcbiAgICAgICAgICAgIHRoaXMuc2VsZWN0cy5wcmVwYWlkcGFjay5zZWxlY3RlZCA9IDA7XG4gICAgICAgICAgICB0aGlzLmFjY291bnRfaWQgPSBldmVudC5pZDtcbiAgICAgICAgICAgIHRoaXMuc2VsZWN0cy50aWNrZXQuaGlkZGVuID0gdGhpcy5kYXRhLmlzX3Byb2plY3RfbG9nIHx8IHRoaXMuZGF0YS50YXNrX3R5cGVfaWQgfHwgZmFsc2U7XG4gICAgICAgICAgICBpZiAoIXRoaXMuZGF0YS50YXNrX3R5cGVfaWQpe1xuICAgICAgICAgICAgICAgIHRoaXMuc2VsZWN0cy50aWNrZXQudXJsID0gYHRpY2tldHM/c3RhdHVzPW9wZW4mYWNjb3VudD0ke3RoaXMuYWNjb3VudF9pZH0mcHJvamVjdD0ke3Byb2plY3RfaWR9YCxcbiAgICAgICAgICAgICAgICB0aGlzLnNlbGVjdHMudGlja2V0LnZhbHVlID0gXCJDaG9vc2UgKG9wdGlvbmFsKVwiO1xuICAgICAgICAgICAgICAgIHRoaXMuc2VsZWN0cy50aWNrZXQuc2VsZWN0ZWQgPSAwO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgdGhpcy5zZWxlY3RzLnByb2plY3QuaGlkZGVuID0gIXRoaXMuY29uZmlnLmN1cnJlbnQuaXNfcHJvamVjdF90cmFja2luZztcbiAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgY2FzZSBcInByb2plY3RcIiA6XG4gICAgICAgICAgICBpZiAodGhpcy5zZWxlY3RzLnByb2plY3Quc2VsZWN0ZWQgPT09IGV2ZW50LmlkKVxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgLy8gZG9udCBjaGFuZ2UgdGlja2V0IG9uIGVkaXRcbiAgICAgICAgICAgIGlmICghdGhpcy5kYXRhLnRhc2tfdHlwZV9pZCl7XG4gICAgICAgICAgICAgICAgdGhpcy5zZWxlY3RzLnRpY2tldC5oaWRkZW4gPSB0aGlzLmRhdGEuaXNfcHJvamVjdF9sb2cgfHwgdGhpcy5kYXRhLnRhc2tfdHlwZV9pZCB8fCBmYWxzZTtcbiAgICAgICAgICAgICAgICB0aGlzLnNlbGVjdHMudGlja2V0LnVybCA9IGB0aWNrZXRzP3N0YXR1cz1vcGVuJmFjY291bnQ9JHt0aGlzLmFjY291bnRfaWR9JnByb2plY3Q9JHtldmVudC5pZH1gLFxuICAgICAgICAgICAgICAgIHRoaXMuc2VsZWN0cy50aWNrZXQudmFsdWUgPSBcIkNob29zZSAob3B0aW9uYWwpXCI7XG4gICAgICAgICAgICAgICAgdGhpcy5zZWxlY3RzLnRpY2tldC5zZWxlY3RlZCA9IDA7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBwcm9qZWN0X2lkID0gZXZlbnQuaWQ7XG4gICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIGNhc2UgXCJjb250cmFjdFwiIDpcbiAgICAgICAgICAgIGlmIChldmVudC5pZCl7XG4gICAgICAgICAgICAgICAgICAgIC8vdGhpcy5nZXRDb250cmFjdEluZm8oZXZlbnQuaWQpO1xuICAgICAgICAgICAgICAgICAgICAvL3RoaXMuc2VsZWN0cy5hY2NvdW50LmlzX2Rpc2FibGVkID0gdHJ1ZTtcbiAgICAgICAgICAgICAgICAgICAgLy90aGlzLnNlbGVjdHMucHJvamVjdC5pc19kaXNhYmxlZCA9IHRydWU7XG4gICAgICAgICAgICAgICAgICAgIC8vdGhpcy5zZWxlY3RzLnByZXBhaWRwYWNrLmlzX2Rpc2FibGVkID0gdHJ1ZTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlXG4gICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIHRoaXMubmF2LmFsZXJ0KFwiQ2Fubm90IGNyZWF0ZSBhbnkgaW52b2ljZS4gUGxlYXNlIGFkZCBvciBzZWxlY3QgQ29udHJhY3QgdG8gXCIrdGhpcy5zZWxlY3RzLmFjY291bnQudmFsdWUsIHRydWUpO1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKHRoaXMuc2VsZWN0cy5jb250cmFjdC5zZWxlY3RlZCA9PT0gZXZlbnQuaWQpXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICAvLyBkb250IGNoYW5nZSB0aWNrZXQgb24gZWRpdFxuICAgICAgICAgICAgdGhpcy5zZWxlY3RzLnByZXBhaWRwYWNrLnVybCA9IGBwcmVwYWlkX3BhY2tzP2NvbnRyYWN0X2lkPSR7ZXZlbnQuaWR9YDtcbiAgICAgICAgICAgIHRoaXMuc2VsZWN0cy5wcmVwYWlkcGFjay52YWx1ZSA9IFwiQ2hvb3NlIChvcHRpb25hbClcIjtcbiAgICAgICAgICAgIHRoaXMuc2VsZWN0cy5wcmVwYWlkcGFjay5zZWxlY3RlZCA9IDA7XG4gICAgICAgICAgICBjb250cmFjdF9pZCA9IGV2ZW50LmlkO1xuICAgICAgICAgICAgaWYgKGNvbnRyYWN0X2lkKVxuICAgICAgICAgICAgdGhpcy5nZXRJbnZvaWNlKHRoaXMuYWNjb3VudF9pZCwgY29udHJhY3RfaWQpO1xuICAgICAgICAgICAgYnJlYWs7XG5cbiAgICAgICAgICAgIGNhc2UgXCJ0aWNrZXRcIiA6XG4gICAgICAgICAgICBpZiAodGhpcy5zZWxlY3RzLnRpY2tldC5zZWxlY3RlZCA9PT0gZXZlbnQuaWQpXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICB0aWNrZXRfaWQgPSBldmVudC5pZDtcbiAgICAgICAgICAgIGJyZWFrO1xuXG4gICAgICAgICAgICBjYXNlIFwicmVjaXBpZW50X3VzZXJcIiA6XG4gICAgICAgICAgICBpZiAodGhpcy5zZWxlY3RzLnJlY2lwaWVudF91c2VyLnNlbGVjdGVkID09PSBldmVudC5pZClcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGxldCBuZXdfcmVjaXBpZW50ID0ge1wiaWRcIjogZXZlbnQuaWQsIFwiZW1haWxcIjogZXZlbnQuZW1haWwsIFwiZnVsbG5hbWVcIjogZXZlbnQubmFtZSwgXCJpc19hY2NvdW50aW5nX2NvbnRhY3RcIiA6IHRydWV9O1xuICAgICAgICAgICAgdGhpcy5sb2NhbHJlY2lwaWVudHMucHVzaChuZXdfcmVjaXBpZW50KTtcbiAgICAgICAgICAgIHRoaXMucmVjaXBpZW50cy5wdXNoKG5ld19yZWNpcGllbnQpO1xuICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5zZWxlY3RzW25hbWVdLnNlbGVjdGVkID0gZXZlbnQuaWQ7XG4gICAgICAgIGlmIChldmVudC5pZCA+IDAgKVxuICAgICAgICAgICAgdGhpcy5zZWxlY3RzW25hbWVdLnZhbHVlID0gZXZlbnQubmFtZSB8fCBcIkRlZmF1bHRcIjtcbiAgICB9XG4gICAgXG4gICAgZ2V0Q29udHJhY3RJbmZvKGNvbnRyYWN0X2lkKXtcbiAgICAgICAgdGhpcy5kYXRhUHJvdmlkZXIuZ2V0Q29udHJhY3RzKHRoaXMucGFnZXIsIGZhbHNlLCBjb250cmFjdF9pZCkuc3Vic2NyaWJlKFxuICAgICAgICAgICAgZGF0YSA9PiB7XG4gICAgICAgICAgICAgICAgdGhpcy5jb250cmFjdCA9IGRhdGE7XG4gICAgICAgICAgICAgICAgdGhpcy5jb250cmFjdC5kYXRlID0gbmV3IERhdGUoKS50b0pTT04oKS5zdWJzdHJpbmcoMCwxOSk7XG4gICAgICAgICAgICB9LFxuICAgICAgICApO1xuICAgIH1cblxuICAgIGFkZFRpbWUoKVxuICAge1xuICAgICAgIHRoaXMuY29uZmlnLnNldFJlY2VudCh7XCJhY2NvdW50XCI6IHRoaXMuc2VsZWN0cy5hY2NvdW50LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXCJ1c2VyXCI6IHRoaXMuc2VsZWN0cy51c2VyLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXCJwcm9qZWN0XCI6IHRoaXMuc2VsZWN0cy5wcm9qZWN0LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXCJ0aWNrZXRcIjogdGhpcy5zZWxlY3RzLnRpY2tldCxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFwiY29udHJhY3RcIjogdGhpcy5zZWxlY3RzLmNvbnRyYWN0LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXCJwcmVwYWlkcGFja1wiOiB0aGlzLnNlbGVjdHMucHJlcGFpZHBhY2t9KTtcbiAgICAgICBpZiAoIXRoaXMuc2VsZWN0cy5jb250cmFjdC5zZWxlY3RlZCl7XG4gICAgICAgICAgIHRoaXMubmF2LmFsZXJ0KFwiUGxlYXNlIGNob29zZSBDb250cmFjdFwiLCB0cnVlKTtcbiAgICAgICAgICAgcmV0dXJuO1xuICAgICAgIH1cbiAgICAgICBcbiAgICAgbGV0IG15TW9kYWwgPSBNb2RhbC5jcmVhdGUoVGltZWxvZ1BhZ2UsIHtpc19maXhlZDogdHJ1ZX0pO1xuICAgICBteU1vZGFsLm9uRGlzbWlzcyhkYXRhID0+IHtcbiAgICAgICBpZihkYXRhKXtcbiAgICAgICAvL8OfICAgIHRoaXMudGltZWxvZ3Muc3BsaWNlKDAsMCxkYXRhKTtcbiAgICAgICAgICAgdGhpcy5nZXRJbnZvaWNlKHRoaXMuc2VsZWN0cy5hY2NvdW50LnNlbGVjdGVkLCB0aGlzLnNlbGVjdHMuY29udHJhY3Quc2VsZWN0ZWQpO1xuICAgICB9XG4gICAgICAgfSk7XG4gICAgICAgdGhpcy5uYXYucHJlc2VudChteU1vZGFsKTtcbiAgICAgfVxuXG4gICAgIGFkZEV4cGVuc2UoKVxuICAgICB7XG4gICAgICAgdGhpcy5jb25maWcuc2V0UmVjZW50KHtcImFjY291bnRcIjogdGhpcy5zZWxlY3RzLmFjY291bnQsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcInVzZXJcIjogdGhpcy5zZWxlY3RzLnVzZXIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcInByb2plY3RcIjogdGhpcy5zZWxlY3RzLnByb2plY3QsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcInRpY2tldFwiOiB0aGlzLnNlbGVjdHMudGlja2V0LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXCJjb250cmFjdFwiOiB0aGlzLnNlbGVjdHMuY29udHJhY3QsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcInByZXBhaWRwYWNrXCI6IHRoaXMuc2VsZWN0cy5wcmVwYWlkcGFja30pO1xuICAgICAgICBpZiAoIXRoaXMuc2VsZWN0cy5jb250cmFjdC5zZWxlY3RlZCl7XG4gICAgICAgICAgIHRoaXMubmF2LmFsZXJ0KFwiUGxlYXNlIGNob29zZSBDb250cmFjdFwiLCB0cnVlKTtcbiAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgbGV0IG15TW9kYWwgPSBNb2RhbC5jcmVhdGUoRXhwZW5zZUNyZWF0ZVBhZ2UsIHtpc19maXhlZDogdHJ1ZX0pO1xuICAgICAgIG15TW9kYWwub25EaXNtaXNzKGRhdGEgPT4ge1xuICAgICAgICAgICBpZihkYXRhKXtcbiAgICAgICAgICAgLy8gZGF0YS5kYXRlPSBuZXcgRGF0ZSgpLnRvSlNPTigpLnN1YnN0cmluZygwLDE5KTtcbiAgICAgICAgICAgLy8gdGhpcy5leHBlbnNlcy5zcGxpY2UoMCwwLGRhdGEpO1xuICAgICAgICAgICAgdGhpcy5nZXRJbnZvaWNlKHRoaXMuc2VsZWN0cy5hY2NvdW50LnNlbGVjdGVkLCB0aGlzLnNlbGVjdHMuY29udHJhY3Quc2VsZWN0ZWQpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgfSk7XG4gICAgICAgICB0aGlzLm5hdi5wcmVzZW50KG15TW9kYWwpO1xuICAgICAgIH1cblxuICAgICAgIGdldEludm9pY2UoYWNjb3VudF9pZCwgY29udHJhY3RfaWQpe1xuICAgICAgICAgICBsZXQgc3RhcnRfZGF0ZSA9IG5ldyBEYXRlKCkudG9KU09OKCkuc3Vic3RyaW5nKDAsMTkpO1xuICAgICAgICAgICBsZXQgZW5kX2RhdGUgPSBuZXcgRGF0ZSgpLnRvSlNPTigpLnN1YnN0cmluZygwLDE5KTtcbiAgICAgICAgICAgbGV0IGxvYWRpbmcgPSBMb2FkaW5nLmNyZWF0ZSh7XG4gICAgICAgICAgICAgICAgICAgICBjb250ZW50OiBcIlJlZnJlc2hpbmcuLi5cIixcbiAgICAgICAgICAgICAgICAgICAgIGR1cmF0aW9uOiAxMDAwLFxuICAgICAgICAgICAgICAgICAgICAgZGlzbWlzc09uUGFnZUNoYW5nZTogdHJ1ZVxuICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAgdGhpcy5uYXYucHJlc2VudChsb2FkaW5nKTtcbiAgICAgICAgdGhpcy5kYXRhUHJvdmlkZXIuZ2V0SW52b2ljZShmYWxzZSwgYWNjb3VudF9pZCwgY29udHJhY3RfaWQsIHN0YXJ0X2RhdGUsIGVuZF9kYXRlLCB0cnVlKS5zdWJzY3JpYmUoXG4gICAgICAgICAgICBkYXRhID0+IHtcbiAgICAgICAgICAgICAgICBsb2FkaW5nLmRpc21pc3MoKTtcbiAgICAgICAgICAgICAgICBpZiAoZGF0YS5sZW5ndGggPT0gMSlcbiAgICAgICAgICAgICAgICAgICAgZGF0YSA9IGRhdGFbMF07XG4gICAgICAgICAgICAgICAgZGF0YS5yZWNpcGllbnRzID0gZGF0YS5yZWNpcGllbnRzIHx8IFtdO1xuICAgICAgICAgICAgICAgIGRhdGEucmVjaXBpZW50cyA9IGRhdGEucmVjaXBpZW50cy5zb3J0KGZ1bmN0aW9uKGEsIGIpIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGEuaXNfYWNjb3VudGluZ19jb250YWN0IDwgYi5pc19hY2NvdW50aW5nX2NvbnRhY3QgPyAxIDogLTE7XG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgdGhpcy5yZWNpcGllbnRzID0gW107XG4gICAgICAgICAgICAgICAgdGhpcy5yZWNpcGllbnRzLnB1c2goLi4udGhpcy5sb2NhbHJlY2lwaWVudHMpO1xuICAgICAgICAgICAgICAgIHRoaXMucmVjaXBpZW50cy5wdXNoKC4uLmRhdGEucmVjaXBpZW50cyk7XG4gICAgICAgICAgICAgICAgdGhpcy5pbnZvaWNlX3N0YXJ0X2RhdGUgPSBuZXcgRGF0ZSgpLnRvSlNPTigpLnN1YnN0cmluZygwLDE5KTtcbiAgICAgICAgICAgICAgICB0aGlzLmludm9pY2VfZW5kX2RhdGUgPSBuZXcgRGF0ZSgpLnRvSlNPTigpLnN1YnN0cmluZygwLDE5KTtcbiAgICAgICAgICAgICAgICB0aGlzLnRvdGFsX2Nvc3QgPSBkYXRhLnRvdGFsX2Nvc3Q7XG4gICAgICAgICAgICAgICAgdGhpcy50b3RhbF9ob3VycyA9IGRhdGEudG90YWxfaG91cnM7XG4gICAgICAgICAgICAgICAgdGhpcy5leHNwZW5zZV90b3RhbCA9IGRhdGEubWlzY19jb3N0O1xuICAgICAgICAgICAgICAgIHRoaXMudGltZWxvZ3MgPSBkYXRhLnRpbWVfbG9ncztcbiAgICAgICAgICAgICAgICB0aGlzLmV4cGVuc2VzID0gZGF0YS5leHBlbnNlcztcbiAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGVycm9yID0+IHtcbiAgICAgICAgICAgICAgICBsb2FkaW5nLmRpc21pc3MoKTtcbiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhlcnJvciB8fCAnU2VydmVyIGVycm9yJyk7XG4gICAgICAgICAgICB9XG4gICAgICAgICk7IFxuICAgfSAgIFxuXG4gICBvblN1Ym1pdCgpIHtcbiAgICAgICAgaWYgKCF0aGlzLnRvdGFsX2Nvc3QpIHtcbiAgICAgICAgICAgIHRoaXMubmF2LmFsZXJ0KFwiVG90YWwgY29zdCBpcyAwLiBQbGVhc2UgYWRkIHRpbWUgb3IgZXhwZW5zZXMhXCIsIHRydWUpO1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG5cbiAgICAgICAgaWYgKCF0aGlzLnJlY2lwaWVudHMuZmlsdGVyKHYgPT4gdi5pc19hY2NvdW50aW5nX2NvbnRhY3QpLmxlbmd0aCkge1xuICAgICAgICAgICAgdGhpcy5uYXYuYWxlcnQoXCJObyBhY2NvdW50aW5nIGNvbnRhY3RzIHNlbGVjdGVkXCIsIHRydWUpO1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIC8vcHJvb2YgZG91YmxlIGNsaWNrXG4gICAgICAgICAgICBpZiAodGhpcy5pbl9wcm9ncmVzcyAmJiBEYXRlLm5vdygpIC0gdGhpcy5pbl9wcm9ncmVzcyA8IDE1MDApIHtyZXR1cm47fVxuICAgICAgICAgICAgdGhpcy5pbl9wcm9ncmVzcyA9IERhdGUubm93KCk7XG4gICAgICAgICAgICBcbiAgICAgICAgdmFyIGVtYWlscyA9IFwiXCI7XG4gICAgICAgIHRoaXMucmVjaXBpZW50cy5mb3JFYWNoKCh2KSA9PiB7XG4gICAgICAgICAgICBpZiAodi5pc19hY2NvdW50aW5nX2NvbnRhY3QpIHsgZW1haWxzICs9IHYuZW1haWwgKyBcIixcIjsgfVxuICAgICAgICB9KTtcblxuICAgICAgICB0aGlzLmNvbmZpZy5zZXRSZWNlbnQoe1wiYWNjb3VudFwiOiB0aGlzLnNlbGVjdHMuYWNjb3VudCxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFwidXNlclwiOiB0aGlzLnNlbGVjdHMudXNlcixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFwicHJvamVjdFwiOiB0aGlzLnNlbGVjdHMucHJvamVjdCxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFwidGlja2V0XCI6IHRoaXMuc2VsZWN0cy50aWNrZXQsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcImNvbnRyYWN0XCI6IHRoaXMuc2VsZWN0cy5jb250cmFjdCxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFwicHJlcGFpZHBhY2tcIjogdGhpcy5zZWxlY3RzLnByZXBhaWRwYWNrfSk7XG5cbiAgICAgICAgbGV0IGRhdGE6IGFueSA9IHt9O1xuXG4gICAgICAgICAgICBkYXRhLnN0YXR1cyA9IFwidW5iaWxsZWRcIjtcbiAgICAgICAgICAgIGRhdGEuYWNjb3VudCA9IHRoaXMuc2VsZWN0cy5hY2NvdW50LnNlbGVjdGVkO1xuICAgICAgICAgICAgZGF0YS5jb250cmFjdF9pZCA9IHRoaXMuc2VsZWN0cy5jb250cmFjdC5zZWxlY3RlZDtcbiAgICAgICAgICAgIGRhdGEuc3RhcnRfZGF0ZSA9IChuZXcgRGF0ZSkudG9KU09OKCk7XG4gICAgICAgICAgICBkYXRhLmVuZF9kYXRlID0gKG5ldyBEYXRlKS50b0pTT04oKTtcbiAgICAgICAgICAgIGRhdGEucmVjaXBpZW50cyA9IGVtYWlscztcblxuICAgICAgICB0aGlzLmFwaURhdGEuZ2V0KCdpbnZvaWNlcy8nLCBkYXRhLCAnUE9TVCcpLnN1YnNjcmliZShcbiAgICAgICAgICAgICAgICBkYXRhID0+IHtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5uYXYuYWxlcnQoJ0h1cnJheSEgSW52b2ljZSBzZW50IDopJyk7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMubmF2LnBvcCgpO1xuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgZXJyb3IgPT4ge1xuICAgICAgICAgICAgICAgICAgICB0aGlzLm5hdi5hbGVydChlcnJvciwgdHJ1ZSk7XG4gICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKGVycm9yIHx8ICdTZXJ2ZXIgZXJyb3InKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICApO1xuICAgIH1cblxuICAgIGNoYW5nZUNvbnRhY3QocmVjaXBpZW50KSB7XG4gICAgICAgIHJlY2lwaWVudC5pc19hY2NvdW50aW5nX2NvbnRhY3QgPSAhcmVjaXBpZW50LmlzX2FjY291bnRpbmdfY29udGFjdDtcbiAgICB9XG5cbiAgICBzZXREYXRlKGRhdGUsIHNob3dtb250aD8sIGlzdGltZT8pIHtcbiAgICAgICAgcmV0dXJuIGRhdGUgPyBnZXREYXRlVGltZShkYXRlLCBzaG93bW9udGgsIGlzdGltZSkgOiBudWxsO1xuICAgIH1cblxuXG4gICAgZ2V0Rml4ZWQodmFsdWUpIHtcbiAgICAgICAgcmV0dXJuIE51bWJlcih2YWx1ZSB8fCBcIjBcIikudG9GaXhlZCgyKS50b1N0cmluZygpO1xuICAgIH1cbiAgICBcbiAgICBnZXRDdXJyZW5jeSh2YWx1ZSkge1xuICAgICAgICByZXR1cm4gZ2V0Q3VycmVuY3kodmFsdWUpO1xuICAgIH1cbiAgICBjbG9zZSgpIHtcbiAgICAgICAgdGhpcy52aWV3LmRpc21pc3MoKTtcbiAgICAgfVxuXG5cbi8vIHNob3cgaW52b2ljZSA/XG4gICAgdmlld0ludm9pY2UoKSB7XG4gICAgICAgIGxldCBpbnZvaWNlID0ge1xuICAgICAgICAgICAgYWNjb3VudF9uYW1lIDogdGhpcy5kYXRhLmFjY291bnRfbmFtZSxcbiAgICAgICAgICAgIGlkOiB0aGlzLmRhdGEuaW52b2ljZV9pZCxcbiAgICAgICAgICAgIGFjY291bnRfaWQ6IHRoaXMuZGF0YS5hY2NvdW50X2lkLFxuICAgICAgICAgICAgcHJvamVjdF9pZDogdGhpcy5kYXRhLnByb2plY3RfaWRcbiAgICAgICAgfTtcblxuICAgICAgICB0aGlzLm5hdi5wdXNoKEludm9pY2VEZXRhaWxzUGFnZSwgaW52b2ljZSk7XG4gICAgfVxufVxuIiwiaW1wb3J0IHtQYWdlLCBDb25maWcsIE5hdiwgTmF2UGFyYW1zLCBWaWV3Q29udHJvbGxlcn0gZnJvbSAnaW9uaWMtYW5ndWxhcic7XG5pbXBvcnQge2dldERhdGVUaW1lLCBnZXRDdXJyZW5jeSwgZ2V0RnVsbE5hbWV9IGZyb20gJy4uLy4uL2RpcmVjdGl2ZXMvaGVscGVycyc7XG5pbXBvcnQge2ZvcndhcmRSZWZ9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHtHcmF2YXRhclBpcGV9IGZyb20gJy4uLy4uL3BpcGVzL3BpcGVzJztcbmltcG9ydCB7RGF0YVByb3ZpZGVyfSBmcm9tICcuLi8uLi9wcm92aWRlcnMvZGF0YS1wcm92aWRlcic7XG5pbXBvcnQge0FwaURhdGF9IGZyb20gJy4uLy4uL3Byb3ZpZGVycy9hcGktZGF0YSc7XG5pbXBvcnQge0ludm9pY2VzUGFnZX0gZnJvbSAnLi4vaW52b2ljZXMvaW52b2ljZXMnO1xuaW1wb3J0IHtTZWxlY3RMaXN0Q29tcG9uZW50fSBmcm9tICcuLi8uLi9jb21wb25lbnRzL3NlbGVjdC1saXN0L3NlbGVjdC1saXN0JztcblxuQFBhZ2Uoe1xuICB0ZW1wbGF0ZVVybDogJ2J1aWxkL3BhZ2VzL2ludm9pY2UtZGV0YWlscy9pbnZvaWNlLWRldGFpbHMuaHRtbCcsXG4gIGRpcmVjdGl2ZXM6IFtmb3J3YXJkUmVmKCgpID0+IFNlbGVjdExpc3RDb21wb25lbnQpXSxcbiAgICBwaXBlczogW0dyYXZhdGFyUGlwZV0sXG59KVxuZXhwb3J0IGNsYXNzIEludm9pY2VEZXRhaWxzUGFnZSB7XG5cbiAgICBpbnZvaWNlOiBhbnk7XG4gICAgdGl0bGU6IHN0cmluZztcbiAgICBzZWxlY3RzOiBhbnkgPSB7fTtcbiAgICBoZTogYW55O1xuICAgIHJlY2lwaWVudHM6IGFueSA9IFtdO1xuICAgIGxvY2FscmVjaXBpZW50czogYW55ID0gW107XG5cbiAgICBjb25zdHJ1Y3Rvcihwcml2YXRlIG5hdjogTmF2LCBwcml2YXRlIG5hdlBhcmFtczogTmF2UGFyYW1zLCBwcml2YXRlIGRhdGFQcm92aWRlcjogRGF0YVByb3ZpZGVyLCBwcml2YXRlIGFwaURhdGE6IEFwaURhdGEsIHByaXZhdGUgY29uZmlnOiBDb25maWcsIHByaXZhdGUgdmlldzogVmlld0NvbnRyb2xsZXIpIHtcbiAgICB9XG5cbiAgICBvblBhZ2VMb2FkZWQoKSB7XG4gICAgICAgIHRoaXMuaW52b2ljZSA9IHRoaXMubmF2UGFyYW1zLmRhdGEgfHwge307XG4gICAgICAgIGlmICh0aGlzLmludm9pY2UuaWQpXG4gICAgICAgIHRoaXMudGl0bGUgPSBgU2VuZCBJbnZvaWNlICMke3RoaXMuaW52b2ljZS5pZH0gdG9cXHUwMGEwJHt0aGlzLmludm9pY2UuYWNjb3VudF9uYW1lfWA7XG4gICAgICAgIGVsc2UgXG4gICAgICAgICAgICB0aGlzLnRpdGxlID0gYENyZWF0ZSBJbnZvaWNlIG9uXFx1MDBhMCR7dGhpcy5pbnZvaWNlLmFjY291bnRfbmFtZX1gO1xuICAgICAgICB0aGlzLmhlID0gdGhpcy5jb25maWcuZ2V0Q3VycmVudChcInVzZXJcIik7XG4gICAgICAgIHRoaXMuc2VsZWN0cyA9IHtcbiAgICAgICAgICAgICAgICBcInJlY2lwaWVudF91c2VyXCIgOiB7XG4gICAgICAgICAgICAgICAgICAgIG5hbWU6IFwicmVjaXBpZW50X3VzZXJcIiwgXG4gICAgICAgICAgICAgICAgICAgIHZhbHVlOiBnZXRGdWxsTmFtZSh0aGlzLmhlLmZpcnN0bmFtZSwgdGhpcy5oZS5sYXN0bmFtZSwgdGhpcy5oZS5lbWFpbCksXG4gICAgICAgICAgICAgICAgICAgIHNlbGVjdGVkOiB0aGlzLmhlLnVzZXJfaWQsXG4gICAgICAgICAgICAgICAgICAgIHVybDogXCJ1c2Vyc1wiLFxuICAgICAgICAgICAgICAgICAgICBoaWRkZW46IGZhbHNlXG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfTtcbiAgICAgICAgLy90aGlzLmludm9pY2UuYWNjb3VudCA9IHsgaWQ6IHRoaXMucGFyYW1zLmFjY291bnRfaWQgfHwgMCwgbmFtZTogdGhpcy5wYXJhbXMuYWNjb3VudF9uYW1lIHx8IHRoaXMuY29uZmlnLmdldEN1cnJlbnQoXCJ1c2VyXCIpLmFjY291bnRfbmFtZSB9O1xuICAgICAgICB0aGlzLmRhdGFQcm92aWRlci5nZXRJbnZvaWNlKHRoaXMuaW52b2ljZS5pZCwgdGhpcy5pbnZvaWNlLmFjY291bnRfaWQsIHRoaXMuaW52b2ljZS5jb250cmFjdF9pZCkuc3Vic2NyaWJlKFxuICAgICAgICAgICAgZGF0YSA9PiB7XG4gICAgICAgICAgICAgICAgaWYgKGRhdGEubGVuZ3RoID09IDEpXG4gICAgICAgICAgICAgICAgICAgIGRhdGEgPSBkYXRhWzBdO1xuICAgICAgICAgICAgICAgIGlmIChkYXRhLnJlY2lwaWVudHMpXG4gICAgICAgICAgICAgICAgZGF0YS5yZWNpcGllbnRzID0gZGF0YS5yZWNpcGllbnRzLnNvcnQoZnVuY3Rpb24oYSwgYikge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gYS5pc19hY2NvdW50aW5nX2NvbnRhY3QgPCBiLmlzX2FjY291bnRpbmdfY29udGFjdCA/IDEgOiAtMTtcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICB0aGlzLnJlY2lwaWVudHMgPSBbXTtcbiAgICAgICAgICAgICAgICB0aGlzLnJlY2lwaWVudHMucHVzaCguLi50aGlzLmxvY2FscmVjaXBpZW50cyk7XG4gICAgICAgICAgICAgICAgdGhpcy5yZWNpcGllbnRzLnB1c2goLi4uZGF0YS5yZWNpcGllbnRzKTtcbiAgICAgICAgICAgICAgICB0aGlzLmludm9pY2UgPSBkYXRhO1xuICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgZXJyb3IgPT4ge1xuICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKGVycm9yIHx8ICdTZXJ2ZXIgZXJyb3InKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgKTtcbiAgfVxuXG4gIHNhdmVTZWxlY3QoZXZlbnQpe1xuICAgICAgaWYgKHRoaXMuc2VsZWN0cy5yZWNpcGllbnRfdXNlci5zZWxlY3RlZCA9PT0gZXZlbnQuaWQpXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgbGV0IG5ld19yZWNpcGllbnQgPSB7XCJpZFwiOiBldmVudC5pZCwgXCJlbWFpbFwiOiBldmVudC5lbWFpbCwgXCJmdWxsbmFtZVwiOiBldmVudC5uYW1lLCBcImlzX2FjY291bnRpbmdfY29udGFjdFwiIDogdHJ1ZX07XG4gICAgICAgICAgICB0aGlzLmxvY2FscmVjaXBpZW50cy5wdXNoKG5ld19yZWNpcGllbnQpO1xuICAgICAgICAgICAgdGhpcy5yZWNpcGllbnRzLnB1c2gobmV3X3JlY2lwaWVudCk7XG4gICAgICAgICAgICByZXR1cm47XG4gIH1cblxuICBvblBhZ2VXaWxsRW50ZXIoKSB7XG4gICAgICAgICAgICB0aGlzLnZpZXcuc2V0QmFja0J1dHRvblRleHQoJycpO1xuICAgIH1cblxuICAgIHNldERhdGUoZGF0ZSwgc2hvd21vbnRoPywgaXN0aW1lPykge1xuICAgICAgICBpZiAoZGF0ZSl7XG4gICAgICAgIHZhciB0aW1lX29mZnNldCA9IHRoaXMuY29uZmlnLmdldEN1cnJlbnQoXCJ0aW1lem9uZV9vZmZzZXRcIik7ICAgICBcbiAgICAgICAgZGF0ZSA9IG5ldyBEYXRlKGRhdGUuc3Vic3RyaW5nKDAsMjMpK1wiWlwiKSB8fCBuZXcgRGF0ZSgpO1xuICAgICAgICBkYXRlID0gbmV3IERhdGUoZGF0ZS5zZXRUaW1lKGRhdGUuZ2V0VGltZSgpICsgdGltZV9vZmZzZXQqNjAqNjAqMTAwMCkpLnRvSlNPTigpO1xuICAgICAgICByZXR1cm4gZ2V0RGF0ZVRpbWUoZGF0ZSwgc2hvd21vbnRoLCBpc3RpbWUpO1xuICAgIH1cbiAgICAgcmV0dXJuIG51bGw7XG4gICAgfVxuICAgIFxuICAgIGdldEN1cnJlbmN5KHZhbHVlKSB7XG4gICAgICAgIHJldHVybiBnZXRDdXJyZW5jeSh2YWx1ZSk7XG4gICAgfVxuXG4gICAgY2hhbmdlQ29udGFjdChyZWNpcGllbnQpIHtcbiAgICAgICAgcmVjaXBpZW50LmlzX2FjY291bnRpbmdfY29udGFjdCA9ICFyZWNpcGllbnQuaXNfYWNjb3VudGluZ19jb250YWN0O1xuICAgIH1cblxuICAgIHNlbmQoKSB7XG4gICAgICAgIGlmICghdGhpcy5yZWNpcGllbnRzLmZpbHRlcih2ID0+IHYuaXNfYWNjb3VudGluZ19jb250YWN0KS5sZW5ndGgpIHtcbiAgICAgICAgICAgIHRoaXMubmF2LmFsZXJ0KFwiTm8gYWNjb3VudGluZyBjb250YWN0cyBzZWxlY3RlZFwiLCB0cnVlKTtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgICAvL3Byb29mIGRvdWJsZSBjbGlja1xuICAgICAgICAgICAgaWYgKHRoaXMuaW52b2ljZS5pbl9wcm9ncmVzcyAmJiBEYXRlLm5vdygpIC0gdGhpcy5pbnZvaWNlLmluX3Byb2dyZXNzIDwgMTUwMCkge3JldHVybjt9XG4gICAgICAgICAgICB0aGlzLmludm9pY2UuaW5fcHJvZ3Jlc3MgPSBEYXRlLm5vdygpO1xuICAgICAgICAgICAgXG4gICAgICAgIHZhciBlbWFpbHMgPSBcIlwiO1xuICAgICAgICB0aGlzLnJlY2lwaWVudHMuZm9yRWFjaCgodikgPT4ge1xuICAgICAgICAgICAgaWYgKHYuaXNfYWNjb3VudGluZ19jb250YWN0KSB7IGVtYWlscyArPSB2LmVtYWlsICsgXCIsXCI7IH1cbiAgICAgICAgfSk7XG5cbiAgICAgICAgbGV0IGRhdGE6IGFueSA9IHt9O1xuXG4gICAgICAgIGlmICghdGhpcy5pbnZvaWNlLmlkKSB7XG4gICAgICAgICAgICBkYXRhLnN0YXR1cyA9IFwidW5iaWxsZWRcIjtcbiAgICAgICAgICAgIGRhdGEuYWNjb3VudCA9IHRoaXMuaW52b2ljZS5hY2NvdW50X2lkO1xuICAgICAgICAgICAgZGF0YS5jb250cmFjdF9pZCA9IHRoaXMuaW52b2ljZS5jb250cmFjdF9pZDtcbiAgICAgICAgICAgIGRhdGEuc3RhcnRfZGF0ZSA9IChuZXcgRGF0ZSh0aGlzLmludm9pY2Uuc3RhcnRfZGF0ZSB8fCBEYXRlLm5vdygpLnRvU3RyaW5nKCkpKS50b0pTT04oKTtcbiAgICAgICAgICAgIGRhdGEuZW5kX2RhdGUgPSAobmV3IERhdGUodGhpcy5pbnZvaWNlLmVuZF9kYXRlIHx8IERhdGUubm93KCkudG9TdHJpbmcoKSkpLnRvSlNPTigpO1xuICAgICAgICB9XG4gICAgICAgIGVsc2VcbiAgICAgICAgICAgIGRhdGEuYWN0aW9uID0gXCJzZW5kRW1haWxcIjtcblxuICAgICAgICBkYXRhLnJlY2lwaWVudHMgPSBlbWFpbHM7XG5cbiAgICAgICAgdGhpcy5hcGlEYXRhLmdldCgnaW52b2ljZXMvJyArICh0aGlzLmludm9pY2UuaWQgfHwgXCJcIiksIGRhdGEsICF0aGlzLmludm9pY2UuaWQgPyAnUE9TVCcgOiAnUFVUJykuc3Vic2NyaWJlKFxuICAgICAgICAgICAgICAgIGRhdGEgPT4ge1xuICAgICAgICAgICAgICAgICAgICB0aGlzLm5hdi5hbGVydCgnSHVycmF5ISBJbnZvaWNlIHNlbnQgOiknKTtcbiAgICAgICAgICAgICAgICAgICAvLyBpZiAoIXRoaXMuaW52b2ljZS5pZClcbiAgICAgICAgICAgICAgICAgICAgLy8gICAgdGhpcy5uYXYucG9wVG8odGhpcy5uYXYuZ2V0QnlJbmRleCh0aGlzLm5hdi5sZW5ndGgoKSAtIDMpKTtcbiAgICAgICAgICAgICAgICAgICAvLyBlbHNlXG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLm5hdi5wb3AoKTtcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIGVycm9yID0+IHtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5uYXYuYWxlcnQoZXJyb3IsIHRydWUpO1xuICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhlcnJvciB8fCAnU2VydmVyIGVycm9yJyk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgKTtcbiAgICB9XG59XG4iLCJpbXBvcnQge1BhZ2UsIENvbmZpZywgTmF2LCBOYXZQYXJhbXMsIFZpZXdDb250cm9sbGVyfSBmcm9tICdpb25pYy1hbmd1bGFyJztcbmltcG9ydCB7RGF0YVByb3ZpZGVyfSBmcm9tICcuLi8uLi9wcm92aWRlcnMvZGF0YS1wcm92aWRlcic7XG5pbXBvcnQge01vcmVQaXBlfSBmcm9tICcuLi8uLi9waXBlcy9waXBlcyc7XG5pbXBvcnQge0ludm9pY2VEZXRhaWxzUGFnZX0gZnJvbSAnLi4vaW52b2ljZS1kZXRhaWxzL2ludm9pY2UtZGV0YWlscyc7XG5pbXBvcnQge0ludm9pY2VDcmVhdGVQYWdlfSBmcm9tICcuLi9pbnZvaWNlLWNyZWF0ZS9pbnZvaWNlLWNyZWF0ZSc7XG5pbXBvcnQge2dldERhdGVUaW1lLCBnZXRDdXJyZW5jeX0gZnJvbSAnLi4vLi4vZGlyZWN0aXZlcy9oZWxwZXJzJztcblxuQFBhZ2Uoe1xuICB0ZW1wbGF0ZVVybDogJ2J1aWxkL3BhZ2VzL2ludm9pY2VzL2ludm9pY2VzLmh0bWwnLFxuICAgIHBpcGVzOiBbTW9yZVBpcGVdLFxufSlcbmV4cG9ydCBjbGFzcyBJbnZvaWNlc1BhZ2Uge1xuXG4gICAgTElNSVQ6IG51bWJlciA9IDEwMDtcbiAgICBhY2NvdW50OiBhbnk7XG4gICAgaXNfZW1wdHk6IGJvb2xlYW47XG4gICAgdW5pc19lbXB0eTogYm9vbGVhbjtcbiAgICBidXN5OiBib29sZWFuO1xuICAgIHVuYnVzeTogYm9vbGVhbjtcbiAgICBwYXJhbXM6IGFueTtcbiAgICBwYWdlcjogYW55O1xuICAgIGludm9pY2VzOiBBcnJheTxhbnk+O1xuICAgIHVuaW52b2ljZXM6IEFycmF5PGFueT4gPSBbXTtcbiAgICBpbml0aWFsX2xvYWQ6IGJvb2xlYW4gPSB0cnVlO1xuICAgIGRldGFpbHNfdGFiOiBzdHJpbmc7XG5cbiAgICBjb25zdHJ1Y3Rvcihwcml2YXRlIG5hdjogTmF2LCBwcml2YXRlIGRhdGFQcm92aWRlcjogRGF0YVByb3ZpZGVyLCBwcml2YXRlIGNvbmZpZzogQ29uZmlnLCBwcml2YXRlIG5hdlBhcmFtczogTmF2UGFyYW1zLCBwcml2YXRlIHZpZXc6IFZpZXdDb250cm9sbGVyKSB7XG4gICAgICAgIHRoaXMuaXNfZW1wdHkgPSBmYWxzZTtcbiAgICAgICAgdGhpcy51bmlzX2VtcHR5ID0gZmFsc2U7XG4gICAgICAgIHRoaXMuaW52b2ljZXMgPSBbXTtcbiAgICAgICAgdGhpcy51bmludm9pY2VzID0gW107XG4gIH1cblxuICAgIG9uUGFnZUxvYWRlZCgpIHtcbiAgICAgICAgdGhpcy5wYXJhbXMgPSB0aGlzLm5hdlBhcmFtcy5kYXRhIHx8IHt9O1xuICAgICAgICB0aGlzLmRldGFpbHNfdGFiID0gXCJSZWFkeVwiO1xuICAgICAgICB0aGlzLnBhZ2VyID0geyBwYWdlOiAwLCBsaW1pdDogdGhpcy5MSU1JVCB9O1xuICAgICAgICBpZiAoIXRoaXMucGFyYW1zLmFjY291bnQpIFxuICAgICAgICB0aGlzLnBhcmFtcy5hY2NvdW50ID0geyBpZDogdGhpcy5wYXJhbXMuYWNjb3VudF9pZCB8fCAwLCBuYW1lOiB0aGlzLnBhcmFtcy5hY2NvdW50X25hbWUgfHwgdGhpcy5jb25maWcuZ2V0Q3VycmVudChcInVzZXJcIikuYWNjb3VudF9uYW1lIH07XG5cbiAgICAgICAgdmFyIHRpbWVyID0gc2V0VGltZW91dCgoKSA9PiB7XG4gICAgICAgICAgICAgICAgdGhpcy5idXN5ID0gdHJ1ZTtcbiAgICAgICAgICAgICAgICB0aGlzLnVuYnVzeSA9IHRydWU7XG4gICAgICAgICAgICB9LCA1MDApO1xuXG4gICAgICAgICAgICB0aGlzLmdldEl0ZW1zKHRpbWVyKTtcbiAgICAgICAgICAgIHRoaXMuZ2V0SXRlbXModGltZXIsIHRydWUpO1xuICAgIH1cblxuICAgIG9uUGFnZVdpbGxFbnRlcigpIHtcbiAgICAgICAgaWYgKHRoaXMucGFyYW1zLmFjY291bnQubmFtZSlcbiAgICAgICAgICAgIHRoaXMudmlldy5zZXRCYWNrQnV0dG9uVGV4dCgnJyk7XG4gICAgICAgIGlmICghdGhpcy5pbml0aWFsX2xvYWQpXG4gICAgICAgIHtcbiAgICAgICAgICAgIHZhciB0aW1lciA9IHNldFRpbWVvdXQoKCkgPT4ge1xuICAgICAgICAgICAgICAgIGxldCB0ZXN0PTA7XG4gICAgICAgICAgICB9LCA1MDApO1xuICAgICAgICAgICAgc2V0VGltZW91dCgoKSA9PiB7XG4gICAgICAgICAgICAgICB0aGlzLmdldEl0ZW1zKHRpbWVyKTtcbiAgICAgICAgICAgICAgIHRoaXMuZ2V0SXRlbXModGltZXIsIHRydWUpO1xuICAgICAgICAgICAgfSwgMTAwMCk7XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5pbml0aWFsX2xvYWQgPSBmYWxzZTtcbiAgICB9XG5cblxuICAgIGdldEl0ZW1zKHRpbWVyLCBpc2JpbGxlZD8pIHtcbiAgICAgICAgdGhpcy5kYXRhUHJvdmlkZXIuZ2V0SW52b2ljZXModGhpcy5wYXJhbXMuYWNjb3VudC5pZCwgaXNiaWxsZWQgfHwgZmFsc2UsIHRoaXMucGFnZXIpLnN1YnNjcmliZShcbiAgICAgICAgICAgIGRhdGEgPT4ge1xuICAgICAgICAgICAgICAgICAgICBpZiAoaXNiaWxsZWQpXG4gICAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5pc19lbXB0eSA9ICFkYXRhLmxlbmd0aDtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5idXN5ID0gZmFsc2U7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuaW52b2ljZXMgPSBkYXRhO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIGVsc2VcbiAgICAgICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy51bmlzX2VtcHR5ID0gIWRhdGEubGVuZ3RoO1xuICAgICAgICAgICAgICAgICAgICB0aGlzLnVuYnVzeSA9IGZhbHNlO1xuICAgICAgICAgICAgICAgICAgICB0aGlzLnVuaW52b2ljZXMgPSBkYXRhO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIGNsZWFyVGltZW91dCh0aW1lcik7XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgZXJyb3IgPT4ge1xuICAgICAgICAgICAgICAgIGlmICh0aW1lcikge1xuICAgICAgICAgICAgICAgICAgICBjbGVhclRpbWVvdXQodGltZXIpO1xuICAgICAgICAgICAgICAgICAgICB0aGlzLmJ1c3kgPSBmYWxzZTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgY29uc29sZS5sb2coZXJyb3IgfHwgJ1NlcnZlciBlcnJvcicpO1xuICAgICAgICAgICAgfVxuICAgICAgICApO1xuICAgIH1cbiAgICBcbiAgICBpdGVtVGFwcGVkKGl0ZW0pIHtcbiAgICAgICAgdGhpcy5uYXYucHVzaChJbnZvaWNlRGV0YWlsc1BhZ2UsIGl0ZW0pO1xuICAgIH1cblxuICAgIGNyZWF0ZUludm9pY2UoKSB7XG4gICAgICAgIHRoaXMubmF2LnB1c2goSW52b2ljZUNyZWF0ZVBhZ2UsIHRoaXMucGFyYW1zKTtcbiAgICB9XG4gICAgXG4gICAgc2V0RGF0ZShkYXRlLCBzaG93bW9udGg/LCBpc3RpbWU/KSB7XG4gICAgICAgIGlmIChkYXRlKXtcbiAgICAgICAgdmFyIHRpbWVfb2Zmc2V0ID0gdGhpcy5jb25maWcuZ2V0Q3VycmVudChcInRpbWV6b25lX29mZnNldFwiKTsgICAgIFxuICAgICAgICBkYXRlID0gbmV3IERhdGUoZGF0ZS5zdWJzdHJpbmcoMCwyMykrXCJaXCIpIHx8IG5ldyBEYXRlKCk7XG4gICAgICAgIGRhdGUgPSBuZXcgRGF0ZShkYXRlLnNldFRpbWUoZGF0ZS5nZXRUaW1lKCkgKyB0aW1lX29mZnNldCo2MCo2MCoxMDAwKSkudG9KU09OKCk7XG4gICAgICAgIHJldHVybiBnZXREYXRlVGltZShkYXRlLCBzaG93bW9udGgsIGlzdGltZSk7XG4gICAgfVxuICAgICByZXR1cm4gbnVsbDtcbiAgICB9XG4gICAgXG4gICAgZ2V0Q3VycmVuY3kodmFsdWUpIHtcbiAgICAgICAgcmV0dXJuIGdldEN1cnJlbmN5KHZhbHVlKTtcbiAgICB9XG59XG4iLCJpbXBvcnQge1BhZ2UsIENvbmZpZywgTmF2LCBOYXZQYXJhbXMsIFZpZXdDb250cm9sbGVyLCBNb2RhbH0gZnJvbSAnaW9uaWMtYW5ndWxhcic7XG5pbXBvcnQge0RhdGFQcm92aWRlcn0gZnJvbSAnLi4vLi4vcHJvdmlkZXJzL2RhdGEtcHJvdmlkZXInO1xuaW1wb3J0IHtUaWNrZXRDcmVhdGVQYWdlfSBmcm9tICcuLi9tb2RhbHMvbW9kYWxzJzsgXG5pbXBvcnQge1RpY2tldERldGFpbHNQYWdlfSBmcm9tICcuLi90aWNrZXQtZGV0YWlscy90aWNrZXQtZGV0YWlscyc7XG5pbXBvcnQge1RpY2tldHNMaXN0Q29tcG9uZW50fSBmcm9tICcuLi8uLi9jb21wb25lbnRzL3RpY2tldHMtbGlzdC90aWNrZXRzLWxpc3QnO1xuaW1wb3J0IHtBcGlEYXRhLCBUaWNrZXRQcm92aWRlcn0gZnJvbSAnLi4vLi4vcHJvdmlkZXJzL3Byb3ZpZGVycyc7XG5pbXBvcnQge2FkZHB9IGZyb20gJy4uLy4uL2RpcmVjdGl2ZXMvaGVscGVycyc7XG5pbXBvcnQge0FqYXhTZWFyY2hQYWdlfSBmcm9tICcuLi9hamF4LXNlYXJjaC9hamF4LXNlYXJjaCc7XG5cblxuQFBhZ2Uoe1xuICB0ZW1wbGF0ZVVybDogJ2J1aWxkL3BhZ2VzL2xvY2F0aW9uLWRldGFpbHMvbG9jYXRpb24tZGV0YWlscy5odG1sJyxcbiAgZGlyZWN0aXZlczogW1RpY2tldHNMaXN0Q29tcG9uZW50XSxcbn0pXG5leHBvcnQgY2xhc3MgTG9jYXRpb25EZXRhaWxzUGFnZSB7XG5cbiAgbG9jYXRpb246IGFueTtcbiAgcGFnZXM6IEFycmF5PGFueT47XG4gIHRhYnNUaWNrZXQ6IHN0cmluZzsgXG4gIGlzX3JlYWR5OiBib29sZWFuID0gZmFsc2U7XG4gIHNlYXJjaF9yZXN1bHRzOiBhbnk7XG4gIHRlc3Q6IGJvb2xlYW47XG4gIHRlcm06IHN0cmluZyA9ICcnO1xuICBidXN5OiBib29sZWFuO1xuXG4gIGNvbnN0cnVjdG9yKHByaXZhdGUgbmF2OiBOYXYsIHByaXZhdGUgbmF2UGFyYW1zOiBOYXZQYXJhbXMsIHByaXZhdGUgYXBpRGF0YTogQXBpRGF0YSwgcHJpdmF0ZSBkYXRhUHJvdmlkZXI6IERhdGFQcm92aWRlciwgcHJpdmF0ZSB0aWNrZXRQcm92aWRlcjogVGlja2V0UHJvdmlkZXIsIHByaXZhdGUgY29uZmlnOiBDb25maWcsIHByaXZhdGUgdmlldzogVmlld0NvbnRyb2xsZXIpIHtcbiAgfVxuXG4gIG9uUGFnZUxvYWRlZCgpXG4gIHtcbiAgICAvLyBJZiB3ZSBuYXZpZ2F0ZWQgdG8gdGhpcyBwYWdlLCB3ZSB3aWxsIGhhdmUgYW4gaXRlbSBhdmFpbGFibGUgYXMgYSBuYXYgcGFyYW1cbiAgICB0aGlzLmxvY2F0aW9uID0gdGhpcy5uYXZQYXJhbXMuZGF0YSB8fCB7fTtcbiAgICB0aGlzLnRhYnNUaWNrZXQgPSBcIk9wZW5cIjtcbiAgfVxuXG4gIG9uUGFnZVdpbGxFbnRlcigpXG4gIHtcbiAgICAvL2NvbnNvbGUubG9nKG5ldyBEYXRlKCkpO1xuICAgIHRoaXMudmlldy5zZXRCYWNrQnV0dG9uVGV4dCgnJyk7XG4gICAgLyp0aGlzLmRhdGFQcm92aWRlci5nZXRMb2NhdGlvbkRldGFpbHModGhpcy5sb2NhdGlvbi5pZCkuc3Vic2NyaWJlKFxuICAgICAgZGF0YSA9PiB7XG4gICAgICAgIHRoaXMubG9jYXRpb24gPSBkYXRhO1xuICAgICAgICB0aGlzLmlzX3JlYWR5ID0gdHJ1ZTtcbiAgICAgIH0sXG4gICAgICBlcnJvciA9PiB7XG4gICAgICAgIGNvbnNvbGUubG9nKGVycm9yIHx8ICdTZXJ2ZXIgZXJyb3InKTtcbiAgICAgIH1cbiAgICAgICk7XG4gICAgICAqLyBcbiAgICB9XG5cbiAgICBhZGRUaWNrZXQoKXtcbiAgICAgIGxldCBteU1vZGFsID0gTW9kYWwuY3JlYXRlKFRpY2tldENyZWF0ZVBhZ2UsIHtcImFjY291bnRcIjogeyBcImlkXCIgOiAtMX0sIFwibG9jYXRpb25cIiA6IHRoaXMubG9jYXRpb259KTtcbiAgICAgIG15TW9kYWwub25EaXNtaXNzKGRhdGExID0+IHtcbiAgICAgICAgdGhpcy50aWNrZXRQcm92aWRlci5nZXRUaWNrZXRzTGlzdChcIm9wZW5cIiwgXCItMVwiLCB0aGlzLmxvY2F0aW9uLmlkLHsgXCJsaW1pdFwiOiAyNSB9KTsgXG4gICAgICAgIHRoaXMuZ290b1RpY2tldChkYXRhMSk7XG4gICAgICB9KTtcbiAgICAgIHRoaXMubmF2LnByZXNlbnQobXlNb2RhbCk7XG4gICAgfVxuXG4gICAgZ290b1RpY2tldChkYXRhKVxuICAgIHtcbiAgICAgIHRoaXMudGVzdCA9IGZhbHNlO1xuICAgICAgdGhpcy5jbGVhclNlYXJjaCgpO1xuICAgICAgaWYgKGRhdGEpXG4gICAgICB7XG4gICAgICAgIHNldFRpbWVvdXQoKCkgPT4ge1xuICAgICAgICAgIHRoaXMubmF2LnB1c2goVGlja2V0RGV0YWlsc1BhZ2UsIGRhdGEpO1xuICAgICAgICB9LCA1MDApO1xuICAgICAgfVxuICAgIH1cblxuICAgIHNlYXJjaEl0ZW1zKHNlYXJjaGJhcikge1xuICAgICAgLy8gUmVzZXQgaXRlbXMgYmFjayB0byBhbGwgb2YgdGhlIGl0ZW1zXG4gICAgICB0aGlzLnNlYXJjaF9yZXN1bHRzID0gW107XG5cbiAgICAgIC8vIHNldCBxIHRvIHRoZSB2YWx1ZSBvZiB0aGUgc2VhcmNoYmFyXG4gICAgICB2YXIgcSA9IHNlYXJjaGJhci52YWx1ZTtcblxuICAgICAgLy8gaWYgdGhlIHZhbHVlIGlzIGFuIGVtcHR5IHN0cmluZyBkb24ndCBmaWx0ZXIgdGhlIHNlYXJjaF9yZXN1bHRzXG4gICAgICBpZiAocS50cmltKCkgPT0gJycgfHwgdGhpcy5idXN5KSB7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cblxuICAgICAgaWYgKHEubGVuZ3RoID4gMSlcbiAgICAgIHtcbiAgICAgICAgdmFyIHRpbWVyID0gc2V0VGltZW91dCgoKSA9PiB7IHRoaXMuYnVzeSA9IHRydWU7IH0sIDUwMCk7XG4gICAgICAgIHRoaXMuc2VhcmNoSXRlbXNBUEkocSwgdGltZXIpO1xuICAgICAgfVxuICAgIH1cblxuICAgIHNlYXJjaEl0ZW1zQVBJKHRlcm0sIHRpbWVyKSB7XG4gICAgICB0aGlzLnNlYXJjaF9yZXN1bHRzID0gW107XG4gICAgICBsZXQgdXJsID0gXCJ0aWNrZXRzP3F1ZXJ5PWFsbCZsb2NhdGlvbj1cIit0aGlzLmxvY2F0aW9uLmlkOyAvL3N0YXR1cz1hbGxvcGVuJlxuICAgICAgbGV0IHBhZ2VyID0geyBsaW1pdDogMyB9O1xuICAgICAgdGhpcy5hcGlEYXRhLmdldFBhZ2VkKGFkZHAodXJsLCBcInNlYXJjaFwiLCB0ZXJtICsgXCIqXCIpLCBwYWdlcikuc3Vic2NyaWJlKFxuICAgICAgICBkYXRhID0+IHtcbiAgICAgICAgICBpZiAodGltZXIpIHtcbiAgICAgICAgICAgIGNsZWFyVGltZW91dCh0aW1lcik7XG4gICAgICAgICAgICB0aGlzLmJ1c3kgPSBmYWxzZTtcbiAgICAgICAgICB9XG4gICAgICAgICAgdGhpcy5zZWFyY2hfcmVzdWx0cyA9IGRhdGE7XG4gICAgICAgIH0sXG4gICAgICAgIGVycm9yID0+IHtcbiAgICAgICAgICBpZiAodGltZXIpIHtcbiAgICAgICAgICAgIGNsZWFyVGltZW91dCh0aW1lcik7XG4gICAgICAgICAgICB0aGlzLmJ1c3kgPSBmYWxzZTtcbiAgICAgICAgICB9XG4gICAgICAgICAgY29uc29sZS5sb2coZXJyb3IgfHwgJ1NlcnZlciBlcnJvcicpO1xuICAgICAgICB9XG4gICAgICAgICk7XG4gICAgfVxuXG5cbiAgICBjbGVhclNlYXJjaChzZWFyY2hiYXI/KVxuICAgIHtcbiAgICAgIHRoaXMuc2VhcmNoX3Jlc3VsdHMgPSBbXTtcbiAgICAgIHRoaXMuYnVzeSA9IGZhbHNlO1xuICAgICAgaWYgKHNlYXJjaGJhcikgc2VhcmNoYmFyLnZhbHVlID0gXCJcIjtcbiAgICB9XG5cbiAgICBnZXRTZWFyY2goc2VhcmNoYmFyKSB7XG4gICAgICB0aGlzLnRlc3QgPSBmYWxzZTtcbiAgICAgIHRoaXMuY2xlYXJTZWFyY2goKTtcbiAgICAgIC8vIFJlc2V0IGl0ZW1zIGJhY2sgdG8gYWxsIG9mIHRoZSBpdGVtc1xuICAgICAgLy8gc2V0IHEgdG8gdGhlIHZhbHVlIG9mIHRoZSBzZWFyY2hiYXJcbiAgICAgIGxldCB0ZXJtID0gc2VhcmNoYmFyLnRhcmdldC52YWx1ZTtcbiAgICAgIGlmICh0ZXJtLmxlbmd0aCA8IDQpXG4gICAgICAgIHRlcm0gKz0gXCIgICAgXCI7XG4gICAgICBsZXQgbGlzdCA9IHsgc2VhcmNoOiB0ZXJtLCBsb2NhdGlvbjogdGhpcy5sb2NhdGlvbiB9O1xuICAgICAgdGhpcy50ZXN0ID0gZmFsc2U7XG4gICAgICB0aGlzLm5hdi5wdXNoKEFqYXhTZWFyY2hQYWdlLCBsaXN0KTtcbiAgICB9XG5cbiAgICB0b2dnbGUoKXtcbiAgICAgICAgdGhpcy50ZXN0ID0gIXRoaXMudGVzdDtcbiAgICAgICAgaWYgKHRoaXMudGVzdCl7XG4gICAgICAgICAgICBzZXRUaW1lb3V0KCgpID0+IHtcbiAgICAgICAgdmFyIHQgPSBkb2N1bWVudC5nZXRFbGVtZW50c0J5Q2xhc3NOYW1lKFwic2VhcmNoYmFyLWlucHV0XCIpO1xuICAgICAgICB0ID0gdFt0Lmxlbmd0aCAtIDFdO1xuICAgICAgICB0ICYmIHQuZm9jdXMoKTtcbiAgICAgICAgfSwgNTAwKTtcbiAgICAgICAgfVxuICAgIH1cbiAgfVxuIiwiaW1wb3J0IHtQYWdlLCBDb25maWcsIE5hdn0gZnJvbSAnaW9uaWMtYW5ndWxhcic7XHJcbmltcG9ydCB7RGF0YVByb3ZpZGVyfSBmcm9tICcuLi8uLi9wcm92aWRlcnMvZGF0YS1wcm92aWRlcic7XHJcbmltcG9ydCB7TG9jYXRpb25zTGlzdENvbXBvbmVudCwgQWN0aW9uQnV0dG9uQ29tcG9uZW50fSBmcm9tICcuLi8uLi9jb21wb25lbnRzL2NvbXBvbmVudHMnO1xyXG5pbXBvcnQge0FwaURhdGEsIFRpY2tldFByb3ZpZGVyfSBmcm9tICcuLi8uLi9wcm92aWRlcnMvcHJvdmlkZXJzJztcclxuaW1wb3J0IHthZGRwfSBmcm9tICcuLi8uLi9kaXJlY3RpdmVzL2hlbHBlcnMnO1xyXG5pbXBvcnQge1RpY2tldERldGFpbHNQYWdlfSBmcm9tICcuLi90aWNrZXQtZGV0YWlscy90aWNrZXQtZGV0YWlscyc7XHJcblxyXG5cclxuQFBhZ2Uoe1xyXG4gICAgdGVtcGxhdGVVcmw6ICdidWlsZC9wYWdlcy9sb2NhdGlvbnMvbG9jYXRpb25zLmh0bWwnLFxyXG4gICAgZGlyZWN0aXZlczogW0xvY2F0aW9uc0xpc3RDb21wb25lbnQsIEFjdGlvbkJ1dHRvbkNvbXBvbmVudF0sXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBMb2NhdGlvbnNQYWdlIHtcclxuXHJcbiAgICBjb3VudDogbnVtYmVyO1xyXG4gICAgYnVzeTogYm9vbGVhbjtcclxuICAgIHBhcmFtczogYW55O1xyXG4gICAgcGFnZXI6IGFueTtcclxuICAgIHNlYXJjaF9yZXN1bHRzOiBhbnk7XHJcbiAgICBpdGVtczogYW55ID1bXTtcclxuICAgIGRhdGE6IGFueTtcclxuICAgIExJTUlUOiBudW1iZXIgPSAyNTtcclxuICAgIHRlc3Q6IGJvb2xlYW47XHJcbiAgICB0ZXJtOiBzdHJpbmcgPSAnJztcclxuICAgIGRhdGU6IGFueTtcclxuICAgIGlzX2VtcHR5OiBib29sZWFuO1xyXG5cclxuICAgIGNvbnN0cnVjdG9yKHByaXZhdGUgbmF2OiBOYXYsIHByaXZhdGUgY29uZmlnOiBDb25maWcsIHByaXZhdGUgZGF0YVByb3ZpZGVyOiBEYXRhUHJvdmlkZXIsIHByaXZhdGUgYXBpRGF0YTogQXBpRGF0YSwgcHJpdmF0ZSB0aWNrZXRQcm92aWRlcjogVGlja2V0UHJvdmlkZXIpIHtcclxuICAgIH1cclxuICAgIFxyXG4gICAgb25QYWdlTG9hZGVkKClcclxuICAgIHtcclxuICAgICAgICB0aGlzLmlzX2VtcHR5ID0gdHJ1ZTtcclxuICAgICAgICB0aGlzLnBhZ2VyID0geyBwYWdlOiAwLCBsaW1pdDogdGhpcy5MSU1JVCB9O1xyXG5cclxuICAgICAgICB2YXIgdGltZXIgPSBzZXRUaW1lb3V0KCgpID0+IHtcclxuICAgICAgICAgICAgdGhpcy5idXN5ID0gdHJ1ZTtcclxuICAgICAgICB9LCA1MDApO1xyXG5cclxuICAgICAgICB0aGlzLmdldEl0ZW1zKFwiXCIsIG51bGwsIHRpbWVyKTtcclxuICAgIH1cclxuXHJcbiAgICBzZWFyY2hJdGVtcyhzZWFyY2hiYXIpIHtcclxuICAgICAgICAgICAgLy8gUmVzZXQgaXRlbXMgYmFjayB0byBhbGwgb2YgdGhlIGl0ZW1zXHJcbiAgICAgICAgICAgIHRoaXMuaXRlbXMgPSB0aGlzLmRhdGE7XHJcblxyXG4gICAgICAgICAgICAvLyBzZXQgcSB0byB0aGUgdmFsdWUgb2YgdGhlIHNlYXJjaGJhclxyXG4gICAgICAgICAgICB2YXIgcSA9IHNlYXJjaGJhci52YWx1ZS50cmltKCk7XHJcblxyXG4gICAgICAgICAgICAvLyBpZiB0aGUgdmFsdWUgaXMgYW4gZW1wdHkgc3RyaW5nIGRvbid0IGZpbHRlciB0aGUgaXRlbXNcclxuICAgICAgICAgICAgaWYgKHEudHJpbSgpID09ICcnIHx8IHRoaXMuYnVzeSkge1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuO1xyXG4gICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICB0aGlzLmRhdGUgPSBEYXRlLm5vdygpO1xyXG5cclxuICAgICAgICAgICAgaWYgKHRoaXMuZGF0YSAmJiBxLmxlbmd0aCA8IDQpXHJcbiAgICAgICAge1xyXG4gICAgICAgICAgICB0aGlzLml0ZW1zID0gdGhpcy5kYXRhLmZpbHRlcigoZGF0YSkgPT4gZGF0YS5uYW1lLnRvTG93ZXJDYXNlKCkuaW5kZXhPZihxKSA+IC0xKTtcclxuICAgICAgICAgICAgICAgIHRoaXMuaXNfZW1wdHkgPSAhdGhpcy5pdGVtcy5sZW5ndGg7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGVsc2Uge1xyXG4gICAgICAgICAgICB2YXIgdGltZXIgPSBzZXRUaW1lb3V0KCgpID0+IHsgdGhpcy5idXN5ID0gdHJ1ZTsgfSwgNTAwKTtcclxuICAgICAgICAgICAgdGhpcy5nZXRJdGVtcyhxLCBudWxsLCB0aW1lcik7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgZ2V0SXRlbXModGVybSwgaW5maW5pdGVTY3JvbGwsIHRpbWVyPykge1xyXG4gICAgICAgICAgICBsZXQgcGFnZXIgPSB7IHBhZ2U6IHRoaXMucGFnZXIucGFnZSwgbGltaXQ6IHRoaXMucGFnZXIubGltaXQgfTtcclxuICAgICAgICAgICAgbGV0IHN0ZXJtID0gdGVybTtcclxuICAgICAgICAgICAgaWYgKHRlcm0ubGVuZ3RoID4gMilcclxuICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgcGFnZXIucGFnZSA9IDA7XHJcbiAgICAgICAgICAgICAgICAvL3N0ZXJtID0gdGVybStcIipcIjtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB2YXIgdXJsID0gXCJsb2NhdGlvbnNcIjtcclxuICAgICAgICAgICAgdGhpcy5hcGlEYXRhLmdldFBhZ2VkKGFkZHAodXJsLCBcInNlYXJjaFwiLCBzdGVybSksIHBhZ2VyKS5zdWJzY3JpYmUoXHJcbiAgICAgICAgICAgICAgICBkYXRhID0+IHtcclxuICAgICAgICAgICAgICAgICAgICBpZiAodGltZXIpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5pc19lbXB0eSA9ICFkYXRhLmxlbmd0aDtcclxuICAgICAgICAgICAgICAgICAgICAgICAgY2xlYXJUaW1lb3V0KHRpbWVyKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5idXN5ID0gZmFsc2U7XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuY291bnQgPSAyNTtcclxuICAgICAgICAgICAgICAgICAgICBpZiAoIXRlcm0gfHwgdGVybS5sZW5ndGggPCAzKVxyXG4gICAgICAgICAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHRpbWVyKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLmRhdGEgPSBkYXRhO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGVsc2UgXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLmRhdGEucHVzaCguLi5kYXRhKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGluZmluaXRlU2Nyb2xsKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpbmZpbml0ZVNjcm9sbC5lbmFibGUoZGF0YS5sZW5ndGggPT0gMjUpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuY291bnQgPSBkYXRhLmxlbmd0aDtcclxuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5zZWFyY2hJdGVtcyh7IHZhbHVlOiB0ZXJtIH0pO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICBlbHNlIGlmIChkYXRhLmxlbmd0aClcclxuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5pdGVtcyA9IGRhdGE7XHJcbiAgICAgICAgICAgICAgICAgICAgZWxzZVxyXG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLml0ZW1zID0gdGhpcy5kYXRhO1xyXG4gICAgICAgICAgICAgICAgICAgIGlmIChpbmZpbml0ZVNjcm9sbCkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBpbmZpbml0ZVNjcm9sbC5jb21wbGV0ZSgpO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICBlcnJvciA9PiB7XHJcbiAgICAgICAgICAgICAgICAgICAgaWYgKHRpbWVyKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGNsZWFyVGltZW91dCh0aW1lcik7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuYnVzeSA9IGZhbHNlO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhlcnJvciB8fCAnU2VydmVyIGVycm9yJyk7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICApO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgZG9JbmZpbml0ZShpbmZpbml0ZVNjcm9sbCkge1xyXG4gICAgICAgICAgICBpZiAodGhpcy5kYXRlICYmIERhdGUubm93KCkgLSB0aGlzLmRhdGUgPCAxMDAwKSB7aW5maW5pdGVTY3JvbGwuY29tcGxldGUoKTsgcmV0dXJuO31cclxuICAgICAgICAgICAgaWYgKHRoaXMuaXNfZW1wdHkgfHwgdGhpcy5jb3VudCA8IDI1KSB7XHJcbiAgICAgICAgICAgICAgICBpbmZpbml0ZVNjcm9sbC5jb21wbGV0ZSgpO1xyXG4gICAgICAgICAgICAgICAgaWYgKCh0aGlzLmlzX2VtcHR5ICYmICF0aGlzLnRlcm0pIHx8IHRoaXMuY291bnQgPCAyNSlcclxuICAgICAgICAgICAgICAgIGluZmluaXRlU2Nyb2xsLmVuYWJsZShmYWxzZSk7XHJcbiAgICAgICAgICAgICAgICByZXR1cm47XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgdGhpcy5wYWdlci5wYWdlICs9IDE7XHJcbiAgICAgICAgICAgIHRoaXMudGVybSA9IFwiXCI7XHJcbiAgICAgICAgICAgIHRoaXMuZ2V0SXRlbXMoXCJcIiwgaW5maW5pdGVTY3JvbGwpO1xyXG4gICAgICAgIH1cclxuXHJcblxyXG4gICAgY2xlYXJTZWFyY2goc2VhcmNoYmFyPylcclxuICAgIHtcclxuICAgICAgICB0aGlzLnNlYXJjaF9yZXN1bHRzID0gW107XHJcbiAgICAgICAgdGhpcy5idXN5ID0gZmFsc2U7XHJcbiAgICAgICAgaWYgKHNlYXJjaGJhcikgc2VhcmNoYmFyLnZhbHVlID0gXCJcIjtcclxuICAgIH1cclxuXHJcbiAgICBnb3RvVGlja2V0KGRhdGEpXHJcbiAgICB7XHJcbiAgICAgICAgdGhpcy50ZXN0ID0gZmFsc2U7XHJcbiAgICAgICAgdGhpcy5jbGVhclNlYXJjaCgpO1xyXG4gICAgICAgIGlmIChkYXRhKVxyXG4gICAgICAgIHtcclxuICAgICAgICAgICAgdGhpcy50aWNrZXRQcm92aWRlci5nZXRUaWNrZXRzTGlzdChcIlwiLCBcIlwiLCBcIlwiLHsgXCJsaW1pdFwiOiAyNSB9KTtcclxuICAgICAgICAgICAgc2V0VGltZW91dCgoKSA9PiB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLm5hdi5wdXNoKFRpY2tldERldGFpbHNQYWdlLCBkYXRhKTtcclxuICAgICAgICAgICAgICAgIC8vaWYgKCF0aGlzLmNvdW50c1t0aGlzLnRpY2tldF90YWJdKVxyXG4gICAgICAgICAgICAgICAgLy8gICAgdGhpcy5jb3VudHMgPSB7fTtcclxuICAgICAgICAgICAgICAgIC8vdGhpcy5jb3VudHNbdGhpcy50aWNrZXRfdGFiXSA9ICh0aGlzLnRpY2tldFByb3ZpZGVyLl9kYXRhU3RvcmVbdGhpcy50aWNrZXRfdGFiXSB8fCB7fSkubGVuZ3RoKys7XHJcbiAgICAgICAgICAgIH0sIDUwMCk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgICAgICB0b2dnbGUoKXtcclxuICAgICAgICB0aGlzLnRlc3QgPSAhdGhpcy50ZXN0O1xyXG4gICAgICAgIGlmICh0aGlzLnRlc3Qpe1xyXG4gICAgICAgICAgICBzZXRUaW1lb3V0KCgpID0+IHtcclxuICAgICAgICB2YXIgdCA9IGRvY3VtZW50LmdldEVsZW1lbnRzQnlDbGFzc05hbWUoXCJzZWFyY2hiYXItaW5wdXRcIik7XHJcbiAgICAgICAgdCA9IHRbdC5sZW5ndGggLSAxXTtcclxuICAgICAgICB0ICYmIHQuZm9jdXMoKTtcclxuICAgICAgICB9LCA1MDApO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxufVxyXG4iLCJpbXBvcnQge1BhZ2UsIENvbmZpZywgTmF2LCBMb2FkaW5nLCBFdmVudHN9IGZyb20gJ2lvbmljLWFuZ3VsYXInO1xuaW1wb3J0IHtBcGlTaXRlLCBTaXRlLCBpc1NELCBhcHBWZXJzaW9uLCBBcHBUaXRsZX0gZnJvbSAnLi4vLi4vcHJvdmlkZXJzL2NvbmZpZyc7XG5pbXBvcnQge29wZW5VUkwsIG9wZW5VUkxzeXN0ZW19IGZyb20gJy4uLy4uL2RpcmVjdGl2ZXMvaGVscGVycyc7XG5pbXBvcnQge0RhdGFQcm92aWRlcn0gZnJvbSAnLi4vLi4vcHJvdmlkZXJzL2RhdGEtcHJvdmlkZXInO1xuaW1wb3J0IHtPcmdhbml6YXRpb25zUGFnZX0gZnJvbSAnLi4vb3JnYW5pemF0aW9ucy9vcmdhbml6YXRpb25zJztcbmltcG9ydCB7U2lnbnVwUGFnZX0gZnJvbSAnLi4vc2lnbnVwL3NpZ251cCc7XG5cbkBQYWdlKHtcbiAgICB0ZW1wbGF0ZVVybDogJ2J1aWxkL3BhZ2VzL2xvZ2luL2xvZ2luLmh0bWwnLFxufSlcbmV4cG9ydCBjbGFzcyBMb2dpblBhZ2Uge1xuXG4gICAgc2t5cGU6IGFueTtcbiAgICBsb2dpbjogYW55O1xuICAgIGdvb2dsZV9hY3Rpb246IHN0cmluZyA9IFwiXCI7XG4gICAgYnVzeTogYm9vbGVhbiA9IGZhbHNlO1xuICAgIGlzX3NkOiBib29sZWFuID0gdHJ1ZTtcbiAgICBmaWxlRGVzdDogYW55ID0ge3RpY2tldDogXCJ3b252aHJcIn07XG4gICAgdmVyc2lvbjogYW55ID0gXCI0LlwiICsgYXBwVmVyc2lvbjtcbiAgICBkYXRlX3VwZGF0ZWQ6IGFueSA9IFwiXCI7XG4gICAgLy9AVmlld0NoaWxkKCdnb29nbGVfb3BlbmlkJykgZ29vZ2xlX29wZW5pZDogTmdGb3JtO1xuXG4gICAgY29uc3RydWN0b3IocHJpdmF0ZSBuYXY6IE5hdiwgcHJpdmF0ZSBkYXRhUHJvdmlkZXI6IERhdGFQcm92aWRlciwgcHJpdmF0ZSBjb25maWc6IENvbmZpZywgcHJpdmF0ZSBldmVudHM6IEV2ZW50cykge1xuICAgICAgICB0aGlzLnNreXBlID0gbG9jYWxTdG9yYWdlLmdldEl0ZW0oJ3NreXBlJykgfHwgXCJcIjtcbiAgICAgICAgaWYgKGxvY2FsU3RvcmFnZS5nZXRJdGVtKFwiaXNQaG9uZWdhcFwiKSAhPT0gXCJ0cnVlXCIpXG4gICAgICAgICAgICB0aGlzLmdvb2dsZV9hY3Rpb24gPSBBcGlTaXRlICsgJ2F1dGgvYXV0aDAnO1xuICAgICAgICAvL2NsZWFyIGFsc28gY2hyb21lIGV4dCBpZiBuZWVkZWRcbiAgICAgICAgaWYgKGxvY2FsU3RvcmFnZS5nZXRJdGVtKFwiaXNFeHRlbnNpb25cIikgPT09IFwidHJ1ZVwiKVxuICAgICAgICAgICAgd2luZG93LnRvcC5wb3N0TWVzc2FnZShcImxvZ291dFwiLCBcIipcIik7XG4gICAgICAgIGV2ZW50cy5wdWJsaXNoKFwiYXBwOmxvZ291dFwiKTsgICBcbiAgICAgICAgdGhpcy5vcHRpb25zID0ge1xuICAgICAgICAgIHllYXI6ICdudW1lcmljJyxcbiAgICAgICAgICBtb250aDogJ3Nob3J0JyxcbiAgICAgICAgICAvKmRheTogJ251bWVyaWMnLFxuICAgICAgICAgIHdlZWtkYXk6ICdzaG9ydCcqL1xuICAgICAgICB9O1xuICAgICAgICB0aGlzLmRhdGVfdXBkYXRlZCA9IG5ldyBEYXRlKCkudG9Mb2NhbGVTdHJpbmcoXCJlbi1VU1wiLCB0aGlzLm9wdGlvbnMpO1xuICAgIH1cbiAgICBcbiAgICBvblBhZ2VMb2FkZWQoKVxuICAgIHsgXG4gICAgICAgIGRvY3VtZW50LnRpdGxlID0gQXBwVGl0bGUgKyBcIk1vYmlsZSBBcHBcIiA7IFxuICAgICAgICAvL2xvZ291dFxuICAgICAgICB0aGlzLmxvZ2luID0ge3VzZXJuYW1lOiBsb2NhbFN0b3JhZ2UuZ2V0SXRlbSgndXNlcm5hbWUnKSB8fCBcIlwiIH07XG4gICAgfVxuXG4gICAgb25Mb2dpbihmb3JtKSB7XG4gICAgICAgIHRoaXMuYnVzeSA9IHRydWU7XG4gICAgICAgIGlmIChmb3JtLnZhbGlkKSB7IFxuICAgICAgICAgICAgbG9jYWxTdG9yYWdlLnNldEl0ZW0oJ3VzZXJuYW1lJywgZm9ybS52YWx1ZS5lbWFpbCB8fCBcIlwiKTtcbiAgICAgICAgICAgIHRoaXMuZGF0YVByb3ZpZGVyLmNoZWNrTG9naW4oZm9ybS52YWx1ZS5lbWFpbCxmb3JtLnZhbHVlLnBhc3N3b3JkKS5zdWJzY3JpYmUoXG4gICAgICAgICAgICAgICAgZGF0YSA9PiB7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuY29uZmlnLnNldEN1cnJlbnQoeyBcImtleVwiOiBkYXRhLmFwaV90b2tlbn0pO1xuICAgICAgICAgICAgICAgICAgICB0aGlzLm5hdi5zZXRSb290KE9yZ2FuaXphdGlvbnNQYWdlLCBudWxsLCB7IGFuaW1hdGlvbjogXCJ3cC10cmFuc2l0aW9uXCIgfSk7XG4gICAgICAgICAgICAgICAgfSwgXG4gICAgICAgICAgICAgICAgZXJyb3IgPT4ge1xuICAgICAgICAgICAgICAgICAgICBsZXQgbWVzc2FnZSA9ICdUaGVyZSB3YXMgYSBwcm9ibGVtIHdpdGggeW91ciBsb2dpbi4gIENoZWNrIHlvdXIgbG9naW4gYW5kIHBhc3N3b3JkLic7XG4gICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICBpZihmb3JtLnZhbHVlLmVtYWlsICYmIH5mb3JtLnZhbHVlLmVtYWlsLmluZGV4T2YoXCJAZ21haWwuY29tXCIpKXtcbiAgICAgICAgICAgICAgICAgICAgICAgIG1lc3NhZ2UgPSBcIldyb25nIFBhc3N3b3JkLCBtYXliZSB5b3UgdXNlZCBHb29nbGUgcGFzc3dvcmRcIjtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB0aGlzLm5hdi5hbGVydChtZXNzYWdlLCB0cnVlKTtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5sb2dpbi5wYXNzd29yZCA9IFwiXCI7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuYnVzeSA9IGZhbHNlO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICApOyBcbiAgICAgICAgfVxuICAgICAgICBlbHNlXG4gICAgICAgIHtcbiAgICAgICAgICAgIHRoaXMubmF2LmFsZXJ0KCdQbGVhc2UgZW50ZXIgZW1haWwgYW5kIHBhc3N3b3JkIScsIHRydWUpO1xuICAgICAgICAgICAgdGhpcy5idXN5ID0gZmFsc2U7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBuZ0FmdGVyVmlld0luaXQoKSB7XG4gICAgICAgIC8vY29uc29sZS5sb2codGhpcy5zdGFydHRpbWUubWluKTtcbiAgICAgICAgLy90aGlzLmdvb2dsZV9vcGVuaWQuYWN0aW9uID0gdGhpcy5zdGFydHRpbWUuZGlzcGxheUZvcm1hdCA9IHRoaXMuZGlzcGxheUZvcm1hdDtcbiAgICAgICAgLy9jb25zb2xlLmxvZyh0aGlzLnN0YXJ0dGltZS5kaXNwbGF5Rm9ybWF0KTtcbiAgICB9XG5cbiAgICBjYW5jZWxfc2t5cGUoKXtcbiAgICAgICAgbG9jYWxTdG9yYWdlLnNldEl0ZW0oJ3NreXBlJywgXCJcIik7XG4gICAgICAgIHRoaXMuc2t5cGUgPSBcIlwiO1xuICAgIH1cblxuICAgIHN1cHBvcnQoKVxuICAgIHtcbiAgICAgICAgb3BlblVSTHN5c3RlbShgaHR0cHM6Ly9zdXBwb3J0LiR7U2l0ZX1wb3J0YWwvYCk7XG4gICAgfVxuXG4gICAgb25Hb29nbGVTaWduaW4oKSB7XG4gICAgICAgIGlmIChcInRydWVcIiA9PT0gbG9jYWxTdG9yYWdlLmdldEl0ZW0oXCJpc0V4dGVuc2lvblwiKSlcbiAgICAgICAge1xuICAgICAgICAgICAgdGhpcy5uYXYuYWxlcnQoXCJQbGVhc2UgZmluaXNoIGxvZ2luIHdpdGggR29vZ2xlIGluIG5ldyB3aW5kb3cgKEdvb2dsZSByZXF1aXJlbWVudClcXG4gYW5kIHN0YXJ0IEV4dGVuc2lvbiBhZ2Fpbi5cIik7XG4gICAgICAgICAgICBzZXRUaW1lb3V0KCgpID0+IFxuICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgd2luZG93Lnd3PSB3aW5kb3cub3BlbihBcGlTaXRlICsgXCJhdXRoL2F1dGgwXCIsIFwiX2JsYW5rXCIsIFwiXCIpO1xuICAgICAgICAgICAgICAgICAgICB3aW5kb3cuYXV0aF9nb29nbGUgPSAhIXdpbmRvdy53dztcbiAgICAgICAgICAgICAgICAgICAgaWYgKCF3aW5kb3cuYXV0aF9nb29nbGUpXG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLm5hdi5hbGVydChcIlBvcC11cCB3YXMgYmxvY2tlZCwgcGxlYXNlIGNsaWNrIGFnYWluIHRvIGxvZ2luLlwiKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgICwgd2luZG93LmF1dGhfZ29vZ2xlID8gMCA6IDMwMDApO1xuICAgICAgICB9XG4gICAgICAgIGVsc2UgaWYgKFwidHJ1ZVwiID09PSBsb2NhbFN0b3JhZ2UuZ2V0SXRlbShcImlzUGhvbmVnYXBcIikpIHtcbiAgICAgICAgICAgIHZhciB1cmwgPSBBcGlTaXRlICsgXCJhdXRoL2F1dGgwP2lvc19hY3Rpb249XCIgKyAobG9jYWxTdG9yYWdlLmlzSW9zIHx8IGxvY2FsU3RvcmFnZS5pc0lvc1N0YXR1cyB8fCBcIlwiKTtcbiAgICAgICAgICAgIHdpbmRvdy53aW4gPSBudWxsO1xuICAgICAgICAgICAgd2luZG93Lm5hbWVJbnRlcnZhbCA9IG51bGw7XG4gICAgICAgICAgICB3aW5kb3cub25FeGl0ID0gZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICAgICAgY2xlYXJJbnRlcnZhbCh3aW5kb3cubmFtZUludGVydmFsKSwgd2luZG93Lndpbi5jbG9zZSgpO1xuICAgICAgICAgICAgICAgIGxvY2F0aW9uLnJlbG9hZCh0cnVlKTtcbiAgICAgICAgICAgICAgICAvL3ZhciBlbCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJzY3JpcHRcIik7XG4gICAgICAgICAgICAgICAgLy9lbC5zcmMgPSBcImJ1aWxkL2pzL2FwcC5idW5kbGUuanNcIjtcbiAgICAgICAgICAgICAgICAvL2RvY3VtZW50LmJvZHkuYXBwZW5kQ2hpbGQoZWwpO1xuICAgICAgICAgICAgfTtcblxuICAgICAgICAgICAgd2luZG93LndpbiA9IHdpbmRvdy5vcGVuKHVybCwgXCJfYmxhbmtcIiwgXCJsb2NhdGlvbj1ub1wiKTtcbiAgICAgICAgICAgIHdpbmRvdy53aW4uYWRkRXZlbnRMaXN0ZW5lcihcImxvYWRzdG9wXCIsIGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgICAgIHdpbmRvdy5uYW1lSW50ZXJ2YWwgPSBzZXRJbnRlcnZhbChmdW5jdGlvbigpIHtcbiAgICAgICAgICAgICAgICAgICAgd2luZG93Lndpbi5leGVjdXRlU2NyaXB0KHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvZGU6IFwibG9jYWxTdG9yYWdlLmdldEl0ZW0oJ2N1cnJlbnQnKVwiXG4gICAgICAgICAgICAgICAgICAgIH0sIGZ1bmN0aW9uKGRhdGEpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhciBlID0gZGF0YVswXTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChlKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbG9jYWxTdG9yYWdlLmN1cnJlbnQgPSBlO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhciBpID0gSlNPTi5wYXJzZShlIHx8IFwibnVsbFwiKSB8fCB7fTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoaS5vcmcgJiYgaS5pbnN0YW5jZSAmJiBpLmtleSlcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgd2luZG93Lm9uRXhpdCgpO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgICAgIH0sIDEwMDApXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIHdpbmRvdy53aW4uYWRkRXZlbnRMaXN0ZW5lcihcImV4aXRcIiwgZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICAgICAgd2luZG93Lm9uRXhpdCgpXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlXG4gICAgICAgICAgICB3aW5kb3cubG9jYXRpb24uaHJlZiA9IEFwaVNpdGUgKyBcImF1dGgvYXV0aDBcIjtcbiAgICB9ICBcbiAgICBcbiAgICBvblNpZ251cCgpIHtcbiAgICAgICAgdGhpcy5uYXYucHVzaChTaWdudXBQYWdlLCBudWxsLCB7IGFuaW1hdGlvbjogXCJ3cC10cmFuc2l0aW9uXCIgfSk7XG4gICAgfVxufVxuIiwiaW1wb3J0IHtQYWdlLCBDb25maWcsIE5hdiwgTmF2UGFyYW1zLCBWaWV3Q29udHJvbGxlcn0gZnJvbSAnaW9uaWMtYW5ndWxhcic7XG5pbXBvcnQge0ZPUk1fRElSRUNUSVZFUywgVmFsaWRhdG9yc30gZnJvbSAnQGFuZ3VsYXIvY29tbW9uJztcbmltcG9ydCB7RGF0YVByb3ZpZGVyfSBmcm9tICcuLi8uLi8uLi9wcm92aWRlcnMvZGF0YS1wcm92aWRlcic7XG4vL2ltcG9ydCB7aHRtbEVzY2FwZSwgZ2V0RnVsbE5hbWV9IGZyb20gJy4uLy4uLy4uL2RpcmVjdGl2ZXMvaGVscGVycyc7XG5cblxuXG5cblxuXG5cblxuXG5AUGFnZSh7XG4gIHRlbXBsYXRlVXJsOiAnYnVpbGQvcGFnZXMvbW9kYWxzL2FkZC1maWxlcy9hZGQtZmlsZXMuaHRtbCcsXG59KVxuZXhwb3J0IGNsYXNzIEFkZEZpbGVzTW9kYWwge1xuXG4gICAgaXNwYXNzd29yZDogYm9vbGVhbjtcbiAgICBkYXRhOiBhbnk7XG4gICAgZmlyc3RuYW1lX206IHN0cmluZyA9IFwiXCI7XG5cblx0Y29uc3RydWN0b3IocHJpdmF0ZSBuYXY6IE5hdiwgcHJpdmF0ZSBuYXZQYXJhbXM6IE5hdlBhcmFtcywgcHJpdmF0ZSBkYXRhUHJvdmlkZXI6IERhdGFQcm92aWRlciwgcHJpdmF0ZSBjb25maWc6IENvbmZpZyxcblx0XHRwcml2YXRlIHZpZXdDdHJsOiBWaWV3Q29udHJvbGxlcikge1xuICAgICAgICBuYXYuc3dpcGVCYWNrRW5hYmxlZCA9IGZhbHNlO1xuICAgIH1cblxuICAgIG5nT25Jbml0KCkge1xuXHRcdHRoaXMuaXNwYXNzd29yZCA9IHRydWU7XG4gICAgICAgIHRoaXMuZGF0YSA9ICh0aGlzLm5hdlBhcmFtcy5kYXRhIHx8IHt9KS50eXBlIHx8IHt9O1xuICAgICAgICB0aGlzLmZpcnN0bmFtZV9tID0gKHRoaXMubmF2UGFyYW1zLmRhdGEgfHwge30pLm5hbWUgfHwgXCIgXCI7XG4gICAgICAgIC8vdGhpcy5kYXRhLnR5cGUgPSB0aGlzLmRhdGE7XG5cdH1cblxuICAgIG5nQWZ0ZXJWaWV3SW5pdCgpIHsgICBcbiAgICAgICAgc2V0VGltZW91dChmdW5jdGlvbigpe3ZhciBzID0gZG9jdW1lbnQuZ2V0RWxlbWVudHNCeVRhZ05hbWUoXCJpb24tcGFnZVwiKVswXTtzLnN0eWxlLmRpc3BsYXk9J25vbmUnO3Mub2Zmc2V0SGVpZ2h0O3Muc3R5bGUuZGlzcGxheT0nJ30sIDIwMCk7ICAgICAgICAgXG4gICAgICAgIHRoaXMuZmlyc3RuYW1lX20gPSB0aGlzLmZpcnN0bmFtZV9tLnRyaW0oKTtcbiAgICB9XG5cbiAgICBkaXNtaXNzUGFnZShkYXRhKSB7XG4gICAgICAgIHRoaXMudmlld0N0cmwuZGlzbWlzcyhkYXRhKTtcbiAgICB9XG5cbiAgICBvblN1Ym1pdChmb3JtKSB7XG4gICAgICAgIGlmIChmb3JtLnZhbGlkKSB7XG4gICAgICAgICAgICB0aGlzLmRhdGFQcm92aWRlci5hZGRVc2VyKGZvcm0udmFsdWUuZW1haWwsIGZvcm0udmFsdWUuZmlyc3RuYW1lLCBmb3JtLnZhbHVlLmxhc3RuYW1lLCB0aGlzLmRhdGEudHlwZSkuc3Vic2NyaWJlKFxuICAgICAgICAgICAgICAgIGRhdGEgPT4ge1xuICAgICAgICAgICAgICAgICAgICB0aGlzLm5hdi5hbGVydCh0aGlzLmRhdGEuY2hhckF0KDApLnRvVXBwZXJDYXNlKCkgKyB0aGlzLmRhdGEuc2xpY2UoMSkgKyAnIHdhcyBjcmVhdGVkIDopJyk7XG4gICAgICAgICAgICAgICAgICAgIHNldFRpbWVvdXQoKCkgPT4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5kaXNtaXNzUGFnZShkYXRhKTtcbiAgICAgICAgICAgICAgICAgICAgfSwgMTAwMCk7XG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICBlcnJvciA9PiB7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMubmF2LmFsZXJ0KGZvcm0udmFsdWUuZW1haWwgKyAnIGFscmVhZHkgZXhpc3RzISBQbGVhc2UgdHJ5IGFnYWluJywgdHJ1ZSk7XG4gICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKGVycm9yIHx8ICdTZXJ2ZXIgZXJyb3InKTtcbiAgICAgICAgICAgICAgICB9KTtcbiAgICB9XG59XG59XG4iLCJpbXBvcnQge1BhZ2UsIENvbmZpZywgTmF2LCBOYXZQYXJhbXMsIFZpZXdDb250cm9sbGVyfSBmcm9tICdpb25pYy1hbmd1bGFyJztcbmltcG9ydCB7Rk9STV9ESVJFQ1RJVkVTLCBWYWxpZGF0b3JzfSBmcm9tICdAYW5ndWxhci9jb21tb24nO1xuaW1wb3J0IHtEYXRhUHJvdmlkZXJ9IGZyb20gJy4uLy4uLy4uL3Byb3ZpZGVycy9kYXRhLXByb3ZpZGVyJztcbi8vaW1wb3J0IHtodG1sRXNjYXBlLCBnZXRGdWxsTmFtZX0gZnJvbSAnLi4vLi4vLi4vZGlyZWN0aXZlcy9oZWxwZXJzJztcblxuQFBhZ2Uoe1xuICB0ZW1wbGF0ZVVybDogJ2J1aWxkL3BhZ2VzL21vZGFscy9hZGQtdXNlci9hZGQtdXNlci5odG1sJyxcbn0pXG5leHBvcnQgY2xhc3MgQWRkVXNlck1vZGFsIHtcblxuICAgIGlzcGFzc3dvcmQ6IGJvb2xlYW47XG4gICAgZGF0YTogYW55O1xuICAgIGZpcnN0bmFtZV9tOiBzdHJpbmcgPSBcIlwiO1xuXG5cdGNvbnN0cnVjdG9yKHByaXZhdGUgbmF2OiBOYXYsIHByaXZhdGUgbmF2UGFyYW1zOiBOYXZQYXJhbXMsIHByaXZhdGUgZGF0YVByb3ZpZGVyOiBEYXRhUHJvdmlkZXIsIHByaXZhdGUgY29uZmlnOiBDb25maWcsXG5cdFx0cHJpdmF0ZSB2aWV3Q3RybDogVmlld0NvbnRyb2xsZXIpIHtcbiAgICAgICAgbmF2LnN3aXBlQmFja0VuYWJsZWQgPSBmYWxzZTtcbiAgICB9XG5cbiAgICBuZ09uSW5pdCgpIHtcblx0XHR0aGlzLmlzcGFzc3dvcmQgPSB0cnVlO1xuICAgICAgICB0aGlzLmRhdGEgPSAodGhpcy5uYXZQYXJhbXMuZGF0YSB8fCB7fSkudHlwZSB8fCB7fTtcbiAgICAgICAgdGhpcy5maXJzdG5hbWVfbSA9ICh0aGlzLm5hdlBhcmFtcy5kYXRhIHx8IHt9KS5uYW1lIHx8IFwiIFwiO1xuICAgICAgICAvL3RoaXMuZGF0YS50eXBlID0gdGhpcy5kYXRhO1xuXHR9XG5cbiAgICBuZ0FmdGVyVmlld0luaXQoKSB7ICAgXG4gICAgICAgIHNldFRpbWVvdXQoZnVuY3Rpb24oKXt2YXIgcyA9IGRvY3VtZW50LmdldEVsZW1lbnRzQnlUYWdOYW1lKFwiaW9uLXBhZ2VcIilbMF07cy5zdHlsZS5kaXNwbGF5PSdub25lJztzLm9mZnNldEhlaWdodDtzLnN0eWxlLmRpc3BsYXk9Jyd9LCAyMDApOyAgICAgICAgIFxuICAgICAgICB0aGlzLmZpcnN0bmFtZV9tID0gdGhpcy5maXJzdG5hbWVfbS50cmltKCk7XG4gICAgfVxuXG4gICAgZGlzbWlzc1BhZ2UoZGF0YSkge1xuICAgICAgICB0aGlzLnZpZXdDdHJsLmRpc21pc3MoZGF0YSk7XG4gICAgfVxuXG4gICAgb25TdWJtaXQoZm9ybSkge1xuICAgICAgICBpZiAoZm9ybS52YWxpZCkge1xuICAgICAgICAgICAgdGhpcy5kYXRhUHJvdmlkZXIuYWRkVXNlcihmb3JtLnZhbHVlLmVtYWlsLCBmb3JtLnZhbHVlLmZpcnN0bmFtZSwgZm9ybS52YWx1ZS5sYXN0bmFtZSwgdGhpcy5kYXRhLnR5cGUpLnN1YnNjcmliZShcbiAgICAgICAgICAgICAgICBkYXRhID0+IHtcbiAgICAgICAgICAgICAgICAgICAvLyB0aGlzLm5hdi5hbGVydCh0aGlzLmRhdGEuY2hhckF0KDApLnRvVXBwZXJDYXNlKCkgKyB0aGlzLmRhdGEuc2xpY2UoMSkgKyAnIHdhcyBjcmVhdGVkIDopJyk7XG4gICAgICAgICAgICAgICAgICAgIHNldFRpbWVvdXQoKCkgPT4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5kaXNtaXNzUGFnZShkYXRhKTtcbiAgICAgICAgICAgICAgICAgICAgfSwgMTAwMCk7XG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICBlcnJvciA9PiB7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMubmF2LmFsZXJ0KGZvcm0udmFsdWUuZW1haWwgKyAnIGFscmVhZHkgZXhpc3RzISBQbGVhc2UgdHJ5IGFnYWluJywgdHJ1ZSk7XG4gICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKGVycm9yIHx8ICdTZXJ2ZXIgZXJyb3InKTtcbiAgICAgICAgICAgICAgICB9KTtcbiAgICB9XG59XG59XG4iLCJpbXBvcnQge05hdiwgTmF2UGFyYW1zLCBQYWdlLCBDb25maWcsIFZpZXdDb250cm9sbGVyLCBNb2RhbH0gZnJvbSAnaW9uaWMtYW5ndWxhcic7XG5pbXBvcnQge0FwaURhdGF9IGZyb20gJy4uLy4uLy4uL3Byb3ZpZGVycy9hcGktZGF0YSc7XG5pbXBvcnQge2lzU0R9IGZyb20gJy4uLy4uLy4uL3Byb3ZpZGVycy9jb25maWcnO1xuaW1wb3J0IHtBZGRVc2VyTW9kYWx9IGZyb20gJy4uL21vZGFscyc7XG5pbXBvcnQge2dldEZ1bGxOYW1lLCBhZGRwfSBmcm9tICcuLi8uLi8uLi9kaXJlY3RpdmVzL2hlbHBlcnMnO1xuXG5AUGFnZSh7XG4gICAgdGVtcGxhdGVVcmw6ICdidWlsZC9wYWdlcy9tb2RhbHMvYWpheC1zZWxlY3QvYWpheC1zZWxlY3QuaHRtbCcsXG59KVxuZXhwb3J0IGNsYXNzIEFqYXhTZWxlY3RNb2RhbCB7XG5cbiAgICBpdGVtczogYW55O1xuICAgIHVybDogc3RyaW5nO1xuICAgIHRlcm06IHN0cmluZztcbiAgICAvL3NlYXJjaDogc3RyaW5nO1xuICAgIG5hbWU6IHN0cmluZztcbiAgICBkYXRhOiBhbnk7XG4gICAgcGFnZXI6IGFueTtcbiAgICBjb3VudDogbnVtYmVyO1xuICAgIGlzX2VtcHR5OiBib29sZWFuO1xuICAgIGJ1c3k6IGJvb2xlYW47XG4gICAgaXNkZWZhdWx0X2VuYWJsZWQ6IGJvb2xlYW4gPSBmYWxzZTtcbiAgICBpc25ld19lbmFibGVkOiBib29sZWFuID0gZmFsc2U7XG5cbiAgICBjb25zdHJ1Y3Rvcihwcml2YXRlIG5hdjogTmF2LCBwcml2YXRlIG5hdlBhcmFtczogTmF2UGFyYW1zLCBwcml2YXRlIGNvbmZpZzogQ29uZmlnLCBwcml2YXRlIGFwaURhdGE6IEFwaURhdGEsXG4gICAgICAgIHByaXZhdGUgdmlld0N0cmw6IFZpZXdDb250cm9sbGVyKSB7XG4gICAgICAgIG5hdi5zd2lwZUJhY2tFbmFibGVkID0gZmFsc2U7XG4gICAgfVxuXG4gICAgbmdPbkluaXQoKSB7XG4gICAgICAgIHRoaXMudGVybSA9ICcnO1xuICAgICAgICB0aGlzLm5hbWUgPSB0aGlzLm5hdlBhcmFtcy5kYXRhLm5hbWUgfHwgXCJMaXN0XCI7XG4gICAgICAgIHRoaXMuaXNkZWZhdWx0X2VuYWJsZWQgPSAhfltcInVzZXJcIiwgXCJhY2NvdW50XCIsIFwidGVjaFwiLCBcInRhc2sgdHlwZVwiXS5pbmRleE9mKHRoaXMubmFtZS50b0xvd2VyQ2FzZSgpKTtcbiAgICAgICAgdGhpcy5pc25ld19lbmFibGVkID0gdGhpcy5jb25maWcuY3VycmVudC5pc19hZGRfbmV3X3VzZXJfbGluayAmJiAhIX5bXCJ1c2VyXCIsIFwidGVjaFwiXS5pbmRleE9mKHRoaXMubmFtZS50b0xvd2VyQ2FzZSgpKTtcbiAgICAgICAgdGhpcy51cmwgPSB0aGlzLm5hdlBhcmFtcy5kYXRhLnVybCB8fCBcIlwiO1xuICAgICAgICB0aGlzLmRhdGEgPSB0aGlzLm5hdlBhcmFtcy5kYXRhLml0ZW1zIHx8IHt9O1xuICAgICAgICB0aGlzLnBhZ2VyID0geyBsaW1pdDogMjAgfTtcbiAgICAgICAgdGhpcy5pdGVtcyA9IHRoaXMuZGF0YTtcbiAgICAgICAgdGhpcy5jb3VudCA9IHRoaXMuaXRlbXMubGVuZ3RoO1xuICAgICAgICB0aGlzLmlzX2VtcHR5ID0gZmFsc2U7XG4gICAgICAgIGlmICh0aGlzLml0ZW1zLmxlbmd0aCA9PT0gMCkge1xuICAgICAgICAgICAgdmFyIHRpbWVyID0gc2V0VGltZW91dCgoKSA9PiB7XG4gICAgICAgICAgICAgICAgdGhpcy5idXN5ID0gdHJ1ZTtcbiAgICAgICAgICAgIH0sIDUwMCk7XG5cbiAgICAgICAgICAgIHRoaXMuZ2V0SXRlbXMobnVsbCwgdGltZXIpO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgb25QYWdlRGlkRW50ZXIoKSB7XG4gICAgICAgIHZhciB0ID0gZG9jdW1lbnQuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZShcInNlYXJjaGJhci1pbnB1dFwiKTtcbiAgICAgICAgdCA9IHRbdC5sZW5ndGggLSAxXTtcbiAgICAgICAgdCAmJiB0LmZvY3VzKCk7XG4gICAgfVxuXG4gICAgZGlzbWlzcyhpdGVtKSB7XG4gICAgICAgIGl0ZW0gPSBpdGVtIHx8IHt9O1xuICAgICAgICB0aGlzLnZpZXdDdHJsLmRpc21pc3MoaXRlbSk7XG4gICAgfVxuXG4gICAgaW52aXRlKClcbiAgICB7XG4gICAgICAgIGxldCBteU1vZGFsID0gTW9kYWwuY3JlYXRlKEFkZFVzZXJNb2RhbCwge3R5cGU6IHRoaXMubmFtZS50b0xvd2VyQ2FzZSgpLCBuYW1lOiB0aGlzLnRlcm19KTtcbiAgICAgICAgbXlNb2RhbC5vbkRpc21pc3MoZGF0YSA9PiB7XG4gICAgICAgICAgICBpZiAoZGF0YSl7XG4gICAgICAgICAgICAgICAgLy9jb25zb2xlLmxvZyhkYXRhKTtcbiAgICAgICAgICAgICAgICBkYXRhLm5hbWUgPSBnZXRGdWxsTmFtZShkYXRhLmZpcnN0bmFtZSwgZGF0YS5sYXN0bmFtZSwgZGF0YS5lbWFpbCk7XG4gICAgICAgICAgICAgICAgdGhpcy5kaXNtaXNzKGRhdGEpO1xuICAgICAgICAgICAgLy90aGlzLnNlbGVjdHNbdHlwZV0uc2VsZWN0ZWQgPSBkYXRhLmlkO1xuICAgICAgICAgICAgLy90aGlzLnNlbGVjdHNbdHlwZV0udmFsdWUgPSBnZXRGdWxsTmFtZShkYXRhLmZpcnN0bmFtZSwgZGF0YS5sYXN0bmFtZSwgZGF0YS5lbWFpbCk7XG4gICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgICAgIHRoaXMubmF2LnByZXNlbnQobXlNb2RhbCk7XG4gICAgICAgIC8vc2V0VGltZW91dCgoKSA9PiB7IHRoaXMubmF2LnByZXNlbnQobXlNb2RhbCk7IH0sIDUwMCk7XG4gICAgfVxuXG4vKlxuICAgIG5ld3NlYXJjaChzZWFyY2hiYXIpIHtcbiAgICAgICAgLy8gUmVzZXQgaXRlbXMgYmFjayB0byBhbGwgb2YgdGhlIGl0ZW1zXG4gICAgICAgIC8vdGhpcy5pdGVtcyA9IHRoaXMuZGF0YTtcblxuICAgICAgICAvLyBzZXQgcSB0byB0aGUgdmFsdWUgb2YgdGhlIHNlYXJjaGJhclxuICAgICAgICB2YXIgcSA9IHNlYXJjaGJhci52YWx1ZTtcblxuICAgICAgICAvLyBpZiB0aGUgdmFsdWUgaXMgYW4gZW1wdHkgc3RyaW5nIGRvbid0IGZpbHRlciB0aGUgaXRlbXNcbiAgICAgICAgaWYgKHEudHJpbSgpID09ICcnKSB7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5pdGVtcyA9ICBxLmxlbmd0aCA+IDMgPyB0aGlzLnNlYXJjaChxKSA6IE9ic2VydmFibGUub2YodGhpcy5kYXRhLmZpbHRlcigodikgPT4gdi5uYW1lLnRvTG93ZXJDYXNlKCkuaW5kZXhPZihxLnRvTG93ZXJDYXNlKCkpID4gLTEpKTtcbiAgICB9XG4qL1xuICAgIHNlYXJjaEl0ZW1zKHNlYXJjaGJhcikge1xuICAgICAgICAvLyBSZXNldCBpdGVtcyBiYWNrIHRvIGFsbCBvZiB0aGUgaXRlbXNcbiAgICAgICAgdGhpcy5pdGVtcyA9IHRoaXMuZGF0YTtcblxuICAgICAgICAvLyBzZXQgcSB0byB0aGUgdmFsdWUgb2YgdGhlIHNlYXJjaGJhclxuICAgICAgICB2YXIgcSA9IHNlYXJjaGJhci52YWx1ZS50cmltKCk7XG5cbiAgICAgICAgLy8gaWYgdGhlIHZhbHVlIGlzIGFuIGVtcHR5IHN0cmluZyBkb24ndCBmaWx0ZXIgdGhlIGl0ZW1zXG4gICAgICAgIGlmIChxLnRyaW0oKSA9PSAnJyB8fCB0aGlzLmJ1c3kpIHtcbiAgICAgICAgICAgIGlmIChxLnRyaW0oKSA9PSAnJykgdGhpcy5pc19lbXB0eSA9ICF0aGlzLml0ZW1zLmxlbmd0aDtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuXG4gICAgICAgIGlmIChxLmxlbmd0aCA8IDMpXG4gICAgICAgIHtcbiAgICAgICAgICAgIHRoaXMuaXRlbXMgPSB0aGlzLml0ZW1zLmZpbHRlcigodikgPT4gdi5uYW1lLnRvTG93ZXJDYXNlKCkuaW5kZXhPZihxLnRvTG93ZXJDYXNlKCkpID4gLTEpO1xuICAgICAgICAgICAgICAgICAgICB0aGlzLmlzX2VtcHR5ID0gIXRoaXMuaXRlbXMubGVuZ3RoO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgdmFyIHRpbWVyID0gc2V0VGltZW91dCgoKSA9PiB7IHRoaXMuYnVzeSA9IHRydWU7IH0sIDUwMCk7XG4gICAgICAgICAgICB0aGlzLmdldEl0ZW1zKHEsIHRpbWVyKTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIGdldEl0ZW1zKHRlcm0sIHRpbWVyKSB7XG4gICAgICAgIHRoaXMuaXRlbXMgPSBbXTtcbiAgICAgICAgLy9jb25zb2xlLmxvZyh0aGlzLm5hbWUpO1xuICAgICAgICBpZiAofltcImxvY2F0aW9uXCIsIFwiYWNjb3VudFwiXS5pbmRleE9mKHRoaXMubmFtZS50b0xvd2VyQ2FzZSgpKSlcbiAgICAgICAge1xuICAgICAgICAgICAgdGVybSA9IHRlcm0rXCIqXCI7XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5hcGlEYXRhLmdldFBhZ2VkKGFkZHAodGhpcy51cmwsIFwic2VhcmNoXCIsIHRlcm0pLCB0aGlzLnBhZ2VyKS5zdWJzY3JpYmUoXG4gICAgICAgICAgICBkYXRhID0+IHtcbiAgICAgICAgICAgICAgICBpZiAoZGF0YS5sZW5ndGggJiYgIWRhdGFbMF0ubmFtZSkge1xuICAgICAgICAgICAgICAgICAgICB2YXIgcmVzdWx0cyA9IFtdO1xuICAgICAgICAgICAgICAgICAgICBkYXRhLmZvckVhY2goaXRlbSA9PiB7XG4gICAgICAgICAgICAgICAgICAgICAgICBsZXQgbmFtZTtcbiAgICAgICAgICAgICAgICAgICAgICAgIC8vaWYgdXNlcnMgb3IgdGVjaHNcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChpdGVtLmVtYWlsKVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5hbWUgPSBnZXRGdWxsTmFtZShpdGVtLmZpcnN0bmFtZSwgaXRlbS5sYXN0bmFtZSwgaXRlbS5lbWFpbCwgXCIgXCIpO1xuICAgICAgICAgICAgICAgICAgICAgICAgcmVzdWx0cy5wdXNoKHsgaWQ6IGl0ZW0uaWQsIG5hbWU6IG5hbWUsIGVtYWlsOiBpdGVtLmVtYWlsIH0pO1xuICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAgICAgZGF0YSA9IHJlc3VsdHM7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGlmICh0aW1lcikge1xuICAgICAgICAgICAgICAgICAgICBjbGVhclRpbWVvdXQodGltZXIpO1xuICAgICAgICAgICAgICAgICAgICB0aGlzLmJ1c3kgPSBmYWxzZTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgdGhpcy5pc19lbXB0eSA9ICFkYXRhLmxlbmd0aDtcblxuICAgICAgICAgICAgICAgIGlmICghdGVybSlcbiAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuaXRlbXMgPSB0aGlzLmRhdGEgPSBkYXRhO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBlbHNlXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuaXRlbXMgPSBkYXRhO1xuXG4gICAgICAgICAgICAgICAgdGhpcy5jb3VudCA9IGRhdGEubGVuZ3RoO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGVycm9yID0+IHtcbiAgICAgICAgICAgICAgICBpZiAodGltZXIpIHtcbiAgICAgICAgICAgICAgICAgICAgY2xlYXJUaW1lb3V0KHRpbWVyKTtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5idXN5ID0gZmFsc2U7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKGVycm9yIHx8ICdTZXJ2ZXIgZXJyb3InKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgICk7XG4gICAgfVxufSIsImltcG9ydCB7TmF2LCBOYXZQYXJhbXMsIFBhZ2UsIEV2ZW50cywgVmlld0NvbnRyb2xsZXIsIE1vZGFsLCBDb25maWd9IGZyb20gJ2lvbmljLWFuZ3VsYXInO1xuaW1wb3J0IHtBZGRVc2VyTW9kYWx9IGZyb20gJy4uL21vZGFscyc7XG5pbXBvcnQge2dldEZ1bGxOYW1lfSBmcm9tICcuLi8uLi8uLi9kaXJlY3RpdmVzL2hlbHBlcnMnO1xuLy9pbXBvcnQge0lucHV0fSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuQFBhZ2Uoe1xuICAgIHRlbXBsYXRlVXJsOiAnYnVpbGQvcGFnZXMvbW9kYWxzL2Jhc2ljLXNlbGVjdC9iYXNpYy1zZWxlY3QuaHRtbCcsXG59KVxuZXhwb3J0IGNsYXNzIEJhc2ljU2VsZWN0TW9kYWwge1xuXG4gICAgaXRlbXM6IEFycmF5PGFueT47XG4gICAgbmFtZTogc3RyaW5nO1xuICAgIGRpc3BsYXluYW1lOiBzdHJpbmc7XG4gICAgc2VhcmNoUXVlcnk6IHN0cmluZyA9ICcnO1xuICAgIGRlZmF1bHRfdGV4dDogc3RyaW5nID0gXCJcIjtcbiAgICBkYXRhOiBhbnk7XG4gICAgaXNfZW1wdHk6IGJvb2xlYW4gPSBmYWxzZTtcbiAgICBpc2RlZmF1bHRfZW5hYmxlZDogYm9vbGVhbiA9IGZhbHNlO1xuICAgIGlzbmV3X2VuYWJsZWQ6IGJvb2xlYW4gPSBmYWxzZTtcblxuICAgIGNvbnN0cnVjdG9yKFxuICAgICAgICBwcml2YXRlIG5hdjogTmF2LFxuICAgICAgICBwcml2YXRlIHBhcmFtczogTmF2UGFyYW1zLFxuICAgICAgICBwcml2YXRlIHZpZXdDdHJsOiBWaWV3Q29udHJvbGxlcixcbiAgICAgICAgcHJpdmF0ZSBjb25maWc6IENvbmZpZ1xuICAgICkge1xuICAgICAgICB0aGlzLm5hbWUgPSB0aGlzLnBhcmFtcy5kYXRhLm5hbWU7XG4gICAgICAgIHRoaXMuZGlzcGxheW5hbWUgPSB0aGlzLnBhcmFtcy5kYXRhLmRpc3BsYXluYW1lIHx8IHRoaXMubmFtZTtcbiAgICAgICAgdGhpcy5pc2RlZmF1bHRfZW5hYmxlZCA9ICF+W1widXNlclwiLCBcImFjY291bnRcIiwgXCJ0ZWNoXCIsIFwidGFzayB0eXBlXCIsIFwiY29tcGxldGVkXCIsIFwic3VibWlzc2lvbiBjYXRlZ29yeVwiXS5pbmRleE9mKHRoaXMubmFtZS50b0xvd2VyQ2FzZSgpKSBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHx8ICAhIXRoaXMucGFyYW1zLmRhdGEuZGVmYXVsdDtcbiAgICAgICAgdGhpcy5kZWZhdWx0X3RleHQgPSB0aGlzLnBhcmFtcy5kYXRhLmRlZmF1bHQgfHwgXCJEZWZhdWx0XCI7XG4gICAgICAgIHRoaXMuaXNuZXdfZW5hYmxlZCA9IHRoaXMuY29uZmlnLmN1cnJlbnQuaXNfYWRkX25ld191c2VyX2xpbmsgJiYgISF+W1widXNlclwiLCBcInRlY2hcIl0uaW5kZXhPZih0aGlzLm5hbWUudG9Mb3dlckNhc2UoKSlcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJiYgIXRoaXMucGFyYW1zLmRhdGEuaXNuZXdfZGlzYWJsZWQ7XG4gICAgICAgIHRoaXMuZGF0YSA9IHRoaXMucGFyYW1zLmRhdGEuaXRlbXM7XG5cbiAgICAgICAgdGhpcy5pdGVtcyA9IHRoaXMuZGF0YTtcbiAgICB9XG5cbiAgICBvblBhZ2VEaWRFbnRlcigpIHtcbiAgICAgICAgdmFyIHQgPSBkb2N1bWVudC5nZXRFbGVtZW50c0J5Q2xhc3NOYW1lKFwic2VhcmNoYmFyLWlucHV0XCIpO1xuICAgICAgICB0ID0gdFt0Lmxlbmd0aCAtIDFdO1xuICAgICAgICB0ICYmIHQuZm9jdXMoKTtcbiAgICB9XG5cbiAgICBkaXNtaXNzKGl0ZW0pIHtcbiAgICAgICAgLy9sZXQgZGF0YSA9IHsgJ2Zvbyc6ICdiYXInIH07XG4gICAgICAgIGl0ZW0gPSBpdGVtIHx8IHt9O1xuICAgICAgICB0aGlzLnZpZXdDdHJsLmRpc21pc3MoaXRlbSk7XG4gICAgfVxuXG4gICAgaW52aXRlKClcbiAgICB7XG4gICAgICAgIGxldCBteU1vZGFsID0gTW9kYWwuY3JlYXRlKEFkZFVzZXJNb2RhbCwge3R5cGU6IHRoaXMubmFtZS50b0xvd2VyQ2FzZSgpLCBuYW1lOiB0aGlzLnNlYXJjaFF1ZXJ5fSk7XG4gICAgICAgIG15TW9kYWwub25EaXNtaXNzKGRhdGEgPT4ge1xuICAgICAgICAgICAgaWYgKGRhdGEpe1xuICAgICAgICAgICAgICAgIC8vY29uc29sZS5sb2coZGF0YSk7XG4gICAgICAgICAgICAgICAgZGF0YS5uYW1lID0gZ2V0RnVsbE5hbWUoZGF0YS5maXJzdG5hbWUsIGRhdGEubGFzdG5hbWUsIGRhdGEuZW1haWwpO1xuICAgICAgICAgICAgICAgIHRoaXMuZGlzbWlzcyhkYXRhKTtcbiAgICAgICAgICAgIC8vdGhpcy5zZWxlY3RzW3R5cGVdLnNlbGVjdGVkID0gZGF0YS5pZDtcbiAgICAgICAgICAgIC8vdGhpcy5zZWxlY3RzW3R5cGVdLnZhbHVlID0gZ2V0RnVsbE5hbWUoZGF0YS5maXJzdG5hbWUsIGRhdGEubGFzdG5hbWUsIGRhdGEuZW1haWwpO1xuICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgICAgICB0aGlzLm5hdi5wcmVzZW50KG15TW9kYWwpO1xuICAgICAgICAvL3NldFRpbWVvdXQoKCkgPT4geyB0aGlzLm5hdi5wcmVzZW50KG15TW9kYWwpOyB9LCA1MDApO1xuICAgIH1cbiAgICBcbiAgICBnZXRJdGVtcyhzZWFyY2hiYXIpIHtcbiAgICAgICAgLy8gUmVzZXQgaXRlbXMgYmFjayB0byBhbGwgb2YgdGhlIGl0ZW1zXG4gICAgICAgIHRoaXMuaXRlbXMgPSB0aGlzLmRhdGE7XG5cbiAgICAgICAgLy8gc2V0IHEgdG8gdGhlIHZhbHVlIG9mIHRoZSBzZWFyY2hiYXJcbiAgICAgICAgdmFyIHEgPSBzZWFyY2hiYXIudmFsdWU7XG5cbiAgICAgICAgLy8gaWYgdGhlIHZhbHVlIGlzIGFuIGVtcHR5IHN0cmluZyBkb24ndCBmaWx0ZXIgdGhlIGl0ZW1zXG4gICAgICAgIGlmIChxLnRyaW0oKSA9PSAnJykge1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG5cbiAgICAgICAgdGhpcy5pdGVtcyA9IHRoaXMuaXRlbXMuZmlsdGVyKCh2KSA9PiB2Lm5hbWUudG9Mb3dlckNhc2UoKS5pbmRleE9mKHEudG9Mb3dlckNhc2UoKSkgPiAtMSk7XG4gICAgICAgIHRoaXMuaXNfZW1wdHkgPSAhdGhpcy5pdGVtcy5sZW5ndGg7XG4gICAgfVxufSIsImltcG9ydCB7TmF2LCBOYXZQYXJhbXMsIFBhZ2UsIFZpZXdDb250cm9sbGVyLCBDb25maWd9IGZyb20gJ2lvbmljLWFuZ3VsYXInO1xuaW1wb3J0IHtmb3J3YXJkUmVmfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7VGlja2V0UHJvdmlkZXJ9IGZyb20gJy4uLy4uLy4uL3Byb3ZpZGVycy90aWNrZXQtcHJvdmlkZXInO1xuaW1wb3J0IHtodG1sRXNjYXBlfSBmcm9tICcuLi8uLi8uLi9kaXJlY3RpdmVzL2hlbHBlcnMnO1xuaW1wb3J0IHtTZWxlY3RMaXN0Q29tcG9uZW50fSBmcm9tICcuLi8uLi8uLi9jb21wb25lbnRzL3NlbGVjdC1saXN0L3NlbGVjdC1saXN0JztcblxuXG5AUGFnZSh7XG4gICAgdGVtcGxhdGVVcmw6ICdidWlsZC9wYWdlcy9tb2RhbHMvY2hhbmdlLXVzZXIvY2hhbmdlLXVzZXIuaHRtbCcsXG4gICAgZGlyZWN0aXZlczogW2ZvcndhcmRSZWYoKCkgPT4gU2VsZWN0TGlzdENvbXBvbmVudCldLFxufSlcbmV4cG9ydCBjbGFzcyBDaGFuZ2VVc2VyTW9kYWwge1xuXG4gICAgdGlja2V0OiBhbnk7XG4gICAgc2VsZWN0czogYW55O1xuICAgIHRpY2tldG5vdGU6IHN0cmluZztcblxuICAgIGNvbnN0cnVjdG9yKHByaXZhdGUgbmF2OiBOYXYsIHByaXZhdGUgbmF2UGFyYW1zOiBOYXZQYXJhbXMsIHByaXZhdGUgdGlja2V0UHJvdmlkZXI6IFRpY2tldFByb3ZpZGVyLCBwcml2YXRlIGNvbmZpZzogQ29uZmlnLFxuICAgICAgICBwcml2YXRlIHZpZXdDdHJsOiBWaWV3Q29udHJvbGxlcikge1xuICAgICAgICBuYXYuc3dpcGVCYWNrRW5hYmxlZCA9IGZhbHNlO1xuICAgICAgICB0aGlzLmNvbmZpZyA9IGNvbmZpZztcbiAgICB9XG5cblxuICAgIG5nT25Jbml0KCkge1xuXG4gICAgICAgIHRoaXMudGlja2V0ID0gdGhpcy5uYXZQYXJhbXMuZGF0YSB8fCAwO1xuXG4gICAgICAgIHRoaXMuc2VsZWN0cyA9IHtcbiAgICAgICAgICAgIFwidXNlclwiOiB7XG4gICAgICAgICAgICAgICAgbmFtZTogXCJ1c2VyXCIsXG4gICAgICAgICAgICAgICAgdmFsdWU6IFwiQ2hvb3NlXCIsXG4gICAgICAgICAgICAgICAgc2VsZWN0ZWQ6IDAsXG4gICAgICAgICAgICAgICAgaGlkZGVuOiBmYWxzZSxcbiAgICAgICAgICAgICAgICB1cmw6IFwidXNlcnNcIlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgIH07XG4gICAgICAgICAgIH1cblxuICAgIGRpc21pc3MoZGF0YSkge1xuICAgICAgICAvL2xldCBkYXRhID0geyAnZm9vJzogJ2JhcicgfTtcbiAgICAgICAgLy9pdGVtID0gaXRlbSB8fCB7fTtcbiAgICAgICAgdGhpcy52aWV3Q3RybC5kaXNtaXNzKGRhdGEpO1xuICAgIH1cblxuICAgIHNhdmVTZWxlY3QoZXZlbnQpIHtcbiAgICAgICAgbGV0IG5hbWUgPSBldmVudC50eXBlO1xuICAgICAgICB0aGlzLnNlbGVjdHMuc2VsZWN0ZWQgPSBldmVudC5pZDtcbiAgICAgICAgdGhpcy5zZWxlY3RzLnZhbHVlID0gZXZlbnQubmFtZTtcbiAgICB9XG4gICAgXG4gICAgb25TdWJtaXQoZm9ybSkge1xuICAgICAgICBpZiAoZm9ybS52YWxpZCkge1xuICAgICAgICAgICAgdmFyIHBvc3QgPSBodG1sRXNjYXBlKCh0aGlzLnRpY2tldG5vdGUgfHwgXCJcIikudHJpbSgpKS5zdWJzdHIoMCwgNTAwMCk7XG4gICAgICAgICAgICBsZXQgbmV3dXNlciA9IHtcbiAgICAgICAgICAgICAgICBcIm5vdGVfdGV4dFwiOiBwb3N0LFxuICAgICAgICAgICAgICAgIFwibmFtZVwiOiB0aGlzLnNlbGVjdHMudmFsdWUsXG4gICAgICAgICAgICAgICAgXCJ1c2VyX2lkXCI6IHRoaXMuc2VsZWN0cy5zZWxlY3RlZCxcbiAgICAgICAgICAgICAgICBcImFjdGlvblwiOiAgXCJ0cmFuc2ZlclwiLFxuICAgICAgICAgICAgfTtcbiAgICAgICAgICAgIHRoaXMudGlja2V0UHJvdmlkZXIudHJhbnNmZXJVc2VyVGVjaCh0aGlzLnRpY2tldC5rZXksIG5ld3VzZXIpLnN1YnNjcmliZShcbiAgICAgICBkYXRhID0+IHtcbiAgICAgICAgIHRoaXMubmF2LmFsZXJ0KHRoaXMuY29uZmlnLmN1cnJlbnQubmFtZXMudGlja2V0LnMgKyAnIGhhcyBiZWVuIHRyYW5zZmVycmVkIDopJyk7XG4gICAgICAgICB0aGlzLmRpc21pc3MobmV3dXNlcik7XG4gICAgICAgfSxcbiAgICAgICBlcnJvciA9PiB7XG4gICAgICAgICB0aGlzLm5hdi5hbGVydChlcnJvciwgdHJ1ZSk7XG4gICAgICAgICBjb25zb2xlLmxvZyhlcnJvciB8fCAnU2VydmVyIGVycm9yJyk7XG4gICAgICAgfVxuICAgICAgICk7XG5cbiAgICAgICAgfVxuICAgIH1cblxufSIsImltcG9ydCB7TmF2LCBOYXZQYXJhbXMsIFBhZ2UsIFZpZXdDb250cm9sbGVyLCBDb25maWd9IGZyb20gJ2lvbmljLWFuZ3VsYXInO1xuaW1wb3J0IHtmb3J3YXJkUmVmfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7VGlja2V0UHJvdmlkZXJ9IGZyb20gJy4uLy4uLy4uL3Byb3ZpZGVycy90aWNrZXQtcHJvdmlkZXInO1xuaW1wb3J0IHtBcGlEYXRhfSBmcm9tICcuLi8uLi8uLi9wcm92aWRlcnMvYXBpLWRhdGEnO1xuaW1wb3J0IHtDbGFzc0xpc3RDb21wb25lbnR9IGZyb20gJy4uLy4uLy4uL2NvbXBvbmVudHMvY2xhc3MtbGlzdC9jbGFzcy1saXN0JztcbmltcG9ydCB7aHRtbEVzY2FwZSwgZ2V0RnVsbE5hbWV9IGZyb20gJy4uLy4uLy4uL2RpcmVjdGl2ZXMvaGVscGVycyc7XG5pbXBvcnQge1NlbGVjdExpc3RDb21wb25lbnR9IGZyb20gJy4uLy4uLy4uL2NvbXBvbmVudHMvc2VsZWN0LWxpc3Qvc2VsZWN0LWxpc3QnO1xuXG5cblxuQFBhZ2Uoe1xuICAgIHRlbXBsYXRlVXJsOiAnYnVpbGQvcGFnZXMvbW9kYWxzL2Nsb3NlLXRpY2tldC9jbG9zZS10aWNrZXQuaHRtbCcsXG4gICAgZGlyZWN0aXZlczogW2ZvcndhcmRSZWYoKCkgPT4gU2VsZWN0TGlzdENvbXBvbmVudCksIGZvcndhcmRSZWYoKCkgPT4gQ2xhc3NMaXN0Q29tcG9uZW50KV0sXG59KVxuZXhwb3J0IGNsYXNzIENsb3NlVGlja2V0TW9kYWwge1xuXG4gICAgaXNjb25maXJtOiBib29sZWFuO1xuICAgIHRpY2tldG5vdGU6IHN0cmluZztcbiAgICB0aWNrZXQ6IGFueTtcbiAgICBzZWxlY3RzOiBhbnk7XG4gICAgY2F0ZWdvcmllczogYW55O1xuICAgIGhlOiBhbnk7XG4gICAgdXNlcnM6IGFueSA9IFtdO1xuXG4gICAgY29uc3RydWN0b3IocHJpdmF0ZSBuYXY6IE5hdiwgcHJpdmF0ZSBuYXZQYXJhbXM6IE5hdlBhcmFtcywgcHJpdmF0ZSBhcGlEYXRhOiBBcGlEYXRhLCBwcml2YXRlIHRpY2tldFByb3ZpZGVyOiBUaWNrZXRQcm92aWRlciwgcHJpdmF0ZSBjb25maWc6IENvbmZpZyxcbiAgICAgICAgcHJpdmF0ZSB2aWV3Q3RybDogVmlld0NvbnRyb2xsZXIpIHtcbiAgICAgICAgbmF2LnN3aXBlQmFja0VuYWJsZWQgPSBmYWxzZTtcbiAgICAgICAgdGhpcy5jb25maWcgPSBjb25maWc7XG4gICAgfVxuXG5cbiAgICBuZ09uSW5pdCgpIHtcblxuICAgICAgICB0aGlzLmlzY29uZmlybSA9IHRydWU7XG5cbiAgICAgICAgdGhpcy50aWNrZXQgPSB0aGlzLm5hdlBhcmFtcy5kYXRhIHx8IDA7XG5cbiAgICAgICAgdGhpcy5jYXRlZ29yaWVzID0gW107XG4gICAgICAgIHRoaXMuaGUgPSB0aGlzLmNvbmZpZy5nZXRDdXJyZW50KFwidXNlclwiKTtcblxuICAgICAgICB0aGlzLnNlbGVjdHMgPSB7XG4gICAgICAgICAgICBcInJlc29sdXRpb25cIjoge1xuICAgICAgICAgICAgICAgIG5hbWU6IFwiUmVzb2x1dGlvblwiLFxuICAgICAgICAgICAgICAgIHZhbHVlOiBcIlJlc29sdmVkXCIsXG4gICAgICAgICAgICAgICAgc2VsZWN0ZWQ6IDEsXG4gICAgICAgICAgICAgICAgaGlkZGVuOiBmYWxzZSxcbiAgICAgICAgICAgICAgICBpdGVtczogW1xuICAgICAgICAgICAgICAgICAgICB7IFwibmFtZVwiOiAnUmVzb2x2ZWQnLCBcImlkXCI6IDEgfSxcbiAgICAgICAgICAgICAgICAgICAgeyBcIm5hbWVcIjogJ1VuUmVzb2x2ZWQnLCBcImlkXCI6IDAgfSxcbiAgICAgICAgICAgICAgICBdXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgXCJjY1wiIDoge1xuICAgICAgICAgICAgICAgICAgICBuYW1lOiBcIkNDXCIsIFxuICAgICAgICAgICAgICAgICAgICB2YWx1ZTogXCJDaG9vc2UgXCIrIHRoaXMuY29uZmlnLmN1cnJlbnQubmFtZXMudXNlci5zLFxuICAgICAgICAgICAgICAgICAgICBzZWxlY3RlZDogMCxcbiAgICAgICAgICAgICAgICAgICAgdXJsOiBcInVzZXJzXCIsXG4gICAgICAgICAgICAgICAgICAgIGhpZGRlbjogZmFsc2UsXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIFwiY2xhc3NcIjoge1xuICAgICAgICAgICAgICAgICBuYW1lOiBcIkNsYXNzXCIsXG4gICAgICAgICAgICAgICAgIHZhbHVlOiB0aGlzLnRpY2tldC5jbGFzc19uYW1lIHx8IFwiQ2hvb3NlXCIsXG4gICAgICAgICAgICAgICAgIHNlbGVjdGVkOiB0aGlzLnRpY2tldC5jbGFzc19pZCB8fCAwLFxuICAgICAgICAgICAgICAgICB1cmw6IFwiY2xhc3Nlc1wiLFxuICAgICAgICAgICAgICAgICBwcmVsb2FkOiAhdGhpcy50aWNrZXQuY2xhc3NfaWQgJiYgdGhpcy5jb25maWcuY3VycmVudC5pc19jbGFzc190cmFja2luZyxcbiAgICAgICAgICAgICAgICAgaGlkZGVuOiB0aGlzLnRpY2tldC5jbGFzc19pZCB8fCAhdGhpcy5jb25maWcuY3VycmVudC5pc19jbGFzc190cmFja2luZyxcbiAgICAgICB9LFxuICAgICAgIFwiY2F0ZWdvcmllc1wiOiB7XG4gICAgICAgICAgICAgICAgIG5hbWU6IFwiQ3JlYXRpb24gQ2F0ZWdvcnlcIixcbiAgICAgICAgICAgICAgICAgdmFsdWU6IHRoaXMudGlja2V0LmNyZWF0aW9uX2NhdGVnb3J5X25hbWUgfHwgXCJDaG9vc2VcIixcbiAgICAgICAgICAgICAgICAgc2VsZWN0ZWQ6IHRoaXMudGlja2V0LmNyZWF0aW9uX2NhdGVnb3J5X2lkIHx8IDAsXG4gICAgICAgICAgICAgICAgIHVybDogXCJjYXRlZ29yaWVzXCIsXG4gICAgICAgICAgICAgICAgIHByZWxvYWQ6IHRoaXMuY29uZmlnLmN1cnJlbnQuaXNfY3JlYXRpb25fY2F0ZWdvcmllcyAmJiAhdGhpcy50aWNrZXQuY3JlYXRpb25fY2F0ZWdvcnlfaWQsXG4gICAgICAgICAgICAgICAgIGhpZGRlbjogdGhpcy50aWNrZXQuY3JlYXRpb25fY2F0ZWdvcnlfaWQgfHwgIXRoaXMuY29uZmlnLmN1cnJlbnQuaXNfY3JlYXRpb25fY2F0ZWdvcmllc1xuICAgICAgIH0sXG4gICAgICAgICAgICBcImNhdGVnb3J5XCI6IHtcbiAgICAgICAgICAgICAgICBuYW1lOiBcIkNhdGVnb3J5XCIsXG4gICAgICAgICAgICAgICAgdmFsdWU6IFwiQ2hvb3NlXCIsXG4gICAgICAgICAgICAgICAgc2VsZWN0ZWQ6IDAsXG4gICAgICAgICAgICAgICAgaGlkZGVuOiBmYWxzZSxcbiAgICAgICAgICAgICAgICBpdGVtczogW11cbiAgICAgICAgICAgIH0sXG4gICAgICAgIH07XG5cbiAgICAgICAgaWYgKCF0aGlzLmNvbmZpZy5jdXJyZW50LmlzX3Jlc29sdXRpb25fdHJhY2tpbmcpXG4gICAgICAgICAgICByZXR1cm47XG5cbiAgICAgICAgdGhpcy5hcGlEYXRhLmdldChcInJlc29sdXRpb25fY2F0ZWdvcmllc1wiKS5zdWJzY3JpYmUoXG4gICAgICAgICAgICBkYXRhID0+IHtcbiAgICAgICAgICAgICAgICB0aGlzLmNhdGVnb3JpZXMgPSBkYXRhO1xuICAgICAgICAgICAgICAgIHRoaXMuc2VsZWN0cy5jYXRlZ29yeS5pdGVtcyA9IGRhdGEuZmlsdGVyKHYgPT4gdi5pc19yZXNvbHZlZCk7XG4gICAgICAgICAgICAgICAgdGhpcy5zZWxlY3RzLmNhdGVnb3J5LmhpZGRlbiA9ICF0aGlzLnNlbGVjdHMuY2F0ZWdvcnkuaXRlbXMubGVuZ3RoO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGVycm9yID0+IHtcbiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhlcnJvciB8fCAnU2VydmVyIGVycm9yJyk7XG4gICAgICAgICAgICB9XG4gICAgICAgICk7XG4gICAgfVxuXG4gICAgZGlzbWlzcyhudW0/KSB7XG4gICAgICAgIC8vbGV0IGRhdGEgPSB7ICdmb28nOiAnYmFyJyB9O1xuICAgICAgICAvL2l0ZW0gPSBpdGVtIHx8IHt9O1xuICAgICAgICB0aGlzLnZpZXdDdHJsLmRpc21pc3MobnVtIHx8IDApO1xuICAgIH1cblxuICAgIHNhdmVTZWxlY3QoZXZlbnQpIHtcbiAgICAgICAgbGV0IG5hbWUgPSBldmVudC50eXBlO1xuICAgICAgICBpZiAobmFtZSA9PSBcImNyZWF0aW9uY2F0ZWdvcnlcIilcbiAgICAgICAgICAgIG5hbWUgPSBcImNhdGVnb3JpZXNcIjtcbiAgICAgICAgaWYgKG5hbWUgPT0gXCJyZXNvbHV0aW9uXCIpXG4gICAgICAgIHtcbiAgICAgICAgICAgIHRoaXMuc2VsZWN0c1tuYW1lXS5zZWxlY3RlZCA9IGV2ZW50LmlkO1xuICAgICAgICAgICAgdGhpcy5zZWxlY3RzW25hbWVdLnZhbHVlID0gZXZlbnQubmFtZTtcbiAgICAgICAgICAgIHRoaXMuc2VsZWN0cy5jYXRlZ29yeS52YWx1ZSA9IFwiQ2hvb3NlXCI7XG4gICAgICAgICAgICB0aGlzLnNlbGVjdHMuY2F0ZWdvcnkuc2VsZWN0ZWQgPSAwO1xuICAgICAgICAgICAgdGhpcy5zZWxlY3RzLmNhdGVnb3J5Lml0ZW1zID0gdGhpcy5zZWxlY3RzLnJlc29sdXRpb24uc2VsZWN0ZWQgP1xuICAgICAgICAgICAgICAgIHRoaXMuY2F0ZWdvcmllcy5maWx0ZXIodiA9PiB2LmlzX3Jlc29sdmVkKSA6IHRoaXMuY2F0ZWdvcmllcy5maWx0ZXIodiA9PiAhdi5pc19yZXNvbHZlZCk7XG4gICAgICAgICAgICB0aGlzLnNlbGVjdHMuY2F0ZWdvcnkuaGlkZGVuID0gIXRoaXMuc2VsZWN0cy5jYXRlZ29yeS5pdGVtcy5sZW5ndGg7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSBpZiAobmFtZSA9PSBcImNhdGVnb3J5XCIpXG4gICAgICAgIHtcbiAgICAgICAgICAgIHRoaXMuc2VsZWN0c1tuYW1lXS5zZWxlY3RlZCA9IGV2ZW50LmlkO1xuICAgICAgICAgICAgdGhpcy5zZWxlY3RzW25hbWVdLnZhbHVlID0gZXZlbnQubmFtZTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIGlmIChuYW1lID09IFwiY2F0ZWdvcmllc1wiKVxuICAgICAgICB7XG4gICAgICAgICAgICB0aGlzLnNlbGVjdHNbbmFtZV0uc2VsZWN0ZWQgPSBldmVudC5pZDtcbiAgICAgICAgICAgIHRoaXMuc2VsZWN0c1tuYW1lXS52YWx1ZSA9IGV2ZW50Lm5hbWU7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSBpZiAobmFtZSA9PSBcImNsYXNzXCIpXG4gICAgICAgIHtcbiAgICAgICAgICAgIHRoaXMuc2VsZWN0c1tuYW1lXS5zZWxlY3RlZCA9IGV2ZW50LmlkO1xuICAgICAgICAgICAgdGhpcy5zZWxlY3RzW25hbWVdLnZhbHVlID0gZXZlbnQubmFtZTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIGlmIChuYW1lID09IFwiY2NcIil7XG4gICAgICAgICAgICB0aGlzLnNlbGVjdHNbbmFtZV0uc2VsZWN0ZWQgPSAwO1xuICAgICAgICAgICAgdGhpcy5zZWxlY3RzW25hbWVdLnZhbHVlID0gXCJDaG9vc2UgXCIrIHRoaXMuY29uZmlnLmN1cnJlbnQubmFtZXMudXNlci5zO1xuICAgICAgICAgICAgbGV0IHVzZXIgPSB7XG4gICAgICAgICAgICAgICAgXCJpZFwiOiBldmVudC5lbWFpbCxcbiAgICAgICAgICAgICAgICBcIm5hbWVcIjogZXZlbnQubmFtZVxuICAgICAgICAgICAgfTsgICBcbiAgICAgICAgICAgIGlmICh0aGlzLnVzZXJzLmZpbHRlcih1ID0+IHUuaWQgPT0gdXNlci5pZCkubGVuZ3RoID09IDApXG4gICAgICAgICAgICAgICAgdGhpcy51c2Vycy5wdXNoKHVzZXIpO1xuICAgICAgICB9XG4gICAgfVxuICAgIGRlbGV0ZVVzZXIodXNlcl9pZCl7XG4gICAgICAgIGxldCBudW07XG4gICAgICAgIGZvciAodmFyIG4gPSAwOyAgbiA8IHRoaXMudXNlcnMubGVuZ3RoOyBuKyspIHtcbiAgICAgICAgICAgIGlmKHRoaXMudXNlcnNbbl0uaWQgPT0gdXNlcl9pZCl7XG4gICAgICAgICAgICAgICAgbnVtID0gbjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICB0aGlzLnVzZXJzLnNwbGljZShudW0sIDEpO1xuICAgIH1cbiAgICBcbiAgICBvblN1Ym1pdChmb3JtKSB7XG4gICAgICAgIGlmIChmb3JtLnZhbGlkKSB7XG4gICAgICAgICAgICB2YXIgcG9zdCA9IGh0bWxFc2NhcGUoKHRoaXMudGlja2V0bm90ZSB8fCBcIlwiKS50cmltKCkpLnN1YnN0cigwLCA1MDAwKTtcblxuICAgICAgICAgICAgaWYoIXRoaXMuc2VsZWN0cy5jbGFzcy5zZWxlY3RlZCAmJiB0aGlzLmNvbmZpZy5jdXJyZW50LmlzX2NsYXNzX3RyYWNraW5nKVxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIHRoaXMubmF2LmFsZXJ0KFwiQSBjbGFzcyBtdXN0IGJlIGVudGVyZWQgYmVmb3JlIHRpY2tldCBtYXkgYmUgY2xvc2VkIVwiLHRydWUpO1xuICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmICh0aGlzLmNvbmZpZy5jdXJyZW50LmlzX3RpY2tldF9yZXF1aXJlX2Nsb3N1cmVfbm90ZSAmJiAhcG9zdC5sZW5ndGgpXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgdGhpcy5uYXYuYWxlcnQoXCJOb3RlIGlzIHJlcXVpcmVkIVwiLHRydWUpO1xuICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmICh0aGlzLmNvbmZpZy5jdXJyZW50LmlzX2NyZWF0aW9uX2NhdGVnb3JpZXMgJiYgIXRoaXMuc2VsZWN0cy5jYXRlZ29yaWVzLnNlbGVjdGVkKVxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIHRoaXMubmF2LmFsZXJ0KFwiQSBjcmVhdGlvbiBjYXRlZ29yeSBtdXN0IGJlIGVudGVyZWQgYmVmb3JlIHRpY2tldCBtYXkgYmUgY2xvc2VkIVwiLHRydWUpO1xuICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGxldCB1c2VyX2lkcyA9IHRoaXMudXNlcnMubWFwKHUgPT4gdS5pZCkuam9pbihcIiwgXCIpO1xuXG4gICAgICAgICAgICBsZXQgZGF0YSA9IHtcbiAgICAgICAgICAgICAgICBcInN0YXR1c1wiOiBcImNsb3NlZFwiLFxuICAgICAgICAgICAgICAgIFwibm90ZV90ZXh0XCI6IHBvc3QsXG4gICAgICAgICAgICAgICAgXCJpc19zZW5kX25vdGlmaWNhdGlvbnNcIjogdHJ1ZSxcbiAgICAgICAgICAgICAgICBcInJlc29sdmVkXCI6IHRoaXMuc2VsZWN0cy5yZXNvbHV0aW9uLnNlbGVjdGVkID09IDEsXG4gICAgICAgICAgICAgICAgXCJyZXNvbHV0aW9uX2lkXCI6IHRoaXMuc2VsZWN0cy5jYXRlZ29yeS5zZWxlY3RlZCxcbiAgICAgICAgICAgICAgICBcImNsYXNzX2lkXCI6IHRoaXMuc2VsZWN0cy5jbGFzcy5zZWxlY3RlZCxcbiAgICAgICAgICAgICAgICBcImNvbmZpcm1lZFwiOiB0aGlzLmlzY29uZmlybSxcbiAgICAgICAgICAgICAgICBcImNyZWF0aW9uX2NhdGVnb3J5X2lkXCI6IHRoaXMuc2VsZWN0cy5jYXRlZ29yaWVzLnNlbGVjdGVkLFxuICAgICAgICAgICAgICAgIFwiY3JlYXRpb25fY2F0ZWdvcnlfbmFtZVwiOiB0aGlzLnNlbGVjdHMuY2F0ZWdvcmllcy52YWx1ZSxcbiAgICAgICAgICAgICAgICBcImNvbmZpcm1fbm90ZVwiOiBcIlwiLFxuICAgICAgICAgICAgICAgIFwiY2NcIjogdXNlcl9pZHNcbiAgICAgICAgICAgIH07XG5cbiAgICAgICAgICAgIHRoaXMudGlja2V0UHJvdmlkZXIuY2xvc2VPcGVuVGlja2V0KHRoaXMudGlja2V0LmtleSwgZGF0YSkuc3Vic2NyaWJlKFxuICAgICAgICAgICAgICAgIGRhdGEgPT4ge1xuICAgICAgICAgICAgICAgICAgICB0aGlzLm5hdi5hbGVydCgnVGlja2V0IGhhcyBiZWVuIGNsb3NlZCA6KScpO1xuICAgICAgICAgICAgICAgICAgICB0aGlzLmRpc21pc3MoMSk7XG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICBlcnJvciA9PiB7XG4gICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKGVycm9yIHx8ICdTZXJ2ZXIgZXJyb3InKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgKTtcbiAgICAgICAgfVxuICAgIH1cblxufSIsImltcG9ydCB7TmF2LCBOYXZQYXJhbXMsIFBhZ2UsIENvbmZpZywgVmlld0NvbnRyb2xsZXIsIE1vZGFsfSBmcm9tICdpb25pYy1hbmd1bGFyJztcbmltcG9ydCB7QXBpRGF0YX0gZnJvbSAnLi4vLi4vLi4vcHJvdmlkZXJzL2FwaS1kYXRhJztcbmltcG9ydCB7aXNTRH0gZnJvbSAnLi4vLi4vLi4vcHJvdmlkZXJzL2NvbmZpZyc7XG5pbXBvcnQge2dldEZ1bGxOYW1lLCBhZGRwfSBmcm9tICcuLi8uLi8uLi9kaXJlY3RpdmVzL2hlbHBlcnMnO1xuaW1wb3J0IHtBZGRVc2VyTW9kYWx9IGZyb20gJy4uL21vZGFscyc7XG5cbkBQYWdlKHtcbiAgICB0ZW1wbGF0ZVVybDogJ2J1aWxkL3BhZ2VzL21vZGFscy9pbmZpbml0eS1tdWx0aS1zZWxlY3QvaW5maW5pdHktbXVsdGktc2VsZWN0Lmh0bWwnLFxufSlcblxuZXhwb3J0IGNsYXNzIEluZmluaXR5TXVsdGlTZWxlY3RNb2RhbCB7XG4gICBcbiAgICBpdGVtczogYW55O1xuICAgIHVybDogc3RyaW5nO1xuICAgIG5hbWU6IHN0cmluZztcbiAgICB0ZXJtOiBzdHJpbmc7XG4gICAgZGF0YTogYW55O1xuICAgIGNvdW50OiBudW1iZXI7XG4gICAgaXNfZW1wdHk6IGJvb2xlYW47XG4gICAgYnVzeTogYm9vbGVhbjtcbiAgICBwYWdlcjogYW55O1xuICAgIGlzYnV0dG9uOiBib29sZWFuO1xuICAgIGlzbmV3X2VuYWJsZWQ6IGJvb2xlYW4gPSBmYWxzZTtcbiAgICBkYXRlOiBhbnk7XG4gICAgc2VsZWN0ZWRfaXRlbXM6IGFueTtcblxuICAgIFxuXG5cbiAgICBjb25zdHJ1Y3Rvcihwcml2YXRlIG5hdjogTmF2LCBwcml2YXRlIG5hdlBhcmFtczogTmF2UGFyYW1zLCBwcml2YXRlIGNvbmZpZzogQ29uZmlnLCBwcml2YXRlIGFwaURhdGE6IEFwaURhdGEsXG4gICAgICAgIHByaXZhdGUgdmlld0N0cmw6IFZpZXdDb250cm9sbGVyKSBcbiAgICB7XG4gICAgICAgIG5hdi5zd2lwZUJhY2tFbmFibGVkID0gZmFsc2U7XG4gICAgfVxuXG4gICAgbmdPbkluaXQoKSB7XG5cbiAgICAgICAgdGhpcy50ZXJtID0gJyc7XG4gICAgICAgIHRoaXMubmFtZSA9IHRoaXMubmF2UGFyYW1zLmRhdGEubmFtZSB8fCBcIkxpc3RcIjtcbiAgICAgICAgdGhpcy5pc25ld19lbmFibGVkID0gdGhpcy5jb25maWcuY3VycmVudC5pc19hZGRfbmV3X3VzZXJfbGluayAmJiAhIX5bXCJ1c2VyXCIsIFwidGVjaFwiXS5pbmRleE9mKHRoaXMubmFtZS50b0xvd2VyQ2FzZSgpKTtcbiAgICAgICAgdGhpcy51cmwgPSB0aGlzLm5hdlBhcmFtcy5kYXRhLnVybCB8fCBcIlwiO1xuICAgICAgICB0aGlzLmRhdGEgPSB0aGlzLm5hdlBhcmFtcy5kYXRhLml0ZW1zIHx8IHt9O1xuICAgICAgICB0aGlzLml0ZW1zID0gdGhpcy5kYXRhO1xuICAgICAgICBpZih0aGlzLm5hbWUgIT0gJ1RvRG8gVGVtcGxhdGVzJyl7XG4gICAgICAgICAgICB0aGlzLml0ZW1zLmZvckVhY2goaXRlbSA9PiB7XG4gICAgICAgICAgICBpdGVtLmlzX3NlbGVjdGVkID0gZmFsc2U7XG4gICAgICAgICAgICAgIH0pO1xuICAgICAgIH1cbiAgICAgICAgdGhpcy5jb3VudCA9IHRoaXMuaXRlbXMubGVuZ3RoO1xuICAgICAgICB0aGlzLmlzYnV0dG9uID0gdGhpcy5uYXZQYXJhbXMuZGF0YS5pc2J1dHRvbjtcbiAgICAgICAgdGhpcy5pc19lbXB0eSA9IGZhbHNlO1xuICAgICAgICB0aGlzLnBhZ2VyID0geyBwYWdlOiAoKHRoaXMuY291bnQgJSAyNSA9PSAwKSA/IE1hdGgubWF4KHRoaXMuY291bnQvMjUgLSAxLCAwKSA6IDApLCBsaW1pdDogMjUgfTtcblxuICAgICAgICBpZiAodGhpcy5pdGVtcy5sZW5ndGggPT09IDApIHtcbiAgICAgICAgICAgIHZhciB0aW1lciA9IHNldFRpbWVvdXQoKCkgPT4ge1xuICAgICAgICAgICAgICAgIHRoaXMuYnVzeSA9IHRydWU7XG4gICAgICAgICAgICB9LCA1MDApO1xuXG4gICAgICAgICAgICB0aGlzLmdldEl0ZW1zKFwiXCIsIG51bGwsIHRpbWVyKTtcbiAgICAgICAgfVxuICAgICAgICAvL2Vsc2Uge1xuICAgICAgICAgICAgLy8gICAgdGhpcy5wYWdlci5wYWdlID0gMTtcbiAgICAgICAgICAgIC8vICAgIHRoaXMuaXNfZW1wdHkgPSB0cnVlO1xuICAgICAgICAgICAgLy99XG4gICAgICAgIH1cblxuICAgICAgICBkaXNtaXNzKGl0ZW0pIHtcbiAgICAgICAgICAgIC8vbGV0IGRhdGEgPSB7ICdmb28nOiAnYmFyJyB9O1xuICAgICAgICAgICAgaWYgKCFpdGVtKSB7XG4gICAgICAgICAgICB0aGlzLnZpZXdDdHJsLmRpc21pc3MoaXRlbSk7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgIH1cbiAgICAgICBcbiAgICAgICAgICAgIHRoaXMuc2VsZWN0ZWRfaXRlbXMgPSBpdGVtLmZpbHRlcigodikgPT4gdi5pc19zZWxlY3RlZCk7XG4gICAgICAgICAgICB0aGlzLnZpZXdDdHJsLmRpc21pc3ModGhpcy5zZWxlY3RlZF9pdGVtcyk7XG4gICAgICAgIH1cblxuICAgICAgICBpbnZpdGUoKVxuICAgICAgICB7XG4gICAgICAgICAgICBsZXQgbXlNb2RhbCA9IE1vZGFsLmNyZWF0ZShBZGRVc2VyTW9kYWwsIHt0eXBlOiB0aGlzLm5hbWUudG9Mb3dlckNhc2UoKSwgbmFtZTogdGhpcy50ZXJtfSk7XG4gICAgICAgICAgICBteU1vZGFsLm9uRGlzbWlzcyhkYXRhID0+IHtcbiAgICAgICAgICAgICBpZiAoZGF0YSl7XG4gICAgICAgICAgICAgICAgICAgIGRhdGEubmFtZSA9IGdldEZ1bGxOYW1lKGRhdGEuZmlyc3RuYW1lLCBkYXRhLmxhc3RuYW1lLCBkYXRhLmVtYWlsKTtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5kaXNtaXNzKGRhdGEpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgdGhpcy5uYXYucHJlc2VudChteU1vZGFsKTtcbiAgICAgICAgfVxuXG4gICAgICAgIHNlYXJjaEl0ZW1zKHNlYXJjaGJhcikge1xuICAgICAgICAgICAgLy8gUmVzZXQgaXRlbXMgYmFjayB0byBhbGwgb2YgdGhlIGl0ZW1zXG4gICAgICAgICAgICB0aGlzLml0ZW1zID0gdGhpcy5kYXRhO1xuXG4gICAgICAgICAgICAvLyBzZXQgcSB0byB0aGUgdmFsdWUgb2YgdGhlIHNlYXJjaGJhclxuICAgICAgICAgICAgdmFyIHEgPSBzZWFyY2hiYXIudmFsdWUudHJpbSgpO1xuXG4gICAgICAgICAgICAvLyBpZiB0aGUgdmFsdWUgaXMgYW4gZW1wdHkgc3RyaW5nIGRvbid0IGZpbHRlciB0aGUgaXRlbXNcbiAgICAgICAgICAgIGlmIChxLnRyaW0oKSA9PSAnJyB8fCB0aGlzLmJ1c3kpIHtcbiAgICAgICAgICAgICAgICBpZiAocS50cmltKCkgPT0gJycpIFxuICAgICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLmlzX2VtcHR5ID0gIXRoaXMuaXRlbXMubGVuZ3RoO1xuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5jb3VudCA9IDI1O1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICB0aGlzLmRhdGUgPSBEYXRlLm5vdygpO1xuXG4gICAgICAgICAgICBpZiAocS5sZW5ndGggPCAzKVxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIHRoaXMuaXRlbXMgPSB0aGlzLml0ZW1zLmZpbHRlcigodikgPT4gdi5uYW1lLnRvTG93ZXJDYXNlKCkuaW5kZXhPZihxLnRvTG93ZXJDYXNlKCkpID4gLTEpO1xuICAgICAgICAgICAgICAgIHRoaXMuaXNfZW1wdHkgPSAhdGhpcy5pdGVtcy5sZW5ndGg7XG4gICAgICAgICAgICAgICAgdGhpcy5jb3VudCA9IDI1O1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgdmFyIHRpbWVyID0gc2V0VGltZW91dCgoKSA9PiB7IHRoaXMuYnVzeSA9IHRydWU7IH0sIDUwMCk7XG4gICAgICAgICAgICAgICAgdGhpcy5nZXRJdGVtcyhxLCBudWxsLCB0aW1lcik7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICBnZXRJdGVtcyh0ZXJtLCBpbmZpbml0ZVNjcm9sbCwgdGltZXI/KSB7XG4gICAgICAgICAgICBsZXQgcGFnZXIgPSB7IHBhZ2U6IHRoaXMucGFnZXIucGFnZSwgbGltaXQ6IHRoaXMucGFnZXIubGltaXQgfTtcbiAgICAgICAgICAgIGxldCBzdGVybSA9IHRlcm07XG4gICAgICAgICAgICBpZiAoIWluZmluaXRlU2Nyb2xsKVxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIHRoaXMucGFnZXIucGFnZSA9IDA7XG4gICAgICAgICAgICAgICAgcGFnZXIucGFnZSA9IDA7XG4gICAgICAgICAgICAgICAgdGhpcy5pdGVtcyA9IFtdO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKH5bXCJsb2NhdGlvblwiLCBcImFjY291bnRcIl0uaW5kZXhPZih0aGlzLm5hbWUudG9Mb3dlckNhc2UoKSkpXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgc3Rlcm0gPSB0ZXJtK1wiKlwiO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICB0aGlzLmFwaURhdGEuZ2V0UGFnZWQoYWRkcCh0aGlzLnVybCwgXCJzZWFyY2hcIiwgc3Rlcm0pLCBwYWdlcikuc3Vic2NyaWJlKFxuICAgICAgICAgICAgICAgIGRhdGEgPT4ge1xuICAgICAgICAgICAgICAgICAgICBpZiAoZGF0YS5sZW5ndGggJiYgIWRhdGFbMF0ubmFtZSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgdmFyIHJlc3VsdHMgPSBbXTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGRhdGEuZm9yRWFjaChpdGVtID0+IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBsZXQgbmFtZTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAvL2lmIHVzZXJzIG9yIHRlY2hzXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGl0ZW0uZW1haWwpXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5hbWUgPSBnZXRGdWxsTmFtZShpdGVtLmZpcnN0bmFtZSwgaXRlbS5sYXN0bmFtZSwgaXRlbS5lbWFpbCwgdGhpcy5pc2J1dHRvbiA/IFwiXCIgOiBcIiBcIik7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgLy9pZiB0aWNrZXRzXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZWxzZSBpZiAoaXRlbS5udW1iZXIpXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5hbWUgPSBgIyR7aXRlbS5udW1iZXJ9OiAke2l0ZW0uc3ViamVjdH1gO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlc3VsdHMucHVzaCh7IGlkOiBpdGVtLmlkLCBuYW1lOiBuYW1lLCBlbWFpbDogaXRlbS5lbWFpbCB9KTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgICAgICAgICAgZGF0YSA9IHJlc3VsdHM7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgaWYgKHRpbWVyKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLmlzX2VtcHR5ID0gIWRhdGEubGVuZ3RoO1xuICAgICAgICAgICAgICAgICAgICAgICAgY2xlYXJUaW1lb3V0KHRpbWVyKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuYnVzeSA9IGZhbHNlO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuY291bnQgPSAyNTtcbiAgICAgICAgICAgICAgICAgICAgaWYgKCF0ZXJtIHx8IHRlcm0ubGVuZ3RoIDwgMylcbiAgICAgICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHRpbWVyKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5kYXRhID0gZGF0YTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIGVsc2UgXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5kYXRhLnB1c2goLi4uZGF0YSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAvL2lmIChpbmZpbml0ZVNjcm9sbCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgLy8gICAgaW5maW5pdGVTY3JvbGwuZW5hYmxlKGRhdGEubGVuZ3RoID09IDI1KTtcbiAgICAgICAgICAgICAgICAgICAgICAgIC8vfVxuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5jb3VudCA9IGRhdGEubGVuZ3RoO1xuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5zZWFyY2hJdGVtcyh7IHZhbHVlOiB0ZXJtIH0pO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIGVsc2UgaWYgKGRhdGEubGVuZ3RoKVxuICAgICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLmNvdW50ID0gZGF0YS5sZW5ndGg7XG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLml0ZW1zLnB1c2goLi4uZGF0YSk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgZWxzZVxuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5pdGVtcyA9IHRoaXMuZGF0YTtcbiAgICAgICAgICAgICAgICAgICAgaWYgKGluZmluaXRlU2Nyb2xsKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBpbmZpbml0ZVNjcm9sbC5jb21wbGV0ZSgpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICBlcnJvciA9PiB7XG4gICAgICAgICAgICAgICAgICAgIGlmICh0aW1lcikge1xuICAgICAgICAgICAgICAgICAgICAgICAgY2xlYXJUaW1lb3V0KHRpbWVyKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuYnVzeSA9IGZhbHNlO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKGVycm9yIHx8ICdTZXJ2ZXIgZXJyb3InKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgKTtcbiAgICAgICAgfVxuXG4gICAgICAgIGRvSW5maW5pdGUoaW5maW5pdGVTY3JvbGwpIHtcbiAgICAgICAgICAgIGlmICh0aGlzLmRhdGUgJiYgRGF0ZS5ub3coKSAtIHRoaXMuZGF0ZSA8IDEwMDApIHtpbmZpbml0ZVNjcm9sbC5jb21wbGV0ZSgpOyByZXR1cm47fVxuICAgICAgICAgICAgaWYgKHRoaXMuaXNfZW1wdHkgfHwgdGhpcy5jb3VudCA8IDI1KSB7XG4gICAgICAgICAgICAgICAgaW5maW5pdGVTY3JvbGwuY29tcGxldGUoKTtcbiAgICAgICAgICAgICAgICAvL2luZmluaXRlU2Nyb2xsLmVuYWJsZShmYWxzZSk7XG4gICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgdGhpcy5wYWdlci5wYWdlICs9IDE7XG4gICAgICAgICAgICAvL3RoaXMudGVybSA9IFwiXCI7XG4gICAgICAgICAgICB0aGlzLmdldEl0ZW1zKHRoaXMudGVybSwgaW5maW5pdGVTY3JvbGwpO1xuICAgICAgICB9XG4gICAgfSIsImltcG9ydCB7TmF2LCBOYXZQYXJhbXMsIFBhZ2UsIENvbmZpZywgVmlld0NvbnRyb2xsZXIsIE1vZGFsfSBmcm9tICdpb25pYy1hbmd1bGFyJztcbmltcG9ydCB7QXBpRGF0YX0gZnJvbSAnLi4vLi4vLi4vcHJvdmlkZXJzL2FwaS1kYXRhJztcbmltcG9ydCB7aXNTRH0gZnJvbSAnLi4vLi4vLi4vcHJvdmlkZXJzL2NvbmZpZyc7XG5pbXBvcnQge2dldEZ1bGxOYW1lLCBhZGRwfSBmcm9tICcuLi8uLi8uLi9kaXJlY3RpdmVzL2hlbHBlcnMnO1xuaW1wb3J0IHtBZGRVc2VyTW9kYWx9IGZyb20gJy4uL21vZGFscyc7XG5cbkBQYWdlKHtcbiAgICB0ZW1wbGF0ZVVybDogJ2J1aWxkL3BhZ2VzL21vZGFscy9pbmZpbml0eS1zZWxlY3QvaW5maW5pdHktc2VsZWN0Lmh0bWwnLFxufSlcblxuZXhwb3J0IGNsYXNzIEluZmluaXR5U2VsZWN0TW9kYWwge1xuXG4gICAgaXRlbXM6IGFueTtcbiAgICB1cmw6IHN0cmluZztcbiAgICBuYW1lOiBzdHJpbmc7XG4gICAgZGlzcGxheW5hbWU6IHN0cmluZztcbiAgICB0ZXJtOiBzdHJpbmc7XG4gICAgZGF0YTogYW55O1xuICAgIGNvdW50OiBudW1iZXI7XG4gICAgaXNfZW1wdHk6IGJvb2xlYW47XG4gICAgYnVzeTogYm9vbGVhbjtcbiAgICBwYWdlcjogYW55O1xuICAgIGlzYnV0dG9uOiBib29sZWFuO1xuICAgIGRlZmF1bHRfdGV4dDogc3RyaW5nID0gXCJcIjtcbiAgICBpc2RlZmF1bHRfZW5hYmxlZDogYm9vbGVhbiA9IGZhbHNlO1xuICAgIGlzbmV3X2VuYWJsZWQ6IGJvb2xlYW4gPSBmYWxzZTtcbiAgICBkYXRlOiBhbnk7XG4gICAgXG5cblxuICAgIGNvbnN0cnVjdG9yKHByaXZhdGUgbmF2OiBOYXYsIHByaXZhdGUgbmF2UGFyYW1zOiBOYXZQYXJhbXMsIHByaXZhdGUgY29uZmlnOiBDb25maWcsIHByaXZhdGUgYXBpRGF0YTogQXBpRGF0YSxcbiAgICAgICAgcHJpdmF0ZSB2aWV3Q3RybDogVmlld0NvbnRyb2xsZXIpIFxuICAgIHtcbiAgICAgICAgbmF2LnN3aXBlQmFja0VuYWJsZWQgPSBmYWxzZTtcbiAgICB9XG5cbiAgICBuZ09uSW5pdCgpIHtcbiAgICAgICAgdGhpcy50ZXJtID0gJyc7XG4gICAgICAgIHRoaXMubmFtZSA9IHRoaXMubmF2UGFyYW1zLmRhdGEubmFtZSB8fCBcIkxpc3RcIjtcbiAgICAgICAgdGhpcy5kaXNwbGF5bmFtZSA9IHRoaXMubmF2UGFyYW1zLmRhdGEuZGlzcGxheW5hbWUgfHwgdGhpcy5uYW1lO1xuICAgICAgICBpZiAodGhpcy5uYW1lID09IFwicmVjaXBpZW50X3VzZXJcIilcbiAgICAgICAgICAgIHRoaXMubmFtZSA9IFwiUmVjaXBpZW50XCJcbiAgICAgICAgdGhpcy5pc2RlZmF1bHRfZW5hYmxlZCA9ICF+W1widXNlclwiLCBcImFjY291bnRcIiwgXCJ0ZWNoXCIsIFwidGFzayB0eXBlXCIsIFwicmVjaXBpZW50XCJdLmluZGV4T2YodGhpcy5uYW1lLnRvTG93ZXJDYXNlKCkpIFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB8fCAgISF0aGlzLm5hdlBhcmFtcy5kYXRhLmRlZmF1bHQ7XG4gICAgICAgIHRoaXMuZGVmYXVsdF90ZXh0ID0gdGhpcy5uYXZQYXJhbXMuZGF0YS5kZWZhdWx0IHx8IFwiRGVmYXVsdFwiO1xuICAgICAgICB0aGlzLmlzbmV3X2VuYWJsZWQgPSB0aGlzLmNvbmZpZy5jdXJyZW50LmlzX2FkZF9uZXdfdXNlcl9saW5rICYmICEhfltcInVzZXJcIiwgXCJ0ZWNoXCJdLmluZGV4T2YodGhpcy5uYW1lLnRvTG93ZXJDYXNlKCkpIFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAmJiAhdGhpcy5uYXZQYXJhbXMuZGF0YS5pc25ld19kaXNhYmxlZDtcbiAgICAgICAgdGhpcy51cmwgPSB0aGlzLm5hdlBhcmFtcy5kYXRhLnVybCB8fCBcIlwiO1xuICAgICAgICB0aGlzLmRhdGEgPSB0aGlzLm5hdlBhcmFtcy5kYXRhLml0ZW1zIHx8IHt9O1xuICAgICAgICB0aGlzLml0ZW1zID0gdGhpcy5kYXRhO1xuICAgICAgICB0aGlzLmNvdW50ID0gdGhpcy5pdGVtcy5sZW5ndGg7XG4gICAgICAgIHRoaXMuaXNidXR0b24gPSB0aGlzLm5hdlBhcmFtcy5kYXRhLmlzYnV0dG9uO1xuICAgICAgICB0aGlzLmlzX2VtcHR5ID0gZmFsc2U7XG4gICAgICAgIHRoaXMucGFnZXIgPSB7IHBhZ2U6ICgodGhpcy5jb3VudCAlIDI1ID09IDApID8gTWF0aC5tYXgodGhpcy5jb3VudC8yNSAtIDEsIDApIDogMCksIGxpbWl0OiAyNSB9O1xuXG4gICAgICAgIGlmICh0aGlzLml0ZW1zLmxlbmd0aCA9PT0gMCkge1xuICAgICAgICAgICAgdmFyIHRpbWVyID0gc2V0VGltZW91dCgoKSA9PiB7XG4gICAgICAgICAgICAgICAgdGhpcy5idXN5ID0gdHJ1ZTtcbiAgICAgICAgICAgIH0sIDUwMCk7XG5cbiAgICAgICAgICAgIHRoaXMuZ2V0SXRlbXMoXCJcIiwgbnVsbCwgdGltZXIpO1xuICAgICAgICB9XG4gICAgICAgIC8vZm9jdXNlclxuICAgICAgICAvL2RvY3VtZW50LmdldEVsZW1lbnRzQnlDbGFzc05hbWUoXCJzZWFyY2hiYXItaW5wdXRcIilbMV0uZm9jdXMoKTtcbiAgICAgICAgLy9lbHNlIHtcbiAgICAgICAgICAgIC8vICAgIHRoaXMucGFnZXIucGFnZSA9IDE7XG4gICAgICAgICAgICAvLyAgICB0aGlzLmlzX2VtcHR5ID0gdHJ1ZTtcbiAgICAgICAgICAgIC8vfVxuICAgICAgICB9XG5cbiAgICAgICAgb25QYWdlRGlkRW50ZXIoKSB7XG4gICAgICAgIHZhciB0ID0gZG9jdW1lbnQuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZShcInNlYXJjaGJhci1pbnB1dFwiKTtcbiAgICAgICAgdCA9IHRbdC5sZW5ndGggLSAxXTtcbiAgICAgICAgdCAmJiB0LmZvY3VzKCk7XG4gICAgICAgIH1cblxuICAgICAgICBkaXNtaXNzKGl0ZW0pIHtcbiAgICAgICAgICAgIC8vbGV0IGRhdGEgPSB7ICdmb28nOiAnYmFyJyB9O1xuICAgICAgICAgICAgaXRlbSA9IGl0ZW0gfHwge307XG4gICAgICAgICAgICB0aGlzLnZpZXdDdHJsLmRpc21pc3MoaXRlbSk7XG4gICAgICAgIH1cblxuICAgICAgICBpbnZpdGUoKVxuICAgICAgICB7XG4gICAgICAgICAgICBsZXQgbXlNb2RhbCA9IE1vZGFsLmNyZWF0ZShBZGRVc2VyTW9kYWwsIHt0eXBlOiB0aGlzLm5hbWUudG9Mb3dlckNhc2UoKSwgbmFtZTogdGhpcy50ZXJtfSk7XG4gICAgICAgICAgICBteU1vZGFsLm9uRGlzbWlzcyhkYXRhID0+IHtcbiAgICAgICAgICAgICBpZiAoZGF0YSl7XG4gICAgICAgICAgICAgICAgICAgIC8vY29uc29sZS5sb2coZGF0YSk7XG4gICAgICAgICAgICAgICAgICAgIGRhdGEubmFtZSA9IGdldEZ1bGxOYW1lKGRhdGEuZmlyc3RuYW1lLCBkYXRhLmxhc3RuYW1lLCBkYXRhLmVtYWlsKTtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5kaXNtaXNzKGRhdGEpO1xuICAgICAgICAgICAgICAgICAgICAvL3RoaXMuc2VsZWN0c1t0eXBlXS5zZWxlY3RlZCA9IGRhdGEuaWQ7XG4gICAgICAgICAgICAgICAgICAgIC8vdGhpcy5zZWxlY3RzW3R5cGVdLnZhbHVlID0gZ2V0RnVsbE5hbWUoZGF0YS5maXJzdG5hbWUsIGRhdGEubGFzdG5hbWUsIGRhdGEuZW1haWwpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgdGhpcy5uYXYucHJlc2VudChteU1vZGFsKTtcbiAgICAgICAgICAgIC8vc2V0VGltZW91dCgoKSA9PiB7IHRoaXMubmF2LnByZXNlbnQobXlNb2RhbCk7IH0sIDUwMCk7XG4gICAgICAgIH1cblxuICAgICAgICBzZWFyY2hJdGVtcyhzZWFyY2hiYXIpIHtcbiAgICAgICAgICAgIC8vIFJlc2V0IGl0ZW1zIGJhY2sgdG8gYWxsIG9mIHRoZSBpdGVtc1xuICAgICAgICAgICAgdGhpcy5pdGVtcyA9IHRoaXMuZGF0YTtcblxuICAgICAgICAgICAgLy8gc2V0IHEgdG8gdGhlIHZhbHVlIG9mIHRoZSBzZWFyY2hiYXJcbiAgICAgICAgICAgIHZhciBxID0gc2VhcmNoYmFyLnZhbHVlLnRyaW0oKTtcblxuICAgICAgICAgICAgLy8gaWYgdGhlIHZhbHVlIGlzIGFuIGVtcHR5IHN0cmluZyBkb24ndCBmaWx0ZXIgdGhlIGl0ZW1zXG4gICAgICAgICAgICBpZiAocS50cmltKCkgPT0gJycgfHwgdGhpcy5idXN5KSB7XG4gICAgICAgICAgICAgICAgaWYgKHEudHJpbSgpID09ICcnKSBcbiAgICAgICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5pc19lbXB0eSA9ICF0aGlzLml0ZW1zLmxlbmd0aDtcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuY291bnQgPSAyNTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgdGhpcy5kYXRlID0gRGF0ZS5ub3coKTtcblxuICAgICAgICAgICAgaWYgKHEubGVuZ3RoIDwgMylcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICB0aGlzLml0ZW1zID0gdGhpcy5pdGVtcy5maWx0ZXIoKHYpID0+IHYubmFtZS50b0xvd2VyQ2FzZSgpLmluZGV4T2YocS50b0xvd2VyQ2FzZSgpKSA+IC0xKTtcbiAgICAgICAgICAgICAgICB0aGlzLmlzX2VtcHR5ID0gIXRoaXMuaXRlbXMubGVuZ3RoO1xuICAgICAgICAgICAgICAgIHRoaXMuY291bnQgPSAyNTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgIHZhciB0aW1lciA9IHNldFRpbWVvdXQoKCkgPT4geyB0aGlzLmJ1c3kgPSB0cnVlOyB9LCA1MDApO1xuICAgICAgICAgICAgICAgIHRoaXMuZ2V0SXRlbXMocSwgbnVsbCwgdGltZXIpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgZ2V0SXRlbXModGVybSwgaW5maW5pdGVTY3JvbGwsIHRpbWVyPykge1xuICAgICAgICAgICAgbGV0IHBhZ2VyID0geyBwYWdlOiB0aGlzLnBhZ2VyLnBhZ2UsIGxpbWl0OiB0aGlzLnBhZ2VyLmxpbWl0IH07XG4gICAgICAgICAgICBsZXQgc3Rlcm0gPSB0ZXJtO1xuICAgICAgICAgICAgaWYgKCFpbmZpbml0ZVNjcm9sbClcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICB0aGlzLnBhZ2VyLnBhZ2UgPSAwO1xuICAgICAgICAgICAgICAgIHBhZ2VyLnBhZ2UgPSAwO1xuICAgICAgICAgICAgICAgIHRoaXMuaXRlbXMgPSBbXTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmICh+W1wibG9jYXRpb25cIiwgXCJhY2NvdW50XCJdLmluZGV4T2YodGhpcy5uYW1lLnRvTG93ZXJDYXNlKCkpKVxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIHN0ZXJtID0gdGVybStcIipcIjtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgdGhpcy5hcGlEYXRhLmdldFBhZ2VkKGFkZHAodGhpcy51cmwsIFwic2VhcmNoXCIsIHN0ZXJtKSwgcGFnZXIpLnN1YnNjcmliZShcbiAgICAgICAgICAgICAgICBkYXRhID0+IHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKGRhdGEubGVuZ3RoICYmICFkYXRhWzBdLm5hbWUpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhciByZXN1bHRzID0gW107XG4gICAgICAgICAgICAgICAgICAgICAgICBkYXRhLmZvckVhY2goaXRlbSA9PiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbGV0IG5hbWU7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgLy9pZiB1c2VycyBvciB0ZWNoc1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChpdGVtLmVtYWlsKVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBuYW1lID0gZ2V0RnVsbE5hbWUoaXRlbS5maXJzdG5hbWUsIGl0ZW0ubGFzdG5hbWUsIGl0ZW0uZW1haWwsIHRoaXMuaXNidXR0b24gPyBcIlwiIDogXCIgXCIpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vaWYgdGlja2V0c1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGVsc2UgaWYgKGl0ZW0ubnVtYmVyKVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBuYW1lID0gYCMke2l0ZW0ubnVtYmVyfTogJHtpdGVtLnN1YmplY3R9YDtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXN1bHRzLnB1c2goeyBpZDogaXRlbS5pZCwgbmFtZTogbmFtZSwgZW1haWw6IGl0ZW0uZW1haWwgfSk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGRhdGEgPSByZXN1bHRzO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIGlmICh0aW1lcikge1xuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5pc19lbXB0eSA9ICFkYXRhLmxlbmd0aDtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNsZWFyVGltZW91dCh0aW1lcik7XG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLmJ1c3kgPSBmYWxzZTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB0aGlzLmNvdW50ID0gMjU7XG4gICAgICAgICAgICAgICAgICAgIGlmICghdGVybSB8fCB0ZXJtLmxlbmd0aCA8IDMpXG4gICAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmICh0aW1lcikge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuZGF0YSA9IGRhdGE7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICBlbHNlIFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuZGF0YS5wdXNoKC4uLmRhdGEpO1xuICAgICAgICAgICAgICAgICAgICAgICAgLy9pZiAoaW5maW5pdGVTY3JvbGwpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIC8vICAgIGluZmluaXRlU2Nyb2xsLmVuYWJsZShkYXRhLmxlbmd0aCA9PSAyNSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAvL31cbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuY291bnQgPSBkYXRhLmxlbmd0aDtcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuc2VhcmNoSXRlbXMoeyB2YWx1ZTogdGVybSB9KTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBlbHNlIGlmIChkYXRhLmxlbmd0aClcbiAgICAgICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5jb3VudCA9IGRhdGEubGVuZ3RoO1xuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5pdGVtcy5wdXNoKC4uLmRhdGEpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIGVsc2VcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuaXRlbXMgPSB0aGlzLmRhdGE7XG4gICAgICAgICAgICAgICAgICAgIGlmIChpbmZpbml0ZVNjcm9sbCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgaW5maW5pdGVTY3JvbGwuY29tcGxldGUoKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgZXJyb3IgPT4ge1xuICAgICAgICAgICAgICAgICAgICBpZiAodGltZXIpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNsZWFyVGltZW91dCh0aW1lcik7XG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLmJ1c3kgPSBmYWxzZTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhlcnJvciB8fCAnU2VydmVyIGVycm9yJyk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICk7XG4gICAgICAgIH1cblxuICAgICAgICBkb0luZmluaXRlKGluZmluaXRlU2Nyb2xsKSB7XG4gICAgICAgICAgICBpZiAodGhpcy5kYXRlICYmIERhdGUubm93KCkgLSB0aGlzLmRhdGUgPCAxMDAwKSB7aW5maW5pdGVTY3JvbGwuY29tcGxldGUoKTsgcmV0dXJuO31cbiAgICAgICAgICAgIGlmICh0aGlzLmlzX2VtcHR5IHx8IHRoaXMuY291bnQgPCAyNSkge1xuICAgICAgICAgICAgICAgIGluZmluaXRlU2Nyb2xsLmNvbXBsZXRlKCk7XG4gICAgICAgICAgICAgICAgLy9pbmZpbml0ZVNjcm9sbC5lbmFibGUoZmFsc2UpO1xuICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHRoaXMucGFnZXIucGFnZSArPSAxO1xuICAgICAgICAgICAgLy90aGlzLnRlcm0gPSBcIlwiO1xuICAgICAgICAgICAgdGhpcy5nZXRJdGVtcyh0aGlzLnRlcm0sIGluZmluaXRlU2Nyb2xsKTtcbiAgICAgICAgfVxuICAgIH0iLCJleHBvcnQgKiBmcm9tICcuL2Jhc2ljLXNlbGVjdC9iYXNpYy1zZWxlY3QnO1xuZXhwb3J0ICogZnJvbSAnLi9hamF4LXNlbGVjdC9hamF4LXNlbGVjdCc7XG5leHBvcnQgKiBmcm9tICcuL2luZmluaXR5LXNlbGVjdC9pbmZpbml0eS1zZWxlY3QnO1xuZXhwb3J0ICogZnJvbSAnLi9pbmZpbml0eS1tdWx0aS1zZWxlY3QvaW5maW5pdHktbXVsdGktc2VsZWN0JztcbmV4cG9ydCAqIGZyb20gJy4vY2xvc2UtdGlja2V0L2Nsb3NlLXRpY2tldCc7XG5leHBvcnQgKiBmcm9tICcuL3RyZWUtbW9kYWwvdHJlZS1tb2RhbCc7XG5leHBvcnQgKiBmcm9tICcuL3RpY2tldC1jcmVhdGUvdGlja2V0LWNyZWF0ZSc7XG5leHBvcnQgKiBmcm9tICcuL2FkZC11c2VyL2FkZC11c2VyJztcbmV4cG9ydCAqIGZyb20gJy4vYWRkLWZpbGVzL2FkZC1maWxlcyc7XG5leHBvcnQgKiBmcm9tICcuL3RyYW5zZmVyLXRpY2tldC90cmFuc2Zlci10aWNrZXQnO1xuZXhwb3J0ICogZnJvbSAnLi9jaGFuZ2UtdXNlci9jaGFuZ2UtdXNlcic7XG5leHBvcnQgKiBmcm9tICcuL3ByaXZhY3kvcHJpdmFjeSc7IiwiaW1wb3J0IHtOYXYsIE5hdlBhcmFtcywgUGFnZSwgRXZlbnRzLCBWaWV3Q29udHJvbGxlcn0gZnJvbSAnaW9uaWMtYW5ndWxhcic7XG5cbkBQYWdlKHtcbiAgICB0ZW1wbGF0ZVVybDogJ2J1aWxkL3BhZ2VzL21vZGFscy9wcml2YWN5L3ByaXZhY3kuaHRtbCcsXG59KVxuZXhwb3J0IGNsYXNzIFByaXZhY3lNb2RhbCB7XG5cbiAgICBjb25zdHJ1Y3RvcihcbiAgICAgICAgcHJpdmF0ZSBuYXY6IE5hdixcbiAgICAgICAgcHJpdmF0ZSB2aWV3Q3RybDogVmlld0NvbnRyb2xsZXJcbiAgICApIHtcbiAgICAgICAgbmF2LnN3aXBlQmFja0VuYWJsZWQgPSBmYWxzZTtcbiAgICB9XG5cbiAgICBkaXNtaXNzKGl0ZW0pIHtcbiAgICAgICAgdGhpcy52aWV3Q3RybC5kaXNtaXNzKCk7XG4gICAgfVxufSIsImltcG9ydCB7UGFnZSwgQ29uZmlnLCBOYXYsIE5hdlBhcmFtcywgVmlld0NvbnRyb2xsZXIsIE1vZGFsfSBmcm9tICdpb25pYy1hbmd1bGFyJztcbmltcG9ydCB7Zm9yd2FyZFJlZiwgVmlld0NoaWxkfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7Rk9STV9ESVJFQ1RJVkVTLCBWYWxpZGF0b3JzfSBmcm9tICdAYW5ndWxhci9jb21tb24nO1xuaW1wb3J0IHtUaWNrZXRQcm92aWRlcn0gZnJvbSAnLi4vLi4vLi4vcHJvdmlkZXJzL3Byb3ZpZGVycyc7XG5pbXBvcnQge2h0bWxFc2NhcGUsIGdldEZ1bGxOYW1lfSBmcm9tICcuLi8uLi8uLi9kaXJlY3RpdmVzL2hlbHBlcnMnO1xuaW1wb3J0IHtEYXRhUHJvdmlkZXJ9IGZyb20gJy4uLy4uLy4uL3Byb3ZpZGVycy9kYXRhLXByb3ZpZGVyJztcbmltcG9ydCB7Q2xhc3NMaXN0Q29tcG9uZW50fSBmcm9tICcuLi8uLi8uLi9jb21wb25lbnRzL2NsYXNzLWxpc3QvY2xhc3MtbGlzdCc7XG5pbXBvcnQge0xvY2F0aW9uTGlzdENvbXBvbmVudH0gZnJvbSAnLi4vLi4vLi4vY29tcG9uZW50cy9sb2NhdGlvbi1saXN0L2xvY2F0aW9uLWxpc3QnO1xuaW1wb3J0IHtTZWxlY3RMaXN0Q29tcG9uZW50fSBmcm9tICcuLi8uLi8uLi9jb21wb25lbnRzL3NlbGVjdC1saXN0L3NlbGVjdC1saXN0JztcbmltcG9ydCB7TXVsdGlTZWxlY3RDb21wb25lbnR9ICBmcm9tICcuLi8uLi8uLi9jb21wb25lbnRzL211bHRpLXNlbGVjdC9tdWx0aS1zZWxlY3QnO1xuaW1wb3J0IHtVcGxvYWRCdXR0b25Db21wb25lbnR9IGZyb20gJy4uLy4uLy4uL3BhZ2VzL3RpY2tldC1kZXRhaWxzL3RpY2tldC1kZXRhaWxzJztcbmltcG9ydCB7Q3VzdG9tRmllbGRDb21wb25lbnR9IGZyb20gJy4uLy4uLy4uL2NvbXBvbmVudHMvY3VzdG9tLWZpZWxkL2N1c3RvbS1maWVsZCc7XG5cbkBQYWdlKHtcbiAgICB0ZW1wbGF0ZVVybDogJ2J1aWxkL3BhZ2VzL21vZGFscy90aWNrZXQtY3JlYXRlL3RpY2tldC1jcmVhdGUuaHRtbCcsXG4gICAgZGlyZWN0aXZlczogW2ZvcndhcmRSZWYoKCkgPT4gQ2xhc3NMaXN0Q29tcG9uZW50KSwgZm9yd2FyZFJlZigoKSA9PiBMb2NhdGlvbkxpc3RDb21wb25lbnQpLCBmb3J3YXJkUmVmKCgpID0+IEN1c3RvbUZpZWxkQ29tcG9uZW50KSwgZm9yd2FyZFJlZigoKSA9PiBTZWxlY3RMaXN0Q29tcG9uZW50KSwgZm9yd2FyZFJlZigoKSA9PiBNdWx0aVNlbGVjdENvbXBvbmVudCksIFVwbG9hZEJ1dHRvbkNvbXBvbmVudF0sXG59KVxuZXhwb3J0IGNsYXNzIFRpY2tldENyZWF0ZVBhZ2Uge1xuXG4gICAgQFZpZXdDaGlsZChVcGxvYWRCdXR0b25Db21wb25lbnQpIHByaXZhdGUgdXBsb2FkQ29tcG9uZW50OiBVcGxvYWRCdXR0b25Db21wb25lbnQ7XG4gICAgZGF0YTogYW55O1xuICAgIHRpY2tldDogYW55O1xuICAgIGNvbnRyYWN0b3JzOiBudW1iZXI7XG4gICAgaGU6IGFueTtcbiAgICBzZWxlY3RzOiBhbnk7XG4gICAgYWNjb3VudF9pZDogbnVtYmVyO1xuICBsb2NhdGlvbl9pZDogbnVtYmVyO1xuICBsb2NhdGlvbjogc3RyaW5nO1xuICAgIGNsYXNzX2lkOiBudW1iZXI7XG4gICAgcHJvamVjdF9pZDogbnVtYmVyO1xuICAgIGZpbGVEZXN0OiBhbnkgPSB7dGlja2V0OiBcIjExXCJ9O1xuICAgIGZpbGVzOiBhbnkgPSBbXTtcbiAgICBjdXN0b21maWVsZHM6IGFueSA9IFtdO1xuICAgIHBhZ2VyOiBhbnk7XG4gICAgcHJvZmlsZTogYW55ID0ge307XG5cbiAgICBjb25zdHJ1Y3Rvcihwcml2YXRlIG5hdjogTmF2LCBwcml2YXRlIG5hdlBhcmFtczogTmF2UGFyYW1zLCBwcml2YXRlIHRpY2tldFByb3ZpZGVyOiBUaWNrZXRQcm92aWRlciwgcHJpdmF0ZSBjb25maWc6IENvbmZpZyxcbiAgICAgICAgICAgICAgICAgcHJpdmF0ZSB2aWV3Q3RybDogVmlld0NvbnRyb2xsZXIsIHByaXZhdGUgZGF0YVByb3ZpZGVyOiBEYXRhUHJvdmlkZXIpIHtcbiAgICAgICAgbmF2LnN3aXBlQmFja0VuYWJsZWQgPSBmYWxzZTtcbiAgICB9XG5cbiAgICBuZ09uSW5pdCgpXG4gICAge1xuICAgICAgICAvL2ZvciB0ZXN0IG9ubHlcbiAgICAgICAgLy9jb25zb2xlLmxvZyh0aGlzLmNvbmZpZy5jdXJyZW50LmlzX3JlcXVpcmVfdGlja2V0X2luaXRpYWxfcG9zdCk7XG4gICAgICAgIC8vdGhpcy5jb25maWcuY3VycmVudC5pc19idWRnZXRfdGltZSA9IHRydWU7XG5cbiAgICAgICAgdGhpcy5oZSA9IHRoaXMuY29uZmlnLmdldEN1cnJlbnQoXCJ1c2VyXCIpO1xuXG4gICAgICAgIHRoaXMuZGF0YSA9IHRoaXMubmF2UGFyYW1zLmRhdGEgfHwge307XG5cbiAgICAgICAgdGhpcy5nZXRQcm9maWxlKCk7XG5cbiAgICAgICAgbGV0IHJlY2VudCA6IGFueSA9IHt9O1xuICAgICAgICBpZiAoIXRoaXMuZGF0YS5hY2NvdW50KVxuICAgICAgICB7XG4gICAgICAgICAgICAgICAgcmVjZW50ID0gdGhpcy5jb25maWcuY3VycmVudC5yZWNlbnQgfHwge307XG4gICAgICAgIH1cblxuICAgICAgICB0aGlzLmFjY291bnRfaWQgPSB0aGlzLnByb2ZpbGUuYWNjb3VudF9pZCB8fCh0aGlzLmRhdGEuYWNjb3VudCB8fCB7fSkuaWQgfHwgKHJlY2VudC5hY2NvdW50IHx8IHt9KS5zZWxlY3RlZCB8fCB0aGlzLmhlLmFjY291bnRfaWQgfHwgLTE7XG4gICAgICAgIHRoaXMubG9jYXRpb25faWQgPSB0aGlzLnByb2ZpbGUubG9jYXRpb25faWQgfHwgKHRoaXMuZGF0YS5sb2NhdGlvbiB8fCB7fSkuaWQgfHwgKHJlY2VudC5sb2NhdGlvbiB8fCB7fSkuc2VsZWN0ZWQgfHwgMDtcbiAgICAgICAgdGhpcy5sb2NhdGlvbiA9IHRoaXMucHJvZmlsZS5sb2NhdGlvbl9uYW1lIHx8ICh0aGlzLmRhdGEubG9jYXRpb24gfHwge30pLm5hbWUgfHwgKHJlY2VudC5sb2NhdGlvbiB8fCB7fSkudmFsdWU7XG4gICAgICAgIGxldCBjb250cmFjdF9pZCA9IHJlY2VudC5kZWZhdWx0X2NvbnRyYWN0X2lkIHx8IDA7XG4gICAgICAgIHRoaXMuY2xhc3NfaWQgPSAocmVjZW50LmNsYXNzIHx8IHt9KS5zZWxlY3RlZCB8fCAwO1xuICAgICAgICB0aGlzLnByb2plY3RfaWQgPSAocmVjZW50LnByb2plY3QgfHwge30pLnNlbGVjdGVkIHx8IDA7XG5cbiAgICAgICAgdGhpcy5zZWxlY3RzID0ge1xuICAgICAgICAgICAgXCJ1c2VyXCIgOiB7XG4gICAgICAgICAgICAgICAgbmFtZTogXCJVc2VyXCIsIFxuICAgICAgICAgICAgICAgIHZhbHVlOiBnZXRGdWxsTmFtZSh0aGlzLmhlLmZpcnN0bmFtZSwgdGhpcy5oZS5sYXN0bmFtZSwgdGhpcy5oZS5lbWFpbCksXG4gICAgICAgICAgICAgICAgc2VsZWN0ZWQ6IHRoaXMuaGUudXNlcl9pZCxcbiAgICAgICAgICAgICAgICB1cmw6IFwidXNlcnNcIixcbiAgICAgICAgICAgICAgICBoaWRkZW46IGZhbHNlXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgXCJsb2NhdGlvblwiIDoge1xuICAgICAgICAgICAgICAgIG5hbWU6IFwiTG9jYXRpb25cIiwgXG4gICAgICAgICAgICAgICAgdmFsdWU6IHRoaXMuaGUuaXNfdGVjaG9yYWRtaW4gPyAodGhpcy5sb2NhdGlvbiAgfHwgXCJEZWZhdWx0XCIpIDogXCJDaG9vc2VcIixcbiAgICAgICAgICAgICAgICBzZWxlY3RlZDogdGhpcy5sb2NhdGlvbl9pZCxcbiAgICAgICAgICAgICAgICB1cmw6IGBsb2NhdGlvbnM/YWNjb3VudD0ke3RoaXMuYWNjb3VudF9pZH0mbGltaXQ9MTAwMGAsXG4gICAgICAgICAgICAgICAgaGlkZGVuOiBmYWxzZVxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIFwicHJvamVjdFwiIDoge1xuICAgICAgICAgICAgICAgIG5hbWU6IFwiUHJvamVjdFwiLCBcbiAgICAgICAgICAgICAgICB2YWx1ZTogKHJlY2VudC5wcm9qZWN0IHx8IHt9KS52YWx1ZSB8fCBcIkRlZmF1bHRcIixcbiAgICAgICAgICAgICAgICBzZWxlY3RlZDogKHJlY2VudC5wcm9qZWN0IHx8IHt9KS5zZWxlY3RlZCB8fCAwLFxuICAgICAgICAgICAgICAgIHVybDogYHByb2plY3RzP2FjY291bnQ9JHt0aGlzLmFjY291bnRfaWR9JmlzX3dpdGhfc3RhdGlzdGljcz1mYWxzZWAsXG4gICAgICAgICAgICAgICAgaGlkZGVuOiBmYWxzZVxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIFwic3VibWlzc2lvbnNcIiA6IHtcbiAgICAgICAgICAgICAgICBuYW1lOiBcIlN1Ym1pc3Npb24gQ2F0ZWdvcnlcIiwgXG4gICAgICAgICAgICAgICAgdmFsdWU6IChyZWNlbnQuc3VibWlzc2lvbnMgfHwge30pLnZhbHVlIHx8IFwiQ2hvb3NlXCIsXG4gICAgICAgICAgICAgICAgc2VsZWN0ZWQ6IChyZWNlbnQuc3VibWlzc2lvbnMgfHwge30pLnZhbHVlIHx8IDAsXG4gICAgICAgICAgICAgICAgdXJsOiBgc3VibWlzc2lvbnNgLFxuICAgICAgICAgICAgICAgIGhpZGRlbjogIXRoaXMuY29uZmlnLmN1cnJlbnQuaXNfc3VibWlzc2lvbl9jYXRlZ29yeVxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIFwiY2F0ZWdvcmllc1wiIDoge1xuICAgICAgICAgICAgICAgIG5hbWU6IFwiQ3JlYXRpb24gQ2F0ZWdvcnlcIiwgXG4gICAgICAgICAgICAgICAgdmFsdWU6IChyZWNlbnQuY2F0ZWdvcmllcyB8fCB7fSkudmFsdWUgfHwgXCJEZWZhdWx0XCIsXG4gICAgICAgICAgICAgICAgc2VsZWN0ZWQ6IChyZWNlbnQuY2F0ZWdvcmllcyB8fCB7fSkuc2VsZWN0ZWQgfHwgMCxcbiAgICAgICAgICAgICAgICB1cmw6IGBjYXRlZ29yaWVzYCxcbiAgICAgICAgICAgICAgICBoaWRkZW46ICF0aGlzLmNvbmZpZy5jdXJyZW50LmlzX2NyZWF0aW9uX2NhdGVnb3JpZXNcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBcImNvbnRyYWN0XCIgOiB7IFxuICAgICAgICAgICAgICAgICAgICBuYW1lOiBcIkNvbnRyYWN0XCIsIFxuICAgICAgICAgICAgICAgICAgICB2YWx1ZTogcmVjZW50LmRlZmF1bHRfY29udHJhY3RfbmFtZSB8fCBcIkNob29zZVwiLFxuICAgICAgICAgICAgICAgICAgICBzZWxlY3RlZDogcmVjZW50LmRlZmF1bHRfY29udHJhY3RfaWQgfHwgdGhpcy5jb25maWcuZ2V0UmVjZW50KFwiY29udHJhY3RcIikuc2VsZWN0ZWQgfHwgMCxcbiAgICAgICAgICAgICAgICAgICAgdXJsOiBgY29udHJhY3RzP2FjY291bnRfaWQ9JHt0aGlzLmFjY291bnRfaWR9JmZvcl90aW1lX2xvZ3M9ZmFsc2VgLFxuICAgICAgICAgICAgICAgICAgICBoaWRkZW46IGZhbHNlICAgIFxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBcImNsYXNzXCIgOiB7XG4gICAgICAgICAgICAgICAgbmFtZTogXCJDbGFzc1wiLCBcbiAgICAgICAgICAgICAgICB2YWx1ZTogKHJlY2VudC5jbGFzcyB8fCB7fSkudmFsdWUgfHwgXCJDaG9vc2VcIixcbiAgICAgICAgICAgICAgICBzZWxlY3RlZDogKHJlY2VudC5jbGFzcyB8fCB7fSkuc2VsZWN0ZWQgfHwgMCxcbiAgICAgICAgICAgICAgICB1cmw6IFwiY2xhc3Nlc1wiLFxuICAgICAgICAgICAgICAgIGhpZGRlbjogZmFsc2VcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBcInByaW9yaXR5XCIgOiB7XG4gICAgICAgICAgICAgICAgbmFtZTogXCJQcmlvcml0eVwiLCBcbiAgICAgICAgICAgICAgICB2YWx1ZTogKHJlY2VudC5wcmlvcml0eSB8fCB7fSkudmFsdWUgfHwgXCJEZWZhdWx0XCIsXG4gICAgICAgICAgICAgICAgc2VsZWN0ZWQ6IChyZWNlbnQucHJpb3JpdHkgfHwge30pLnNlbGVjdGVkIHx8IDAsXG4gICAgICAgICAgICAgICAgdXJsOiBcInByaW9yaXRpZXNcIixcbiAgICAgICAgICAgICAgICBoaWRkZW46IGZhbHNlXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgXCJ0b2Rvc1wiIDogeyBcbiAgICAgICAgICAgICAgICAgICAgbmFtZTogXCJUb0RvIFRlbXBsYXRlc1wiLCBcbiAgICAgICAgICAgICAgICAgICAgdmFsdWU6IChyZWNlbnQudG9kb3MgfHwge30pLnZhbHVlIHx8IFwiU2VsZWN0XCIsXG4gICAgICAgICAgICAgICAgICAgIHNlbGVjdGVkOiAocmVjZW50LnRvZG9zIHx8IHt9KS5zZWxlY3RlZCB8fCAwLFxuICAgICAgICAgICAgICAgICAgICB1cmw6IGB0b2Rvcy90ZW1wbGF0ZXNgLFxuICAgICAgICAgICAgICAgICAgICBoaWRkZW46IGZhbHNlICAgIFxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBcImxldmVsXCI6IHtcbiAgICAgICAgICAgICAgICAgbmFtZTogXCJMZXZlbFwiLFxuICAgICAgICAgICAgICAgICB2YWx1ZTogXCJEZWZhdWx0XCIsXG4gICAgICAgICAgICAgICAgIHNlbGVjdGVkOiAwLFxuICAgICAgICAgICAgICAgICB1cmw6IFwibGV2ZWxzXCIsXG4gICAgICAgICAgICAgICAgIGhpZGRlbjogIXRoaXMuY29uZmlnLmN1cnJlbnQuaXNfdGVjaF9jaG9vc2VfbGV2ZWxzICYmICF0aGlzLmNvbmZpZy5jdXJyZW50LnVzZXIuaXNfYWRtaW5cbiAgICAgICAgICAgfVxuICAgICAgICB9O1xuXG4gICAgICAgIGlmKHRoaXMuc2VsZWN0cy5jbGFzcy5zZWxlY3RlZCA+IDApXG4gICAgICAgICAgICB0aGlzLmdldEN1c3RvbWZpZWxkKHJlY2VudC5jbGFzcy5zZWxlY3RlZCk7XG5cbiAgICAgICAgdGhpcy5zZWxlY3RzLnRlY2ggPSB7XG4gICAgICAgICAgICBuYW1lOiBcIlRlY2hcIiwgXG4gICAgICAgICAgICB2YWx1ZTogKHRoaXMuZGF0YS50ZWNoIHx8IHt9KS5uYW1lIHx8IFwiQ2hvb3NlXCIsXG4gICAgICAgICAgICBzZWxlY3RlZDogKHRoaXMuZGF0YS50ZWNoIHx8IHt9KS5pZCB8fCAwLFxuICAgICAgICAgICAgdXJsOiB0aGlzLmNvbmZpZy5jdXJyZW50LmlzX2FsbG93X3VzZXJfY2hvb3NlX3RlY2ggJiYgdGhpcy5jb25maWcuY3VycmVudC5pc19hbGxvd191c2VyX2Nob29zZV9xdWV1ZV9vbmx5ID8gXCJ1c2Vycz9yb2xlPXF1ZXVlXCIgOiBcInRlY2huaWNpYW5zXCIsXG4gICAgICAgICAgICBoaWRkZW46IGZhbHNlXG4gICAgICAgIH07XG4gXG4gICAgICAgIHRoaXMuc2VsZWN0cy5hY2NvdW50ID0ge1xuICAgICAgICAgICAgbmFtZTogXCJBY2NvdW50XCIsIFxuICAgICAgICAgICAgdmFsdWU6IHRoaXMucHJvZmlsZS5hY2NvdW50X25hbWUgfHwgKHRoaXMuZGF0YS5hY2NvdW50IHx8IHt9KS5uYW1lIHx8IChyZWNlbnQuYWNjb3VudCB8fCB7fSkudmFsdWUgfHwgdGhpcy5oZS5hY2NvdW50X25hbWUsXG4gICAgICAgICAgICBzZWxlY3RlZDogdGhpcy5hY2NvdW50X2lkLFxuICAgICAgICAgICAgdXJsOiBcImFjY291bnRzP2lzX3dpdGhfc3RhdGlzdGljcz1mYWxzZSZsaW1pdD01MDBcIixcbiAgICAgICAgICAgIGhpZGRlbjogZmFsc2VcbiAgICAgICAgfTtcblxuICAgICAgICB0aGlzLnRpY2tldCA9XG4gICAgICAgICAgICB7XG4gICAgICAgICAgICBcInN1YmplY3RcIiA6IFwiXCIsXG4gICAgICAgICAgICBcImluaXRpYWxfcG9zdFwiIDogXCJcIixcbiAgICAgICAgICAgIFwiY2xhc3NfaWRcIiA6IHRoaXMuY2xhc3NfaWQsXG4gICAgICAgICAgICBcImFjY291bnRfaWRcIiA6IHRoaXMuYWNjb3VudF9pZCxcbiAgICAgICAgICAgIFwibG9jYXRpb25faWRcIjogdGhpcy5sb2NhdGlvbl9pZCxcbiAgICAgICAgICAgIFwidXNlcl9pZFwiIDogdGhpcy5oZS51c2VyX2lkLFxuICAgICAgICAgICAgXCJ0ZWNoX2lkXCIgOiAwLFxuICAgICAgICAgICAgXCJkZWZhdWx0X2NvbnRyYWN0X2lkXCI6IGNvbnRyYWN0X2lkLFxuICAgICAgICAgICAgXCJwcmlvcml0eV9pZFwiIDogMCxcbiAgICAgICAgICAgIFwiZXN0aW1hdGVkX3RpbWVcIjogMCxcbiAgICAgICAgfTtcblxuICAgICAgICB0aGlzLnRpY2tldC5lc3RpbWF0ZWRfdGltZSA9IHRoaXMuZ2V0Rml4ZWQodGhpcy50aWNrZXQuZXN0aW1hdGVkX3RpbWUpO1xuXG4gICAgICAgICAgICB0aGlzLmdldEN1c3RvbWZpZWxkKGNvbnRyYWN0X2lkKTtcbiAgICB9XG5cbiAgICBkaXNtaXNzUGFnZShkYXRhKSB7XG4gICAgICAgIGlmIChkYXRhKVxuICAgICAgICAgICAgdGhpcy5uYXYuYWxlcnQodGhpcy5jb25maWcuY3VycmVudC5uYW1lcy50aWNrZXQucyArICcgd2FzIFN1Y2Nlc2Z1bGx5IENyZWF0ZWQgOiknKTtcbiAgICAgICAgLy9kYXRhLmlzX2FkZF9UaW1lIG9uIFRpY2tldCBDcmVhdGlvbiA9IHRydWVcbiAgICAgICAgdGhpcy52aWV3Q3RybC5kaXNtaXNzKGRhdGEpO1xuICAgIH1cblxuICAgIHNhdmVTZWxlY3QoZXZlbnQpe1xuICAgICAgICBsZXQgbmFtZSA9IGV2ZW50LnR5cGU7XG4gICAgICAgIGlmIChuYW1lID09IFwiY3JlYXRpb25jYXRlZ29yeVwiKVxuICAgICAgICAgICAgbmFtZSA9IFwiY2F0ZWdvcmllc1wiO1xuICAgICAgICBpZiAobmFtZSA9PSBcInN1Ym1pc3Npb25jYXRlZ29yeVwiKVxuICAgICAgICAgICAgbmFtZSA9IFwic3VibWlzc2lvbnNcIjtcbiAgICAgICAgaWYgKG5hbWUgPT0gXCJ0b2RvdGVtcGxhdGVzXCIpXG4gICAgICAgICAgICBuYW1lID0gXCJ0b2Rvc1wiO1xuICAgICAgICBsZXQgY29udHJhY3RfaWQgPSB0aGlzLnNlbGVjdHMuY29udHJhY3Quc2VsZWN0ZWQ7XG4gICAgICAgIC8vY2hhbmdlIHVybCBvbiByZWxhdGVkIGxpc3RzXG4gICAgICAgIHN3aXRjaCAobmFtZSkge1xuICAgICAgICAgICAgY2FzZSBcInVzZXJcIiA6XG4gICAgICAgICAgICAgICAgdGhpcy5zZWxlY3RzLnVzZXIudmFsdWUgPSBldmVudC5uYW1lO1xuICAgICAgICAgICAgICAgIHRoaXMuc2VsZWN0cy51c2VyLnNlbGVjdGVkID0gZXZlbnQuaWQ7XG4gICAgICAgICAgICAgICAgdGhpcy5nZXRQcm9maWxlKGV2ZW50LmlkKTtcbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIGNhc2UgXCJhY2NvdW50XCIgOlxuICAgICAgICAgICAgICAgIHRoaXMuZ2V0UHJvZmlsZSh0aGlzLnNlbGVjdHMudXNlci5zZWxlY3RlZCwgZXZlbnQuaWQpO1xuICAgICAgICAgICAgICAgIHRoaXMuc2VsZWN0cy5wcm9qZWN0LnVybCA9IGBwcm9qZWN0cz9hY2NvdW50PSR7ZXZlbnQuaWR9JmlzX3dpdGhfc3RhdGlzdGljcz1mYWxzZWA7XG4gICAgICAgICAgICAgICAgdGhpcy5zZWxlY3RzLnByb2plY3QudmFsdWUgPSBcIkRlZmF1bHRcIjtcbiAgICAgICAgICAgICAgICB0aGlzLnNlbGVjdHMucHJvamVjdC5zZWxlY3RlZCA9IDA7XG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgdGhpcy5zZWxlY3RzLmFjY291bnQudmFsdWUgPSBldmVudC5uYW1lO1xuICAgICAgICAgICAgICAgIHRoaXMuc2VsZWN0cy5hY2NvdW50LnNlbGVjdGVkID0gZXZlbnQuaWQ7XG4gICAgICAgICAgICAgICAgdGhpcy5hY2NvdW50X2lkID0gZXZlbnQuaWQ7XG5cbiAgICAgICAgICAgICAgICB0aGlzLnNlbGVjdHMuY29udHJhY3QudXJsID0gYGNvbnRyYWN0cz9hY2NvdW50X2lkPSR7ZXZlbnQuaWR9JmZvcl90aW1lX2xvZ3M9ZmFsc2VgO1xuICAgICAgICAgICAgICAgIHRoaXMuc2VsZWN0cy5jb250cmFjdC52YWx1ZSA9IFwiRGVmYXVsdFwiO1xuICAgICAgICAgICAgICAgIHRoaXMuc2VsZWN0cy5jb250cmFjdC5zZWxlY3RlZCA9IDA7XG4gICAgICAgICAgICAgICAgY29udHJhY3RfaWQgPSAwO1xuXG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICBjYXNlIFwiY2xhc3NcIiA6XG4gICAgICAgICAgICAgICAgdGhpcy5zZWxlY3RzLmNsYXNzLnZhbHVlID0gZXZlbnQubmFtZTtcbiAgICAgICAgICAgICAgICB0aGlzLnNlbGVjdHMuY2xhc3Muc2VsZWN0ZWQgPSBldmVudC5pZDtcbiAgICAgICAgICAgICAgICB0aGlzLmNsYXNzX2lkID0gZXZlbnQuaWQ7XG4gICAgICAgICAgICAgICAgaWYgKHRoaXMudGlja2V0LmNsYXNzX2lkID09IGV2ZW50LmlkKVxuICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICB0aGlzLmdldEN1c3RvbWZpZWxkKGV2ZW50LmlkKTtcbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIGNhc2UgXCJ0b2Rvc1wiIDpcbiAgICAgICAgICAgICAgICB0aGlzLnNlbGVjdHMudG9kb3MudmFsdWUgPSBldmVudC5uYW1lIHx8IFwiU2VsZWN0XCI7XG4gICAgICAgICAgICAgICAgdGhpcy5zZWxlY3RzLnRvZG9zLnNlbGVjdGVkID0gZXZlbnQuaWQgfHwgMDtcbiAgICAgICAgICAgICAgICBicmVhazsgICAgICAgICAgXG4gICAgICAgICAgICAgIFxuICAgICAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5zZWxlY3RzW25hbWVdLnNlbGVjdGVkID0gZXZlbnQuaWQ7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuc2VsZWN0c1tuYW1lXS52YWx1ZSA9IGV2ZW50Lm5hbWUgfHwgXCJEZWZhdWx0XCI7XG4gICAgICAgIGJyZWFrO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgZ2V0UHJvZmlsZShpZD8sIGFjY291bnQ/KXtcbiAgICAgICAgICAgIHRoaXMuZGF0YVByb3ZpZGVyLmdldFByb2ZpbGUoaWQsIGFjY291bnQpLnN1YnNjcmliZShcbiAgICAgICAgICAgIGRhdGEgPT4ge1xuICAgICAgICAgICAgICAgIHRoaXMucHJvZmlsZSA9IGRhdGE7XG4gICAgICAgICAgICAgICAgaWYgKGlkICYmICFhY2NvdW50KSB7XG4gICAgICAgICAgICAgICAgdGhpcy5zZWxlY3RzLmFjY291bnQudmFsdWUgPSB0aGlzLnByb2ZpbGUuYWNjb3VudF9uYW1lIHx8IHRoaXMuaGUuYWNjb3VudF9uYW1lO1xuICAgICAgICAgICAgICAgIHRoaXMuc2VsZWN0cy5hY2NvdW50LnNlbGVjdGVkID0gdGhpcy5wcm9maWxlLmFjY291bnRfaWQgfHwgLTE7XG4gICAgICAgICAgICAgICAgdGhpcy5nZXRQcm9maWxlKGlkLCB0aGlzLnNlbGVjdHMuYWNjb3VudC5zZWxlY3RlZCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIHRoaXMuc2VsZWN0cy5sb2NhdGlvbi51cmwgPSBgbG9jYXRpb25zP2FjY291bnQ9JHt0aGlzLnNlbGVjdHMuYWNjb3VudC5zZWxlY3RlZCB8fCAtMX0mbGltaXQ9NTAwYDtcbiAgICAgICAgICAgICAgICB0aGlzLnNlbGVjdHMubG9jYXRpb24udmFsdWUgPSB0aGlzLmxvY2F0aW9uIHx8IHRoaXMucHJvZmlsZS5sb2NhdGlvbl9uYW1lIHx8ICh0aGlzLmhlLmlzX3RlY2hvcmFkbWluID8gXCJEZWZhdWx0XCIgOiBcIkNob29zZVwiKTtcbiAgICAgICAgICAgICAgICB0aGlzLnNlbGVjdHMubG9jYXRpb24uc2VsZWN0ZWQgPSB0aGlzLmxvY2F0aW9uX2lkIHx8IHRoaXMucHJvZmlsZS5sb2NhdGlvbl9pZCB8fCAwO1xuXG4gICAgICAgICAgICAgICAgdGhpcy5hY2NvdW50X2lkID0gdGhpcy5zZWxlY3RzLmFjY291bnQuc2VsZWN0ZWQ7XG4gICAgICAgICAgICAgICAgdGhpcy5zZWxlY3RzLmNvbnRyYWN0LnVybCA9IGBjb250cmFjdHM/YWNjb3VudF9pZD0ke3RoaXMuYWNjb3VudF9pZH0mZm9yX3RpbWVfbG9ncz1mYWxzZWBcbiAgICAgICAgICAgICAgICAgICB9LCBcbiAgICAgICAgICAgIGVycm9yID0+IHsgXG4gICAgICAgICAgICAgICAgY29uc29sZS5sb2coZXJyb3IgfHwgJ1NlcnZlciBlcnJvcicpO31cbiAgICAgICAgKTsgICAgICAgICAgXG4gICAgICAgIH1cblxuICAgIHNhdmVDdXN0b21maWVsZChldmVudCl7XG4gICAgIHRoaXMuY3VzdG9tZmllbGRzLmZpbHRlcih0YyA9PiB0Yy5pZCA9PSBldmVudC5pZClbMF0udmFsdWUgPSBldmVudC52YWx1ZTtcbiAgIH1cblxuICAgZ2V0WE1MKClcbiAgIHtcbiAgICAgIHZhciBjdXN0b21maWVsZF94bWwgPSBcIlwiO1xuICAgICAgICAgIGZvciAodmFyIG4gPSAwOyAgbiA8IHRoaXMuY3VzdG9tZmllbGRzLmxlbmd0aDsgbisrKVxuICAgICAgICAgeyBcbiAgICAgICAgICAgaWYgKHRoaXMuY3VzdG9tZmllbGRzW25dLnJlcXVpcmVkICYmIHRoaXMuY3VzdG9tZmllbGRzW25dLnZhbHVlID09IFwiXCIgfHwgdGhpcy5jdXN0b21maWVsZHNbbl0udmFsdWUgPT0gXCIwMDAxLTAxLTAxVDAwOjAwOjAwLjAwMDAwMDBcIil7XG4gICAgICAgICAgICAgdGhpcy5uYXYuYWxlcnQoYFBsZWFzZSBhZGQgdmFsdWUgdG8gY3VzdG9tIGZpZWxkOiAke3RoaXMuY3VzdG9tZmllbGRzW25dLm5hbWV9YCwgdHJ1ZSk7XG4gICAgICAgICAgICAgcmV0dXJuIGN1c3RvbWZpZWxkX3htbCA9IFwiXCI7XG4gICAgICAgICAgIH1cbiAgICAgICAgICAgY3VzdG9tZmllbGRfeG1sID0gY3VzdG9tZmllbGRfeG1sICsgYDxmaWVsZCBpZD1cIiR7dGhpcy5jdXN0b21maWVsZHNbbl0uaWR9XCI+PGNhcHRpb24+JHt0aGlzLmN1c3RvbWZpZWxkc1tuXS5uYW1lfTwvY2FwdGlvbj48dmFsdWU+JHt0aGlzLmN1c3RvbWZpZWxkc1tuXS52YWx1ZX08L3ZhbHVlPjwvZmllbGQ+YDtcbiAgICAgICAgIH1cbiAgICAgIHJldHVybiBcIjxyb290PlwiICsgY3VzdG9tZmllbGRfeG1sICsgXCI8L3Jvb3Q+XCI7ICBcblxuICAgfVxuXG4gICB1cGxvYWRlZEZpbGUoZXZlbnQpXG4gICB7XG4gICAgIC8vaWYgKGV2ZW50LmluZGV4T2YoXCJva1wiKSA9PSAwKVxuICAgICAvL3tcbiAgICAgICAgdGhpcy5kaXNtaXNzUGFnZSh0aGlzLnRpY2tldCk7XG4gICAgIC8vfVxuICAgfVxuXG4gICBzZWxlY3RlZEZpbGUoZXZlbnQpXG4gICB7XG4gICAgIHRoaXMuZmlsZXMgPSBldmVudDtcbiAgICAgdGhpcy50aWNrZXQuaW5pdGlhbF9wb3N0ID0gdGhpcy50aWNrZXQuaW5pdGlhbF9wb3N0LnRyaW0oKTsgXG4gICAgIGlmIChldmVudC5sZW5ndGggJiYgIXRoaXMudGlja2V0LmluaXRpYWxfcG9zdClcbiAgICAge1xuICAgICAgIHRoaXMudGlja2V0LmluaXRpYWxfcG9zdCA9IFwiICBcIjtcbiAgICAgfVxuICAgfVxuXG4gICBnZXRDdXN0b21maWVsZChjbGFzc19pZClcbiAgIHtcbiAgICAgICBpZiAoY2xhc3NfaWQgPT0gMClcbiAgICAgICAgICAgcmV0dXJuIHRoaXMuY3VzdG9tZmllbGRzID0gW107XG4gICAgIHRoaXMudGlja2V0UHJvdmlkZXIuZ2V0Q3VzdG9tZmllbGRzKGNsYXNzX2lkLCB0aGlzLnBhZ2VyKS5zdWJzY3JpYmUoXG4gICAgICAgZGF0YSA9PiB7XG4gICAgICAgICAgIHRoaXMuY3VzdG9tZmllbGRzID0gZGF0YTtcbiAgICAgICB9LFxuICAgICAgIGVycm9yID0+IHtcbiAgICAgICAgIGNvbnNvbGUubG9nKGVycm9yIHx8ICdTZXJ2ZXIgZXJyb3InKTtcbiAgICAgICB9XG4gICAgICAgKTtcbiAgIH1cblxuICAgIG9uU3VibWl0KGZvcm0pIHtcbiAgICAgICAgLyppZiAoIXRoaXMuc2VsZWN0cy50ZWNoLmlkKVxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIHRoaXMubmF2LmFsZXJ0KCdQbGVhc2Ugc2VsZWN0IHRlY2huaWNpYW4uLi4nLCB0cnVlKTtcbiAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICAqL1xuICAgICAgICBpZiAoZm9ybS52YWxpZCl7XG4gICAgICAgICAgICAvL3Byb29mIGRvdWJsZSBjbGlja1xuICAgICAgICAgICAgaWYgKHRoaXMudGlja2V0LmluX3Byb2dyZXNzICYmIERhdGUubm93KCkgLSB0aGlzLnRpY2tldC5pbl9wcm9ncmVzcyA8IDE1MDApIHtyZXR1cm47fVxuICAgICAgICAgICAgdGhpcy50aWNrZXQuaW5fcHJvZ3Jlc3MgPSBEYXRlLm5vdygpO1xuICAgICAgICAgICAgaWYgKHRoaXMuY29uZmlnLmN1cnJlbnQuaXNfYnVkZ2V0X3RpbWUpXG4gICAgICAgICAgICAgICAgdGhpcy50aWNrZXQuZXN0aW1hdGVkX3RpbWUgPSBpc05hTihmb3JtLnZhbHVlLmJ1ZGdldGVkX3RpbWUpID8gMCA6IE51bWJlcihmb3JtLnZhbHVlLmJ1ZGdldGVkX3RpbWUpO1xuICAgICAgICAgICBcbiAgICAgICAgICAgIHRoaXMudGlja2V0LnN1YmplY3QgPSBodG1sRXNjYXBlKHRoaXMudGlja2V0LnN1YmplY3QudHJpbSgpKTsgICAgICAgICAgXG4gICAgICAgICAgICB0aGlzLnRpY2tldC5pbml0aWFsX3Bvc3QgPSBodG1sRXNjYXBlKHRoaXMudGlja2V0LmluaXRpYWxfcG9zdC50cmltKCkpLnN1YnN0cigwLCA0NTAwKTtcbiAgICAgICAgICAgIGlmICh0aGlzLmNvbmZpZy5jdXJyZW50LmlzX3JlcXVpcmVfdGlja2V0X2luaXRpYWxfcG9zdCAmJiAhdGhpcy50aWNrZXQuaW5pdGlhbF9wb3N0Lmxlbmd0aCAmJiAhdGhpcy5maWxlcy5sZW5ndGgpXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgdGhpcy5uYXYuYWxlcnQoXCJOb3RlIGlzIHJlcXVpcmVkIVwiLHRydWUpO1xuICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgaWYgKCF0aGlzLmhlLmlzX3RlY2hvcmFkbWluICYmIHRoaXMuY29uZmlnLmN1cnJlbnQuaXNfbG9jYXRpb25fdHJhY2tpbmcgJiYgIXRoaXMuc2VsZWN0cy5sb2NhdGlvbi5zZWxlY3RlZClcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICB0aGlzLm5hdi5hbGVydChcIlBsZWFzZSBjaG9vc2UgXCIrdGhpcy5jb25maWcuY3VycmVudC5uYW1lcy5sb2NhdGlvbi5zLHRydWUpO1xuICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmICghdGhpcy5oZS5pc190ZWNob3JhZG1pbiAmJiB0aGlzLmNvbmZpZy5jdXJyZW50LmlzX2NsYXNzX3RyYWNraW5nICYmICF0aGlzLnNlbGVjdHMuY2xhc3Muc2VsZWN0ZWQpXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgdGhpcy5uYXYuYWxlcnQoXCJQbGVhc2UgY2hvb3NlIENsYXNzXCIsdHJ1ZSk7XG4gICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKHRoaXMuY29uZmlnLmN1cnJlbnQuaXNfc3VibWlzc2lvbl9jYXRlZ29yeSAmJiAhdGhpcy5zZWxlY3RzLnN1Ym1pc3Npb25zLnNlbGVjdGVkKVxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIHRoaXMubmF2LmFsZXJ0KFwiUGxlYXNlIGNob29zZSBTdWJtaXNzaW9uIENhdGVnb3J5XCIsdHJ1ZSk7XG4gICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKHRoaXMuY29uZmlnLmN1cnJlbnQuaXNfY3JlYXRpb25fY2F0ZWdvcmllcyAmJiB0aGlzLmNvbmZpZy5jdXJyZW50LmlzX2NyZWF0aW9uX2NhdGVnb3JpZXNfcmVxdWlyZWRfb25fY3JlYXRpb24gJiYgIXRoaXMuc2VsZWN0cy5jYXRlZ29yaWVzLnNlbGVjdGVkKVxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIHRoaXMubmF2LmFsZXJ0KFwiUGxlYXNlIGNob29zZSBDcmVhdGlvbiBDYXRlZ29yeVwiLHRydWUpO1xuICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgaWYgKHRoaXMuZmlsZXMubGVuZ3RoKVxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIHRoaXMudGlja2V0LmluaXRpYWxfcG9zdCArPSBcIlxcblxcbkZvbGxvd2luZyBmaWxlXCIgKyAodGhpcy5maWxlcy5sZW5ndGggPiAxID8gXCJzIHdlcmVcIiA6IFwiIHdhc1wiKSArIFwiIHVwbG9hZGVkOiBcIiArIHRoaXMuZmlsZXMuam9pbihcIiwgXCIpICtcIi5cIjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHZhciBjdXN0b21maWVsZHNfeG1sID0gdGhpcy5nZXRYTUwoKTtcbiAgICAgICAgICAgICBpZiAoY3VzdG9tZmllbGRzX3htbCA9PSBcIlwiKSBcbiAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgIFxuXG4gICAgICAgICAgICB0aGlzLnRpY2tldC5jbGFzc19pZCA9IHRoaXMuc2VsZWN0cy5jbGFzcy5zZWxlY3RlZDtcbiAgICAgICAgICAgIHRoaXMudGlja2V0LmFjY291bnRfaWQgPSB0aGlzLnNlbGVjdHMuYWNjb3VudC5zZWxlY3RlZDtcbiAgICAgICAgICAgIHRoaXMudGlja2V0LmxvY2F0aW9uX2lkID0gdGhpcy5zZWxlY3RzLmxvY2F0aW9uLnNlbGVjdGVkO1xuICAgICAgICAgICAgdGhpcy50aWNrZXQudXNlcl9pZCA9IHRoaXMuaGUuaXNfdGVjaG9yYWRtaW4gPyB0aGlzLnNlbGVjdHMudXNlci5zZWxlY3RlZCA6IHRoaXMuaGUudXNlcl9pZDtcbiAgICAgICAgICAgIHRoaXMudGlja2V0LnRlY2hfaWQgPSB0aGlzLnNlbGVjdHMudGVjaC5zZWxlY3RlZDtcbiAgICAgICAgICAgIHRoaXMudGlja2V0LnRvZG9zX2lkID0gdGhpcy5zZWxlY3RzLnRvZG9zLnNlbGVjdGVkO1xuICAgICAgICAgICAgdGhpcy50aWNrZXQucHJpb3JpdHlfaWQgPSB0aGlzLnNlbGVjdHMucHJpb3JpdHkuc2VsZWN0ZWQ7XG4gICAgICAgICAgICB0aGlzLnRpY2tldC5sZXZlbCA9IHRoaXMuc2VsZWN0cy5sZXZlbC5zZWxlY3RlZDtcbiAgICAgICAgICAgIHRoaXMudGlja2V0LmN1c3RvbWZpZWxkc194bWwgPSBjdXN0b21maWVsZHNfeG1sO1xuICAgICAgICAgICAgdGhpcy50aWNrZXQuZGVmYXVsdF9jb250cmFjdF9pZCA9IHRoaXMuc2VsZWN0cy5jb250cmFjdC5zZWxlY3RlZDtcbiAgICAgICAgICAgIHRoaXMudGlja2V0LmRlZmF1bHRfY29udHJhY3RfbmFtZSA9IHRoaXMuc2VsZWN0cy5jb250cmFjdC52YWx1ZTtcbiAgICAgICAgICAgIHRoaXMudGlja2V0LmNyZWF0aW9uX2NhdGVnb3J5X2lkID0gdGhpcy5zZWxlY3RzLmNhdGVnb3JpZXMuc2VsZWN0ZWQ7XG4gICAgICAgICAgICB0aGlzLnRpY2tldC5jcmVhdGlvbl9jYXRlZ29yeV9uYW1lID0gdGhpcy5zZWxlY3RzLmNhdGVnb3JpZXMudmFsdWU7XG4gICAgICAgICAgICB0aGlzLnRpY2tldC5zdWJtaXNzaW9uX2NhdGVnb3J5ID0gdGhpcy5zZWxlY3RzLnN1Ym1pc3Npb25zLnZhbHVlO1xuICAgICAgICAgICAgdGhpcy50aWNrZXQudG9kb190ZW1wbGF0ZXMgPSB0aGlzLnNlbGVjdHMudG9kb3Muc2VsZWN0ZWQ7XG5cbiAgICAgICAgICAgIHRoaXMudGlja2V0UHJvdmlkZXIuYWRkVGlja2V0KHRoaXMudGlja2V0KS5zdWJzY3JpYmUoXG4gICAgICAgICAgICAgICAgZGF0YSA9PiB7XG4gICAgICAgICAgICAgICAgICAgIGlmICghdGhpcy5kYXRhLmFjY291bnQpXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgdGhpcy5jb25maWcuc2V0UmVjZW50KHtcImFjY291bnRcIjogdGhpcy5zZWxlY3RzLmFjY291bnQsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcImxvY2F0aW9uXCI6IHRoaXMuc2VsZWN0cy5sb2NhdGlvbixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXCJwcm9qZWN0XCI6IHRoaXMuc2VsZWN0cy5wcm9qZWN0LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcImNsYXNzXCI6IHRoaXMuc2VsZWN0cy5jbGFzcyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXCJkZWZhdWx0X2NvbnRyYWN0X2lkXCI6IHRoaXMuc2VsZWN0cy5jb250cmFjdC5zZWxlY3RlZCxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXCJkZWZhdWx0X2NvbnRyYWN0X25hbWVcIjogdGhpcy5zZWxlY3RzLmNvbnRyYWN0LnZhbHVlLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcImNhdGVnb3JpZXNcIjogdGhpcy5zZWxlY3RzLmNhdGVnb3JpZXMsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFwidG9kb3NcIjogdGhpcy5zZWxlY3RzLnRvZG9zLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcInN1Ym1pc3Npb25zXCI6IHRoaXMuc2VsZWN0cy5zdWJtaXNzaW9ucyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXCJwcmlvcml0eVwiOiB0aGlzLnNlbGVjdHMucHJpb3JpdHl9KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgaWYgKHRoaXMuZmlsZXMubGVuZ3RoKVxuICAgICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgICAgIHRoaXMudGlja2V0ID0gZGF0YTsgXG4gICAgICAgICAgICAgICAgICAgICAgIHRoaXMuZmlsZURlc3QudGlja2V0ID0gZGF0YS5rZXk7XG4gICAgICAgICAgICAgICAgICAgICAgIHRoaXMudXBsb2FkQ29tcG9uZW50Lm9uVXBsb2FkKCk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgZWxzZSBcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuZGlzbWlzc1BhZ2UoZGF0YSk7XG4gICAgICAgICAgICAgICAgfSwgXG4gICAgICAgICAgICAgICAgZXJyb3IgPT4geyBcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5uYXYuYWxlcnQodGhpcy5oZS5pc190ZWNob3JhZG1pbiA/IChcIlBsZWFzZSBzZWxlY3QgXCIgKyB0aGlzLmNvbmZpZy5jdXJyZW50Lm5hbWVzLnRlY2gucykgOiBlcnJvciwgdHJ1ZSk7XG4gICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKGVycm9yIHx8ICdTZXJ2ZXIgZXJyb3InKTt9XG4gICAgICAgICAgICApO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgZ2V0Rml4ZWQodmFsdWUpe1xuICAgICAgICByZXR1cm4gTnVtYmVyKHZhbHVlIHx8IFwiMFwiKS50b0ZpeGVkKDIpO1xuICAgIH1cbn1cblxuIiwiaW1wb3J0IHtOYXYsIE5hdlBhcmFtcywgUGFnZSwgVmlld0NvbnRyb2xsZXIsIENvbmZpZ30gZnJvbSAnaW9uaWMtYW5ndWxhcic7XG5pbXBvcnQge2ZvcndhcmRSZWZ9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHtUaWNrZXRQcm92aWRlcn0gZnJvbSAnLi4vLi4vLi4vcHJvdmlkZXJzL3RpY2tldC1wcm92aWRlcic7XG5pbXBvcnQge2h0bWxFc2NhcGV9IGZyb20gJy4uLy4uLy4uL2RpcmVjdGl2ZXMvaGVscGVycyc7XG5pbXBvcnQge1NlbGVjdExpc3RDb21wb25lbnR9IGZyb20gJy4uLy4uLy4uL2NvbXBvbmVudHMvc2VsZWN0LWxpc3Qvc2VsZWN0LWxpc3QnO1xuXG5cbkBQYWdlKHtcbiAgICB0ZW1wbGF0ZVVybDogJ2J1aWxkL3BhZ2VzL21vZGFscy90cmFuc2Zlci10aWNrZXQvdHJhbnNmZXItdGlja2V0Lmh0bWwnLFxuICAgIGRpcmVjdGl2ZXM6IFtmb3J3YXJkUmVmKCgpID0+IFNlbGVjdExpc3RDb21wb25lbnQpXSxcbn0pXG5leHBvcnQgY2xhc3MgVHJhbnNmZXJUaWNrZXRNb2RhbCB7XG5cbiAgICBhY2NvdW50X2lkOiBhbnk7XG4gICAga2VlcF9hdHRhY2hlZDogYm9vbGVhbjtcbiAgICB0aWNrZXRub3RlOiBzdHJpbmc7XG4gICAgdGlja2V0OiBhbnk7XG4gICAgc2VsZWN0czogYW55O1xuICAgIGlzX3RlY2hzX29ubHk6IGJvb2xlYW4gPSBmYWxzZTtcblxuICAgIGNvbnN0cnVjdG9yKHByaXZhdGUgbmF2OiBOYXYsIHByaXZhdGUgbmF2UGFyYW1zOiBOYXZQYXJhbXMsIHByaXZhdGUgdGlja2V0UHJvdmlkZXI6IFRpY2tldFByb3ZpZGVyLCBwcml2YXRlIGNvbmZpZzogQ29uZmlnLFxuICAgICAgICBwcml2YXRlIHZpZXdDdHJsOiBWaWV3Q29udHJvbGxlcikge1xuICAgICAgICBuYXYuc3dpcGVCYWNrRW5hYmxlZCA9IGZhbHNlO1xuICAgICAgICB0aGlzLmNvbmZpZyA9IGNvbmZpZztcbiAgICB9XG5cblxuICAgIG5nT25Jbml0KCkge1xuXG4gICAgICAgIHRoaXMua2VlcF9hdHRhY2hlZCA9IGZhbHNlO1xuXG4gICAgICAgIHRoaXMudGlja2V0ID0gdGhpcy5uYXZQYXJhbXMuZGF0YSB8fCAwO1xuICAgICAgICB0aGlzLmFjY291bnRfaWQgPSB0aGlzLnRpY2tldC5hY2NvdW50X2lkO1xuICAgICAgICB0aGlzLnNlbGVjdHMgPSB7XG4gICAgICAgICAgICBcInRlY2hcIjoge1xuICAgICAgICAgICAgICAgIG5hbWU6IFwidGVjaFwiLFxuICAgICAgICAgICAgICAgIHZhbHVlOiBcIkNob29zZVwiLFxuICAgICAgICAgICAgICAgIHNlbGVjdGVkOiAwLFxuICAgICAgICAgICAgICAgIGhpZGRlbjogZmFsc2UsXG4gICAgICAgICAgICAgICAgdXJsOiBcInRlY2huaWNpYW5zXCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICB9O1xuICAgICAgICAgICB9XG5cbiAgICBkaXNtaXNzKGRhdGEpIHtcbiAgICAgICAgLy9sZXQgZGF0YSA9IHsgJ2Zvbyc6ICdiYXInIH07XG4gICAgICAgIC8vaXRlbSA9IGl0ZW0gfHwge307XG4gICAgICAgIHRoaXMudmlld0N0cmwuZGlzbWlzcyhkYXRhKTtcbiAgICB9XG5cbiAgICBzYXZlU2VsZWN0KGV2ZW50KSB7XG4gICAgICAgIGxldCBuYW1lID0gZXZlbnQudHlwZTtcbiAgICAgICAgdGhpcy5zZWxlY3RzLnNlbGVjdGVkID0gZXZlbnQuaWQ7XG4gICAgICAgIHRoaXMuc2VsZWN0cy52YWx1ZSA9IGV2ZW50Lm5hbWU7XG4gICAgICAgIHRoaXMuYWNjb3VudF9pZCA9IGV2ZW50LmlkO1xuICAgIH1cbiAgICBcbiAgICBvblN1Ym1pdChmb3JtKSB7XG4gICAgICAgIGlmIChmb3JtLnZhbGlkKSB7XG4gICAgICAgICAgICB2YXIgcG9zdCA9IGh0bWxFc2NhcGUoKHRoaXMudGlja2V0bm90ZSB8fCBcIlwiKS50cmltKCkpLnN1YnN0cigwLCA1MDAwKTtcbiAgICAgICAgICAgIGxldCBuZXd0ZWNoID0ge1xuICAgICAgICAgICAgICAgIFwibm90ZV90ZXh0XCI6IHBvc3QsXG4gICAgICAgICAgICAgICAgXCJuYW1lXCI6IHRoaXMuc2VsZWN0cy52YWx1ZSxcbiAgICAgICAgICAgICAgICBcInRlY2hfaWRcIjogdGhpcy5zZWxlY3RzLnNlbGVjdGVkLFxuICAgICAgICAgICAgICAgIFwia2VlcF9hdHRhY2hlZFwiOiB0aGlzLmtlZXBfYXR0YWNoZWQsXG4gICAgICAgICAgICAgICAgXCJpc190ZWNoc19vbmx5XCI6IHRoaXMuaXNfdGVjaHNfb25seSxcbiAgICAgICAgICAgICAgICBcImFjdGlvblwiOiAgXCJ0cmFuc2ZlclwiLFxuICAgICAgICAgICAgfTtcbiAgICAgICAgICAgIHRoaXMudGlja2V0UHJvdmlkZXIudHJhbnNmZXJVc2VyVGVjaCh0aGlzLnRpY2tldC5rZXksIG5ld3RlY2gpLnN1YnNjcmliZShcbiAgICAgICBkYXRhID0+IHtcbiAgICAgICAgIHRoaXMubmF2LmFsZXJ0KHRoaXMuY29uZmlnLmN1cnJlbnQubmFtZXMudGlja2V0LnMgKyAnIGhhcyBiZWVuIHRyYW5zZmVycmVkIDopJyk7XG4gICAgICAgICB0aGlzLmRpc21pc3MobmV3dGVjaCk7XG4gICAgICAgfSxcbiAgICAgICBlcnJvciA9PiB7XG4gICAgICAgICB0aGlzLm5hdi5hbGVydChlcnJvciwgdHJ1ZSk7XG4gICAgICAgICBjb25zb2xlLmxvZyhlcnJvciB8fCAnU2VydmVyIGVycm9yJyk7XG4gICAgICAgfVxuICAgICAgICk7XG5cbiAgICAgICAgfVxuICAgIH1cblxuXG5cbn0iLCJpbXBvcnQge05hdiwgTmF2UGFyYW1zLCBQYWdlLCBFdmVudHMsIFZpZXdDb250cm9sbGVyfSBmcm9tICdpb25pYy1hbmd1bGFyJztcbi8vaW1wb3J0IHtJbnB1dH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQge0NvbXBvbmVudCwgT25Jbml0fSBmcm9tICdAYW5ndWxhci9jb3JlJztcbi8vaW1wb3J0IHtOZ0NsYXNzfSBmcm9tICdAYW5ndWxhci9jb21tb24nO1xuaW1wb3J0IHtUcmVlVmlld0NvbXBvbmVudCwgSVRyZWVOb2RlfSBmcm9tICcuLi8uLi8uLi9jb21wb25lbnRzL3RyZWUtdmlldy90cmVlLXZpZXcnO1xuXG5AUGFnZSh7XG4gICAgdGVtcGxhdGVVcmw6ICdidWlsZC9wYWdlcy9tb2RhbHMvdHJlZS1tb2RhbC90cmVlLW1vZGFsLmh0bWwnLFxuICAgIGRpcmVjdGl2ZXM6IFtUcmVlVmlld0NvbXBvbmVudF1cbn0pXG5leHBvcnQgY2xhc3MgVHJlZU1vZGFsIHtcblxuICAgIE5vZGVzOiBBcnJheTxJVHJlZU5vZGU+O1xuICAgIHNlbGVjdGVkTm9kZTogSVRyZWVOb2RlO1xuICAgIG5hbWU6IHN0cmluZztcblxuICAgIGNvbnN0cnVjdG9yKFxuICAgIHByaXZhdGUgcGFyYW1zOiBOYXZQYXJhbXMsXG4gICAgIHByaXZhdGUgdmlld0N0cmw6IFZpZXdDb250cm9sbGVyXG4gICAgKSB7XG4gICAgICAgIHRoaXMubmFtZSA9IHRoaXMucGFyYW1zLmRhdGEubmFtZTtcbiAgICAgICAgdGhpcy5Ob2RlcyA9IHRoaXMucGFyYW1zLmRhdGEuaXRlbXM7XG4gICAgfVxuICAgIFxuICAgIC8vINC+0LHRgNCw0LHQvtGC0LrQsCDRgdC+0LHRi9GC0LjRjyDRgdC80LXQvdGLINCy0YvQsdGA0LDQvdC90L7Qs9C+INGD0LfQu9CwXG4gICAgb25TZWxlY3ROb2RlKG5vZGU6IElUcmVlTm9kZSkge1xuICAgICAgICB0aGlzLnNlbGVjdGVkTm9kZSA9IG5vZGU7XG4gICAgICAgIC8vY29uc29sZS5sb2cobm9kZSk7XG4gICAgfVxuLy8g0L7QsdGA0LDQsdC+0YLQutCwINGB0L7QsdGL0YLQuNGPINCy0LvQvtC20LXQvdC90YvRhSDRg9C30LvQvtCyXG5vblJlcXVlc3QocGFyZW50OiBJVHJlZU5vZGUpIHtcbiAgICByZXR1cm47XG4gICAgLy90aGlzLnRyZWVTZXJ2aWNlLkdldE5vZGVzKHBhcmVudC5pZCkuc3Vic2NyaWJlKCByZXMgPT4gcGFyZW50LnN1YiA9IHJlcywgZXJyb3I9PiBjb25zb2xlLmxvZyhlcnJvcikpO1xufVxuXG5cbiAgICBkaXNtaXNzKGlzQ2FuY2VsKSB7XG4gICAgICAgIC8vbGV0IGRhdGEgPSB7ICdmb28nOiAnYmFyJyB9O1xuICAgICAgICBsZXQgaXRlbSA9IHt9O1xuICAgICAgICBpZiAodGhpcy5zZWxlY3RlZE5vZGUgJiYgIWlzQ2FuY2VsKVxuICAgICAgICAgICAgaXRlbSA9IHtcbiAgICAgICAgICAgICAgICBpZDogdGhpcy5zZWxlY3RlZE5vZGUuaWQsXG4gICAgICAgICAgICAgICAgbmFtZTogdGhpcy5zZWxlY3RlZE5vZGUubmFtZVxuICAgICAgICAgICAgfTtcbiAgICAgICAgdGhpcy52aWV3Q3RybC5kaXNtaXNzKGl0ZW0pO1xuICAgIH1cbn0iLCJpbXBvcnQge1BhZ2UsIENvbmZpZywgTmF2LCBFdmVudHMsIExvYWRpbmd9IGZyb20gJ2lvbmljLWFuZ3VsYXInO1xuaW1wb3J0IHtEYXRhUHJvdmlkZXJ9IGZyb20gJy4uLy4uL3Byb3ZpZGVycy9kYXRhLXByb3ZpZGVyJztcbmltcG9ydCB7VGlja2V0UHJvdmlkZXJ9IGZyb20gJy4uLy4uL3Byb3ZpZGVycy90aWNrZXQtcHJvdmlkZXInO1xuaW1wb3J0IHtUaW1lUHJvdmlkZXJ9IGZyb20gJy4uLy4uL3Byb3ZpZGVycy90aW1lLXByb3ZpZGVyJztcbmltcG9ydCB7U2l0ZSwgaXNTRH0gZnJvbSAnLi4vLi4vcHJvdmlkZXJzL2NvbmZpZyc7XG5pbXBvcnQge29wZW5VUkxzeXN0ZW19IGZyb20gJy4uLy4uL2RpcmVjdGl2ZXMvaGVscGVycyc7XG5pbXBvcnQge0xvZ2luUGFnZX0gZnJvbSAnLi4vbG9naW4vbG9naW4nO1xuaW1wb3J0IHtEYXNoYm9hcmRQYWdlfSBmcm9tICcuLi9kYXNoYm9hcmQvZGFzaGJvYXJkJztcbmltcG9ydCB7VGlja2V0c1BhZ2V9IGZyb20gJy4uL3RpY2tldHMvdGlja2V0cyc7XG5cbkBQYWdlKHtcbiAgICB0ZW1wbGF0ZVVybDogJ2J1aWxkL3BhZ2VzL29yZ2FuaXphdGlvbnMvb3JnYW5pemF0aW9ucy5odG1sJyxcbn0pXG5leHBvcnQgY2xhc3MgT3JnYW5pemF0aW9uc1BhZ2Uge1xuXG4gICAgbGlzdDogQXJyYXk8YW55PiA9IFtdO1xuXG4gICAgY29uc3RydWN0b3IocHJpdmF0ZSBuYXY6IE5hdiwgcHJpdmF0ZSBkYXRhUHJvdmlkZXI6IERhdGFQcm92aWRlciwgcHJpdmF0ZSBjb25maWc6IENvbmZpZywgcHJpdmF0ZSBldmVudHM6IEV2ZW50cywgcHJpdmF0ZSB0aWNrZXRQcm92aWRlcjogVGlja2V0UHJvdmlkZXIsIHByaXZhdGUgdGltZVByb3ZpZGVyOiBUaW1lUHJvdmlkZXIpIHtcbiAgICAgICAgLy9wYXJ0bHkgbG9nb3V0XG4gICAgICAgIHZhciBrZXkgPSB0aGlzLmNvbmZpZy5nZXRDdXJyZW50KFwia2V5XCIpO1xuICAgICAgICBldmVudHMucHVibGlzaChcImFwcDpsb2dvdXRcIiwga2V5KTtcbiAgICAgICAgdGhpcy50aWNrZXRQcm92aWRlci5fZGF0YVN0b3JlID0ge2FsbDogW10sYWx0OiBbXSx0ZWNoOiBbXSx1c2VyOiBbXX07XG4gICAgICAgIHRoaXMuZGF0YVByb3ZpZGVyLl9kYXRhU3RvcmUgPSB0aGlzLnRpbWVQcm92aWRlci5fZGF0YVN0b3JlID0ge307XG4gICAgICAgIC8vdGhpcy5jb25maWcuc2F2ZUN1cnJlbnQoKTtcbiAgICAgICAgLy9jbGVhciBhbHNvIGNocm9tZSBleHQgaWYgbmVlZGVkXG4gICAgICAgIGlmIChsb2NhbFN0b3JhZ2UuZ2V0SXRlbShcImlzRXh0ZW5zaW9uXCIpID09PSBcInRydWVcIilcbiAgICAgICAgICAgIHdpbmRvdy50b3AucG9zdE1lc3NhZ2UoXCJsb2dvdXRcIiwgXCIqXCIpO1xuICAgICAgICBcbiAgICAgICAgdGhpcy5kYXRhUHJvdmlkZXIuZ2V0T3JnYW5pemF0aW9ucyhrZXkpLnN1YnNjcmliZShcbiAgICAgICAgICAgIGRhdGEgPT4ge1xuICAgICAgICAgICAgICAgIHZhciBvcmcgPSBsb2NhbFN0b3JhZ2UuZ2V0SXRlbSgnbG9hZE9yZ0tleScpIHx8ICcnO1xuICAgICAgICAgICAgICAgIGlmIChvcmcpIGxvY2FsU3RvcmFnZS5zZXRJdGVtKCdsb2FkT3JnS2V5JywgXCJcIik7XG4gICAgICAgICAgICAgICAgdmFyIG9yZ19kYXRhID0gb3JnID8gZGF0YS5maWx0ZXIodD0+IHQua2V5ID09IG9yZykgOiBudWxsO1xuICAgICAgICAgICAgICAgIGlmIChvcmdfZGF0YSlcbiAgICAgICAgICAgICAgICAgICAgZGF0YSA9IG9yZ19kYXRhO1xuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIGlmIChkYXRhLmxlbmd0aCA9PSAxKVxuICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKGRhdGFbMF0uaW5zdGFuY2VzLmxlbmd0aCA9PSAxKVxuICAgICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLmNvbmZpZy5zZXRDdXJyZW50KHtpc19tdWx0aXBsZV9vcmcgOiBmYWxzZX0pO1xuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5vblNlbGVjdEluc3QoeyBvcmc6IGRhdGFbMF0ua2V5LCBpbnN0OiBkYXRhWzBdLmluc3RhbmNlc1swXS5rZXkgfSk7XG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgZWxzZVxuICAgICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLmxpc3QgPSBkYXRhO1xuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy50b2dnbGUoZGF0YVswXSwgMCk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgZWxzZVxuICAgICAgICAgICAgICAgICAgICB0aGlzLmxpc3QgPSBkYXRhO1xuICAgICAgICAgICAgICAgIHRoaXMuY29uZmlnLnNldEN1cnJlbnQoe2lzX211bHRpcGxlX29yZyA6IHRydWV9KTtcbiAgICAgICAgICAgIH0sIFxuICAgICAgICAgICAgZXJyb3IgPT4geyBcbiAgICAgICAgICAgICAgICB0aGlzLm5hdi5hbGVydChcIkNhbm5vdCBnZXQgbGlzdCBvZiBPcmdhbml6YXRpb25zXCIsIHRydWUpO1xuICAgICAgICAgICAgICAgIHRoaXMuY29uZmlnLmNsZWFyQ3VycmVudCgpO1xuICAgICAgICAgICAgICAgIHRoaXMubmF2LnNldFJvb3QoTG9naW5QYWdlLCBudWxsLCB7IGFuaW1hdGlvbjogXCJ3cC10cmFuc2l0aW9uXCIgfSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICApOyBcbiAgICB9XG5cbiAgICBvblBhZ2VMb2FkZWQoKVxuICAgIHtcbiAgICAgIC8vZG9jdW1lbnQudGl0bGUgPSBcIk9yZ2FuaXphdGlvbnMgOiBcIiArIGRvY3VtZW50LnRpdGxlIDsgIFxuICAgIH1cblxuICAgIHRvZ2dsZShvcmcsIGluZGV4KXtcbiAgICAgICAgaWYgKG9yZy5pbnN0YW5jZXMubGVuZ3RoID09IDEpXG4gICAgICAgIHtcbiAgICAgICAgICAgIHRoaXMub25TZWxlY3RJbnN0KHtvcmc6IG9yZy5rZXksIGluc3Q6IG9yZy5pbnN0YW5jZXNbMF0ua2V5fSk7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICAgICAgLy90aGlzLmxpc3QgPSB0aGlzLmxpc3QubWFwKG8gPT4ge28uZXhwYW5kZWQgPSBmYWxzZTsgcmV0dXJuIG87fSk7XG4gICAgICAgIHRoaXMubGlzdC5mb3JFYWNoKChvLCBpKSA9PiBvLmV4cGFuZGVkID0gZmFsc2UpO1xuICAgICAgICB0aGlzLmxpc3RbaW5kZXhdLmV4cGFuZGVkID0gdGhpcy5saXN0W2luZGV4XS5leHBhbmRlZCA/IGZhbHNlIDogdHJ1ZTtcbiAgICB9XG4gICAgXG4gICAgc3VwcG9ydCgpXG4gICAge1xuICAgICAgICBvcGVuVVJMc3lzdGVtKGBodHRwczovL3N1cHBvcnQuJHtTaXRlfXBvcnRhbC9gKTtcbiAgICB9XG4gICAgXG4gICAgYWxlcnRPcmcobmFtZSl7XG4gICAgICAgIHRoaXMubmF2LmFsZXJ0KG5hbWUgKyBcIiBoYXMgZXhwaXJlZCBvciBpbmFjdGl2YXRlZC4gQ29udGFjdCBTaGVycGFEZXNrIGZvciBhc3Npc3RhbmNlLiBFbWFpbDogc3VwcG9ydEBzaGVycGFkZXNrLmNvbSBQaG9uZTogKzEgKDg2NikgOTk2LTEyMDAsIHRoZW4gcHJlc3MgMlwiLCB0cnVlKTtcbiAgICB9XG4gICAgXG4gICAgb25TZWxlY3RJbnN0KGluc3RhbmNlKSB7XG4gICAgICAgIGxldCBsb2FkaW5nID0gTG9hZGluZy5jcmVhdGUoe1xuICAgICAgICAgICAgY29udGVudDogXCJMb2FkaW5nIGNvbmZpZ3VyYXRpb24uLi5cIixcbiAgICAgICAgICAgICAgICBkdXJhdGlvbjogMzAwMCxcbiAgICAgICAgICAgICAgICBkaXNtaXNzT25QYWdlQ2hhbmdlOiB0cnVlXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgdGhpcy5uYXYucHJlc2VudChsb2FkaW5nKTtcbiAgICAgICAgdGhpcy5jb25maWcuc2V0Q3VycmVudCh7IG9yZyA6IGluc3RhbmNlLm9yZywgaW5zdGFuY2UgOiBpbnN0YW5jZS5pbnN0fSk7XG4gICAgICAgIHRoaXMuZXZlbnRzLnB1Ymxpc2goXCJjb25maWc6Z2V0XCIsIHRydWUpO1xuICAgIH1cbn1cbiIsImV4cG9ydCAqIGZyb20gJy4vYWNjb3VudC1kZXRhaWxzL2FjY291bnQtZGV0YWlscyc7XHJcbmV4cG9ydCAqIGZyb20gJy4vYWNjb3VudHMvYWNjb3VudHMnO1xyXG5leHBvcnQgKiBmcm9tICcuL3RlY2huaWNpYW5zL3RlY2huaWNpYW5zJztcclxuZXhwb3J0ICogZnJvbSAnLi9sb2NhdGlvbnMvbG9jYXRpb25zJztcclxuZXhwb3J0ICogZnJvbSAnLi9hamF4LXNlYXJjaC9hamF4LXNlYXJjaCc7XHJcbmV4cG9ydCAqIGZyb20gJy4vZGFzaGJvYXJkL2Rhc2hib2FyZCc7XHJcbmV4cG9ydCAqIGZyb20gJy4vcHJvZmlsZS9wcm9maWxlJztcclxuZXhwb3J0ICogZnJvbSAnLi9leHBlbnNlLWNyZWF0ZS9leHBlbnNlLWNyZWF0ZSc7XHJcbmV4cG9ydCAqIGZyb20gJy4vZXhwZW5zZXMvZXhwZW5zZXMnO1xyXG5leHBvcnQgKiBmcm9tICcuL2ludm9pY2UtZGV0YWlscy9pbnZvaWNlLWRldGFpbHMnO1xyXG5leHBvcnQgKiBmcm9tICcuL2ludm9pY2VzL2ludm9pY2VzJztcclxuZXhwb3J0ICogZnJvbSAnLi9sb2dpbi9sb2dpbic7XHJcbmV4cG9ydCAqIGZyb20gJy4vb3JnYW5pemF0aW9ucy9vcmdhbml6YXRpb25zJztcclxuZXhwb3J0ICogZnJvbSAnLi9xdWV1ZS10aWNrZXRzL3F1ZXVlLXRpY2tldHMnO1xyXG5leHBvcnQgKiBmcm9tICcuL3RlY2gtdGlja2V0cy90ZWNoLXRpY2tldHMnO1xyXG5leHBvcnQgKiBmcm9tICcuL3F1ZXVlcy9xdWV1ZXMnO1xyXG5leHBvcnQgKiBmcm9tICcuL2NvbnRyYWN0cy9jb250cmFjdHMnO1xyXG5leHBvcnQgKiBmcm9tICcuL3NpZ251cC9zaWdudXAnO1xyXG5leHBvcnQgKiBmcm9tICcuL3RpY2tldC1kZXRhaWxzL3RpY2tldC1kZXRhaWxzJztcclxuZXhwb3J0ICogZnJvbSAnLi90aWNrZXRzL3RpY2tldHMnO1xyXG5leHBvcnQgKiBmcm9tICcuL3RpbWVsb2cvdGltZWxvZyc7XHJcbmV4cG9ydCAqIGZyb20gJy4vdGltZWxvZ3MvdGltZWxvZ3MnO1xyXG5leHBvcnQgKiBmcm9tICcuL2ludm9pY2UtY3JlYXRlL2ludm9pY2UtY3JlYXRlJztcclxuZXhwb3J0ICogZnJvbSAnLi91bmludm9pY2VzL3VuaW52b2ljZXMnO1xyXG5leHBvcnQgKiBmcm9tICcuL3RvZG9zL3RvZG9zJztcclxuZXhwb3J0ICogZnJvbSAnLi90b2RvLWNyZWF0ZS90b2RvLWNyZWF0ZSc7XHJcbmV4cG9ydCAqIGZyb20gJy4vc2t5cGUvc2t5cGUnO1xyXG4iLCJpbXBvcnQge1BhZ2UsIENvbmZpZywgTmF2LCBOYXZQYXJhbXMsIFZpZXdDb250cm9sbGVyfSBmcm9tICdpb25pYy1hbmd1bGFyJztcbmltcG9ydCB7Zm9yd2FyZFJlZiwgVmlld0NoaWxkfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7aHRtbEVzY2FwZSwgbGluZWJyZWFrcywgYWRkcH0gZnJvbSAnLi4vLi4vZGlyZWN0aXZlcy9oZWxwZXJzJztcbmltcG9ydCB7RGF0YVByb3ZpZGVyfSBmcm9tICcuLi8uLi9wcm92aWRlcnMvZGF0YS1wcm92aWRlcic7XG5pbXBvcnQge1RpbWVQcm92aWRlcn0gZnJvbSAnLi4vLi4vcHJvdmlkZXJzL3Byb3ZpZGVycyc7XG5pbXBvcnQge1RpbWVsb2dzUGFnZX0gZnJvbSAnLi4vdGltZWxvZ3MvdGltZWxvZ3MnO1xuaW1wb3J0IHtTZWxlY3RMaXN0Q29tcG9uZW50fSBmcm9tICcuLi8uLi9jb21wb25lbnRzL3NlbGVjdC1saXN0L3NlbGVjdC1saXN0JztcbmltcG9ydCB7R3JhdmF0YXJQaXBlfSBmcm9tICcuLi8uLi9waXBlcy9waXBlcyc7XG5cbkBQYWdlKHtcbiAgICB0ZW1wbGF0ZVVybDogJ2J1aWxkL3BhZ2VzL3Byb2ZpbGUvcHJvZmlsZS5odG1sJyxcbiAgICBkaXJlY3RpdmVzOiBbZm9yd2FyZFJlZigoKSA9PiBTZWxlY3RMaXN0Q29tcG9uZW50KV0sXG4gICAgcGlwZXM6IFtHcmF2YXRhclBpcGVdLFxufSlcbmV4cG9ydCBjbGFzcyBQcm9maWxlUGFnZSB7XG5cbiAgICBwcm9maWxlOiBhbnkgPSB7fTtcbiAgICBxdWV1ZXM6IGFueSA9IHt9O1xuICAgIHF1ZXVlX2lkOiBhbnkgPSB7fTtcbiAgICBxdWV1ZV9uYW1lOiBhbnkgPSBbXTtcbiAgICBpc19xdWV1ZTogYW55ID0ge307XG4gICAgaXNfcXVldWUxOiBib29sZWFuID0gZmFsc2U7XG4gICAgaXNfcXVldWUyOiBib29sZWFuID0gZmFsc2U7XG4gICAgaXNfcXVldWUzOiBib29sZWFuID0gZmFsc2U7XG4gICAgZGF0ZTogc3RyaW5nO1xuICAgIHRpdGxlOiBzdHJpbmcgPSBcIlwiO1xuICAgIHNlbGVjdHM6IGFueSA9IHt9O1xuICAgIG46IG51bWJlciA9IDM7XG4gICAgd29ya2luZzogbnVtYmVyID0gMDtcbiAgICBub25fd29ya2luZ19ob3VyczogbnVtYmVyID0gMDtcbiAgICBjYWNoZW5hbWU6IHN0cmluZztcblxuXG5cbiAgICBjb25zdHJ1Y3Rvcihwcml2YXRlIG5hdjogTmF2LCBwcml2YXRlIGNvbmZpZzogQ29uZmlnLCBwcml2YXRlIGRhdGFQcm92aWRlcjogRGF0YVByb3ZpZGVyLCBwcml2YXRlIHRpbWVQcm92aWRlcjogVGltZVByb3ZpZGVyKSB7XG4gIH1cblxuXG5uZ09uSW5pdCgpXG57ICAgIFxuICAgIHRoaXMuZ2V0UHJvZmlsZSgpO1xuICAgIGlmICh0aGlzLmNvbmZpZy5jdXJyZW50LnVzZXIuaXNfdGVjaG9yYWRtaW4pXG4gICAgICAgIHRoaXMuZ2V0UXVldWUoKTtcbiAgICBsZXQgcmVjZW50ID0gdGhpcy5jb25maWcuY3VycmVudC5yZWNlbnQgfHwge307XG4gICAgaWYgKHRoaXMuY29uZmlnLmN1cnJlbnQudXNlci5pc190ZWNob3JhZG1pbil7XG4gICAgICAgICAgICB2YXIgbG9jYWxRdWVyZXNfaWQgPSBsb2NhbFN0b3JhZ2UuZ2V0SXRlbSgncXVldWVfaWQnKTtcbiAgICAgICAgICAgIHZhciBsb2NhbF9pc19RdWVyZXMgPSBsb2NhbFN0b3JhZ2UuZ2V0SXRlbSgnaXNfcXVldWUnKTtcbiAgICAgICAgICAgIHRoaXMucXVldWVfaWQgPSBsb2NhbFF1ZXJlc19pZCA/IGxvY2FsU3RvcmFnZS5nZXRJdGVtKCdxdWV1ZV9pZCcpLnNwbGl0KFwiLCBcIikgOiBbXTtcbiAgICAgICAgICAgIHRoaXMuaXNfcXVldWUgPSBsb2NhbF9pc19RdWVyZXMgPyBsb2NhbFN0b3JhZ2UuZ2V0SXRlbSgnaXNfcXVldWUnKS5zcGxpdChcIiwgXCIpIDogW107XG5cbiAgICAgICAgICAgIHRoaXMuaXNfcXVldWUxID0gdGhpcy5pc19xdWV1ZTEgfHwgKGxvY2FsU3RvcmFnZS5nZXRJdGVtKCdpc19xdWV1ZTEnKSA9PSBcInRydWVcIik/IHRydWUgOiBmYWxzZTtcbiAgICAgICAgICAgIHRoaXMuaXNfcXVldWUyID0gdGhpcy5pc19xdWV1ZTIgfHwgKGxvY2FsU3RvcmFnZS5nZXRJdGVtKCdpc19xdWV1ZTInKSA9PSBcInRydWVcIik/IHRydWUgOiBmYWxzZTtcbiAgICAgICAgICAgIHRoaXMuaXNfcXVldWUzID0gdGhpcy5pc19xdWV1ZTMgfHwgKGxvY2FsU3RvcmFnZS5nZXRJdGVtKCdpc19xdWV1ZTMnKSA9PSBcInRydWVcIik/IHRydWUgOiBmYWxzZTtcbiAgICAgICAgfVxuICAgICAgICAgICAgaWYgKHRoaXMuY29uZmlnLmN1cnJlbnQuaXNfdGltZV90cmFja2luZyAmJiB0aGlzLmNvbmZpZy5jdXJyZW50LnVzZXIuaXNfdGVjaG9yYWRtaW4pe1xuICAgICAgICAgICAgICAgIGxldCBkYXRlID0gbmV3IERhdGUoKS50b0pTT04oKS5zdWJzdHJpbmcoMCwxMCk7XG4gICAgICAgICAgICAgICAgbGV0IGFjY291bnQgPSBcIjBcIjtcbiAgICAgICAgICAgICAgICB0aGlzLmNhY2hlbmFtZSA9IGFkZHAoXCJ0aW1lXCIsIFwiYWNjb3VudFwiLCBhY2NvdW50KTtcbiAgICAgICAgICAgICAgICB0aGlzLmNhY2hlbmFtZSA9IGFkZHAodGhpcy5jYWNoZW5hbWUsIFwidGVjaFwiLCB0aGlzLmNvbmZpZy5jdXJyZW50LnVzZXIudXNlcl9pZCk7XG4gICAgICAgICAgICAgICAgdGhpcy5jYWNoZW5hbWUgPSBhZGRwKHRoaXMuY2FjaGVuYW1lLCBcInN0YXJ0X2RhdGVcIiwgZGF0ZSk7XG4gICAgICAgICAgICAgICAgdGhpcy5jYWNoZW5hbWUgPSBhZGRwKHRoaXMuY2FjaGVuYW1lLCBcImVuZF9kYXRlXCIsIGRhdGUpO1xuICAgICAgICAgICAgICAgIHRoaXMuY291bnRIb3Vycyh0aGlzLnRpbWVQcm92aWRlci5fZGF0YVN0b3JlW3RoaXMuY2FjaGVuYW1lXSB8fCBbXSk7XG4gICAgICAgICB9XG5cbiAgICAgICAgfVxuXG5cbiAgICAgICAgZ2V0UHJvZmlsZSgpe1xuICAgICAgICAgICAgdGhpcy5kYXRhUHJvdmlkZXIuZ2V0UHJvZmlsZSgpLnN1YnNjcmliZShcbiAgICAgICAgICAgIGRhdGEgPT4ge1xuICAgICAgICAgICAgICAgIHRoaXMucHJvZmlsZSA9IGRhdGE7ICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICB9LCBcbiAgICAgICAgICAgIGVycm9yID0+IHsgXG4gICAgICAgICAgICAgICAgY29uc29sZS5sb2coZXJyb3IgfHwgJ1NlcnZlciBlcnJvcicpO31cbiAgICAgICAgKTsgXG4gICAgICAgIH1cblxuICAgICAgICBnZXRRdWV1ZSgpe1xuICAgICAgICAgICAgdGhpcy5kYXRhUHJvdmlkZXIuZ2V0UXVldWVMaXN0KCkuc3Vic2NyaWJlKFxuICAgICAgICAgICAgICAgIGRhdGEgPT4ge1xuICAgICAgICAgICAgICAgICAgICB0aGlzLnF1ZXVlcyA9IGRhdGE7XG4gICAgICAgICAgICAgICAgICAgIGlmIChkYXRhLmxlbmd0aCA8IHRoaXMubikgXG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLm4gPSBkYXRhLmxlbmd0aDtcblxuICAgICAgICAgICAgICAgICAgICBpZiAodGhpcy5xdWV1ZV9pZCA9PSAwKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IHRoaXMubjsgKytpKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5xdWV1ZV9pZFtpXSA9IHRoaXMucXVldWVzW2ldLmlkO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMucXVldWVfbmFtZVtpXSA9IHRoaXMucXVldWVzW2ldLmZ1bGxuYW1lO1xuXG4gICAgICAgICAgICAgICAgICAgICAgICB9ICAgXG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IHRoaXMubjsgKytpKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbGV0IHNvcnQgPSAodGhpcy5xdWV1ZXMuZmlsdGVyKCB2ID0+IHRoaXMucXVldWVfaWRbaV0gPT0gdi5pZCApKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBzb3J0LmZvckVhY2goaXRlbSA9PiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMucXVldWVfbmFtZS5wdXNoKGl0ZW0uZnVsbG5hbWUpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5pc19xdWV1ZTEgPSB0aGlzLmlzX3F1ZXVlWzBdICE9IFwiMFwiID8gdHJ1ZSA6IGZhbHNlO1xuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5pc19xdWV1ZTIgPSB0aGlzLmlzX3F1ZXVlWzFdICE9IFwiMFwiID8gdHJ1ZSA6IGZhbHNlO1xuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5pc19xdWV1ZTMgPSB0aGlzLmlzX3F1ZXVlWzJdICE9IFwiMFwiID8gdHJ1ZSA6IGZhbHNlO1xuICAgICAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCB0aGlzLm47ICsraSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5zZWxlY3RzW1wicXVldWVcIisoaSsxKV0gPSB7XG4gICAgICAgICAgICAgICAgICAgIG5hbWU6IFwiUXVldWUgXCIrKGkrMSksIFxuICAgICAgICAgICAgICAgICAgICB2YWx1ZTogIHRoaXMucXVldWVfbmFtZVtpXSB8fCBcIkRlZmF1bHRcIixcbiAgICAgICAgICAgICAgICAgICAgc2VsZWN0ZWQ6IHRoaXMucXVldWVfaWRbaV0gfHwgMCxcbiAgICAgICAgICAgICAgICAgICAgaXRlbXM6IHRoaXMucXVldWVzLFxuICAgICAgICAgICAgICAgICAgICBoaWRkZW46IGZhbHNlLFxuICAgICAgICAgICAgICAgICAgICBpc19kaXNhYmxlZDogZmFsc2VcbiAgICAgICAgICAgICAgICB9O1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB0aGlzLmZpbHRlclF1ZXVlcygpO1xuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgZXJyb3IgPT4ge1xuICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhlcnJvciB8fCAnU2VydmVyIGVycm9yJyk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICk7XG4gICAgICAgIH1cblxuICAgICAgICBmaWx0ZXJRdWV1ZXMoKXtcbiAgICAgICAgICAgIGxldCBzb3J0ID0gdGhpcy5xdWV1ZXMuZmlsdGVyKCB2ID0+IHRoaXMucXVldWVfaWRbMF0gIT0gdi5pZCAmJiB0aGlzLnF1ZXVlX2lkWzFdICE9IHYuaWQgJiYgdGhpcy5xdWV1ZV9pZFsyXSAhPSB2LmlkKTtcbiAgICAgICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgdGhpcy5uOyArK2kpIHtcbiAgICAgICAgICAgICAgICBpZiAoc29ydC5sZW5ndGggIT0gMClcbiAgICAgICAgICAgIHRoaXMuc2VsZWN0c1tcInF1ZXVlXCIrKGkrMSldLml0ZW1zID0gc29ydDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIGNvdW50SG91cnMoZGF0YSl7XG4gICAgICAgIGxldCBub25fd29ya2luZ19ob3VycyA9IDA7XG4gICAgICAgIGxldCB3b3JraW5nID0gMDtcbiAgICAgICAgZGF0YS5mb3JFYWNoKGl0ZW0gPT4ge1xuICAgICAgICAgICAgd29ya2luZyArPSBpdGVtLmhvdXJzO1xuICAgICAgICAgICAgICAgIGlmIChpdGVtLm5vbl93b3JraW5nX2hvdXJzICE9IC0xKVxuICAgICAgICAgICAgICAgICAgICBub25fd29ya2luZ19ob3VycyArPSBpdGVtLm5vbl93b3JraW5nX2hvdXJzO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB0aGlzLm5vbl93b3JraW5nX2hvdXJzID0gbm9uX3dvcmtpbmdfaG91cnM7XG4gICAgICAgICAgICB0aGlzLndvcmtpbmcgPSB3b3JraW5nO1xuICAgICAgICB9XG5cbiAgICAgICAgc2F2ZVNlbGVjdChldmVudCl7XG4gICAgICAgICAgICBsZXQgbmFtZSA9IGV2ZW50LnR5cGU7XG4gICAgICAgICAgICAvKmxldCBxdWV1ZTFfaWQgPSB0aGlzLnNlbGVjdHMucXVldWUxLnNlbGVjdGVkO1xuICAgICAgICAgICAgbGV0IHF1ZXVlMl9pZCA9IHRoaXMuc2VsZWN0cy5xdWV1ZTIuc2VsZWN0ZWQ7XG4gICAgICAgICAgICBsZXQgcXVldWUzX2lkID0gdGhpcy5zZWxlY3RzLnF1ZXVlMy5zZWxlY3RlZDsgICAgXG4gICAgICAgICovXG4gICAgICAgIC8vY2hhbmdlIHVybCBvbiByZWxhdGVkIGxpc3RzXG4gICAgICAgIHN3aXRjaCAobmFtZSkge1xuICAgICAgICAgICAgY2FzZSBcInF1ZXVlMVwiOlxuICAgICAgICAgICAgICAgIHRoaXMuc2VsZWN0cy5xdWV1ZTEuc2VsZWN0ZWQgPSB0aGlzLnF1ZXVlX2lkWzBdID0gZXZlbnQuaWQ7XG4gICAgICAgICAgICAgICAgdGhpcy5zZWxlY3RzLnF1ZXVlMS52YWx1ZSA9IHRoaXMucXVldWVfbmFtZVswXSA9IGV2ZW50Lm5hbWU7XG4gICAgICAgICAgICAgICAgdGhpcy5maWx0ZXJRdWV1ZXMoKTtcbiAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgY2FzZSBcInF1ZXVlMlwiOlxuICAgICAgICAgICAgICAgIHRoaXMuc2VsZWN0cy5xdWV1ZTIuc2VsZWN0ZWQgPSB0aGlzLnF1ZXVlX2lkWzFdID0gZXZlbnQuaWQ7XG4gICAgICAgICAgICAgICAgdGhpcy5zZWxlY3RzLnF1ZXVlMi52YWx1ZSA9IHRoaXMucXVldWVfbmFtZVsxXSA9IGV2ZW50Lm5hbWU7XG4gICAgICAgICAgICAgICAgdGhpcy5maWx0ZXJRdWV1ZXMoKTtcbiAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgY2FzZSBcInF1ZXVlM1wiOlxuICAgICAgICAgICAgICAgIHRoaXMuc2VsZWN0cy5xdWV1ZTMuc2VsZWN0ZWQgPSB0aGlzLnF1ZXVlX2lkWzJdID0gZXZlbnQuaWQ7XG4gICAgICAgICAgICAgICAgdGhpcy5zZWxlY3RzLnF1ZXVlMy52YWx1ZSA9IHRoaXMucXVldWVfbmFtZVsyXSA9IGV2ZW50Lm5hbWU7XG4gICAgICAgICAgICAgICAgdGhpcy5maWx0ZXJRdWV1ZXMoKTtcbiAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgaXRlbVRhcHBlZChldmVudCkge1xuICAgICAgICBsZXQgdGVjaCA9IHsgdGVjaF9pZDogdGhpcy5jb25maWcuY3VycmVudC51c2VyLnVzZXJfaWQsIHRlY2hfbmFtZTogdGhpcy5jb25maWcuY3VycmVudC51c2VyLmZpcnN0bmFtZStcIiBcIit0aGlzLmNvbmZpZy5jdXJyZW50LnVzZXIubGFzdG5hbWUgfTtcbiAgICAgICAgdGhpcy5uYXYucHVzaChUaW1lbG9nc1BhZ2UsIHRlY2gpO1xuICAgIH1cblxuICAgIG9uU3VibWl0KGZvcm0pIHtcblxuICAgICAgICAgICAgbGV0IHN0cmluZ19pZCA9IFwiXCI7XG4gICAgICAgICAgICBsZXQgc3RyaW5nX2lzID0gXCJcIjtcbiAgICAgICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgdGhpcy5uOyArK2kpIHtcbiAgICAgICAgICAgICAgICBzdHJpbmdfaWQgKz0gdGhpcy5xdWV1ZV9pZFtpXSArIFwiLCBcIjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHN0cmluZ19pZCA9IHN0cmluZ19pZC5zbGljZSgwLC0yKTtcbiAgICAgICAgICAgIGlmICh0aGlzLmlzX3F1ZXVlMSlcbiAgICAgICAgICAgICAgICBzdHJpbmdfaXMgPSB0aGlzLnF1ZXVlX2lkWzBdICsgXCIsIFwiO1xuICAgICAgICAgICAgZWxzZSBcbiAgICAgICAgICAgICAgICBzdHJpbmdfaXMgPSBcIjAsIFwiO1xuICAgICAgICAgICAgaWYgKHRoaXMuaXNfcXVldWUyKVxuICAgICAgICAgICAgICAgIHN0cmluZ19pcyArPSB0aGlzLnF1ZXVlX2lkWzFdICsgXCIsIFwiO1xuICAgICAgICAgICAgZWxzZSBcbiAgICAgICAgICAgICAgICBzdHJpbmdfaXMgKz0gXCIwLCBcIjtcbiAgICAgICAgICAgIGlmICh0aGlzLmlzX3F1ZXVlMylcbiAgICAgICAgICAgICAgICBzdHJpbmdfaXMgKz0gdGhpcy5xdWV1ZV9pZFsyXSArIFwiXCI7XG4gICAgICAgICAgICBlbHNlIFxuICAgICAgICAgICAgICAgIHN0cmluZ19pcyArPSBcIjBcIjtcblxuICAgICAgICAgICAgbG9jYWxTdG9yYWdlLnNldEl0ZW0oXCJxdWV1ZV9pZFwiLCBzdHJpbmdfaWQpO1xuICAgICAgICAgICAgXG4gICAgICAgICAgICBsb2NhbFN0b3JhZ2Uuc2V0SXRlbShcImlzX3F1ZXVlXCIsIHN0cmluZ19pcyk7XG5cbiAgICAgICAgICAgIFxuICAgICAgICAgICAgdGhpcy5uYXYuYWxlcnQoJ1Byb2ZpbGUgd2FzIHVwZGF0ZWQnKTtcbiAgICAgICAgfVxuICAgIFxuXG59IiwiaW1wb3J0IHtQYWdlLCBDb25maWcsIE5hdiwgTmF2UGFyYW1zLCBNb2RhbCwgVmlld0NvbnRyb2xsZXJ9IGZyb20gJ2lvbmljLWFuZ3VsYXInO1xuaW1wb3J0IHtUaWNrZXRDcmVhdGVQYWdlfSBmcm9tICcuLi9tb2RhbHMvbW9kYWxzJztcbmltcG9ydCB7VGlja2V0RGV0YWlsc1BhZ2V9IGZyb20gJy4uL3RpY2tldC1kZXRhaWxzL3RpY2tldC1kZXRhaWxzJztcbmltcG9ydCB7VGlja2V0c0xpc3RDb21wb25lbnR9IGZyb20gJy4uLy4uL2NvbXBvbmVudHMvdGlja2V0cy1saXN0L3RpY2tldHMtbGlzdCc7XG5cbkBQYWdlKHtcbiAgICB0ZW1wbGF0ZVVybDogJ2J1aWxkL3BhZ2VzL3F1ZXVlLXRpY2tldHMvcXVldWUtdGlja2V0cy5odG1sJyxcbiAgICBkaXJlY3RpdmVzOiBbVGlja2V0c0xpc3RDb21wb25lbnRdLFxufSlcbmV4cG9ydCBjbGFzcyBRdWV1ZVRpY2tldHNQYWdlIHtcblxuXHRxdWV1ZTogYW55O1xuXHRcbiAgICBjb25zdHJ1Y3Rvcihwcml2YXRlIG5hdjogTmF2LCBwcml2YXRlIG5hdlBhcmFtczogTmF2UGFyYW1zLCBwcml2YXRlIHZpZXc6IFZpZXdDb250cm9sbGVyLCBwcml2YXRlIGNvbmZpZzogQ29uZmlnKSB7XG4gICAgICAgIHRoaXMucXVldWUgPSB0aGlzLm5hdlBhcmFtcy5kYXRhO1xuICB9XG5cbm9uUGFnZVdpbGxFbnRlcigpIHtcbiAgICAgICAgICAgIHRoaXMudmlldy5zZXRCYWNrQnV0dG9uVGV4dCgnJyk7XG4gICAgfVxuICAgIFxuICAgIGFkZFRpY2tldCgpIHtcbiAgICAgICAgbGV0IG15TW9kYWwgPSBNb2RhbC5jcmVhdGUoVGlja2V0Q3JlYXRlUGFnZSwgeyAndGVjaCc6IHsgaWQ6IHRoaXMucXVldWUuaWQsIG5hbWU6ICdRdWV1ZSAnICsgdGhpcy5xdWV1ZS5mdWxsbmFtZSB9IH0pO1xuICAgICAgICBteU1vZGFsLm9uRGlzbWlzcyhkYXRhMSA9PiB7XG4gICAgICAgICAgICBpZiAoZGF0YTEpXG4gICAgICAgICAgICAgICAgc2V0VGltZW91dCgoKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMucXVldWUudGlja2V0c19jb3VudCArPSAxO1xuICAgICAgICAgICAgICAgICAgICB0aGlzLm5hdi5wdXNoKFRpY2tldERldGFpbHNQYWdlLCBkYXRhMSk7XG4gICAgICAgICAgICAgICAgfSwgNTAwKTtcbiAgICAgICAgfSk7XG4gICAgICAgIHRoaXMubmF2LnByZXNlbnQobXlNb2RhbCk7XG4gICAgfVxufVxuIiwiaW1wb3J0IHtQYWdlLCBDb25maWcsIE5hdn0gZnJvbSAnaW9uaWMtYW5ndWxhcic7XG5pbXBvcnQge1RpY2tldHNQYWdlfSBmcm9tICcuLi90aWNrZXRzL3RpY2tldHMnO1xuaW1wb3J0IHtEYXRhUHJvdmlkZXJ9IGZyb20gJy4uLy4uL3Byb3ZpZGVycy9kYXRhLXByb3ZpZGVyJztcbmltcG9ydCB7QWpheFNlYXJjaFBhZ2V9IGZyb20gJy4uL2FqYXgtc2VhcmNoL2FqYXgtc2VhcmNoJztcbmltcG9ydCB7UXVldWVzTGlzdENvbXBvbmVudCwgQWN0aW9uQnV0dG9uQ29tcG9uZW50fSBmcm9tICcuLi8uLi9jb21wb25lbnRzL2NvbXBvbmVudHMnO1xuXG5AUGFnZSh7XG4gIHRlbXBsYXRlVXJsOiAnYnVpbGQvcGFnZXMvcXVldWVzL3F1ZXVlcy5odG1sJyxcbiAgICBkaXJlY3RpdmVzOiBbUXVldWVzTGlzdENvbXBvbmVudCwgQWN0aW9uQnV0dG9uQ29tcG9uZW50XVxufSlcbmV4cG9ydCBjbGFzcyBRdWV1ZXNQYWdlIHtcblxuICAgIHRlc3Q6IGJvb2xlYW47XG4gICAgdGVybTogc3RyaW5nID0gJyc7XG4gICAgc2VhcmNoX3Jlc3VsdHM6IGFueTtcbiAgICBxdWV1ZXM6IGFueTtcbiAgICBpdGVtczogYW55ID0gW107XG4gICAgXG4gICAgY29uc3RydWN0b3IocHJpdmF0ZSBuYXY6IE5hdiwgcHJpdmF0ZSBjb25maWc6IENvbmZpZywgcHJpdmF0ZSBkYXRhUHJvdmlkZXI6IERhdGFQcm92aWRlcikge1xuICB9XG4gICAgXG4gICAgb25QYWdlTG9hZGVkKClcbiAgICB7XG4gICAgICAgIHRoaXMuZGF0YVByb3ZpZGVyLmdldFF1ZXVlTGlzdCgpLnN1YnNjcmliZShcbiAgICAgICAgICAgIGRhdGEgPT4ge1xuICAgICAgICAgICAgICAgIHRoaXMucXVldWVzID0gZGF0YTtcbiAgICAgICAgICAgICAgICB0aGlzLnNlYXJjaEl0ZW1zKHt2YWx1ZSA6IHRoaXMudGVybX0pO1xuICAgICAgICAgICAgICAgICAgICB9LCBcbiAgICAgICAgICAgIGVycm9yID0+IHsgXG4gICAgICAgICAgICAgICAgY29uc29sZS5sb2coZXJyb3IgfHwgJ1NlcnZlciBlcnJvcicpO31cbiAgICAgICAgKTsgXG4gICAgICAgIFxuICAgIH1cbiAgICBzZWFyY2hJdGVtcyhzZWFyY2hiYXIpIHtcbiAgICAgICAgLy8gUmVzZXQgaXRlbXMgYmFjayB0byBhbGwgb2YgdGhlIGl0ZW1zXG4gICAgICAgIHRoaXMuaXRlbXMgPSB0aGlzLnF1ZXVlcztcbiAgICAgICAgLy8gc2V0IHEgdG8gdGhlIHZhbHVlIG9mIHRoZSBzZWFyY2hiYXJcbiAgICAgICAgbGV0IHEgPSBzZWFyY2hiYXIudmFsdWUudG9Mb3dlckNhc2UoKTtcblxuICAgICAgICAvLyBpZiB0aGUgdmFsdWUgaXMgYW4gZW1wdHkgc3RyaW5nIGRvbid0IGZpbHRlciB0aGUgc2VhcmNoX3Jlc3VsdHNcbiAgICAgICAgaWYgKHEudHJpbSgpID09ICcnKSB7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cblxuICAgICAgICBpZiAodGhpcy5xdWV1ZXMgJiYgcS5sZW5ndGggPiAxKVxuICAgICAgICB7XG4gICAgICAgICAgICB0aGlzLml0ZW1zID0gdGhpcy5xdWV1ZXMuZmlsdGVyKChxdWV1ZXMpID0+IHF1ZXVlcy5mdWxsbmFtZS50b0xvd2VyQ2FzZSgpLmluZGV4T2YocSkgPiAtMSk7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBjbGVhclNlYXJjaChzZWFyY2hiYXI/KVxuICAgIHtcbiAgICAgICAgdGhpcy5zZWFyY2hfcmVzdWx0cyA9IFtdO1xuICAgICAgICBpZiAoc2VhcmNoYmFyKSBzZWFyY2hiYXIudmFsdWUgPSBcIlwiO1xuICAgIH1cbiAgICAgICAgdG9nZ2xlKCl7XG4gICAgICAgIHRoaXMudGVzdCA9ICF0aGlzLnRlc3Q7XG4gICAgICAgIGlmICh0aGlzLnRlc3Qpe1xuICAgICAgICAgICAgc2V0VGltZW91dCgoKSA9PiB7XG4gICAgICAgIHZhciB0ID0gZG9jdW1lbnQuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZShcInNlYXJjaGJhci1pbnB1dFwiKTtcbiAgICAgICAgdCA9IHRbdC5sZW5ndGggLSAxXTtcbiAgICAgICAgdCAmJiB0LmZvY3VzKCk7XG4gICAgICAgIH0sIDUwMCk7XG4gICAgICAgIH1cbiAgICB9XG4gIFxuXG59XG4iLCJpbXBvcnQge1BhZ2UsIENvbmZpZywgTmF2LCBFdmVudHMsIEFsZXJ0LCBNb2RhbH0gZnJvbSAnaW9uaWMtYW5ndWxhcic7XG5pbXBvcnQge3NwaWNlUGl4ZWxUcmFja0NvbnZlcnNpb24sIGdldGFwcFRyYWNrQ29udmVyc2lvbn0gZnJvbSAnLi4vLi4vZGlyZWN0aXZlcy9oZWxwZXJzJztcbmltcG9ydCB7RGF0YVByb3ZpZGVyfSBmcm9tICcuLi8uLi9wcm92aWRlcnMvZGF0YS1wcm92aWRlcic7XG5pbXBvcnQge0xvZ2luUGFnZX0gZnJvbSAnLi4vbG9naW4vbG9naW4nO1xuaW1wb3J0IHtPcmdhbml6YXRpb25zUGFnZX0gZnJvbSAnLi4vb3JnYW5pemF0aW9ucy9vcmdhbml6YXRpb25zJztcbmltcG9ydCB7UHJpdmFjeU1vZGFsfSBmcm9tICcuLi9tb2RhbHMvbW9kYWxzJztcblxuQFBhZ2Uoe1xuICAgIHRlbXBsYXRlVXJsOiAnYnVpbGQvcGFnZXMvc2lnbnVwL3NpZ251cC5odG1sJyxcbn0pXG5leHBvcnQgY2xhc3MgU2lnbnVwUGFnZSB7XG5cblx0bG9naW46IGFueSA9IHt9O1xuICAgIGlzX2ZvcmNlX3JlZ2lzdHJhdGlvbjogYm9vbGVhbiA9IGZhbHNlO1xuXG4gICAgY29uc3RydWN0b3IocHJpdmF0ZSBuYXY6IE5hdiwgcHJpdmF0ZSBkYXRhUHJvdmlkZXI6IERhdGFQcm92aWRlciwgcHJpdmF0ZSBjb25maWc6IENvbmZpZywgcHJpdmF0ZSBldmVudHM6IEV2ZW50cykge1xuICAgIH1cblxuICAgIG9uUGFnZUxvYWRlZCgpXG4gICAgeyBcbiAgICAgICAgLy9sb2dvdXRcbiAgICAgICAgdGhpcy5pc19mb3JjZV9yZWdpc3RyYXRpb24gPSBmYWxzZTtcbiAgICB9XG5cbiAgICBnZXRVcmwobmFtZSl7XG4gICAgICAgIHRoaXMubG9naW4ubmFtZSA9IG5hbWUudmFsdWUgfHwgXCJcIjtcbiAgICAgICAgdGhpcy5sb2dpbi51cmwgPSBuYW1lLnZhbHVlID8gbmFtZS52YWx1ZS50b0xvd2VyQ2FzZSgpLnJlcGxhY2UoL1teYS16QS1aMC05LV0vZywgJycpIDogXCJcIjtcbiAgICB9XG5cbiAgICBvblNpZ251cChmb3JtKSB7XG4gICAgICAgIGlmIChmb3JtLnZhbGlkKSB7IFxuICAgICAgICBcdGxldCBkYXRhID0ge1xuICAgICAgICAgICAgICAgIFwibmFtZVwiOiBmb3JtLnZhbHVlLm5hbWUsIFxuICAgICAgICAgICAgICAgIFwiZW1haWxcIjogZm9ybS52YWx1ZS5lbWFpbCwgXG4gICAgICAgICAgICAgICAgXCJ1cmxcIjogZm9ybS52YWx1ZS51cmwsIFxuICAgICAgICAgICAgICAgIFwiaXNfZm9yY2VfcmVnaXN0cmF0aW9uXCI6IHRoaXMuaXNfZm9yY2VfcmVnaXN0cmF0aW9uLFxuICAgICAgICAgICAgICAgIFwiaXNfZm9yY2VfcmVkaXJlY3RcIjogZmFsc2UsXG4gICAgICAgICAgICAgICAgXCJmaXJzdG5hbWVcIjogZm9ybS52YWx1ZS5maXJzdG5hbWUsXG4gICAgICAgICAgICAgICAgXCJsYXN0bmFtZVwiOiBmb3JtLnZhbHVlLmxhc3RuYW1lLFxuICAgICAgICAgICAgICAgIFwicGFzc3dvcmRcIjogZm9ybS52YWx1ZS5wYXNzd29yZCxcbiAgICAgICAgICAgICAgICBcInBhc3N3b3JkX2NvbmZpcm1cIjogZm9ybS52YWx1ZS5wYXNzd29yZF9jb25maXJtLFxuICAgICAgICAgICAgICAgIFwiaG93XCI6IGZvcm0udmFsdWUuaG93LFxuICAgICAgICAgICAgICAgIFwibm90ZVwiOiBsb2NhbFN0b3JhZ2UuZ2V0SXRlbShcImlzUGhvbmVnYXBcIikgPT09IFwidHJ1ZVwiID8gXCJyZWdpc3RlcmVkIGJ5IGlQaG9uZSBhcHBcIiA6IFwicmVnaXN0ZXJlZCBmcm9tIG0uc2hlcnBhZGVzay5jb21cIlxuICAgICAgICAgICAgfTtcblxuICAgICAgICAgICAgdGhpcy5kYXRhUHJvdmlkZXIucmVnaXN0ZXJPcmdhbml6YXRpb24oZGF0YSkuc3Vic2NyaWJlKFxuICAgICAgICAgICAgICAgIGRhdGEgPT4ge1xuICAgICAgICAgICAgICAgICAgICBpZiAoIWRhdGEuYXBpX3Rva2VuKVxuICAgICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLm5hdi5zZXRSb290KExvZ2luUGFnZSwgIG51bGwsIHsgYW5pbWF0aW9uOiBcIndwLXRyYW5zaXRpb25cIiB9KTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBpZiAoIWRhdGEub3JnYW5pemF0aW9uIHx8ICFkYXRhLmluc3RhbmNlKVxuICAgICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLm5hdi5zZXRSb290KE9yZ2FuaXphdGlvbnNQYWdlLCBudWxsLCB7IGFuaW1hdGlvbjogXCJ3cC10cmFuc2l0aW9uXCIgfSk7XG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgICAgICAvL3NldHMgdXNlciByb2xlIHRvIHVzZXIgaW4gbG9jYWwgc3RvcmFnZVxuICAgICAgICAgICAgICAgICAgICB0aGlzLmNvbmZpZy5zZXRDdXJyZW50KHtcbiAgICAgICAgICAgICAgICAgICAgICAgIFwia2V5XCI6IGRhdGEuYXBpX3Rva2VuLFxuICAgICAgICAgICAgICAgICAgICAgICAgXCJvcmdcIjogZGF0YS5vcmdhbml6YXRpb24sXG4gICAgICAgICAgICAgICAgICAgICAgICBcImluc3RhbmNlXCI6IGRhdGEuaW5zdGFuY2VcbiAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgICAgIHNwaWNlUGl4ZWxUcmFja0NvbnZlcnNpb24oKTtcbiAgICAgICAgICAgICAgICAgICAgZ2V0YXBwVHJhY2tDb252ZXJzaW9uKGZvcm0udmFsdWUudXJsKTtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5uYXYuYWxlcnQoXCJUaGFua3MgZm9yIHJlZ2lzdHJhdGlvbiEgWW91IGFyZSByZWRpcmVjdGVkIHRvIG5ldyBvcmcgbm93IC4uLlwiKTtcbiAgICAgICAgICAgICAgICAgICAgc2V0VGltZW91dCgoKSA9PiB0aGlzLmV2ZW50cy5wdWJsaXNoKFwiY29uZmlnOmdldFwiLCB0cnVlKSwgMzAwMCk7XG4gICAgICAgICAgICAgICAgfSwgXG4gICAgICAgICAgICAgICAgZXJyb3IgPT4ge1xuICAgICAgICAgICAgICAgICAgICBpZiAofmVycm9yLnRvU3RyaW5nKCkuaW5kZXhPZihcIjQwOVwiKSlcbiAgICAgICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5wcmVzZW50Q29uZmlybSgpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIGVsc2VcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMubmF2LmFsZXJ0KGVycm9yLCB0cnVlKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgKTsgXG4gICAgICAgIH1cbiAgICAgICAgZWxzZVxuICAgICAgICAgICAgdGhpcy5uYXYuYWxlcnQoJ1BsZWFzZSBmaWxsIHRoZSBmb3JtIScsIHRydWUpO1xuICAgIH1cblxuICAgIHByZXNlbnRDb25maXJtKCkge1xuICAgICAgICBsZXQgYWxlcnQgPSBBbGVydC5jcmVhdGUoe1xuICAgICAgICAgICAgdGl0bGU6IFwiV2FpdC4gSGF2ZW4ndCBJIHNlZW4geW91P1wiLFxuICAgICAgICAgICAgc3ViVGl0bGU6IFwiVGhpcyBlbWFpbCBpcyBhbHJlYWR5IGluIHVzZS5cIixcbiAgICAgICAgICAgIG1lc3NhZ2U6ICdXb3VsZCB5b3UgbGlrZSB0bycsXG4gICAgICAgICAgICBjc3NDbGFzczogXCJoZWxsb1wiLFxuICAgICAgICAgICAgYnV0dG9uczogW1xuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIHRleHQ6ICdMb2dpbicsXG4gICAgICAgICAgICAgICAgcm9sZTogJ2NhbmNlbCcsXG4gICAgICAgICAgICAgICAgaGFuZGxlcjogKCkgPT4ge1xuICAgICAgICAgICAgICAgICAgICBsb2NhbFN0b3JhZ2Uuc2V0SXRlbSgndXNlcm5hbWUnLCB0aGlzLmxvZ2luLmVtYWlsIHx8IFwiXCIpO1xuICAgICAgICAgICAgICAgICAgICBhbGVydC5kaXNtaXNzKCkudGhlbigoKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLm5hdi5zZXRSb290KExvZ2luUGFnZSwgbnVsbCwgeyBhbmltYXRpb246IFwid3AtdHJhbnNpdGlvblwiIH0pO1xuICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgdGV4dDogJ0NyZWF0ZSBOZXcgT3JnJyxcbiAgICAgICAgICAgICAgICBoYW5kbGVyOiAoKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgIC8vIHVzZXIgaGFzIGNsaWNrZWQgdGhlIGFsZXJ0IGJ1dHRvblxuICAgICAgICAgICAgICAgICAgICAvLyBiZWdpbiB0aGUgYWxlcnQncyBkaW1pc3MgdHJhbnNpdGlvblxuICAgICAgICAgICAgICAgICAgICBsZXQgbmF2VHJhbnNpdGlvbiA9IGFsZXJ0LmRpc21pc3MoKTtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5pc19mb3JjZV9yZWdpc3RyYXRpb24gPSB0cnVlO1xuICAgICAgICAgICAgICAgICAgICBuYXZUcmFuc2l0aW9uLnRoZW4oKCkgPT4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgdmFyIGZvcm0gPSB7dmFsaWQ6IHRydWUsIHZhbHVlOiB0aGlzLmxvZ2lufVxuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5vblNpZ251cChmb3JtKTtcbiAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBdXG4gICAgICAgIH0pO1xuICAgICAgICB0aGlzLm5hdi5wcmVzZW50KGFsZXJ0KTtcbiAgICB9XG5cbiAgICBnb3RvUHJpdmFjeSgpe1xuICAgICAgICB0aGlzLm5hdi5wcmVzZW50KE1vZGFsLmNyZWF0ZShQcml2YWN5TW9kYWwpKTtcbiAgICB9XG59XG4iLCJpbXBvcnQge1BhZ2UsIE5hdn0gZnJvbSAnaW9uaWMtYW5ndWxhcic7XG5pbXBvcnQge0RhdGFQcm92aWRlcn0gZnJvbSAnLi4vLi4vcHJvdmlkZXJzL2RhdGEtcHJvdmlkZXInO1xuaW1wb3J0IHtMb2dpblBhZ2V9IGZyb20gJy4uL2xvZ2luL2xvZ2luJztcblxuQFBhZ2Uoe1xuICAgIHRlbXBsYXRlVXJsOiAnYnVpbGQvcGFnZXMvc2t5cGUvc2t5cGUuaHRtbCcsXG59KVxuZXhwb3J0IGNsYXNzIFNreXBlUGFnZSB7XG5cblx0aXNfc2t5cGVfZG9uZTogYm9vbGVhbiA9IGZhbHNlO1xuXG4gICAgY29uc3RydWN0b3IocHJpdmF0ZSBuYXY6IE5hdiwgcHJpdmF0ZSBkYXRhUHJvdmlkZXI6IERhdGFQcm92aWRlcikge1xuICAgIH1cblxuICAgIG9uUGFnZUxvYWRlZCgpXG4gICAgeyBcbiAgICAgICAgdGhpcy5vbkxvZ2luU2t5cGUoKTtcbiAgICB9XG5cbiAgICBvbkxvZ2luU2t5cGUoKSB7XG4gICAgICAgIHZhciBza3lwZSA9IGxvY2FsU3RvcmFnZS5nZXRJdGVtKCdza3lwZScpIHx8IFwiXCI7XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgICB2YXIgZGF0YSA9IEpTT04ucGFyc2Uoc2t5cGUpO1xuICAgICAgICAgICAgaWYgKGRhdGEgJiYgdHlwZW9mIGRhdGEgPT09IFwib2JqZWN0XCIpIHtcbiAgICAgICAgICAgICAgICB0aGlzLmRhdGFQcm92aWRlci5sb2dpblNreXBlKGRhdGEpLnN1YnNjcmliZShcbiAgICAgICAgICAgICAgICAgICAgZCA9PiB7XG4gICAgICAgICAgICAgICAgICAgICAgICBsb2NhbFN0b3JhZ2Uuc2V0SXRlbSgnc2t5cGUnLCBcIlwiKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuaXNfc2t5cGVfZG9uZSA9IHRydWU7XG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLm5hdi5hbGVydChcIkRvbmUhIFlvdSBjYW4gY29udGludWUgdG8gY2hhdCBpbiBTa3lwZSAuLi5cIik7XG4gICAgICAgICAgICAgICAgICAgIH0sIFxuICAgICAgICAgICAgICAgICAgICBlcnJvciA9PiB7XG4gICAgICAgICAgICAgICAgICAgICAgICBsb2NhbFN0b3JhZ2Uuc2V0SXRlbSgnc2t5cGUnLCBcIlwiKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMubmF2LmFsZXJ0KGVycm9yLCB0cnVlKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKFwiZXJyb3JcIiwgZXJyb3IpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgY2F0Y2ggKGUpIHsgXG4gICAgICAgICAgICB0aGlzLm5hdi5hbGVydCgnQ2Fubm90IGNvbnRpbnVlISBJbmNvcnJlY3Qgc2t5cGUgZGF0YScsIHRydWUpO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgXG4gICAgY2FuY2VsX3NreXBlKCl7XG4gICAgICAgIGxvY2FsU3RvcmFnZS5zZXRJdGVtKCdza3lwZScsIFwiXCIpO1xuICAgICAgICB0aGlzLm5hdi5zZXRSb290KExvZ2luUGFnZSwgbnVsbCwgeyBhbmltYXRpb246IFwid3AtdHJhbnNpdGlvblwiIH0pO1xuICAgIH1cbn1cbiIsImltcG9ydCB7UGFnZSwgQ29uZmlnLCBOYXYsIE5hdlBhcmFtcywgTW9kYWwsIFZpZXdDb250cm9sbGVyfSBmcm9tICdpb25pYy1hbmd1bGFyJztcbmltcG9ydCB7VGlja2V0Q3JlYXRlUGFnZX0gZnJvbSAnLi4vbW9kYWxzL21vZGFscyc7XG5pbXBvcnQge1RpY2tldERldGFpbHNQYWdlfSBmcm9tICcuLi90aWNrZXQtZGV0YWlscy90aWNrZXQtZGV0YWlscyc7XG5pbXBvcnQge1RpY2tldHNMaXN0Q29tcG9uZW50fSBmcm9tICcuLi8uLi9jb21wb25lbnRzL3RpY2tldHMtbGlzdC90aWNrZXRzLWxpc3QnO1xuaW1wb3J0IHtUZWNobmljaWFuc0xpc3RDb21wb25lbnR9IGZyb20gJy4uLy4uL2NvbXBvbmVudHMvdGVjaHMtbGlzdC90ZWNocy1saXN0JztcblxuQFBhZ2Uoe1xuICAgIHRlbXBsYXRlVXJsOiAnYnVpbGQvcGFnZXMvdGVjaC10aWNrZXRzL3RlY2gtdGlja2V0cy5odG1sJyxcbiAgICBkaXJlY3RpdmVzOiBbVGlja2V0c0xpc3RDb21wb25lbnRdLFxufSlcbmV4cG9ydCBjbGFzcyBUZWNoVGlja2V0c1BhZ2Uge1xuXG5cdHRlY2huaWNpYW46IGFueTtcblx0XG4gICAgY29uc3RydWN0b3IocHJpdmF0ZSBuYXY6IE5hdiwgcHJpdmF0ZSBuYXZQYXJhbXM6IE5hdlBhcmFtcywgcHJpdmF0ZSB2aWV3OiBWaWV3Q29udHJvbGxlciwgcHJpdmF0ZSBjb25maWc6IENvbmZpZykge1xuICAgICAgICB0aGlzLnRlY2huaWNpYW4gPSB0aGlzLm5hdlBhcmFtcy5kYXRhO1xuICAgICAgICAgY29uc29sZS5sb2codGhpcy50ZWNobmljaWFuKTtcbiAgfVxuXG5vblBhZ2VXaWxsRW50ZXIoKSB7XG4gICAgICAgICAgICB0aGlzLnZpZXcuc2V0QmFja0J1dHRvblRleHQoJycpO1xuICAgIH1cbiAgICBcbiAgICBhZGRUaWNrZXQoKSB7XG4gICAgICAgIGxldCBteU1vZGFsID0gTW9kYWwuY3JlYXRlKFRpY2tldENyZWF0ZVBhZ2UsIHsgJ3RlY2gnOiB7IGlkOiB0aGlzLnRlY2huaWNpYW4uaWQsIG5hbWU6IHRoaXMudGVjaG5pY2lhbi5sYXN0bmFtZSArIFwiIFwiKyB0aGlzLnRlY2huaWNpYW4uZmlyc3RuYW1lIH0gfSk7XG4gICAgICAgIG15TW9kYWwub25EaXNtaXNzKGRhdGExID0+IHtcbiAgICAgICAgICAgIGlmIChkYXRhMSlcbiAgICAgICAgICAgICAgICBzZXRUaW1lb3V0KCgpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy50ZWNobmljaWFuLnRpY2tldHNfY291bnQgKz0gMTtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5uYXYucHVzaChUaWNrZXREZXRhaWxzUGFnZSwgZGF0YTEpO1xuICAgICAgICAgICAgICAgIH0sIDUwMCk7XG4gICAgICAgIH0pO1xuICAgICAgICB0aGlzLm5hdi5wcmVzZW50KG15TW9kYWwpO1xuICAgIH1cbn1cbiIsImltcG9ydCB7UGFnZSwgQ29uZmlnLCBOYXZ9IGZyb20gJ2lvbmljLWFuZ3VsYXInO1xuaW1wb3J0IHtEYXRhUHJvdmlkZXJ9IGZyb20gJy4uLy4uL3Byb3ZpZGVycy9kYXRhLXByb3ZpZGVyJztcbmltcG9ydCB7VGVjaG5pY2lhbnNMaXN0Q29tcG9uZW50LCBBY3Rpb25CdXR0b25Db21wb25lbnR9IGZyb20gJy4uLy4uL2NvbXBvbmVudHMvY29tcG9uZW50cyc7XG5cblxuQFBhZ2Uoe1xuICB0ZW1wbGF0ZVVybDogJ2J1aWxkL3BhZ2VzL3RlY2huaWNpYW5zL3RlY2huaWNpYW5zLmh0bWwnLFxuICAgIGRpcmVjdGl2ZXM6IFtUZWNobmljaWFuc0xpc3RDb21wb25lbnQsIEFjdGlvbkJ1dHRvbkNvbXBvbmVudF0sXG59KVxuZXhwb3J0IGNsYXNzIFRlY2huaWNpYW5zUGFnZSB7XG5cbiAgICBjb3VudDogbnVtYmVyO1xuICAgIGlzX2VtcHR5OiBib29sZWFuO1xuICAgIGJ1c3k6IGJvb2xlYW47XG4gICAgcGFyYW1zOiBhbnk7XG4gICAgcGFnZXI6IGFueTtcbiAgICB0ZXJtOiBzdHJpbmcgPSAnJztcbiAgICB0ZXN0OiBib29sZWFuO1xuICAgIHNlYXJjaF9yZXN1bHRzOiBhbnk7XG4gICAgaXRlbXM6IGFueSA9IFtdO1xuICAgIHRlY2huaWNpYW5zOiBBcnJheTxhbnk+O1xuICAgIExJTUlUOiBudW1iZXIgPSA1MDA7XG5cbiAgICBjb25zdHJ1Y3Rvcihwcml2YXRlIG5hdjogTmF2LCBwcml2YXRlIGNvbmZpZzogQ29uZmlnLCBwcml2YXRlIGRhdGFQcm92aWRlcjogRGF0YVByb3ZpZGVyKSB7XG4gIH1cbiAgICBcbiAgICBvblBhZ2VMb2FkZWQoKVxuICAgIHtcbiAgICAgICAgdGhpcy5wYWdlciA9IHsgcGFnZTogMCwgbGltaXQ6IHRoaXMuTElNSVQgfTtcblxuICAgICAgICB2YXIgdGltZXIgPSBzZXRUaW1lb3V0KCgpID0+IHtcbiAgICAgICAgICAgIHRoaXMuYnVzeSA9IHRydWU7XG4gICAgICAgIH0sIDUwMCk7XG5cbiAgICAgICAgdGhpcy5nZXRJdGVtcyhudWxsLCB0aW1lcik7XG4gICAgfVxuXG4gICAgZ2V0SXRlbXMoaW5maW5pdGVTY3JvbGwsIHRpbWVyKSB7XG4gICAgICAgIHRoaXMuZGF0YVByb3ZpZGVyLmdldFRlY2huaWNpYW5zTGlzdCggdGhpcy5wYWdlciwgdHJ1ZSwgdHJ1ZSkuc3Vic2NyaWJlKFxuICAgICAgICAgICAgZGF0YSA9PiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICh0aW1lcikge1xuICAgICAgICAgICAgICAgICAgICBjbGVhclRpbWVvdXQodGltZXIpO1xuICAgICAgICAgICAgICAgICAgICB0aGlzLmJ1c3kgPSBmYWxzZTtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy50ZWNobmljaWFucyA9IGRhdGE7XG4gICAgICAgICAgICAgICAgICAgIC8vdGhpcy5jb25maWcuc2V0U3RhdChcInRlY2huaWNpYW5zXCIsIGRhdGEubGVuZ3RoKTtcblxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBlbHNlXG4gICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICB0aGlzLnRlY2huaWNpYW5zLnB1c2goLi4uZGF0YSk7XG4gICAgICAgICAgICAgICAgICAgIC8vVE9ETzogaG93IGRvIGdldCB0ZWNobmljaWFucyBzdGF0XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuY29uZmlnLmN1cnJlbnQuc3RhdC50ZWNobmljaWFucyArPSBkYXRhLmxlbmd0aDtcbiAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICBpZiAoaW5maW5pdGVTY3JvbGwpIHtcbiAgICAgICAgICAgICAgICAgICAgaW5maW5pdGVTY3JvbGwuZW5hYmxlKGRhdGEubGVuZ3RoID09IHRoaXMuTElNSVQpO1xuICAgICAgICAgICAgICAgICAgICBpbmZpbml0ZVNjcm9sbC5jb21wbGV0ZSgpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB0aGlzLmNvdW50ID0gZGF0YS5sZW5ndGg7XG4gICAgICAgICAgICAgICAgdGhpcy5zZWFyY2hJdGVtcyh7dmFsdWUgOiB0aGlzLnRlcm19KVxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGVycm9yID0+IHtcbiAgICAgICAgICAgICAgICBpZiAodGltZXIpIHtcbiAgICAgICAgICAgICAgICAgICAgY2xlYXJUaW1lb3V0KHRpbWVyKTtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5idXN5ID0gZmFsc2U7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKGVycm9yIHx8ICdTZXJ2ZXIgZXJyb3InKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgKTtcbiAgICB9XG5cbiAgICBzZWFyY2hJdGVtcyhzZWFyY2hiYXIpIHtcbiAgICAgICAgLy8gUmVzZXQgaXRlbXMgYmFjayB0byBhbGwgb2YgdGhlIGl0ZW1zXG4gICAgICAgIHRoaXMuaXRlbXMgPSB0aGlzLnRlY2huaWNpYW5zO1xuXG4gICAgICAgIC8vIHNldCBxIHRvIHRoZSB2YWx1ZSBvZiB0aGUgc2VhcmNoYmFyXG4gICAgICAgIGxldCBxID0gc2VhcmNoYmFyLnZhbHVlLnRvTG93ZXJDYXNlKCk7XG5cbiAgICAgICAgLy8gaWYgdGhlIHZhbHVlIGlzIGFuIGVtcHR5IHN0cmluZyBkb24ndCBmaWx0ZXIgdGhlIHNlYXJjaF9yZXN1bHRzXG4gICAgICAgIGlmIChxLnRyaW0oKSA9PSAnJyB8fCB0aGlzLmJ1c3kpIHtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuXG4gICAgICAgIGlmICh0aGlzLnRlY2huaWNpYW5zICYmIHEubGVuZ3RoID4gMSlcbiAgICAgICAge1xuICAgICAgICAgICAgdGhpcy5pdGVtcyA9IHRoaXMudGVjaG5pY2lhbnMuZmlsdGVyKCh0ZWNobmljaWFuKSA9PiB0ZWNobmljaWFuLkZ1bGxOYW1lLnRvTG93ZXJDYXNlKCkuaW5kZXhPZihxKSA+IC0xKTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIGNsZWFyU2VhcmNoKHNlYXJjaGJhcj8pXG4gICAge1xuICAgICAgICB0aGlzLnNlYXJjaF9yZXN1bHRzID0gW107XG4gICAgICAgIHRoaXMuYnVzeSA9IGZhbHNlO1xuICAgICAgICBpZiAoc2VhcmNoYmFyKSBzZWFyY2hiYXIudmFsdWUgPSBcIlwiO1xuICAgIH1cblxuICAgIGRvSW5maW5pdGUoaW5maW5pdGVTY3JvbGwpIHtcbiAgICAgICAgaWYgKHRoaXMuY291bnQgPCB0aGlzLkxJTUlUKSB7XG4gICAgICAgICAgICBpbmZpbml0ZVNjcm9sbC5lbmFibGUoZmFsc2UpO1xuICAgICAgICAgICAgaW5maW5pdGVTY3JvbGwuY29tcGxldGUoKTtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLnBhZ2VyLnBhZ2UgKz0gMTtcbiAgICAgICAgdGhpcy5nZXRJdGVtcyhpbmZpbml0ZVNjcm9sbCwgbnVsbCk7XG4gICAgfVxuICAgICAgICB0b2dnbGUoKXtcbiAgICAgICAgdGhpcy50ZXN0ID0gIXRoaXMudGVzdDtcbiAgICAgICAgaWYgKHRoaXMudGVzdCl7XG4gICAgICAgICAgICBzZXRUaW1lb3V0KCgpID0+IHtcbiAgICAgICAgdmFyIHQgPSBkb2N1bWVudC5nZXRFbGVtZW50c0J5Q2xhc3NOYW1lKFwic2VhcmNoYmFyLWlucHV0XCIpO1xuICAgICAgICB0ID0gdFt0Lmxlbmd0aCAtIDFdO1xuICAgICAgICB0ICYmIHQuZm9jdXMoKTtcbiAgICAgICAgfSwgNTAwKTtcbiAgICAgICAgfVxuICAgIH1cbn1cbiIsImltcG9ydCB7UGFnZSwgQ29uZmlnLCBOYXYsIE5hdlBhcmFtcywgTW9kYWwsIEFsZXJ0fSBmcm9tICdpb25pYy1hbmd1bGFyJztcbmltcG9ydCB7Rk9STV9ESVJFQ1RJVkVTLCBWYWxpZGF0b3JzfSBmcm9tICdAYW5ndWxhci9jb21tb24nO1xuaW1wb3J0IHtBcHBTaXRlfSBmcm9tICcuLi8uLi9wcm92aWRlcnMvY29uZmlnJztcbmltcG9ydCB7RGF0YVByb3ZpZGVyfSBmcm9tICcuLi8uLi9wcm92aWRlcnMvZGF0YS1wcm92aWRlcic7XG5pbXBvcnQge1RpY2tldFByb3ZpZGVyfSBmcm9tICcuLi8uLi9wcm92aWRlcnMvdGlja2V0LXByb3ZpZGVyJztcbmltcG9ydCB7b3BlblVSTCwgZ2V0RGF0ZVRpbWUsIGh0bWxFc2NhcGUsIGdldEN1cnJlbmN5LCBnZXRGdWxsTmFtZSwgZnVsbGFwcGxpbmssIG1haWx0b2xpbmssIHBhcnNlWG1sLCBGaWxlVXJsSGVscGVyfSBmcm9tICcuLi8uLi9kaXJlY3RpdmVzL2hlbHBlcnMnO1xuaW1wb3J0IHtQb3N0c0xpc3RDb21wb25lbnR9IGZyb20gJy4uLy4uL2NvbXBvbmVudHMvcG9zdHMtbGlzdC9wb3N0cy1saXN0JztcbmltcG9ydCB7U2VsZWN0TGlzdENvbXBvbmVudH0gIGZyb20gJy4uLy4uL2NvbXBvbmVudHMvc2VsZWN0LWxpc3Qvc2VsZWN0LWxpc3QnO1xuaW1wb3J0IHtNdWx0aVNlbGVjdENvbXBvbmVudH0gIGZyb20gJy4uLy4uL2NvbXBvbmVudHMvbXVsdGktc2VsZWN0L211bHRpLXNlbGVjdCc7XG5pbXBvcnQge0NsYXNzTGlzdENvbXBvbmVudH0gZnJvbSAnLi4vLi4vY29tcG9uZW50cy9jbGFzcy1saXN0L2NsYXNzLWxpc3QnO1xuaW1wb3J0IHtMb2NhdGlvbkxpc3RDb21wb25lbnR9IGZyb20gJy4uLy4uL2NvbXBvbmVudHMvbG9jYXRpb24tbGlzdC9sb2NhdGlvbi1saXN0JztcbmltcG9ydCB7Q2xvc2VUaWNrZXRNb2RhbCwgVHJhbnNmZXJUaWNrZXRNb2RhbCwgQ2hhbmdlVXNlck1vZGFsfSBmcm9tICcuLi8uLi9wYWdlcy9tb2RhbHMvbW9kYWxzJztcbmltcG9ydCB7VGltZWxvZ1BhZ2V9IGZyb20gJy4uLy4uL3BhZ2VzL3RpbWVsb2cvdGltZWxvZyc7IFxuaW1wb3J0IHtFeHBlbnNlQ3JlYXRlUGFnZX0gZnJvbSAnLi4vLi4vcGFnZXMvZXhwZW5zZS1jcmVhdGUvZXhwZW5zZS1jcmVhdGUnO1xuaW1wb3J0IHtHcmF2YXRhclBpcGUsIExpbmVicmVha3NQaXBlLCBEYXlzb2xkUGlwZSwgRGF5c2Fnb1BpcGUsIEh0bWxzYWZlUGlwZX0gZnJvbSAnLi4vLi4vcGlwZXMvcGlwZXMnO1xuaW1wb3J0IHtBZGRGaWxlc01vZGFsfSBmcm9tICcuLi8uLi9wYWdlcy9tb2RhbHMvYWRkLWZpbGVzL2FkZC1maWxlcyc7XG5pbXBvcnQge1RvZG9MaXN0Q29tcG9uZW50fSBmcm9tICcuLi8uLi9jb21wb25lbnRzL3RvZG8tbGlzdC90b2RvLWxpc3QnO1xuaW1wb3J0IHtDb21wb25lbnQsIEVsZW1lbnRSZWYsIElucHV0LCBPbkluaXQsIFZpZXdDaGlsZCwgUmVuZGVyZXIsIE91dHB1dCwgRXZlbnRFbWl0dGVyLCBmb3J3YXJkUmVmfSBmcm9tIFwiQGFuZ3VsYXIvY29yZVwiO1xuaW1wb3J0IHtJT05JQ19ESVJFQ1RJVkVTLCBMb2FkaW5nfSBmcm9tICdpb25pYy1hbmd1bGFyJztcbmltcG9ydCB7QXBpU2l0ZX0gZnJvbSAnLi4vLi4vcHJvdmlkZXJzL2NvbmZpZyc7XG5pbXBvcnQge0N1c3RvbUZpZWxkQ29tcG9uZW50fSBmcm9tICcuLi8uLi9jb21wb25lbnRzL2N1c3RvbS1maWVsZC9jdXN0b20tZmllbGQnO1xuLyoqXG4gKiBVcGxvYWQgYnV0dG9uIGNvbXBvbmVudC5cbiAqXG4gKiBBcyBuYXRpdmUgaW5wdXQgZWxlbWVudHMgd2l0aCB0eXBlIGZpbGUgYXJlIGRpZmZjdWx0IHRvIHN0eWxlLCBpdCBpcyBjb21tb24gcHJhY3RpY2UgdG8gaGlkZSB0aGVtXG4gKiBhbmQgdHJpZ2dlciB0aGUgbmVlZGVkIGV2ZW50cyBtYW51YWxseSBhcyBpdCBkb25lIGhlcmUuIEEgYnV0dG9uIGlzIGlzIHVzZWQgZm9yIHVzZXIgaW50ZXJhY3Rpb24sXG4gKiBuZXh0IHRvIHRoZSBoaWRkZW4gaW5wdXQuXG4gKlxuICogIDxjb2RlPlxuICogICAgQENvbXBvbmVudCh7XG4gKiAgICAgIGRpcmVjdGl2ZXM6IFtVcGxvYWRCdXR0b25dLFxuICogICAgfSlcbiAqICAgIGNsYXNzIFVwbG9hZENvbXBvbmVudCB7XG4gKiAgICAgICAgcHJpdmF0ZSBhZGRDYWxsYmFjazogRnVuY3Rpb24gPSAoZmlsZXM6IEZpbGVMaXN0KSA9PiB7Li4ufTtcbiAqICAgICAgICBwcml2YXRlIGljb246IFN0cmluZyA9IFwiYWRkLWNpcmNsZVwiO1xuICogICAgfVxuICpcbiAqICAgICAgPHVwbG9hZC1idXR0b25cbiAqICAgICAgICAgIChmaWxlc1VwbG9hZGVkKT1cInVwbG9hZEZpbGUoJGV2ZW50KSAgPCEtLSB0aGUgY2FsbGJhY2sgZnVuY3Rpb24gZXhlY3V0ZXMgYWZ0ZXIgYWRkaW5nIGZpbGVzIC0tPlxuICogICAgICAgICAgW2J0blN0eWxlXT1cImljb25cIiAgICAgICAgICAgICAgIDwhLS0gdGhlIGlvbmljLWljb24gbmFtZSB0byB1c2UgZm9yIGJ1dHRvbiAtLT5cbiAqICAgICAgICAgIFtsb2dDYWxsYmFja109XCJjb25zb2xlLmRlYnVnXCI+ICA8IS0tIChvcHRpb25hbCkgaWYgbmVlZGVkIGEgbG9nZ2VyIGNhbiBiZSBzZXQgLS0+XG4gKiAgICAgICAgICBbYWxsb3dNdWx0aXBsZV09XCJmYWxzZVwiPiAgICAgICAgPCEtLSAob3B0aW9uYWwpIGRpc2FibGUgbXVsdGlwbGUgZmlsZSB1cGxvYWQgLS0+XG4gKiAgICAgIDwvdXBsb2FkLWJ1dHRvbj5cbiAqICA8L2NvZGU+XG4gKi9cbiBAQ29tcG9uZW50KHtcbiAgIHNlbGVjdG9yOiBcInVwbG9hZC1idXR0b25cIixcbiAgIGRpcmVjdGl2ZXM6IFtJT05JQ19ESVJFQ1RJVkVTXSxcbiAgIHRlbXBsYXRlVXJsOiAnYnVpbGQvY29tcG9uZW50cy91cGxvYWQtYnV0dG9uL3VwbG9hZC1idXR0b24uaHRtbCcsXG4gfSlcbiBleHBvcnQgY2xhc3MgVXBsb2FkQnV0dG9uQ29tcG9uZW50IHtcblxuICAvKipcbiAgICogTmF0aXZlIHVwbG9hZCBidXR0b24gKGhpZGRlbilcbiAgICovXG4gICBAVmlld0NoaWxkKFwiaW5wdXRcIilcbiAgIHByaXZhdGUgbmF0aXZlSW5wdXRCdG46IEVsZW1lbnRSZWY7XG5cbiAgLyoqXG4gICAqIFRoZSBjYWxsYmFjayBleGVjdXRlZCB3aGVuIGZpbGVzIGFyZSBzZWxlY3RlZCwgc2V0IGJ5IHBhcmVudFxuICAgKi9cbiAgIEBPdXRwdXQoKSBwdWJsaWMgZmlsZXNTZWxlY3RlZDogRXZlbnRFbWl0dGVyPGFueT4gPSBuZXcgRXZlbnRFbWl0dGVyKGZhbHNlKTtcblxuICAvKipcbiAgICogVGhlIGNhbGxiYWNrIGV4ZWN1dGVkIHdoZW4gZmlsZXMgYXJlIHVwbG9hZGVkLCBzZXQgYnkgcGFyZW50XG4gICAqL1xuICAgQE91dHB1dCgpIHB1YmxpYyBmaWxlc1VwbG9hZGVkOiBFdmVudEVtaXR0ZXI8YW55PiA9IG5ldyBFdmVudEVtaXR0ZXIoZmFsc2UpO1xuXG4gLyoqKiBUaGUgZGVzdGluYXRpb24gb2YgZmlsZSBcbiAgICAgIHsgdGlja2V0OiBcIlwiLFxuICAgICAgICBhY2NvdW50OiBcIlwiLFxuICAgICAgICBhc3NldDogXCJcIixcbiAgICAgICAgcG9zdF9pZDogMCBcbiAgICAgIH1cbiAgICAgICovXG4gICAgICBASW5wdXQoKSBwcml2YXRlIGZpbGVEZXN0OiBTdHJpbmc7XG5cblxuICAgICAgLyoqKiBUaGUgZXhpc3RpbmcgZmlsZXNcbiAgICAgICAgdG8gcGV2ZW50IGR1cCBmaWxlbmFtZXNcbiAgICAgICAgKi9cbiAgICAgICAgQElucHV0KCkgcHJpdmF0ZSBmaWxlc0V4aXN0OiBBcnJheTxhbnk+O1xuXG4gIC8qKlxuICAgKiBUaGUgY2FsbGJhY2sgZXhlY3V0ZWQgd2hlbiBidXR0b24gcHJlc3NlZCwgc2V0IGJ5IHBhcmVudFxuICAgKi9cbiAgIEBJbnB1dCgpIHByaXZhdGUgYnRuU3R5bGU6IFN0cmluZztcblxuICAvKipcbiAgICogKE9wdGlvbmFsKSBDYW4gYmUgdXNlZCB0byBkaXNhYmxlIGFkZGluZyBtdWx0aXBsZSBmaWxlc1xuICAgKi9cbiAgIEBJbnB1dCgpIHByaXZhdGUgYWxsb3dNdWx0aXBsZTogYm9vbGVhbiA9IHRydWU7XG5cbiAgLyoqXG4gICAqIFN0cmluZyB1c2VkIGZvciBjb250cm9sIG11bHRpcGxlIHVwbG9hZHNcbiAgICovXG4gICBwcml2YXRlIG11bHRpOiBzdHJpbmcgPSBcIm11bHRpcGxlXCI7XG4gICBwcml2YXRlIGVycm9yOiBzdHJpbmcgPSBcIlwiO1xuICAgcHJpdmF0ZSBmaWxlczogYW55ID0gW107XG4gICBwcml2YXRlIGluX3Byb2dyZXNzOiBhbnk7XG4gICBwcml2YXRlIE1BWF9TSVpFIDogbnVtYmVyID0gMTA0ODU3NjAwOyAvLyAxMDAgTUJcblxuXG4gIC8qKlxuICAgKiAoT3B0aW9uYWwpIGlmIG5lZWRlZCBhIGxvZ2dlciBjYW4gYmUgdXNlZFxuICAgKi9cbiAgIEBJbnB1dCgpXG4gICBwcml2YXRlIGxvZ0NhbGxiYWNrOiBGdW5jdGlvbjtcblxuICAvKipcbiAgICogQ29uc3RydWN0b3JcbiAgICpcbiAgICogQHBhcmFtICB7UmVuZGVyZXJ9IHJlbmRlcmVyIGZvciBpbnZva2luZyBuYXRpdmUgbWV0aG9kc1xuICAgKiBAcGFyYW0gIHtMb2d9ICAgICAgbG9nZ2VyIGluc3RhbmNlXG4gICAqL1xuICAgY29uc3RydWN0b3IocHJpdmF0ZSBuYXY6IE5hdiwgcHJpdmF0ZSByZW5kZXJlcjogUmVuZGVyZXIsIHByaXZhdGUgY29uZmlnOiBDb25maWcpIHtcbiAgICAgaWYgKHRoaXMuYWxsb3dNdWx0aXBsZSA9PT0gZmFsc2UpIHtcbiAgICAgICB0aGlzLm11bHRpID0gXCJcIjtcbiAgICAgfVxuICAgfVxuXG4gICBuZ09uSW5pdCgpIHtcbiAgICAgLy9jb25zb2xlLmxvZyhcIiMjIyMjIyMjIyMjIyMjIyMjIyMjIyNpIG5pbmluaWluaVwiKTtcbiAgIH1cblxuICAgcHVibGljIHVwbG9hZCAodXJsOiBzdHJpbmcsIGZpbGVzOiBGaWxlW10pOiBQcm9taXNlPGFueT4ge1xuICAgICByZXR1cm4gbmV3IFByb21pc2UoKHJlc29sdmUsIHJlamVjdCkgPT4ge1xuXG4gICAgICAgbGV0IHhocjpYTUxIdHRwUmVxdWVzdCA9IG5ldyBYTUxIdHRwUmVxdWVzdCgpO1xuXG4gICAgICAgeGhyLm9ucmVhZHlzdGF0ZWNoYW5nZSA9ICgpID0+IHtcbiAgICAgICAgIGlmICh4aHIucmVhZHlTdGF0ZSA9PT0gNCkge1xuICAgICAgICAgICBpZiAoeGhyLnN0YXR1cyA9PT0gMjAwKSB7XG4gICAgICAgICAgICAgcmVzb2x2ZSh4aHIucmVzcG9uc2UpOyAvL0pTT04ucGFyc2UoeGhyLnJlc3BvbnNlKVxuICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgIHJlamVjdCh4aHIucmVzcG9uc2UpO1xuICAgICAgICAgICB9XG4gICAgICAgICB9XG4gICAgICAgfTtcblxuICAgICAgIGxldCB0b2tlbiA9IHRoaXMuY29uZmlnLmdldEN1cnJlbnQoXCJrZXlcIiksXG4gICAgICAgb3JnID0gdGhpcy5jb25maWcuZ2V0Q3VycmVudChcIm9yZ1wiKSwgLy8gbG9jYWxTdG9yYWdlLmdldEl0ZW0oJ3VzZXJPcmdLZXknKSxcbiAgICAgICBpbnN0ID0gdGhpcy5jb25maWcuZ2V0Q3VycmVudChcImluc3RhbmNlXCIpOy8vIGxvY2FsU3RvcmFnZS5nZXRJdGVtKCd1c2VySW5zdGFuY2VLZXknKTtcblxuICAgICAgIHhoci5vcGVuKCdQT1NUJywgdXJsK1wiZmlsZXMvXCIsIHRydWUpO1xuICAgICAgIHhoci5zZXRSZXF1ZXN0SGVhZGVyKFwiQXV0aG9yaXphdGlvblwiLCBcIkJhc2ljIFwiICsgYnRvYShgJHtvcmd9LSR7aW5zdH06JHt0b2tlbn1gKSk7XG4gICAgICAgLy94aHIud2l0aENyZWRlbnRpYWxzID0gdHJ1ZTtcbiAgICAgICAvL2NvbnNvbGUubG9nKHRoaXMuZmlsZURlc3QpO1xuICAgICAgIGxldCBmb3JtRGF0YTogRm9ybURhdGEgPSBuZXcgRm9ybURhdGEoKTtcbiAgICAgICBmb3IgKCB2YXIga2V5IGluIHRoaXMuZmlsZURlc3QgKSB7XG4gICAgICAgICBmb3JtRGF0YS5hcHBlbmQoa2V5LCB0aGlzLmZpbGVEZXN0W2tleV0pO1xuICAgICAgIH1cbiAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IGZpbGVzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICBmb3JtRGF0YS5hcHBlbmQoXCJ1cGxvYWRzW11cIiwgZmlsZXNbaV0sIGZpbGVzW2ldLnVwbG9hZF9uYW1lKTtcbiAgICAgICB9XG4gICAgICAgeGhyLnNlbmQoZm9ybURhdGEpO1xuICAgICB9KTtcbiAgIH1cblxuICAgb25VcGxvYWQoaXNfQ2xvc2U/KSB7XG4gICAgIC8vY29uc29sZS5sb2coXCJ1cGxvYWQgc3RhcnRcIik7XG4gICAgIGlmICghdGhpcy5maWxlcy5sZW5ndGgpIHtcbiAgICAgICB0aGlzLmZpbGVzVXBsb2FkZWQubmV4dChcIm9rXCIgKyBcIiBubyBmaWxlcyBcIiArIChpc19DbG9zZSA/IFwiIG9uIGNsb3NlXCIgOiBcIlwiKSk7XG4gICAgICAgcmV0dXJuO1xuICAgICB9XG4gICAgIC8vcHJvb2YgZG91YmxlIGNsaWNrXG4gICAgIGlmICh0aGlzLmluX3Byb2dyZXNzICYmIERhdGUubm93KCkgLSB0aGlzLmluX3Byb2dyZXNzIDwgMTUwMCkge3JldHVybjt9XG4gICAgIHRoaXMuaW5fcHJvZ3Jlc3MgPSBEYXRlLm5vdygpO1xuXG4gICAgIGxldCBsb2FkaW5nID0gbnVsbDtcblxuICAgICBpZiAodGhpcy5maWxlcy5sZW5ndGggPj0gMiB8fCB0aGlzLmZpbGVzWzBdLnNpemUgPiAyMDAwMClcbiAgICAge1xuICAgICAgIGxvYWRpbmcgPSBMb2FkaW5nLmNyZWF0ZSh7XG4gICAgICAgICBjb250ZW50OiBcIlVwbG9hZGluZyBmaWxlKHMpLi4uXCIsXG4gICAgICAgICAvL2R1cmF0aW9uOiAyMDAwLFxuICAgICAgICAgZGlzbWlzc09uUGFnZUNoYW5nZTogdHJ1ZVxuICAgICAgIH0pO1xuICAgICAgIHRoaXMubmF2LnByZXNlbnQobG9hZGluZyk7XG4gICAgIH1cblxuICAgICB0aGlzLnVwbG9hZChBcGlTaXRlLCB0aGlzLmZpbGVzKS50aGVuKChkYXRhKSA9PiB7XG4gICAgICAgdGhpcy5yZXNldCgpO1xuICAgICAgIGlmIChsb2FkaW5nKSBsb2FkaW5nLmRpc21pc3MoKTtcbiAgICAgICB0aGlzLmZpbGVzVXBsb2FkZWQubmV4dChcIm9rIFwiICsgZGF0YSArIChpc19DbG9zZSA/IFwiIG9uIGNsb3NlXCIgOiBcIlwiKSk7XG4gICAgIH0pLmNhdGNoKChleCkgPT4ge1xuICAgICAgIGlmIChsb2FkaW5nKSBcbiAgICAgICB7XG4gICAgICAgICBzZXRUaW1lb3V0KCgpID0+IGxvYWRpbmcuZGlzbWlzcygpLCAxMDAwKTtcbiAgICAgICB9XG4gICAgICAgY29uc29sZS5lcnJvcignRXJyb3IgdXBsb2FkaW5nIGZpbGVzJywgZXgpO1xuICAgICAgIHRoaXMuZmlsZXNVcGxvYWRlZC5uZXh0KFwiZXJyb3IgXCIgKyBleCk7XG4gICAgICAgdGhpcy5uYXYuYWxlcnQoJ0Vycm9yIHVwbG9hZGluZyBmaWxlcyEgQ2Fubm90IGFkZCBmaWxlcyEgUGxlYXNlIHRyeSBhZ2FpbiBsYXRlciAuLi4gb3IgdHJ5IHRvIHVwbG9hZCBvbmUgZmlsZSBvciBjaGVjayB5b3VyIGludGVybmV0IGNvbm5lY3Rpb24nLCB0cnVlKTtcbiAgICAgfSk7XG4gICB9XG5cbiAgIHJlc2V0KGZpbGU/KVxuICAge1xuICAgICBpZiAoZmlsZSlcbiAgICAge1xuICAgICAgIHRoaXMuZmlsZXMgPSB0aGlzLmZpbGVzLmZpbHRlcihpdGVtID0+IGl0ZW0gIT09IGZpbGUpO1xuICAgICAgIHRoaXMuZmlsZXNTZWxlY3RlZC5uZXh0KHRoaXMuZmlsZXMubWFwKGl0ZW0gPT4gaXRlbS51cGxvYWRfbmFtZSkpO1xuICAgICB9XG4gICAgIGlmICghZmlsZSB8fCAhdGhpcy5maWxlcy5sZW5ndGgpIHtcbiAgICAgICB0aGlzLmVycm9yID0gXCJcIjtcbiAgICAgICB0aGlzLmZpbGVzID0gW107XG4gICAgICAgdGhpcy5uYXRpdmVJbnB1dEJ0bi5uYXRpdmVFbGVtZW50LnZhbHVlID0gJyc7XG4gICAgIH1cblxuICAgfVxuXG4gIC8qKlxuICAgKiBDYWxsYmFjayBleGVjdXRlZCB3aGVuIHRoZSB2aXNpYmxlIGJ1dHRvbiBpcyBwcmVzc2VkXG4gICAqXG4gICAqIEBwYXJhbSB7RXZlbnR9IGV2ZW50IHNob3VsZCBiZSBhIG1vdXNlIGNsaWNrIGV2ZW50XG4gICAqL1xuICAgcHVibGljIGNhbGxiYWNrKGV2ZW50OiBFdmVudCk6IHZvaWQge1xuICAgICB0aGlzLmxvZyhcIlVwbG9hZEJ1dHRvbjogQ2FsbGJhY2sgZXhlY3V0ZWQgdHJpZ2dlcmlnIGNsaWNrIGV2ZW50XCIsIHRoaXMubmF0aXZlSW5wdXRCdG4ubmF0aXZlRWxlbWVudCk7XG5cbiAgICAgLy8gdHJpZ2dlciBjbGljayBldmVudCBvZiBoaWRkZW4gaW5wdXRcbiAgICAgbGV0IGNsaWNrRXZlbnQ6IE1vdXNlRXZlbnQgPSBuZXcgTW91c2VFdmVudChcImNsaWNrXCIsIHtidWJibGVzOiB0cnVlfSk7XG4gICAgIHRoaXMucmVuZGVyZXIuaW52b2tlRWxlbWVudE1ldGhvZChcbiAgICAgICB0aGlzLm5hdGl2ZUlucHV0QnRuLm5hdGl2ZUVsZW1lbnQsIFwiZGlzcGF0Y2hFdmVudFwiLCBbY2xpY2tFdmVudF0pO1xuICAgfVxuXG4gIC8qKlxuICAgKiBDYWxsYmFjayB3aGljaCBpcyBleGVjdXRlZCBhZnRlciBmaWxlcyBmcm9tIG5hdGl2ZSBwb3B1cCBhcmUgc2VsZWN0ZWQuXG4gICAqXG4gICAqIEBwYXJhbSB7RXZlbnR9IGV2ZW50IGNoYW5nZSBldmVudCBjb250YWluaW5nIHNlbGVjdGVkIGZpbGVzXG4gICAqKi8gXG4gICBmaWxlc0FkZGVkKGV2ZW50OiBFdmVudCkge1xuICAgICB0aGlzLmxvZyhcIlVwbG9hZEJ1dHRvbjogQWRkZWQgZmlsZXNcIiwgdGhpcy5uYXRpdmVJbnB1dEJ0bi5uYXRpdmVFbGVtZW50LmZpbGVzKTtcbiAgICAgbGV0IGxlbiA9IHRoaXMubmF0aXZlSW5wdXRCdG4ubmF0aXZlRWxlbWVudC5maWxlcy5sZW5ndGg7XG4gICAgIGxldCBjaGVja2ZpbGVzOiBhbnkgPSBbXTtcbiAgICAgdGhpcy5lcnJvciA9IFwiXCI7XG4gICAgIGlmIChsZW4pe1xuICAgICAgIGxldCBzZWxOYW1lcz17fSwgZXhpc3ROYW1lcz17fTtcbiAgICAgICBpZiAodGhpcy5maWxlc0V4aXN0KVxuICAgICAgICAgZm9yIChsZXQgaiA9IDA7IGogPCB0aGlzLmZpbGVzRXhpc3QubGVuZ3RoOyBqKyspIHtcbiAgICAgICAgICAgZXhpc3ROYW1lc1t0aGlzLmZpbGVzRXhpc3Rbal0ubmFtZS50cmltKCldID0gdGhpcy5maWxlc0V4aXN0W2pdLnNpemU7XG4gICAgICAgICB9XG4gICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IGxlbjsgaSsrKSB7XG4gICAgICAgICAgIGxldCBmaWxlID0gdGhpcy5uYXRpdmVJbnB1dEJ0bi5uYXRpdmVFbGVtZW50LmZpbGVzW2ldO1xuICAgICAgICAgICBpZiAodGhpcy5pc0ZpbGUoZmlsZSkpe1xuICAgICAgICAgICAgIGlmIChmaWxlLnNpemUgPiB0aGlzLk1BWF9TSVpFKVxuICAgICAgICAgICAgICAgdGhpcy5lcnJvciArPSBgRmlsZSAke2ZpbGUubmFtZX0gd2lsbCBiZSBza2lwcGVkLiBJdCBpcyBtb3JlIDEwMCBNQjxicj5gO1xuICAgICAgICAgICAgIGVsc2UgaWYgKGZpbGUuc2l6ZSA9PT0gMClcbiAgICAgICAgICAgICAgIHRoaXMuZXJyb3IgKz0gYEZpbGUgJHtmaWxlLm5hbWV9IHdpbGwgYmUgc2tpcHBlZC4gSXQgaGFzIHplcm8gc2l6ZSA8YnI+YDtcbiAgICAgICAgICAgICBlbHNlIGlmICghZmlsZS5uYW1lLnRyaW0oKSlcbiAgICAgICAgICAgICAgIHRoaXMuZXJyb3IgKz0gYEZpbGUgIyR7aX0gd2lsbCBiZSBza2lwcGVkLiBJdCBoYXMgZW1wdHkgbmFtZTxicj5gO1xuICAgICAgICAgICAgIGVsc2VcbiAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICBsZXQgbmV3X25hbWUgPSBmaWxlLm5hbWUudHJpbSgpO1xuICAgICAgICAgICAgICAgLy9kZXRlY3QgYWxlYWR5IHVwbG9hZGVkIGR1cFxuICAgICAgICAgICAgICAgaWYgKGZpbGUuc2l6ZSAhPSAoZXhpc3ROYW1lc1tuZXdfbmFtZS50cmltKCldIHx8IGZpbGUuc2l6ZSkpXG4gICAgICAgICAgICAgICAgIG5ld19uYW1lID0gdGhpcy5hZGRfdGFnKG5ld19uYW1lLGZpbGUuc2l6ZSk7XG4gICAgICAgICAgICAgICAvL2RldGVjdCBzZWxlY3RlZCBkdXBcbiAgICAgICAgICAgICAgIGlmIChmaWxlLnNpemUgIT0gKHNlbE5hbWVzW25ld19uYW1lXSB8fCBmaWxlLnNpemUpKVxuICAgICAgICAgICAgICAgICBuZXdfbmFtZSA9IHRoaXMuYWRkX3RhZyhuZXdfbmFtZSxmaWxlLnNpemUpO1xuXG4gICAgICAgICAgICAgICBmaWxlLnVwbG9hZF9uYW1lID0gbmV3X25hbWU7XG4gICAgICAgICAgICAgICBjaGVja2ZpbGVzLnB1c2goZmlsZSk7XG4gICAgICAgICAgICAgICBzZWxOYW1lc1tuZXdfbmFtZV0gPSBmaWxlLnNpemU7XG4gICAgICAgICAgICAgfVxuICAgICAgICAgICB9XG4gICAgICAgICAgIGVsc2UgXG4gICAgICAgICAgIHtcbiAgICAgICAgICAgICB0aGlzLmVycm9yICs9IGBGaWxlICMke2l9IHdpbGwgYmUgc2tpcHBlZC4gSXQgaXMgZW1wdHk8YnI+YDtcbiAgICAgICAgICAgfVxuICAgICAgICAgfVxuICAgICAgIH1cbiAgICAgICB0aGlzLmZpbGVzID0gY2hlY2tmaWxlcztcbiAgICAgICB0aGlzLmZpbGVzU2VsZWN0ZWQubmV4dCh0aGlzLmZpbGVzLm1hcChpdGVtID0+IGl0ZW0udXBsb2FkX25hbWUpKTtcbiAgICAgfVxuXG4gICAgIGFkZF90YWcobmFtZSwgdGFnKSB7XG4gICAgICAgdmFyIGluZGV4ID0gbmFtZS5sYXN0SW5kZXhPZihcIi5cIiksXG4gICAgICAgbGVuID0gbmFtZS5sZW5ndGg7XG4gICAgICAgcmV0dXJuIG5hbWUuc3Vic3RyKDAsaW5kZXgpK1wiX1wiK3RhZytuYW1lLnN1YnN0cihpbmRleCxsZW4pO1xuICAgICB9XG5cbiAgLyoqXG4gICAqIChPcHRpb25hbCkgSWYgbmVlZGVkIGZvciBkZWJ1Z2dpbmdcbiAgICpcbiAgICogQHBhcmFtIHthbnlbXX0gLi4uYXJncyBjb25zb2xlLmxvZyBsaWtlIHBhcmFtdGVyIDxjb2RlPmxvZyhcIkVycm9yXCIsIG9iaiwgMSk8L2NvZGU+XG4gICAqL1xuICAgcHJpdmF0ZSBsb2coLi4uYXJnczogYW55W10pOiB2b2lkIHtcbiAgICAgaWYgKHRoaXMubG9nQ2FsbGJhY2spIHtcbiAgICAgICBjb25zb2xlLmxvZyhhcmdzKTtcbiAgICAgICAvL3RoaXMubG9nQ2FsbGJhY2soYXJncyk7XG4gICAgIH1cbiAgIH1cblxuICAgaHVtYW5pemVCeXRlcyhieXRlczogbnVtYmVyKSB7XG4gICAgIGlmIChieXRlcyA9PT0gMCkge1xuICAgICAgIHJldHVybiAnMCBCeXRlJztcbiAgICAgfVxuICAgICBsZXQgayA9IDEwMjQ7XG4gICAgIGNvbnN0IHNpemVzOiBzdHJpbmdbXSA9IFsnQnl0ZXMnLCAnS0InLCAnTUInLCAnR0InLCAnVEInLCAnUEInXTtcbiAgICAgbGV0IGk6IG51bWJlciA9IE1hdGguZmxvb3IoTWF0aC5sb2coYnl0ZXMpIC8gTWF0aC5sb2coaykpO1xuXG4gICAgIHJldHVybiBwYXJzZUZsb2F0KChieXRlcyAvIE1hdGgucG93KGssIGkpKS50b0ZpeGVkKDIpKSArICcgJyArIHNpemVzW2ldO1xuICAgfVxuXG4gICBpc0ltYWdlKHVybCkge1xuICAgICBpZiAoIXVybCB8fCB1cmwudHJpbSgpLm1hdGNoKC8oanBlZ3xqcGd8Z2lmfHBuZ3xpY28pJC9pKSA9PT0gbnVsbClcbiAgICAgICByZXR1cm4gXCJtZC1kb2N1bWVudFwiO1xuICAgICByZXR1cm4gIFwibWQtaW1hZ2VcIjtcbiAgIH1cblxuICAgaXNGaWxlKGZpbGU6IGFueSk6IGJvb2xlYW4ge1xuICAgICByZXR1cm4gZmlsZSAhPT0gbnVsbCAmJiBmaWxlIGluc3RhbmNlb2YgQmxvYjtcbiAgIH1cblxuIH1cblxuXG4gQFBhZ2Uoe1xuICAgdGVtcGxhdGVVcmw6ICdidWlsZC9wYWdlcy90aWNrZXQtZGV0YWlscy90aWNrZXQtZGV0YWlscy5odG1sJyxcbiAgIGRpcmVjdGl2ZXM6IFtUb2RvTGlzdENvbXBvbmVudCwgQ3VzdG9tRmllbGRDb21wb25lbnQsIFBvc3RzTGlzdENvbXBvbmVudCwgZm9yd2FyZFJlZigoKSA9PiBTZWxlY3RMaXN0Q29tcG9uZW50KSwgZm9yd2FyZFJlZigoKSA9PiBNdWx0aVNlbGVjdENvbXBvbmVudCksIGZvcndhcmRSZWYoKCkgPT4gQ2xhc3NMaXN0Q29tcG9uZW50KSwgZm9yd2FyZFJlZigoKSA9PiBMb2NhdGlvbkxpc3RDb21wb25lbnQpLCBVcGxvYWRCdXR0b25Db21wb25lbnRdLFxuICAgcGlwZXM6IFtHcmF2YXRhclBpcGUsIExpbmVicmVha3NQaXBlLCBEYXlzb2xkUGlwZSwgRGF5c2Fnb1BpcGUsIEh0bWxzYWZlUGlwZV0sXG4gfSlcbiBleHBvcnQgY2xhc3MgVGlja2V0RGV0YWlsc1BhZ2Uge1xuXG4gICBjb3VudHM6IGFueTtcbiAgIHRpY2tldDogYW55ID0ge307XG4gICBhY2NvdW50X2lkOiBudW1iZXI7XG4gICBwZXJjZW50YWdlX2J1ZGdldDogYW55O1xuICAgdXNlcnBob25lOiBzdHJpbmc7XG4gICBjdXN0b21maWVsZHM6IGFueSA9IFtdO1xuICAgdGVjaG5pY2lhbnM6IGFueSA9IFtdO1xuICAgdXNlcnM6IGFueSA9IFtdO1xuICAgc3ViamVjdDogYW55O1xuICAgbmV4dF9zdGVwOiBhbnk7XG4gICBuZXh0X3N0ZXBfZGF0ZTogYW55O1xuICAgcGFnZXI6IGFueTtcbiAgIGRldGFpbHNfdGFiOiBzdHJpbmc7XG4gICBhY3RpdmU6IGJvb2xlYW47XG4gICB3YWl0aW5nX3Jlc3BvbnNlOiBib29sZWFuID0gZmFsc2U7XG4gICBpc190ZWNoc19vbmx5OiBib29sZWFuID0gZmFsc2U7XG4gICBoZTogYW55O1xuICAgdGVjaG5hbWU6IHN0cmluZztcbiAgIHVzZXJuYW1lOiBzdHJpbmc7XG4gICBzZWxlY3RzOiBhbnk7XG4gICBzZWxlY3RfYnV0dG9uOiBhbnk7XG4gICB0aWNrZXRub3RlOiBzdHJpbmc7XG4gICBhdHRhY2htZW50czogYW55O1xuICAgaXNfZWRpdHdvcmtwYWQ6IGJvb2xlYW4gPSB0cnVlO1xuICAgZGlzYWJsZTogYm9vbGVhbiA9IGZhbHNlO1xuICAgY2FjaGVuYW1lOiBzdHJpbmcgPSBcIlwiO1xuICAgY2xvc2VkX2luZGV4OiBudW1iZXIgPSAwO1xuICAgZmlsZURlc3Q6IGFueSA9IHt0aWNrZXQ6IFwiXCJ9O1xuICAgZmlsZXM6IGFueSA9IFtdO1xuICAgaXNfc2hvd2xvZ3M6IGJvb2xlYW4gPSBmYWxzZTtcbiAgIHNob3dTdWJqQ2hhbmdlOiBib29sZWFuO1xuICAgcG9zdHM6IGFueSA9IFtcbiAgIHtcbiAgICAgXCJpZFwiOiAwLFxuICAgICBcInRpY2tldF9rZXlcIjogXCJcIixcbiAgICAgXCJ1c2VyX2lkXCI6IDAsXG4gICAgIFwidXNlcl9lbWFpbFwiOiBcIiBcIixcbiAgICAgXCJ1c2VyX2ZpcnN0bmFtZVwiOiBcIiBcIixcbiAgICAgXCJ1c2VyX2xhc3RuYW1lXCI6IFwiIFwiLFxuICAgICBcInJlY29yZF9kYXRlXCI6IFwiMjAxNi0wMS0wMVQwMDowMDowMC4wMDAwMDAwXCIsXG4gICAgIFwibG9nX3R5cGVcIjogXCJJbml0aWFsIFBvc3RcIixcbiAgICAgXCJub3RlXCI6IFwiIFwiLFxuICAgICBcIndvcmtwYWRcIjogXCIgXCIsXG4gICAgIFwidGlja2V0X3RpbWVfaWRcIjogMCxcbiAgICAgXCJzZW50X3RvXCI6IFwiIFwiLFxuICAgICBcImlzX3dhaXRpbmdcIjogZmFsc2UsXG4gICAgIFwic2xhX3VzZWRcIjogMFxuICAgfV07XG5cbiAgIGNvbnN0cnVjdG9yKHByaXZhdGUgbmF2OiBOYXYsIHByaXZhdGUgbmF2UGFyYW1zOiBOYXZQYXJhbXMsIHByaXZhdGUgdGlja2V0UHJvdmlkZXI6IFRpY2tldFByb3ZpZGVyLCBwcml2YXRlIGRhdGFQcm92aWRlcjogRGF0YVByb3ZpZGVyLCBwcml2YXRlIGNvbmZpZzogQ29uZmlnKSB7XG4gICB9XG5cbiAgIG9uUGFnZUxvYWRlZCgpIHtcblxuICAgICB0aGlzLnRpY2tldC5jdXN0b21maWVsZHMgPSBbXTtcbiAgICAgdGhpcy5hY3RpdmUgPSB0cnVlO1xuICAgICB0aGlzLmhlID0gdGhpcy5jb25maWcuZ2V0Q3VycmVudChcInVzZXJcIik7XG4gICAgIHRoaXMuZGV0YWlsc190YWIgPSBcIlJlcGx5XCI7XG4gICAgIGxldCBkYXRhID0gdGhpcy5uYXZQYXJhbXMuZGF0YSB8fCB7fTtcbiAgICAgdGhpcy5jYWNoZW5hbWUgPSBkYXRhLmNhY2hlbmFtZTtcbiAgICAgdGhpcy5wb3N0c1swXS5yZWNvcmRfZGF0ZSA9IGRhdGEudXBkYXRlZF90aW1lIHx8IHRoaXMucG9zdHNbMF0ucmVjb3JkX2RhdGU7XG5cbiAgICAgdGhpcy5pc19zaG93bG9ncyA9IGZhbHNlO1xuICAgICB0aGlzLnRpY2tldG5vdGUgPSBcIlwiO1xuXG4gICAgIHRoaXMuZmlsZURlc3QgPSB7dGlja2V0OiBkYXRhLmtleX07XG5cbiAgICAgdGhpcy5nZXRQb3N0cyhkYXRhLmtleSk7XG5cbiAgICAgdGhpcy5wcm9jZXNzRGV0YWlscyhkYXRhLCB0cnVlKTtcbiAgIH1cblxuICAgaW5pdFNlbGVjdHMoZGF0YSl7XG4gICAgIHRoaXMudXNlcm5hbWUgPSBnZXRGdWxsTmFtZShkYXRhLnVzZXJfZmlyc3RuYW1lLCBkYXRhLnVzZXJfbGFzdG5hbWUsIGRhdGEudXNlcl9lbWFpbCk7XG4gICAgIHRoaXMudGVjaG5hbWUgPSBnZXRGdWxsTmFtZShkYXRhLnRlY2huaWNpYW5fZmlyc3RuYW1lIHx8IGRhdGEudGVjaF9maXJzdG5hbWUsIGRhdGEudGVjaG5pY2lhbl9sYXN0bmFtZSB8fCBkYXRhLnRlY2hfbGFzdG5hbWUsIGRhdGEudGVjaG5pY2lhbl9lbWFpbCB8fCBkYXRhLnRlY2hfZW1haWwpO1xuICAgICBsZXQgY29udHJhY3RfaWQgPSBkYXRhLmRlZmF1bHRfY29udHJhY3RfaWQgfHwgMDtcbiAgICAgbGV0IGNvbnRyYWN0X25hbWUgPSBkYXRhLmRlZmF1bHRfY29udHJhY3RfbmFtZTtcbiAgICBcbiAgICAgdGhpcy5zZWxlY3RfYnV0dG9uID0ge1xuICAgICAgIFwidGVjaFwiOiB7XG4gICAgICAgICBuYW1lOiBcIlRlY2hcIixcbiAgICAgICAgIHZhbHVlOiBcIlRyYW5zZmVyIFwiK3RoaXMuY29uZmlnLmN1cnJlbnQubmFtZXMudGlja2V0LnMsXG4gICAgICAgICBzZWxlY3RlZDogZGF0YS50ZWNoX2lkLFxuICAgICAgICAgdXJsOiBcInRlY2huaWNpYW5zXCIsXG4gICAgICAgICBoaWRkZW46IGZhbHNlXG4gICAgICAgfSxcbiAgICAgfTtcbiAgICAgdGhpcy5zZWxlY3RzID0ge1xuICAgICAgIFwiYWx0dXNlcnNcIiA6IHtcbiAgICAgICAgIG5hbWU6IFwiQWx0IFVzZXJzXCIsIFxuICAgICAgICAgdmFsdWU6IHRoaXMudXNlcm5hbWUsXG4gICAgICAgICBzZWxlY3RlZDogZGF0YS51c2VyX2lkLFxuICAgICAgICAgdXJsOiBcInVzZXJzXCIsXG4gICAgICAgICBoaWRkZW46IGZhbHNlXG4gICAgICAgfSxcbiAgICAgICBcImxvY2F0aW9uXCI6IHtcbiAgICAgICAgIG5hbWU6IFwiTG9jYXRpb25cIixcbiAgICAgICAgIHZhbHVlOiBkYXRhLmxvY2F0aW9uX25hbWUgfHwgXCIoIE5vdCBTZXQgKVwiLFxuICAgICAgICAgc2VsZWN0ZWQ6IGRhdGEubG9jYXRpb25faWQgfHwgMCxcbiAgICAgICAgIHVybDogYGxvY2F0aW9ucz9hY2NvdW50PSR7dGhpcy5hY2NvdW50X2lkfSZsaW1pdD0xMDAwYCxcbiAgICAgICAgIGhpZGRlbjogIXRoaXMuY29uZmlnLmN1cnJlbnQuaXNfbG9jYXRpb25fdHJhY2tpbmdcbiAgICAgICB9LFxuICAgICAgIFwiYWx0dGVjaHNcIjoge1xuICAgICAgICAgbmFtZTogXCJBbHQgVGVjaHNcIixcbiAgICAgICAgIHZhbHVlOiB0aGlzLnRlY2huYW1lLFxuICAgICAgICAgc2VsZWN0ZWQ6IGRhdGEudGVjaF9pZCxcbiAgICAgICAgIHVybDogXCJ0ZWNobmljaWFuc1wiLFxuICAgICAgICAgaGlkZGVuOiBmYWxzZVxuICAgICAgIH0sXG4gICAgICAgXCJwcm9qZWN0XCI6IHtcbiAgICAgICAgIG5hbWU6IFwiUHJvamVjdFwiLFxuICAgICAgICAgdmFsdWU6IGRhdGEucHJvamVjdF9uYW1lIHx8IFwiKCBOb3QgU2V0IClcIixcbiAgICAgICAgIHNlbGVjdGVkOiBkYXRhLnByb2plY3RfaWQgfHwgMCxcbiAgICAgICAgIHVybDogYHByb2plY3RzP2FjY291bnQ9JHt0aGlzLmFjY291bnRfaWR9JmlzX3dpdGhfc3RhdGlzdGljcz1mYWxzZWAsXG4gICAgICAgICBoaWRkZW46ICF0aGlzLmNvbmZpZy5jdXJyZW50LmlzX3Byb2plY3RfdHJhY2tpbmdcbiAgICAgICB9LFxuICAgICAgIFwiY29udHJhY3RcIiA6IHsgXG4gICAgICAgICBuYW1lOiBcIkNvbnRyYWN0XCIsIFxuICAgICAgICAgdmFsdWU6IGNvbnRyYWN0X25hbWUgfHwgXCIoIE5vdCBTZXQgKVwiLFxuICAgICAgICAgc2VsZWN0ZWQ6IGNvbnRyYWN0X2lkIHx8IHRoaXMuY29uZmlnLmdldFJlY2VudChcImNvbnRyYWN0XCIpLnNlbGVjdGVkIHx8IDAsXG4gICAgICAgICB1cmw6IGBjb250cmFjdHM/YWNjb3VudF9pZD0ke3RoaXMuYWNjb3VudF9pZH0mZm9yX3RpbWVfbG9ncz1mYWxzZWAsXG4gICAgICAgICBoaWRkZW46ICF0aGlzLmNvbmZpZy5jdXJyZW50LmlzX2ludm9pY2UsXG4gICAgICAgICBpc19kZWZhdWx0OiB0cnVlICAgIFxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgXCJzdWJtaXNzaW9uc1wiIDogeyBcbiAgICAgICAgIG5hbWU6IFwiU3VibWlzc2lvbiBDYXRlZ29yeVwiLCBcbiAgICAgICAgIHZhbHVlOiBkYXRhLnN1Ym1pc3Npb25fY2F0ZWdvcnkgfHwgXCIoIE5vdCBTZXQgKVwiLFxuICAgICAgICAgc2VsZWN0ZWQ6IGRhdGEuc3VibWlzc2lvbl9jYXRlZ29yeSB8fCAwLFxuICAgICAgICAgdXJsOiBgc3VibWlzc2lvbnNgLFxuICAgICAgICAgaGlkZGVuOiAhdGhpcy5jb25maWcuY3VycmVudC5pc19zdWJtaXNzaW9uX2NhdGVnb3J5LFxuICAgICAgICAgaXNfZGlzYWJsZWQ6IGZhbHNlICBcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgIFwiY2F0ZWdvcmllc1wiIDogeyBcbiAgICAgICAgIG5hbWU6IFwiQ3JlYXRpb24gQ2F0ZWdvcnlcIiwgXG4gICAgICAgICB2YWx1ZTogZGF0YS5jcmVhdGlvbl9jYXRlZ29yeV9uYW1lIHx8IFwiKCBOb3QgU2V0IClcIixcbiAgICAgICAgIHNlbGVjdGVkOiBkYXRhLmNyZWF0aW9uX2NhdGVnb3J5X2lkIHx8IDAsXG4gICAgICAgICB1cmw6IGBjYXRlZ29yaWVzYCxcbiAgICAgICAgIGhpZGRlbjogIXRoaXMuY29uZmlnLmN1cnJlbnQuaXNfY3JlYXRpb25fY2F0ZWdvcmllcyxcbiAgICAgICAgIGlzX2Rpc2FibGVkOiBmYWxzZSAgIFxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgXCJsZXZlbFwiOiB7XG4gICAgICAgICBuYW1lOiBcIkxldmVsXCIsXG4gICAgICAgICB2YWx1ZTogZGF0YS5sZXZlbF9uYW1lID8gKGRhdGEubGV2ZWwgKyBcIiAtIFwiICsgZGF0YS5sZXZlbF9uYW1lKSA6IFwiKCBOb3QgU2V0IClcIixcbiAgICAgICAgIHNlbGVjdGVkOiBkYXRhLmxldmVsIHx8IDAsXG4gICAgICAgICB1cmw6IFwibGV2ZWxzXCIsXG4gICAgICAgICBoaWRkZW46ICF0aGlzLmNvbmZpZy5jdXJyZW50LmlzX3RpY2tldF9sZXZlbHMgfHwgKHRoaXMuY29uZmlnLmN1cnJlbnQuaXNfcmVzdHJpY3RfdGVjaF9lc2NhbGF0ZSAmJiAhdGhpcy5jb25maWcuY3VycmVudC51c2VyLmlzX2FkbWluKVxuICAgICAgIH0sXG4gICAgICAgXCJwcmlvcml0eVwiOiB7XG4gICAgICAgICBuYW1lOiBcIlByaW9yaXR5XCIsXG4gICAgICAgICB2YWx1ZTogZGF0YS5wcmlvcml0eV9uYW1lID8gKGRhdGEucHJpb3JpdHkgKyBcIiAtIFwiICsgZGF0YS5wcmlvcml0eV9uYW1lKSA6IFwiKCBOb3QgU2V0IClcIixcbiAgICAgICAgIHNlbGVjdGVkOiBkYXRhLnByaW9yaXR5X2lkIHx8IDAsXG4gICAgICAgICB1cmw6IFwicHJpb3JpdGllc1wiLFxuICAgICAgICAgaGlkZGVuOiAhdGhpcy5jb25maWcuY3VycmVudC5pc19wcmlvcml0aWVzX2dlbmVyYWxcbiAgICAgICB9LFxuICAgICAgIFwiY2xhc3NcIjoge1xuICAgICAgICAgbmFtZTogXCJDbGFzc1wiLFxuICAgICAgICAgdmFsdWU6IGRhdGEuY2xhc3NfbmFtZSB8fCBcIiggTm90IFNldCApXCIsXG4gICAgICAgICBzZWxlY3RlZDogZGF0YS5jbGFzc19pZCB8fCAwLFxuICAgICAgICAgdXJsOiBcImNsYXNzZXNcIixcbiAgICAgICAgIGhpZGRlbjogIXRoaXMuY29uZmlnLmN1cnJlbnQuaXNfY2xhc3NfdHJhY2tpbmdcbiAgICAgICB9XG4gICAgIH07XG5cbiAgICAgdGhpcy5zZWxlY3RzLmFjY291bnQgPSB7XG4gICAgICAgbmFtZTogXCJBY2NvdW50XCIsIFxuICAgICAgIHZhbHVlOiAoZGF0YS5hY2NvdW50IHx8IHt9KS5uYW1lIHx8IGRhdGEuYWNjb3VudF9uYW1lIHx8IHRoaXMuaGUuYWNjb3VudF9uYW1lLFxuICAgICAgIHNlbGVjdGVkOiB0aGlzLmFjY291bnRfaWQsXG4gICAgICAgdXJsOiBcImFjY291bnRzP2lzX3dpdGhfc3RhdGlzdGljcz1mYWxzZSZsaW1pdD01MDBcIixcbiAgICAgICBoaWRkZW46ICF0aGlzLmNvbmZpZy5jdXJyZW50LmlzX2FjY291bnRfbWFuYWdlclxuICAgICB9O1xuXG4gICAgLy8gc2V0VGltZW91dCgoKSA9PiB7XG4gICAvLyAgICAgICAgICAgIHRoaXMuZ2V0Q29udHJhY3RvcihhY2NvdW50X2lkKTtcbiAgICAvLyAgICAgICAgICAgICB9LCAxMDAwMCk7XG4gICB9XG5cbiAgIHVwbG9hZGVkRmlsZShldmVudClcbiAgIHtcbiAgICAgLy9jb25zb2xlLmxvZyhcIlVwbG9hZGVkOlwiLCBldmVudCk7XG4gICAgIGlmIChldmVudC5pbmRleE9mKFwib2tcIikgPT0gMClcbiAgICAge1xuICAgICAgIHRoaXMub25TdWJtaXQoIXRoaXMuY29uZmlnLmN1cnJlbnQudXNlci5pc190ZWNob3JhZG1pbiAmJiB0aGlzLnRpY2tldC5zdGF0dXMgIT0gJ0Nsb3NlZCcgJiYgfmV2ZW50LmluZGV4T2YoXCJjbG9zZVwiKSk7IFxuICAgICB9XG4gICB9XG5cbiAgIHNlbGVjdGVkRmlsZShldmVudClcbiAgIHtcbiAgICAgdGhpcy5maWxlcyA9IGV2ZW50O1xuICAgICB0aGlzLnRpY2tldG5vdGUgPSB0aGlzLnRpY2tldG5vdGUudHJpbSgpOyBcbiAgICAgaWYgKGV2ZW50Lmxlbmd0aCAmJiAhdGhpcy50aWNrZXRub3RlKVxuICAgICB7XG4gICAgICAgdGhpcy50aWNrZXRub3RlID0gXCIgIFwiO1xuICAgICB9XG4gICB9XG5cbiAgIGdldFBvc3RzKGtleSlcbiAgIHtcbiAgICAgdGhpcy50aWNrZXRQcm92aWRlci5nZXRUaWNrZXREZXRhaWxzKGtleSkuc3Vic2NyaWJlKFxuICAgICAgIGRhdGEgPT4ge1xuICAgICAgICAgdGhpcy5wcm9jZXNzRGV0YWlscyhkYXRhKTtcbiAgICAgICB9LFxuICAgICAgIGVycm9yID0+IHtcbiAgICAgICAgIGNvbnNvbGUubG9nKGVycm9yIHx8ICdTZXJ2ZXIgZXJyb3InKTtcbiAgICAgICAgIHRoaXMucmVkaXJlY3RPbkVtcHR5KCk7XG4gICAgICAgfVxuICAgICAgICk7XG4gICB9XG5cbiAgIGdldFByb2ZpbGUodXNlcl9pZClcbiAgIHtcbiAgICAgdGhpcy50aWNrZXRQcm92aWRlci5nZXRVc2VyUHJvZmlsZSh1c2VyX2lkKS5zdWJzY3JpYmUoXG4gICAgICAgZGF0YSA9PiB7XG4gICAgICAgICB0aGlzLnVzZXJwaG9uZSA9IGRhdGEubW9iaWxlX3Bob25lIHx8IGRhdGEucGhvbmU7XG4gICAgICAgfSxcbiAgICAgICBlcnJvciA9PiB7XG4gICAgICAgICBjb25zb2xlLmxvZyhlcnJvciB8fCAnU2VydmVyIGVycm9yJyk7XG4gICAgICAgfVxuICAgICAgICk7XG4gICB9XG5cbiAgIGdldEN1c3RvbWZpZWxkKGNsYXNzX2lkKVxuICAge1xuICAgICBpZiAoY2xhc3NfaWQgPT0gMClcbiAgICAgICAgICAgcmV0dXJuIHRoaXMuY3VzdG9tZmllbGRzID0gW107XG4gICAgIHRoaXMudGlja2V0UHJvdmlkZXIuZ2V0Q3VzdG9tZmllbGRzKGNsYXNzX2lkLCB0aGlzLnBhZ2VyKS5zdWJzY3JpYmUoXG4gICAgICAgZGF0YSA9PiB7XG4gICAgICAgICBpZiAoZGF0YS5sZW5ndGggPT0gMCl7XG4gICAgICAgICAgIHRoaXMuY3VzdG9tZmllbGRzID0gZGF0YTtcbiAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgfVxuICAgICAgICAgaWYgKHRoaXMudGlja2V0LmN1c3RvbWZpZWxkcy5sZW5ndGggIT0gZGF0YS5sZW5ndGgpIHtcbiAgICAgICAgICAgdGhpcy5jdXN0b21maWVsZHMgPSBkYXRhO1xuICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgfVxuICAgICAgICAgZm9yICh2YXIgbiA9IDA7IG48dGhpcy50aWNrZXQuY3VzdG9tZmllbGRzLmxlbmd0aDsgbisrKVxuICAgICAgICAgeyBcbiAgICAgICAgICAgZGF0YS5maWx0ZXIodGMgPT4gdGMuaWQudG9TdHJpbmcoKSA9PSB0aGlzLnRpY2tldC5jdXN0b21maWVsZHNbbl0uaWQudG9TdHJpbmcoKSlbMF0udmFsdWUgPSB0aGlzLnRpY2tldC5jdXN0b21maWVsZHNbbl0udmFsdWU7XG4gICAgICAgICB9XG4gICAgICAgICB0aGlzLmN1c3RvbWZpZWxkcyA9IGRhdGE7XG4gICAgICAgfSxcbiAgICAgICBlcnJvciA9PiB7XG4gICAgICAgICBjb25zb2xlLmxvZyhlcnJvciB8fCAnU2VydmVyIGVycm9yJyk7XG4gICAgICAgfVxuICAgICAgICk7XG4gICB9XG5cbiAgIHByb2Nlc3NEZXRhaWxzKGRhdGEsIGlzU2hvcnRJbmZvPylcbiAgIHtcbiAgICAgaWYgKCFpc1Nob3J0SW5mbyAmJiAoIWRhdGEgfHwgIWRhdGEudGlja2V0bG9ncyB8fCBkYXRhLnRpY2tldGxvZ3MgPT0gMCkpXG4gICAgIHsgXG4gICAgICAgdGhpcy5yZWRpcmVjdE9uRW1wdHkoKTtcbiAgICAgICByZXR1cm47XG4gICAgIH1cbiAgICAgXG4gICAgIHRoaXMudGlja2V0ID0gZGF0YTtcbiAgICAgdGhpcy5pc19lZGl0d29ya3BhZCA9ICEodGhpcy50aWNrZXQud29ya3BhZCB8fCBcIlwiKS5sZW5ndGg7XG4gICAgIHRoaXMudGlja2V0LmN1c3RvbWZpZWxkcyA9IFtdOyAgXG4gICAgIHRoaXMudGVjaG5pY2lhbnMgPSBkYXRhLnRlY2huaWNpYW5zO1xuICAgICB0aGlzLnVzZXJzID0gZGF0YS51c2VycztcbiAgICAgaWYgKHRoaXMudGlja2V0LmJ1ZGdldF9ob3VycyAhPSAwKXtcbiAgICAgICB0aGlzLnBlcmNlbnRhZ2VfYnVkZ2V0ID0gKHRoaXMudGlja2V0LnRvdGFsX2hvdXJzIC8gdGhpcy50aWNrZXQuYnVkZ2V0X2hvdXJzKSAqIDEwMDtcbiAgICAgICB0aGlzLnBlcmNlbnRhZ2VfYnVkZ2V0ID0gdGhpcy5nZXRGaXhlZCh0aGlzLnBlcmNlbnRhZ2VfYnVkZ2V0KTtcbiAgICAgfVxuICAgICB0aGlzLnRpY2tldC5tYWlsdG8gPSBgci4ke3RoaXMuY29uZmlnLmN1cnJlbnQub3JnfS4ke3RoaXMuY29uZmlnLmN1cnJlbnQuaW5zdGFuY2V9LiR7ZGF0YS5rZXl9QGFwcC5zaGVycGFkZXNrLmNvbWA7XG4gICAgIHRoaXMuYWNjb3VudF9pZCA9IGRhdGEuYWNjb3VudF9pZCB8fCAtMTtcbiAgICAgdGhpcy5pbml0U2VsZWN0cyhkYXRhKTtcblxuICAgICBpZiAoZGF0YS50aWNrZXRsb2dzICYmIGRhdGEudGlja2V0bG9ncy5sZW5ndGggPiAwKVxuICAgICAgIHRoaXMucG9zdHMgPSBkYXRhLnRpY2tldGxvZ3M7IFxuXG4gICAgIGlmICghaXNTaG9ydEluZm8pXG4gICAgIHtcbiAgICAgICB0aGlzLmF0dGFjaG1lbnRzID0gKGRhdGEuYXR0YWNobWVudHMgfHwgW10pLnNsaWNlKCkucmV2ZXJzZSgpO1xuXG4gICAgICAgbGV0IHhtbCA9IHBhcnNlWG1sKHRoaXMudGlja2V0LmN1c3RvbWZpZWxkc194bWwpO1xuICAgICAgIGlmICh4bWwpXG4gICAgICAge1xuICAgICAgICAgbGV0IHQ9W107XG4gICAgICAgICBmb3IgKHZhciBuID0geG1sLmRvY3VtZW50RWxlbWVudC5maXJzdENoaWxkOyBuOyBuID0gbi5uZXh0U2libGluZylcbiAgICAgICAgIHsgXG4gICAgICAgICAgIHQucHVzaCh7IFwiaWRcIjogbi5hdHRyaWJ1dGVzWzBdLm5vZGVWYWx1ZSwgXCJuYW1lXCI6IG4uZmlyc3RDaGlsZC5pbm5lckhUTUwucmVwbGFjZShcIiZhbXA7YW1wO1wiLFwiJmFtcDtcIiksIFwidmFsdWVcIjogKG4uZmlyc3RDaGlsZC5uZXh0U2libGluZy5pbm5lckhUTUwgfHwgXCJcIikucmVwbGFjZShcIiZhbXA7YW1wO1wiLFwiJmFtcDtcIil9KTsgXG4gICAgICAgICB9XG4gICAgICAgICB0aGlzLnRpY2tldC5jdXN0b21maWVsZHMgPSB0O1xuICAgICAgICAgdGhpcy5nZXRDdXN0b21maWVsZChkYXRhLmNsYXNzX2lkKTtcbiAgICAgICB9XG4gICAgIH1cbiAgICAgaWYgKGRhdGEudXNlcl9pZCl7XG4gICAgICB0aGlzLmdldFByb2ZpbGUoZGF0YS51c2VyX2lkKTtcbiAgICAgfVxuICAgfVxuXG4gICByZWRpcmVjdE9uRW1wdHkoKXtcbiAgICAgdGhpcy5uYXYuYWxlcnQoJ0luY29ycmVjdCB0aWNrZXQuIEdvaW5nIGJhY2suLi4nLCB0cnVlKTtcblxuICAgICBzZXRUaW1lb3V0KCgpID0+IHtcbiAgICAgICB0aGlzLm5hdi5wb3AoKTtcbiAgICAgfSwgMTAwMCk7XG4gICB9XG5cbiAgIHNhdmVTZWxlY3QoZXZlbnQpe1xuICAgICBsZXQgbmFtZSA9IGV2ZW50LnR5cGU7XG4gICAgIGlmIChuYW1lID09IFwiY3JlYXRpb25jYXRlZ29yeVwiKVxuICAgICAgICAgICAgbmFtZSA9IFwiY2F0ZWdvcmllc1wiO1xuICAgICBpZiAobmFtZSA9PSBcInN1Ym1pc3Npb25jYXRlZ29yeVwiKVxuICAgICAgICAgICAgbmFtZSA9IFwic3VibWlzc2lvbnNcIjtcbiAgICAgdGhpcy5zZWxlY3RzW25hbWVdLnNlbGVjdGVkID0gZXZlbnQuaWQ7XG4gICAgIHRoaXMuc2VsZWN0c1tuYW1lXS52YWx1ZSA9IGV2ZW50Lm5hbWUgfHwgXCJEZWZhdWx0IChub3RoaW5nIHRvIHNlbGVjdClcIjtcbiAgICAgLy9pZiAodGhpcy5zZWxlY3RzW25hbWVdLnZhbHVlKVxuICAgICBsZXQgY29udHJhY3RfaWQgPSB0aGlzLnNlbGVjdHMuY29udHJhY3Quc2VsZWN0ZWQ7XG5cbiAgICAgIHN3aXRjaCAobmFtZSkge1xuICAgICAgICAgICAgY2FzZSBcImFjY291bnRcIiA6XG4gICAgICAgICAgICAgIGlmICh0aGlzLnRpY2tldC5hY2NvdW50X2lkID09IGV2ZW50LmlkKXsgXG4gICAgICAgICAgICAgICAgdGhpcy5hY2NvdW50X2lkID0gdGhpcy5zZWxlY3RzLmFjY291bnQuc2VsZWN0ZWQ7XG4gICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgdGhpcy5zZWxlY3RzLnByb2plY3QudXJsID0gYHByb2plY3RzP2FjY291bnQ9JHtldmVudC5pZH0maXNfd2l0aF9zdGF0aXN0aWNzPWZhbHNlYDtcbiAgICAgICAgICAgICAgICB0aGlzLnNlbGVjdHMucHJvamVjdC52YWx1ZSA9IFwiRGVmYXVsdFwiO1xuICAgICAgICAgICAgICAgIHRoaXMuc2VsZWN0cy5wcm9qZWN0LnNlbGVjdGVkID0gMDtcbiAgICAgICAgICAgICAgICB0aGlzLmFjY291bnRfaWQgPSBldmVudC5pZDtcblxuICAgICAgICAgICAgICAgIHRoaXMuc2VsZWN0cy5jb250cmFjdC51cmwgPSBgY29udHJhY3RzP2FjY291bnRfaWQ9JHtldmVudC5pZH0mZm9yX3RpbWVfbG9ncz1mYWxzZWA7XG4gICAgICAgICAgICAgICAgdGhpcy5zZWxlY3RzLmNvbnRyYWN0LnZhbHVlID0gXCJEZWZhdWx0XCI7XG4gICAgICAgICAgICAgICAgdGhpcy5zZWxlY3RzLmNvbnRyYWN0LnNlbGVjdGVkID0gMDtcbiAgICAgICAgICAgICAgICBjb250cmFjdF9pZCA9IDA7XG5cbiAgICAgICAgICAgICAgICB0aGlzLnNlbGVjdHMubG9jYXRpb24udXJsID0gYGxvY2F0aW9ucz9hY2NvdW50PSR7ZXZlbnQuaWR9JmxpbWl0PTEwMDBgO1xuICAgICAgICAgICAgICAgIHRoaXMuc2VsZWN0cy5sb2NhdGlvbi52YWx1ZSA9IFwiRGVmYXVsdFwiO1xuICAgICAgICAgICAgICAgIHRoaXMuc2VsZWN0cy5sb2NhdGlvbi5zZWxlY3RlZCA9IDA7XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICBjYXNlIFwiY2xhc3NcIiA6XG4gICAgICAgICAgICAgIGlmICh0aGlzLnRpY2tldC5jbGFzc19pZCA9PSBldmVudC5pZCkgXG4gICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICB0aGlzLmdldEN1c3RvbWZpZWxkKGV2ZW50LmlkKTtcbiAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICBcbiAgICAgICAgfVxuICAgfVxuXG4gICBzYXZlQ3VzdG9tZmllbGQoZXZlbnQpe1xuICAgICB0aGlzLmN1c3RvbWZpZWxkcy5maWx0ZXIodGMgPT4gdGMuaWQgPT0gZXZlbnQuaWQpWzBdLnZhbHVlID0gZXZlbnQudmFsdWU7XG4gICB9XG5cbiAgIG9uU3VibWl0KGlzQ2xvc2U/KSB7XG4gICAgIC8vcHJvb2YgZG91YmxlIGNsaWNrXG4gICAgIGlmICh0aGlzLnRpY2tldC5pbl9wcm9ncmVzcyAmJiBEYXRlLm5vdygpIC0gdGhpcy50aWNrZXQuaW5fcHJvZ3Jlc3MgPCAxNTAwKSB7cmV0dXJuO31cbiAgICAgdGhpcy50aWNrZXQuaW5fcHJvZ3Jlc3MgPSBEYXRlLm5vdygpO1xuXG4gICAgIHZhciBwb3N0ID0gaHRtbEVzY2FwZSh0aGlzLnRpY2tldG5vdGUudHJpbSgpKS5zdWJzdHIoMCwgNTAwMCk7XG5cbiAgICAgaWYgKGlzQ2xvc2UgJiYgdGhpcy5maWxlcy5sZW5ndGggfHwgIWlzQ2xvc2UpXG4gICAgIHtcbiAgICAgICB0aGlzLnRpY2tldFByb3ZpZGVyLmFkZFRpY2tldFBvc3QodGhpcy50aWNrZXQuaWQsIHBvc3QsIHRoaXMuZmlsZXMsIHRoaXMud2FpdGluZ19yZXNwb25zZSwgdGhpcy5pc190ZWNoc19vbmx5KS5zdWJzY3JpYmUoXG4gICAgICAgICBkYXRhID0+IHtcbiAgICAgICAgICAgaWYgKCFpc0Nsb3NlKVxuICAgICAgICAgICB7IFxuICAgICAgICAgICAgIHRoaXMubmF2LmFsZXJ0KCdOZXcgcG9zdCBhZGRlZCA6KScpO1xuICAgICAgICAgICAgIHRoaXMudGlja2V0bm90ZSA9IFwiXCI7XG4gICAgICAgICAgICAgdGhpcy5hY3RpdmUgPSBmYWxzZTtcbiAgICAgICAgICAgICB0aGlzLndhaXRpbmdfcmVzcG9uc2UgPSBmYWxzZTsgLy8hdGhpcy53YWl0aW5nX3Jlc3BvbnNlO1xuICAgICAgICAgICAgIHRoaXMuaXNfdGVjaHNfb25seSA9IGZhbHNlOyAvLyF0aGlzLmlzX3RlY2hzX29ubHk7XG4gICAgICAgICAgICAgc2V0VGltZW91dCgoKSA9PiB0aGlzLmFjdGl2ZSA9IHRydWUsIDApO1xuICAgICAgICAgICAgIHRoaXMuZ2V0UG9zdHModGhpcy50aWNrZXQua2V5KTtcbiAgICAgICAgICAgfVxuICAgICAgICAgICB0aGlzLmZpbGVzID0gW107XG4gICAgICAgICB9LFxuICAgICAgICAgZXJyb3IgPT4ge1xuICAgICAgICAgICB0aGlzLm5hdi5hbGVydChlcnJvciwgdHJ1ZSk7XG4gICAgICAgICAgIGNvbnNvbGUubG9nKGVycm9yIHx8ICdTZXJ2ZXIgZXJyb3InKTtcbiAgICAgICAgIH1cbiAgICAgICAgICk7XG4gICAgIH1cbiAgICAgaWYgKGlzQ2xvc2UpXG4gICAgIHtcbiAgICAgICB0aGlzLm9uQ2xvc2UodHJ1ZSk7XG4gICAgIH1cbiAgIH0gXG5cbiAgIHNhdmVOb3RlKGZvcm0pIHtcbiAgICAgdmFyIG5vdGUgPSBodG1sRXNjYXBlKChmb3JtLnZhbHVlIHx8IFwiXCIpLnRyaW0oKSkuc3Vic3RyKDAsIDUwMDApO1xuICAgICBpZiAobm90ZSAhPSAodGhpcy50aWNrZXQubm90ZSB8fCBcIlwiKS50cmltKCkpIHtcbiAgICAgICB0aGlzLnRpY2tldFByb3ZpZGVyLmFkZFRpY2tldE5vdGUodGhpcy50aWNrZXQuaWQsIG5vdGUpLnN1YnNjcmliZShcbiAgICAgICAgIGRhdGEgPT4gdGhpcy5zYXZlTm90ZVN1Y2Nlc3Mobm90ZSksXG4gICAgICAgICBlcnJvciA9PiB7XG4gICAgICAgICAgIHRoaXMubmF2LmFsZXJ0KGVycm9yLCB0cnVlKTtcbiAgICAgICAgICAgY29uc29sZS5sb2coZXJyb3IgfHwgJ1NlcnZlciBlcnJvcicpO1xuICAgICAgICAgfVxuICAgICAgICAgKTtcbiAgICAgfVxuICAgICBlbHNlXG4gICAgICAgdGhpcy5zYXZlTm90ZVN1Y2Nlc3Mobm90ZSk7XG4gICB9XG5cbiAgIGdldEZpeGVkKHZhbHVlKXtcbiAgICAgICAgcmV0dXJuIE51bWJlcih2YWx1ZSB8fCBcIjBcIikudG9GaXhlZCgwKS50b1N0cmluZygpO1xuICAgIH1cblxuICAgc2F2ZVdvcmtwYWQoZm9ybSkge1xuICAgICB2YXIgd29ya3BhZCA9IChmb3JtLnZhbHVlIHx8IFwiXCIpLnRyaW0oKS5yZXBsYWNlKC9cXG4vZywgXCI8cD5cIik7IFxuICAgICBpZiAod29ya3BhZCAhPSAodGhpcy50aWNrZXQud29ya3BhZCB8fCBcIlwiKS50cmltKCkpIHtcbiAgICAgICB0aGlzLnRpY2tldFByb3ZpZGVyLmFkZFRpY2tldFdvcmtwYWQodGhpcy50aWNrZXQuaWQsIHdvcmtwYWQpLnN1YnNjcmliZShcbiAgICAgICAgIGRhdGEgPT4gdGhpcy5zYXZlV29ya3BhZFN1Y2Nlc3Mod29ya3BhZCksXG4gICAgICAgICBlcnJvciA9PiB7XG4gICAgICAgICAgIHRoaXMubmF2LmFsZXJ0KGVycm9yLCB0cnVlKTtcbiAgICAgICAgICAgY29uc29sZS5sb2coZXJyb3IgfHwgJ1NlcnZlciBlcnJvcicpO1xuICAgICAgICAgfVxuICAgICAgICAgKTtcbiAgICAgfVxuICAgICBlbHNlXG4gICAgICAgdGhpcy5zYXZlV29ya3BhZFN1Y2Nlc3Mod29ya3BhZCk7XG4gICB9XG5cbiAgICBvcGVuQWxlcnQobmFtZSwgdmFsdWUpIHtcblxuICAgIGlmICghdmFsdWUgfHwgdmFsdWUubGVuZ3RoIDwgMjIpIFxuICAgIHJldHVybjsgICAgICAgIFxuXG4gICAgIGxldCBhbGVydCA9IEFsZXJ0LmNyZWF0ZSh7XG4gICAgICAgICB0aXRsZTogbmFtZSxcbiAgICAgICAgIHN1YlRpdGxlOiB2YWx1ZSxcbiAgICAgICAgIGJ1dHRvbnM6IFtcbiAgICAgICAgIHtcbiAgICAgICAgICAgICB0ZXh0OiAnT2snLFxuICAgICAgICAgICAgIHJvbGU6ICdjYW5jZWwnLFxuICAgICAgICAgfV1cbiAgICAgICAgIH0pO1xuXG4gICAgIHRoaXMubmF2LnByZXNlbnQoYWxlcnQpO1xuICAgICB9XG5cbiAgIHNhdmVXb3JrcGFkU3VjY2Vzcyh3b3JrcGFkKXtcbiAgICAgdGhpcy5uYXYuYWxlcnQoJ1dvcmtwYWQgc2F2ZWQgOiknKTtcbiAgICAgdGhpcy50aWNrZXQud29ya3BhZCA9ICh3b3JrcGFkIHx8IFwiXCIpLnRyaW0oKTtcbiAgICAgdGhpcy5pc19lZGl0d29ya3BhZCA9ICF0aGlzLnRpY2tldC53b3JrcGFkLmxlbmd0aDtcbiAgIH1cblxuICAgc2F2ZU5vdGVTdWNjZXNzKG5vdGUpe1xuICAgICB0aGlzLm5hdi5hbGVydCgnTm90ZSBzYXZlZCA6KScpO1xuICAgICB0aGlzLnRpY2tldC5ub3RlID0gKG5vdGUgfHwgXCJcIikudHJpbSgpO1xuICAgfVxuXG4gICBvbkNsb3NlKGlzRm9yY2U/KSB7XG4gICAgIC8vcHJvb2YgZG91YmxlIGNsaWNrXG4gICAgIGlmICghaXNGb3JjZSAmJiB0aGlzLnRpY2tldC5pbl9wcm9ncmVzcyAmJiBEYXRlLm5vdygpIC0gdGhpcy50aWNrZXQuaW5fcHJvZ3Jlc3MgPCAxNTAwKSB7cmV0dXJuO31cbiAgICAgdGhpcy50aWNrZXQuaW5fcHJvZ3Jlc3MgPSBEYXRlLm5vdygpO1xuXG4gICAgIHZhciBwb3N0ID0gaHRtbEVzY2FwZSh0aGlzLnRpY2tldG5vdGUudHJpbSgpKS5zdWJzdHIoMCwgNTAwMCk7XG5cbiAgICAgbGV0IGRhdGEgPSB7XG4gICAgICAgXCJzdGF0dXNcIjogXCJjbG9zZWRcIixcbiAgICAgICBcIm5vdGVfdGV4dFwiOiBwb3N0LFxuICAgICAgIFwiaXNfc2VuZF9ub3RpZmljYXRpb25zXCI6IHRydWUsXG4gICAgICAgXCJyZXNvbHZlZFwiOiB0cnVlLFxuICAgICAgIFwicmVzb2x1dGlvbl9pZFwiOiAwLFxuICAgICAgIFwiY29uZmlybWVkXCI6IHRydWUsXG4gICAgICAgXCJjb25maXJtX25vdGVcIjogXCJcIlxuXG4gICAgIH07XG5cbiAgICAgdGhpcy50aWNrZXRQcm92aWRlci5jbG9zZU9wZW5UaWNrZXQodGhpcy50aWNrZXQua2V5LCBkYXRhKS5zdWJzY3JpYmUoXG4gICAgICAgZGF0YSA9PiB7XG4gICAgICAgICB0aGlzLnVwZGF0ZV90bGlzdF9sb2dpYyh0cnVlKTtcbiAgICAgICAgIHRoaXMubmF2LmFsZXJ0KHRoaXMuY29uZmlnLmN1cnJlbnQubmFtZXMudGlja2V0LnMgKyAnIGhhcyBiZWVuIGNsb3NlZCA6KScpO1xuICAgICAgICAgdGhpcy50aWNrZXQuc3RhdHVzID0gXCJDbG9zZWRcIjtcbiAgICAgICAgIGlmIChwb3N0Lmxlbmd0aCl7XG4gICAgICAgICAgIHRoaXMudGlja2V0bm90ZSA9IFwiXCI7XG4gICAgICAgICAgIHRoaXMuYWN0aXZlID0gZmFsc2U7XG4gICAgICAgICAgIHNldFRpbWVvdXQoKCkgPT4gdGhpcy5hY3RpdmUgPSB0cnVlLCAwKTtcbiAgICAgICAgICAgdGhpcy5maWxlcyA9IFtdO1xuICAgICAgICAgICB0aGlzLnByb2Nlc3NEZXRhaWxzKGRhdGEpO1xuICAgICAgICAgfVxuICAgICAgIH0sXG4gICAgICAgZXJyb3IgPT4ge1xuICAgICAgICAgdGhpcy5uYXYuYWxlcnQoZXJyb3IsIHRydWUpO1xuICAgICAgICAgY29uc29sZS5sb2coZXJyb3IgfHwgJ1NlcnZlciBlcnJvcicpO1xuICAgICAgIH1cbiAgICAgICApO1xuICAgfVxuXG4gICAgb25Ib2xkKCkge1xuXG4gICAgICBpZiAodGhpcy50aWNrZXQuc3RhdHVzID09IFwiT25Ib2xkXCIpXG4gICAgICB7XG4gICAgICAgIHRoaXMucmVvcGVuVGlja2V0KCk7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cblxuICAgICAgbGV0IHByb21wdCA9IEFsZXJ0LmNyZWF0ZSh7XG4gICAgICAgICAgICAgdGl0bGU6ICdQbGFjZSBPbiBIb2xkICMnICsgdGhpcy50aWNrZXQubnVtYmVyLFxuICAgICAgICAgICAgIGlucHV0czogW1xuICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgbmFtZTogJ25vdGUnLFxuICAgICAgICAgICAgICAgICBwbGFjZWhvbGRlcjogJ05vdGUnXG4gICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICBdLFxuICAgICAgICAgICAgIGJ1dHRvbnM6IFtcbiAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgIHRleHQ6ICdDYW5jZWwnLFxuICAgICAgICAgICAgICAgICBoYW5kbGVyOiBkYXRhID0+IHtcbiAgICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKCdDYW5jZWwgY2xpY2tlZCcpO1xuICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgIHRleHQ6ICdQbGFjZSBPbiBIb2xkJyxcbiAgICAgICAgICAgICAgICAgaGFuZGxlcjogZGF0YSA9PiB7XG5cbiAgICAgICAgICAgICAgICAgICAgIHZhciBwb3N0ID0gaHRtbEVzY2FwZShkYXRhLm5vdGUudHJpbSgpKS5zdWJzdHIoMCwgNDAwMCk7XG5cbiAgICAgICAgICAgICAgICAgICAgIGxldCBkYXRhMSA9IHtcbiAgICAgICAgICAgICAgICAgICAgICAgXCJzdGF0dXNcIjogXCJvbmhvbGRcIixcbiAgICAgICAgICAgICAgICAgICAgICAgXCJub3RlX3RleHRcIjogcG9zdFxuICAgICAgICAgICAgICAgICAgICAgfTtcblxuICAgICAgICAgICAgICAgICAgICAgdGhpcy50aWNrZXRQcm92aWRlci5jbG9zZU9wZW5UaWNrZXQodGhpcy50aWNrZXQua2V5LCBkYXRhMSkuc3Vic2NyaWJlKFxuICAgICAgICAgICAgICAgICAgICAgICBkYXRhID0+IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLnRpY2tldC5zdGF0dXMgPSBcIk9uSG9sZFwiO1xuICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMudXBkYXRlX3RsaXN0X2xvZ2ljKGZhbHNlKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLm5hdi5hbGVydCh0aGlzLmNvbmZpZy5jdXJyZW50Lm5hbWVzLnRpY2tldC5zICsgJyBwbGFjZWQgT24gSG9sZCA6KScpO1xuICAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICAgICBlcnJvciA9PiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5uYXYuYWxlcnQoZXJyb3IsIHRydWUpO1xuICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKGVycm9yIHx8ICdTZXJ2ZXIgZXJyb3InKTtcbiAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICApO1xuICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgfVxuICAgICAgICAgICAgIF1cbiAgICAgICAgIH0pO1xuXG4gICAgICAgICB0aGlzLm5hdi5wcmVzZW50KHByb21wdCk7XG4gICB9XG5cbiAgIGdldFhNTCgpXG4gICB7XG4gICAgICB2YXIgY3VzdG9tZmllbGRfeG1sID0gXCJcIjtcbiAgICAgICAgICBmb3IgKHZhciBuID0gMDsgIG4gPCB0aGlzLmN1c3RvbWZpZWxkcy5sZW5ndGg7IG4rKylcbiAgICAgICAgIHsgXG4gICAgICAgICAgIGlmICh0aGlzLmN1c3RvbWZpZWxkc1tuXS5yZXF1aXJlZCAmJiB0aGlzLmN1c3RvbWZpZWxkc1tuXS52YWx1ZSA9PSBcIlwiIHx8IHRoaXMuY3VzdG9tZmllbGRzW25dLnZhbHVlID09IFwiMDAwMS0wMS0wMVQwMDowMDowMC4wMDAwMDAwXCIpe1xuICAgICAgICAgICAgIHRoaXMubmF2LmFsZXJ0KGBQbGVhc2UgYWRkIHZhbHVlIHRvIGN1c3RvbSBmaWVsZDogJHt0aGlzLmN1c3RvbWZpZWxkc1tuXS5uYW1lfWAsIHRydWUpO1xuICAgICAgICAgICAgIHJldHVybiBjdXN0b21maWVsZF94bWwgPSBcIlwiO1xuICAgICAgICAgICB9XG4gICAgICAgICAgIGN1c3RvbWZpZWxkX3htbCA9IGN1c3RvbWZpZWxkX3htbCArIGA8ZmllbGQgaWQ9XCIke3RoaXMuY3VzdG9tZmllbGRzW25dLmlkfVwiPjxjYXB0aW9uPiR7dGhpcy5jdXN0b21maWVsZHNbbl0ubmFtZX08L2NhcHRpb24+PHZhbHVlPiR7dGhpcy5jdXN0b21maWVsZHNbbl0udmFsdWV9PC92YWx1ZT48L2ZpZWxkPmA7XG4gICAgICAgICB9XG4gICAgICByZXR1cm4gXCI8cm9vdD5cIiArIGN1c3RvbWZpZWxkX3htbCArIFwiPC9yb290PlwiOyAgXG5cbiAgIH1cblxuICAgb25VcGRhdGUoKSB7XG4gICAgIC8vcHJvb2YgZG91YmxlIGNsaWNrXG4gICAgIGlmICh0aGlzLnRpY2tldC5pbl9wcm9ncmVzcyAmJiBEYXRlLm5vdygpIC0gdGhpcy50aWNrZXQuaW5fcHJvZ3Jlc3MgPCAxNTAwKSB7cmV0dXJuO31cbiAgICAgXG4gICAgIHRoaXMudGlja2V0LmluX3Byb2dyZXNzID0gRGF0ZS5ub3coKTtcbiAgICAgdmFyIGN1c3RvbWZpZWxkc194bWwgPSB0aGlzLmdldFhNTCgpO1xuICAgICBpZiAoY3VzdG9tZmllbGRzX3htbCA9PSBcIlwiKSB7XG4gICAgICAgcmV0dXJuO1xuICAgICB9XG4gICAgIGxldCBkYXRhID0ge1xuICAgICAgIFwiY2xhc3NfaWRcIjogdGhpcy5zZWxlY3RzLmNsYXNzLnNlbGVjdGVkLFxuICAgICAgIFwibGV2ZWxfaWRcIjogdGhpcy5zZWxlY3RzLmxldmVsLnNlbGVjdGVkLFxuICAgICAgIFwicHJpb3JpdHlfaWRcIjogdGhpcy5zZWxlY3RzLnByaW9yaXR5LnNlbGVjdGVkLFxuICAgICAgIFwicHJvamVjdF9pZFwiOiB0aGlzLnNlbGVjdHMucHJvamVjdC5zZWxlY3RlZCxcbiAgICAgICBcImxvY2F0aW9uX2lkXCI6IHRoaXMuc2VsZWN0cy5sb2NhdGlvbi5zZWxlY3RlZCxcbiAgICAgICBcImFjY291bnRfaWRcIjogdGhpcy5zZWxlY3RzLmFjY291bnQuc2VsZWN0ZWQsXG4gICAgICAgXCJ0ZWNoX2lkXCI6IHRoaXMuc2VsZWN0cy5hbHR0ZWNocy5zZWxlY3RlZCxcbiAgICAgICBcInVzZXJfaWRcIjogdGhpcy5zZWxlY3RzLmFsdHVzZXJzLnNlbGVjdGVkLFxuICAgICAgIFwiY3VzdG9tZmllbGRzX3htbFwiOiBjdXN0b21maWVsZHNfeG1sLFxuICAgICAgIFwiZGVmYXVsdF9jb250cmFjdF9pZFwiOiB0aGlzLnNlbGVjdHMuY29udHJhY3Quc2VsZWN0ZWQsXG4gICAgICAgXCJkZWZhdWx0X2NvbnRyYWN0X25hbWVcIjogdGhpcy5zZWxlY3RzLmNvbnRyYWN0LnZhbHVlLFxuICAgICAgIFwiY3JlYXRpb25fY2F0ZWdvcnlfaWRcIjogdGhpcy5zZWxlY3RzLmNhdGVnb3JpZXMuc2VsZWN0ZWQsXG4gICAgICAgXCJjcmVhdGlvbl9jYXRlZ29yeV9uYW1lXCI6IHRoaXMuc2VsZWN0cy5jYXRlZ29yaWVzLnZhbHVlLFxuICAgICAgIFwic3VibWlzc2lvbl9jYXRlZ29yeVwiOiB0aGlzLnNlbGVjdHMuc3VibWlzc2lvbnMudmFsdWVcbiAgICAgfTtcblxuICAgICB0aGlzLnRpY2tldFByb3ZpZGVyLmNsb3NlT3BlblRpY2tldCh0aGlzLnRpY2tldC5rZXksIGRhdGEpLnN1YnNjcmliZShcbiAgICAgICBkYXRhID0+IHtcbiAgICAgICAgIHRoaXMubmF2LmFsZXJ0KHRoaXMuY29uZmlnLmN1cnJlbnQubmFtZXMudGlja2V0LnMgKyAnIHdhcyBzdWNjZXNzZnVsbHkgdXBkYXRlZCA6KScpO1xuICAgICAgICAgdGhpcy5wcm9jZXNzRGV0YWlscyhkYXRhKTtcbiAgICAgICB9LFxuICAgICAgIGVycm9yID0+IHtcbiAgICAgICAgIGNvbnNvbGUubG9nKGVycm9yIHx8ICdTZXJ2ZXIgZXJyb3InKTtcbiAgICAgICB9XG4gICAgICAgKTtcbiAgIH1cblxuICAgXG5cbiAgIHBpY2tVcCgpIHtcblxuICAgICBsZXQgZGF0YSA9IHtcbiAgICAgICBcImFjdGlvblwiOiBcInBpY2t1cFwiLFxuICAgICAgIFwibm90ZV90ZXh0XCI6IFwiXCJcbiAgICAgfTtcblxuICAgICAvL3Byb29mIGRvdWJsZSBjbGlja1xuICAgICBpZiAodGhpcy50aWNrZXQuaW5fcHJvZ3Jlc3MgJiYgRGF0ZS5ub3coKSAtIHRoaXMudGlja2V0LmluX3Byb2dyZXNzIDwgMTUwMCkge3JldHVybjt9XG4gICAgIHRoaXMudGlja2V0LmluX3Byb2dyZXNzID0gRGF0ZS5ub3coKTtcblxuICAgICB0aGlzLnRpY2tldFByb3ZpZGVyLmNsb3NlT3BlblRpY2tldCh0aGlzLnRpY2tldC5rZXksIGRhdGEpLnN1YnNjcmliZShcbiAgICAgICBkYXRhID0+IHtcbiAgICAgICAgIHRoaXMubmF2LmFsZXJ0KHRoaXMuY29uZmlnLmN1cnJlbnQubmFtZXMudGlja2V0LnMgKyAnIHBpY2t1cCB3YXMgU3VjY2VzZnVsbCEnKTtcbiAgICAgICAgIHRoaXMudGVjaG5hbWUgPSB0aGlzLnRpY2tldC50ZWNoX2ZpcnN0bmFtZSA9IGdldEZ1bGxOYW1lKHRoaXMuaGUuZmlyc3RuYW1lLCB0aGlzLmhlLmxhc3RuYW1lLCB0aGlzLmhlLmVtYWlsKTtcbiAgICAgICAgIHRoaXMudGlja2V0LnRlY2hfbGFzdG5hbWUgPSB0aGlzLnRpY2tldC50ZWNoX2VtYWlsID0gXCJcIjtcbiAgICAgICAgIC8vdGhpcy5zZWxlY3RzLnRlY2guc2VsZWN0ZWQgPSB0aGlzLmhlLnVzZXJfaWQ7XG4gICAgICAgICB0aGlzLnByb2Nlc3NEZXRhaWxzKGRhdGEpO1xuICAgICAgIH0sXG4gICAgICAgZXJyb3IgPT4ge1xuICAgICAgICAgdGhpcy5uYXYuYWxlcnQoZXJyb3IsIHRydWUpO1xuICAgICAgICAgY29uc29sZS5sb2coZXJyb3IgfHwgJ1NlcnZlciBlcnJvcicpO1xuICAgICAgIH1cbiAgICAgICApO1xuICAgfVxuXG4gICBvbkRlbGV0ZShmaWxlKXtcbiAgICAgbGV0IGRhdGEgPSB7XG4gICAgICAgXCJ0aWNrZXRcIjogdGhpcy50aWNrZXQua2V5LFxuICAgICAgIFwiZmlsZV9pZFwiOiBmaWxlLmlkXG4gICAgIH07XG5cbiAgICAgdGhpcy5kYXRhUHJvdmlkZXIuZGVsZXRlRmlsZShkYXRhKS5zdWJzY3JpYmUoXG4gICAgICAgZGF0YSA9PiB7XG4gICAgICAgICB0aGlzLmF0dGFjaG1lbnRzID0gdGhpcy5hdHRhY2htZW50cy5maWx0ZXIoaXRlbSA9PiBpdGVtICE9PSBmaWxlKTtcbiAgICAgICAgIHRoaXMuZ2V0UG9zdHModGhpcy50aWNrZXQua2V5KTtcbiAgICAgICAgIHRoaXMubmF2LmFsZXJ0KGBGaWxlICR7ZmlsZS5uYW1lfSBkZWxldGVkIWApO1xuICAgICAgIH0sXG4gICAgICAgZXJyb3IgPT4ge1xuICAgICAgICAgdGhpcy5uYXYuYWxlcnQoZXJyb3IsIHRydWUpO1xuICAgICAgICAgY29uc29sZS5sb2coZXJyb3IgfHwgJ1NlcnZlciBlcnJvcicpO1xuICAgICAgIH1cbiAgICAgICApO1xuICAgfVxuXG4gICByZW9wZW5UaWNrZXQoKSB7XG4gICAgIGxldCBkYXRhID0ge1xuICAgICAgIFwic3RhdHVzXCI6IFwib3BlblwiLFxuICAgICAgIFwibm90ZV90ZXh0XCI6IFwiXCJcbiAgICAgfTtcblxuICAgICB0aGlzLnRpY2tldFByb3ZpZGVyLmNsb3NlT3BlblRpY2tldCh0aGlzLnRpY2tldC5rZXksIGRhdGEpLnN1YnNjcmliZShcbiAgICAgICBkYXRhID0+IHtcbiAgICAgICAgIHRoaXMudXBkYXRlX3RsaXN0X2xvZ2ljKGZhbHNlKTtcbiAgICAgICAgIHRoaXMubmF2LmFsZXJ0KHRoaXMuY29uZmlnLmN1cnJlbnQubmFtZXMudGlja2V0LnMgKyAnIGhhcyBiZWVuIFJlb3BlbmVkIScpO1xuICAgICAgICAgdGhpcy50aWNrZXQuc3RhdHVzID0gXCJPcGVuXCI7XG4gICAgICAgfSxcbiAgICAgICBlcnJvciA9PiB7XG4gICAgICAgICB0aGlzLm5hdi5hbGVydChlcnJvciwgdHJ1ZSk7XG4gICAgICAgICBjb25zb2xlLmxvZyhlcnJvciB8fCAnU2VydmVyIGVycm9yJyk7XG4gICAgICAgfVxuICAgICAgICk7XG4gICB9XG5cbiAgIHVwZGF0ZV90bGlzdF9sb2dpYyhpc19jbG9zZSlcbiAgIHtcbiAgICAgaWYgKHRoaXMuY2FjaGVuYW1lKXtcbiAgICAgICBpZih+dGhpcy5jYWNoZW5hbWUuaW5kZXhPZihcImNsb3NlZFwiKSl7XG4gICAgICAgICBpc19jbG9zZSA9ICFpc19jbG9zZTtcbiAgICAgICAgIHRoaXMuY2xvc2VkX2luZGV4ID0gMDtcbiAgICAgICB9XG4gICAgICAgdHJ5e1xuICAgICAgIGlmIChpc19jbG9zZSkge1xuICAgICAgICAgdGhpcy5jbG9zZWRfaW5kZXggPSB0aGlzLnRpY2tldFByb3ZpZGVyLl9kYXRhU3RvcmVbdGhpcy5jYWNoZW5hbWVdLmZpbmRJbmRleCh0a3QgPT4gdGt0LmtleSA9PT0gdGhpcy50aWNrZXQua2V5KTtcbiAgICAgICAgIHRoaXMudGlja2V0UHJvdmlkZXIuX2RhdGFTdG9yZVt0aGlzLmNhY2hlbmFtZV0uc3BsaWNlKHRoaXMuY2xvc2VkX2luZGV4LDEpO1xuICAgICAgICAgaWYofnRoaXMuY2FjaGVuYW1lLmluZGV4T2YoXCJjbG9zZWRcIikpXG4gICAgICAgICB7XG4gICAgICAgICAgIHRoaXMudGlja2V0UHJvdmlkZXIuX2RhdGFTdG9yZVt0aGlzLmNhY2hlbmFtZS5yZXBsYWNlKFwiY2xvc2VkXCIsIFwib3BlblwiKV0uc3BsaWNlKDAsIDAsIHRoaXMudGlja2V0KTtcbiAgICAgICAgIH1cbiAgICAgICB9XG4gICAgICAgZWxzZVxuICAgICAgIHtcbiAgICAgICAgIHRoaXMudGlja2V0UHJvdmlkZXIuZ2V0VGlja2V0c0xpc3QodGhpcy5jYWNoZW5hbWUsIFwiXCIsIFwiXCIseyBcImxpbWl0XCI6IDI1IH0pO1xuICAgICAgICAgdGhpcy50aWNrZXRQcm92aWRlci5fZGF0YVN0b3JlW3RoaXMuY2FjaGVuYW1lXS5zcGxpY2UodGhpcy5jbG9zZWRfaW5kZXgsIDAsIHRoaXMudGlja2V0KTtcbiAgICAgICAgIGxldCBpbmRleCA9IHRoaXMudGlja2V0UHJvdmlkZXIuX2RhdGFTdG9yZVt0aGlzLmNhY2hlbmFtZV0uZmluZEluZGV4KHRrdCA9PiB0a3Qua2V5ID09PSB0aGlzLnRpY2tldC5rZXkpO1xuICAgICAgICAgaWYofnRoaXMuY2FjaGVuYW1lLmluZGV4T2YoXCJjbG9zZWRcIikpe1xuICAgICAgICAgICB0aGlzLnRpY2tldFByb3ZpZGVyLl9kYXRhU3RvcmVbdGhpcy5jYWNoZW5hbWUucmVwbGFjZShcIm9wZW5cIixcImNsb3NlZFwiKV0uc3BsaWNlKHRoaXMudGlja2V0UHJvdmlkZXIuX2RhdGFTdG9yZVt0aGlzLmNhY2hlbmFtZS5yZXBsYWNlKFwib3BlblwiLFwiY2xvc2VkXCIpXS5maW5kSW5kZXgodGt0ID0+IHRrdC5rZXkgPT09IHRoaXMudGlja2V0LmtleSksMSk7XG4gICAgICAgICB9XG4gICAgICAgfVxuICAgICB9XG4gICAgIGNhdGNoKGV4KSB7XG4gICAgICBjb25zb2xlLmxvZyhcImluZGV4IG5vdCBmb3VuZC5cIik7XG4gICAgICB0aGlzLmdldFBvc3RzKHRoaXMudGlja2V0LmtleSk7XG4gICAgfVxuICAgICB9XG4gICB9XG5cblxuICAgY2xvc2VUaWNrZXQodGltZUFkZGVkPykge1xuICAgICBpZiAodGhpcy50aWNrZXQuc3RhdHVzID09ICdDbG9zZWQnKSB7XG4gICAgICAgdGhpcy5yZW9wZW5UaWNrZXQoKTtcbiAgICAgICByZXR1cm47XG4gICAgIH1cbiAgICAgaWYgKHRoaXMuY29uZmlnLmN1cnJlbnQuaXNfZm9yY2VfdGltZV9vbl9jbG9zaW5nX3RpY2tldHMgJiYgdGhpcy50aWNrZXQudG90YWxfdGltZV9pbl9taW51dGVzIDwgMSAmJiAhdGltZUFkZGVkKXtcbiAgICAgICB0aGlzLmFkZFRpbWUodHJ1ZSk7XG4gICAgICAgcmV0dXJuO1xuICAgICB9XG4gICAgIGxldCBteU1vZGFsID0gTW9kYWwuY3JlYXRlKENsb3NlVGlja2V0TW9kYWwsIHsgXCJudW1iZXJcIjogdGhpcy50aWNrZXQubnVtYmVyLCBcImtleVwiOiB0aGlzLnRpY2tldC5rZXksIFxuICAgICAgXCJzdWJqZWN0XCI6IHRoaXMudGlja2V0LnN1YmplY3QsIFxuICAgICAgXCJjcmVhdGlvbl9jYXRlZ29yeV9pZFwiOiB0aGlzLnRpY2tldC5jcmVhdGlvbl9jYXRlZ29yeV9pZCwgXG4gICAgICBcImNyZWF0aW9uX2NhdGVnb3J5X25hbWVcIjogdGhpcy50aWNrZXQuY3JlYXRpb25fY2F0ZWdvcnlfbmFtZSwgXG4gICAgICBcImNsYXNzX2lkXCIgOiB0aGlzLnRpY2tldC5jbGFzc19pZCxcbiAgICAgIFwiY2xhc3NfbmFtZVwiIDogdGhpcy50aWNrZXQuY2xhc3NfbmFtZSxcbiAgICAgICB9KTtcbiAgICAgbXlNb2RhbC5vbkRpc21pc3MoZGF0YSA9PiB7XG4gICAgICAgaWYgKGRhdGEpe1xuICAgICAgICAgdGhpcy50aWNrZXQuc3RhdHVzID0gXCJDbG9zZWRcIjtcbiAgICAgICAgIHRoaXMudXBkYXRlX3RsaXN0X2xvZ2ljKHRydWUpO1xuICAgICAgIH1cbiAgICAgfSk7XG4gICAgIHRoaXMubmF2LnByZXNlbnQobXlNb2RhbCk7XG4gICB9ICBcblxuICAgY2hlYWtBbGxvd3NUb1Jlb3Blbigpe1xuICAgICBpZih0aGlzLmNvbmZpZy5jdXJyZW50LmlzX2FsbG93c190ZWNoX3RvX3Jlb3BlbiA9PSBmYWxzZSlcbiAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgIGxldCBkYXlzYWdvID0gdGhpcy5kYXlPbGQodGhpcy5wb3N0c1swXS5yZWNvcmRfZGF0ZSk7XG4gICAgIGlmICh0aGlzLmNvbmZpZy5jdXJyZW50LmRheXNfYWxsb3dlZF90b19yZW9wZW4gPD0gZGF5c2FnbylcbiAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgcmV0dXJuIHRydWU7XG4gICB9XG5cbiAgIGRheU9sZCh2YWx1ZSkge1xuICAgICAgICB2YWx1ZSA9IHZhbHVlIHx8IDA7XG4gICAgICAgIGlmIChpc05hTih2YWx1ZSkpXG4gICAgICAgICAgICB2YWx1ZSA9IE1hdGgucm91bmQoKG5ldyBEYXRlKCkuZ2V0VGltZSgpIC0gK25ldyBEYXRlKHZhbHVlICsgXCJaXCIpKSAvIDYwMDAwKTtcbiAgICAgICAgdmFyIGRheXNBZ286IG51bWJlciA9IHZhbHVlIC8gNjA7XG4gICAgICAgIHZhciByZXN1bHQgOiBzdHJpbmcgPSBcIlwiO1xuICAgICAgICAgICAgICAgIGlmICghdmFsdWUgfHwgdmFsdWUgPCAyKVxuICAgICAgICAgICAgICAgICAgcmVzdWx0ID0gXCIwXCI7IFxuICAgICAgICAgICAgICAgIGVsc2VcbiAgICAgICAgICAgICAgICAgIHJlc3VsdCA9IHBhcnNlSW50KChkYXlzQWdvIC8gMjQpLnRvU3RyaW5nKCkpICsgXCJcIjtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHJlc3VsdDtcbiAgICB9IFxuXG4gICB0cmFuc2ZlclRpY2tldCgpIHtcbiAgICAgbGV0IG15TW9kYWwgPSBNb2RhbC5jcmVhdGUoVHJhbnNmZXJUaWNrZXRNb2RhbCwgeyBcIm51bWJlclwiOiB0aGlzLnRpY2tldC5udW1iZXIsIFwia2V5XCI6IHRoaXMudGlja2V0LmtleSwgXCJzdWJqZWN0XCI6IHRoaXMudGlja2V0LnN1YmplY3QsICBcInRlY2hfZmlyc3RuYW1lXCI6IHRoaXMudGlja2V0LnRlY2hfZmlyc3RuYW1lLCBcInRlY2hfbGFzdG5hbWVcIjogdGhpcy50aWNrZXQudGVjaF9sYXN0bmFtZSwgXCJhY2NvdW50X2lkXCI6IHRoaXMuYWNjb3VudF9pZH0pO1xuICAgICBteU1vZGFsLm9uRGlzbWlzcyhkYXRhID0+IHtcbiAgICAgICBpZiAoZGF0YSl7XG4gICAgICAgICB0aGlzLnRlY2huYW1lID0gdGhpcy50aWNrZXQudGVjaF9maXJzdG5hbWUgPSBkYXRhLm5hbWU7XG4gICAgICAgICB0aGlzLnRpY2tldC50ZWNoX2xhc3RuYW1lID0gdGhpcy50aWNrZXQudGVjaF9lbWFpbCA9IFwiXCI7XG4gICAgICAgICB0aGlzLmdldFBvc3RzKHRoaXMudGlja2V0LmtleSk7XG4gICAgICAgfVxuICAgICB9KTtcbiAgICAgdGhpcy5uYXYucHJlc2VudChteU1vZGFsKTtcbiAgIH0gIFxuXG4gICBjaGFuZ2VVc2VyKCkge1xuICAgICBsZXQgbXlNb2RhbCA9IE1vZGFsLmNyZWF0ZShDaGFuZ2VVc2VyTW9kYWwsIHsgXCJudW1iZXJcIjogdGhpcy50aWNrZXQubnVtYmVyLCBcImtleVwiOiB0aGlzLnRpY2tldC5rZXksIFwic3ViamVjdFwiOiB0aGlzLnRpY2tldC5zdWJqZWN0LCAgXCJ1c2VyX2ZpcnN0bmFtZVwiOiB0aGlzLnRpY2tldC51c2VyX2ZpcnN0bmFtZSwgXCJ1c2VyX2xhc3RuYW1lXCI6IHRoaXMudGlja2V0LnVzZXJfbGFzdG5hbWV9KTtcbiAgICAgbXlNb2RhbC5vbkRpc21pc3MoZGF0YSA9PiB7XG4gICAgICAgaWYgKGRhdGEpe1xuICAgICAgICAgdGhpcy51c2VybmFtZSA9IHRoaXMudGlja2V0LnVzZXJfZmlyc3RuYW1lID0gZGF0YS5uYW1lO1xuICAgICAgICAgdGhpcy50aWNrZXQudXNlcl9sYXN0bmFtZSA9IHRoaXMudGlja2V0LnVzZXJfZW1haWwgPSBcIlwiO1xuICAgICAgICAgdGhpcy5nZXRQb3N0cyh0aGlzLnRpY2tldC5rZXkpO1xuICAgICAgIH1cbiAgICAgfSk7XG4gICAgIHRoaXMubmF2LnByZXNlbnQobXlNb2RhbCk7XG4gICB9ICBcblxuICAgY2hhbmdlU3ViamVjdChuYW1lMSl7XG4gICAgIHRoaXMuc3ViamVjdCA9IG5hbWUxLnZpZXdNb2RlbDtcbiAgIH1cblxuICAgY2hhbmdlTmV4dFN0ZXAobmFtZTIpe1xuICAgICB0aGlzLm5leHRfc3RlcCA9IG5hbWUyLnZpZXdNb2RlbDtcbiAgIH1cblxuICAgQ2hhbmdlU3ViamVjdCgpIHtcbiAgICAgaWYgKCF0aGlzLnN1YmplY3QgfHwgdGhpcy5zdWJqZWN0ID09IFwiXCIpXG4gICAgIHRoaXMuc3ViamVjdCA9IHRoaXMudGlja2V0LnN1YmplY3Q7IFxuICAgICBpZiAoIXRoaXMubmV4dF9zdGVwIHx8IHRoaXMubmV4dF9zdGVwID09IFwiXCIpIFxuICAgICB0aGlzLm5leHRfc3RlcCA9IHRoaXMudGlja2V0Lm5leHRfc3RlcDsgXG4gICAgIHRoaXMubmV4dF9zdGVwX2RhdGUgPSBuZXcgRGF0ZSgpLnRvSlNPTigpOyAgICBcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgdGhpcy50aWNrZXRQcm92aWRlci5hZGRUaWNrZXRTdWJqZWN0KHRoaXMudGlja2V0LmtleSwgdGhpcy5zdWJqZWN0LCB0aGlzLm5leHRfc3RlcCkuc3Vic2NyaWJlKFxuICAgICAgIGRhdGEgPT4ge1xuICAgICAgICAgdGhpcy5uYXYuYWxlcnQoJ1N1YmplY3Qgb24gdGhlICcgKyB0aGlzLmNvbmZpZy5jdXJyZW50Lm5hbWVzLnRpY2tldC5zICsgJyBoYXMgYmVlbiBjaGFuZ2VkIDopJyk7XG4gICAgICAgICB0aGlzLnRpY2tldC5zdWJqZWN0ID0gdGhpcy5zdWJqZWN0O1xuICAgICAgICAgaWYgKHRoaXMudGlja2V0Lm5leHRfc3RlcCAhPSB0aGlzLm5leHRfc3RlcClcbiAgICAgICAgICAgdGhpcy50aWNrZXQubmV4dF9zdGVwX2RhdGUgPSB0aGlzLm5leHRfc3RlcF9kYXRlO1xuICAgICAgICAgdGhpcy50aWNrZXQubmV4dF9zdGVwID0gdGhpcy5uZXh0X3N0ZXA7ICBcbiAgICAgICAgIHRoaXMuc2hvd1N1YmpDaGFuZ2UgPSAhdGhpcy5zaG93U3ViakNoYW5nZTtcbiAgICAgICAgIHRoaXMudGlja2V0UHJvdmlkZXIuZ2V0VGlja2V0c0xpc3QodGhpcy5jYWNoZW5hbWUsIFwiXCIsIFwiXCIseyBcImxpbWl0XCI6IDI1IH0pO1xuICAgICAgIH0sXG4gICAgICAgZXJyb3IgPT4ge1xuICAgICAgICAgdGhpcy5uYXYuYWxlcnQoZXJyb3IsIHRydWUpO1xuICAgICAgICAgY29uc29sZS5sb2coZXJyb3IgfHwgJ1NlcnZlciBlcnJvcicpO1xuICAgICAgIH1cbiAgICAgICApO1xuICAgICAgfVxuICAgIFxuICAgY2FuY2VsU3ViamVjdCgpe1xuICAgICB0aGlzLmNoYW5nZVN1YmplY3QodGhpcy50aWNrZXQuc3ViamVjdCk7XG4gICAgIHRoaXMuY2hhbmdlTmV4dFN0ZXAodGhpcy50aWNrZXQubmV4dF9zdGVwKTtcbiAgICAgdGhpcy5zaG93U3ViakNoYW5nZSA9ICF0aGlzLnNob3dTdWJqQ2hhbmdlO1xuICAgfVxuXG4gICBhZGRUaW1lKGlzQ2xvc2U/KVxuICAge1xuICAgICBsZXQgbXlNb2RhbCA9IE1vZGFsLmNyZWF0ZShUaW1lbG9nUGFnZSwgeyBcIm51bWJlclwiOiB0aGlzLnRpY2tldC5udW1iZXIsIFwidGlja2V0X251bWJlclwiOiB0aGlzLnRpY2tldC5rZXksIFwic3ViamVjdFwiOiB0aGlzLnRpY2tldC5zdWJqZWN0LCBcImFjY291bnRfaWRcIjogdGhpcy50aWNrZXQuYWNjb3VudF9pZCwgXCJpc19mb3JjZV90aW1lX29uX2Nsb3NpbmdfdGlja2V0c1wiOiB0aGlzLmNvbmZpZy5jdXJyZW50LmlzX2ZvcmNlX3RpbWVfb25fY2xvc2luZ190aWNrZXRzICYmIHRoaXMudGlja2V0LnRvdGFsX3RpbWVfaW5fbWludXRlcyA8IDEgJiYgaXNDbG9zZSB9KTtcbiAgICAgbXlNb2RhbC5vbkRpc21pc3MoZGF0YSA9PiB7XG4gICAgICAgaWYoZGF0YSl7XG4gICAgICAgICBpZihpc0Nsb3NlKVxuICAgICAgICAgICB0aGlzLmNsb3NlVGlja2V0KHRydWUpO1xuICAgICB9XG4gICAgICAgfSk7XG4gICAgICAgdGhpcy5uYXYucHJlc2VudChteU1vZGFsKTtcbiAgICAgfVxuXG4gICAgIGFkZEV4cGVuc2UoKVxuICAgICB7XG4gICAgICAgbGV0IG15TW9kYWwgPSBNb2RhbC5jcmVhdGUoRXhwZW5zZUNyZWF0ZVBhZ2UsIHsgXCJudW1iZXJcIjogdGhpcy50aWNrZXQubnVtYmVyLCBcInRpY2tldF9udW1iZXJcIjogdGhpcy50aWNrZXQua2V5LCBcInN1YmplY3RcIjogdGhpcy50aWNrZXQuc3ViamVjdCwgXCJhY2NvdW50X2lkXCI6IHRoaXMudGlja2V0LmFjY291bnRfaWQgfSk7XG4gICAgICAgLy9teU1vZGFsLm9uRGlzbWlzcyhkYXRhID0+IHtcbiAgICAgICAgIC8vICAgIGNvbnNvbGUubG9nKGRhdGEpO1xuICAgICAgICAgLy99KTtcbiAgICAgICAgIHRoaXMubmF2LnByZXNlbnQobXlNb2RhbCk7XG4gICAgICAgfVxuXG4gICAgICAgYWRkRmlsZXNCdXR0b24oKSB7XG4gICAgY29uc29sZS5sb2coXCJGdW5jdGlvbiBjb25uZWN0XCIpO1xuICAgIGxldCBteU1vZGFsID0gTW9kYWwuY3JlYXRlKEFkZEZpbGVzTW9kYWwpO1xuICAgICAgICBteU1vZGFsLm9uRGlzbWlzcyhkYXRhMSA9PiB7XG4gICAgICAgICAgICAvL3RoaXMuZ290b1VzZXIoZGF0YTEpO1xuICAgICAgICB9KTtcbiAgICAgICAgdGhpcy5uYXYucHJlc2VudChteU1vZGFsKTtcbiAgICAgICAgICAgIH1cbiAgICAgXG4gICAgICBFc2NhbGF0ZShpc19lc2NhbGF0ZT8pe1xuXG4gICAgICBpc19lc2NhbGF0ZSA9IGlzX2VzY2FsYXRlIHx8IGZhbHNlO1xuICAgICAgICAvL3Byb29mIGRvdWJsZSBjbGlja1xuICAgICBpZiAodGhpcy50aWNrZXQuaW5fcHJvZ3Jlc3MgJiYgRGF0ZS5ub3coKSAtIHRoaXMudGlja2V0LmluX3Byb2dyZXNzIDwgMTUwMCkge3JldHVybjt9XG4gICAgIHRoaXMudGlja2V0LmluX3Byb2dyZXNzID0gRGF0ZS5ub3coKTtcblxuICAgICB0aGlzLnRpY2tldFByb3ZpZGVyLmVzY2FsYXRlVGlja2V0KHRoaXMudGlja2V0LmtleSwgaXNfZXNjYWxhdGUpLnN1YnNjcmliZShcbiAgICAgICBkYXRhID0+IHtcbiAgICAgICAgIHRoaXMucHJvY2Vzc0RldGFpbHMoZGF0YSk7XG4gICAgICAgICB0aGlzLm5hdi5hbGVydCh0aGlzLmNvbmZpZy5jdXJyZW50Lm5hbWVzLnRpY2tldC5zICsgXCIgd2FzIFwiICsgKGlzX2VzY2FsYXRlID8gXCJlc2NhbGF0ZWRcIiA6IFwiZGUtZXNjYWxhdGVkXCIpICtcIiBzdWNjZXNmdWxseSFcIik7XG4gICAgICAgfSxcbiAgICAgICBlcnJvciA9PiB7XG4gICAgICAgICB0aGlzLm5hdi5hbGVydChlcnJvciB8fCBcIkVycm9yISBUcnkgYWdhaW4gbGF0ZXIgLi4uXCIsIHRydWUpO1xuICAgICAgICAgY29uc29sZS5sb2coZXJyb3IgfHwgJ1NlcnZlciBlcnJvcicpO1xuICAgICAgIH1cbiAgICAgICApO1xuICAgICAgfVxuXG4gICAgICAgZ2V0RnVsbGFwcGxpbmsodGlja2V0a2V5KSB7XG4gICAgICAgICBsZXQgY3VyciA9IHRoaXMuY29uZmlnLmdldEN1cnJlbnQoKTtcbiAgICAgICAgIGZ1bGxhcHBsaW5rKEFwcFNpdGUsIHRpY2tldGtleSwgY3Vyci5pbnN0YW5jZSwgY3Vyci5vcmcpO1xuICAgICAgIH1cblxuICAgICAgIGdldE1haWxUb2xpbmsodGlja2V0a2V5KSB7XG4gICAgICAgICBsZXQgY3VyciA9IHRoaXMuY29uZmlnLmdldEN1cnJlbnQoKTtcbiAgICAgICAgIG1haWx0b2xpbmsodGlja2V0a2V5LCBjdXJyLmluc3RhbmNlLCBjdXJyLm9yZyk7XG4gICAgICAgfVxuXG4gICAgICAgZ2V0RnVsbE5hbWUgKGZpcnN0bmFtZSxsYXN0bmFtZSxlbWFpbCxuYW1lKSB7XG4gICAgICAgICByZXR1cm4gZ2V0RnVsbE5hbWUgKGZpcnN0bmFtZSxsYXN0bmFtZSxlbWFpbCxuYW1lKTtcbiAgICAgICB9XG5cbiAgICAgICBnZXRDdXJyZW5jeSh2YWx1ZSkge1xuICAgICAgICAgcmV0dXJuIGdldEN1cnJlbmN5KHZhbHVlKTtcbiAgICAgICB9XG5cbiAgICAgICBnZXRGaWxlTGluayhmaWxlKSB7XG4gICAgICAgICByZXR1cm4gRmlsZVVybEhlbHBlci5nZXRGaWxlTGluayhmaWxlLnVybCwgZmlsZS5uYW1lKTtcbiAgICAgICB9XG5cbiAgICAgICBzZXREYXRlKGRhdGUsIHNob3dtb250aD8sIGlzdGltZT8pIHtcbiAgICAgICAgIGlmIChkYXRlKXtcbiAgICAgICAgLy92YXIgdGltZV9vZmZzZXQgPSB0aGlzLmNvbmZpZy5nZXRDdXJyZW50KFwidGltZXpvbmVfb2Zmc2V0XCIpOyAgICAgXG4gICAgICAgIGRhdGUgPSBuZXcgRGF0ZShkYXRlLnN1YnN0cmluZygwLDIzKStcIlpcIik7XG4gICAgICAgIC8vZGF0ZSA9IG5ldyBEYXRlKGRhdGUuc2V0VGltZShkYXRlLmdldFRpbWUoKSArIHRpbWVfb2Zmc2V0KjYwKjYwKjEwMDApKS50b0pTT04oKTtcbiAgICAgICAgcmV0dXJuIGdldERhdGVUaW1lKGRhdGUsIHNob3dtb250aCwgaXN0aW1lKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gbnVsbDtcbiAgICAgICB9XG4gICAgIH1cblxuICAiLCJpbXBvcnQge1BhZ2UsIENvbmZpZywgTmF2LCBOYXZQYXJhbXMsIE1vZGFsfSBmcm9tICdpb25pYy1hbmd1bGFyJztcbmltcG9ydCB7QXBpRGF0YSwgVGlja2V0UHJvdmlkZXJ9IGZyb20gJy4uLy4uL3Byb3ZpZGVycy9wcm92aWRlcnMnO1xuaW1wb3J0IHtUaWNrZXRDcmVhdGVQYWdlfSBmcm9tICcuLi9tb2RhbHMvbW9kYWxzJzsgXG5pbXBvcnQge1RpY2tldERldGFpbHNQYWdlfSBmcm9tICcuLi90aWNrZXQtZGV0YWlscy90aWNrZXQtZGV0YWlscyc7XG5pbXBvcnQge0FqYXhTZWFyY2hQYWdlfSBmcm9tICcuLi9hamF4LXNlYXJjaC9hamF4LXNlYXJjaCc7XG5pbXBvcnQge1RpY2tldHNMaXN0Q29tcG9uZW50fSBmcm9tICcuLi8uLi9jb21wb25lbnRzL2NvbXBvbmVudHMnO1xuaW1wb3J0IHtGb2N1c2VyfSBmcm9tICcuLi8uLi9kaXJlY3RpdmVzL2RpcmVjdGl2ZXMnO1xuaW1wb3J0IHthZGRwfSBmcm9tICcuLi8uLi9kaXJlY3RpdmVzL2hlbHBlcnMnO1xuXG5AUGFnZSh7XG4gICAgdGVtcGxhdGVVcmw6ICdidWlsZC9wYWdlcy90aWNrZXRzL3RpY2tldHMuaHRtbCcsXG4gICAgZGlyZWN0aXZlczogW1RpY2tldHNMaXN0Q29tcG9uZW50LCBGb2N1c2VyXSxcbn0pXG5leHBvcnQgY2xhc3MgVGlja2V0c1BhZ2Uge1xuXG4gICAgY291bnRzOiBhbnk7XG4gICAgaXNfdGVjaDogYm9vbGVhbjtcbiAgICB0aWNrZXRfdGFiOiBzdHJpbmc7XG4gICAgdGVybTogc3RyaW5nID0gJyc7XG4gICAgdGVzdDogYm9vbGVhbjtcbiAgICBzZWFyY2hfcmVzdWx0czogYW55O1xuICAgIGJ1c3k6IGJvb2xlYW47XG4gICAgdXNlcl9pZDogc3RyaW5nID0gJyc7XG5cbiAgICBcbiAgICBjb25zdHJ1Y3Rvcihwcml2YXRlIG5hdjogTmF2LCBwcml2YXRlIG5hdlBhcmFtczogTmF2UGFyYW1zLCBwcml2YXRlIGNvbmZpZzogQ29uZmlnLCBwcml2YXRlIGFwaURhdGE6IEFwaURhdGEsIHByaXZhdGUgdGlja2V0UHJvdmlkZXI6IFRpY2tldFByb3ZpZGVyKSB7XG4gICAgICAgIHRoaXMuY291bnRzID0ge307XG4gICAgfVxuICAgIFxuICAgIG9uUGFnZUxvYWRlZCgpXG4gICAgeyAgICAgIFxuICAgICAgICB0aGlzLnVzZXJfaWQgPSB0aGlzLmNvbmZpZy5nZXRDdXJyZW50KFwidXNlclwiKS51c2VyX2lkO1xuICAgICAgICB0aGlzLmlzX3RlY2ggPSB0aGlzLmNvbmZpZy5nZXRDdXJyZW50KFwidXNlclwiKS5pc190ZWNob3JhZG1pbjtcbiAgICAgICAgbGV0IHBhcmFtID0gdGhpcy5uYXZQYXJhbXMuZGF0YSB8fCB7fTtcbiAgICAgICAgaWYgKHBhcmFtLmNvdW50KVxuICAgICAgICAgICAgdGhpcy5jb3VudHNbcGFyYW0udGFiXSA9IHBhcmFtLmNvdW50O1xuICAgICAgICBpZiAodGhpcy5pc190ZWNoKVxuICAgICAgICAgICAgdGhpcy50aWNrZXRfdGFiID0gIXBhcmFtLnRhYiA/IFwidGVjaFwiIDogcGFyYW0udGFiO1xuICAgICAgICBlbHNlXG4gICAgICAgICAgICB0aGlzLnRpY2tldF90YWIgPSBcInVzZXJcIjtcbiAgICAgICAgdGhpcy5uYXYudGlja2V0c190YWIgPSBudWxsO1xuXG4gICAgICAgIGlmIChwYXJhbS5rZXkpe1xuICAgICAgICAgICAgdGhpcy5nb3RvVGlja2V0KHBhcmFtKTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIG9uUGFnZURpZEVudGVyKClcbiAgICB7XG4gICAgICAgIHRoaXMudGVybSA9IFwiXCI7XG4gICAgfVxuXG4gICAgYWRkVGlja2V0KCl7XG4gICAgICAgIGxldCBteU1vZGFsID0gTW9kYWwuY3JlYXRlKFRpY2tldENyZWF0ZVBhZ2UpO1xuICAgICAgICBteU1vZGFsLm9uRGlzbWlzcyhkYXRhMSA9PiB7XG4gICAgICAgICAgICB0aGlzLmdvdG9UaWNrZXQoZGF0YTEpO1xuICAgICAgICB9KTtcbiAgICAgICAgdGhpcy5uYXYucHJlc2VudChteU1vZGFsKTtcbiAgICB9XG5cbiAgICBnb3RvVGlja2V0KGRhdGEpXG4gICAge1xuICAgICAgICB0aGlzLnRlc3QgPSBmYWxzZTtcbiAgICAgICAgdGhpcy5jbGVhclNlYXJjaCgpO1xuICAgICAgICBpZiAoZGF0YSlcbiAgICAgICAge1xuICAgICAgICAgICAgdGhpcy50aWNrZXRQcm92aWRlci5nZXRUaWNrZXRzTGlzdCh0aGlzLnRpY2tldF90YWIsIFwiXCIsIFwiXCIseyBcImxpbWl0XCI6IDI1IH0pO1xuICAgICAgICAgICAgc2V0VGltZW91dCgoKSA9PiB7XG4gICAgICAgICAgICAgICAgdGhpcy5uYXYucHVzaChUaWNrZXREZXRhaWxzUGFnZSwgZGF0YSk7XG4gICAgICAgICAgICAvL2lmICghdGhpcy5jb3VudHNbdGhpcy50aWNrZXRfdGFiXSlcbiAgICAgICAgICAgIC8vICAgIHRoaXMuY291bnRzID0ge307XG4gICAgICAgICAgICAvL3RoaXMuY291bnRzW3RoaXMudGlja2V0X3RhYl0gPSAodGhpcy50aWNrZXRQcm92aWRlci5fZGF0YVN0b3JlW3RoaXMudGlja2V0X3RhYl0gfHwge30pLmxlbmd0aCsrO1xuICAgICAgICAgICAgfSwgNTAwKTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIHNlYXJjaEl0ZW1zKHNlYXJjaGJhcikge1xuICAgICAgICAvLyBSZXNldCBpdGVtcyBiYWNrIHRvIGFsbCBvZiB0aGUgaXRlbXNcbiAgICAgICAgdGhpcy5zZWFyY2hfcmVzdWx0cyA9IFtdO1xuXG4gICAgICAgIC8vIHNldCBxIHRvIHRoZSB2YWx1ZSBvZiB0aGUgc2VhcmNoYmFyXG4gICAgICAgIHZhciBxID0gc2VhcmNoYmFyLnZhbHVlO1xuXG4gICAgICAgIC8vIGlmIHRoZSB2YWx1ZSBpcyBhbiBlbXB0eSBzdHJpbmcgZG9uJ3QgZmlsdGVyIHRoZSBzZWFyY2hfcmVzdWx0c1xuICAgICAgICBpZiAocS50cmltKCkgPT0gJycgfHwgdGhpcy5idXN5KSB7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cblxuICAgICAgICBpZiAocS5sZW5ndGggPiAxKVxuICAgICAgICB7XG4gICAgICAgICAgICB2YXIgdGltZXIgPSBzZXRUaW1lb3V0KCgpID0+IHsgdGhpcy5idXN5ID0gdHJ1ZTsgfSwgNTAwKTtcbiAgICAgICAgICAgIHRoaXMuZ2V0SXRlbXMocSwgdGltZXIpO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgZ2V0SXRlbXModGVybSwgdGltZXIpIHtcbiAgICAgICAgdGhpcy5zZWFyY2hfcmVzdWx0cyA9IFtdO1xuICAgICAgICBsZXQgdXJsID0gXCJ0aWNrZXRzP3F1ZXJ5PWFsbFwiOyAvL3N0YXR1cz1hbGxvcGVuJlxuICAgICAgICBsZXQgcGFnZXIgPSB7IGxpbWl0OiAzIH07XG4gICAgICAgIGxldCBpc190aWNrZXQgPSB0ZXJtW3Rlcm0ubGVuZ3RoIC0gMV0gPT0gXCIgXCIgfHwgdGVybVt0ZXJtLmxlbmd0aCAtIDFdID09IFwiLFwiO1xuICAgICAgICBpZiAoIWlzX3RpY2tldCkgdGVybSArPSBcIipcIjtcbiAgICAgICAgZWxzZSB1cmwgPSBcInRpY2tldHMvXCIgKyB0ZXJtLnRyaW0oKSArIFwiLFwiO1xuICAgICAgICB0aGlzLmFwaURhdGEuZ2V0UGFnZWQoYWRkcCh1cmwsIFwic2VhcmNoXCIsIHRlcm0pLCBwYWdlcikuc3Vic2NyaWJlKFxuICAgICAgICAgICAgZGF0YSA9PiB7XG4gICAgICAgICAgICAgICAgaWYgKHRpbWVyKSB7XG4gICAgICAgICAgICAgICAgICAgIGNsZWFyVGltZW91dCh0aW1lcik7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuYnVzeSA9IGZhbHNlO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB0aGlzLnNlYXJjaF9yZXN1bHRzID0gZGF0YTtcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBlcnJvciA9PiB7XG4gICAgICAgICAgICAgICAgaWYgKHRpbWVyKSB7XG4gICAgICAgICAgICAgICAgICAgIGNsZWFyVGltZW91dCh0aW1lcik7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuYnVzeSA9IGZhbHNlO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhlcnJvciB8fCAnU2VydmVyIGVycm9yJyk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICApO1xuICAgIH1cblxuICAgIGNsZWFyU2VhcmNoKHNlYXJjaGJhcj8pXG4gICAge1xuICAgICAgICB0aGlzLnNlYXJjaF9yZXN1bHRzID0gW107XG4gICAgICAgIHRoaXMuYnVzeSA9IGZhbHNlO1xuICAgICAgICBpZiAoc2VhcmNoYmFyKSBzZWFyY2hiYXIudmFsdWUgPSBcIlwiO1xuICAgIH1cblxuICAgIGdldFNlYXJjaChzZWFyY2hiYXIpIHtcbiAgICAgICAgdGhpcy50ZXN0ID0gZmFsc2U7XG4gICAgICAgIHRoaXMuY2xlYXJTZWFyY2goKTtcbiAgICAgICAgLy8gUmVzZXQgaXRlbXMgYmFjayB0byBhbGwgb2YgdGhlIGl0ZW1zXG4gICAgICAgIC8vIHNldCBxIHRvIHRoZSB2YWx1ZSBvZiB0aGUgc2VhcmNoYmFyXG4gICAgICAgIGxldCB0ZXJtID0gc2VhcmNoYmFyLnRhcmdldC52YWx1ZTtcbiAgICAgICAgaWYgKHRlcm0ubGVuZ3RoIDwgNClcbiAgICAgICAgICAgIHRlcm0gKz0gXCIgICAgXCI7XG4gICAgICAgIGxldCBsaXN0ID0geyBzZWFyY2g6IHRlcm0gfTtcbiAgICAgICAgdGhpcy50ZXN0ID0gZmFsc2U7XG4gICAgICAgIHRoaXMubmF2LnB1c2goQWpheFNlYXJjaFBhZ2UsIGxpc3QpO1xuICAgIH1cblxufVxuIiwiaW1wb3J0IHtQYWdlLCBDb25maWcsIE5hdiwgTmF2UGFyYW1zLCBWaWV3Q29udHJvbGxlciwgQWxlcnR9IGZyb20gJ2lvbmljLWFuZ3VsYXInO1xuaW1wb3J0IHtmb3J3YXJkUmVmLCBWaWV3Q2hpbGR9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHtnZXREYXRlVGltZSwgZ2V0UGlja2VyRGF0ZVRpbWVGb3JtYXQsIGh0bWxFc2NhcGUsIGxpbmVicmVha3N9IGZyb20gJy4uLy4uL2RpcmVjdGl2ZXMvaGVscGVycyc7XG5pbXBvcnQge1RpbWVQcm92aWRlcn0gZnJvbSAnLi4vLi4vcHJvdmlkZXJzL3RpbWUtcHJvdmlkZXInO1xuaW1wb3J0IHtUaWNrZXRQcm92aWRlcn0gZnJvbSAnLi4vLi4vcHJvdmlkZXJzL3RpY2tldC1wcm92aWRlcic7XG5pbXBvcnQge0NsYXNzTGlzdENvbXBvbmVudH0gZnJvbSAnLi4vLi4vY29tcG9uZW50cy9jbGFzcy1saXN0L2NsYXNzLWxpc3QnO1xuaW1wb3J0IHtTZWxlY3RMaXN0Q29tcG9uZW50fSBmcm9tICcuLi8uLi9jb21wb25lbnRzL3NlbGVjdC1saXN0L3NlbGVjdC1saXN0JztcbmltcG9ydCB7SW52b2ljZURldGFpbHNQYWdlfSBmcm9tICcuLi9pbnZvaWNlLWRldGFpbHMvaW52b2ljZS1kZXRhaWxzJztcblxuQFBhZ2Uoe1xuICAgIHRlbXBsYXRlVXJsOiAnYnVpbGQvcGFnZXMvdGltZWxvZy90aW1lbG9nLmh0bWwnLFxuICAgIGRpcmVjdGl2ZXM6IFtDbGFzc0xpc3RDb21wb25lbnQsIGZvcndhcmRSZWYoKCkgPT4gU2VsZWN0TGlzdENvbXBvbmVudCldLFxufSlcbmV4cG9ydCBjbGFzcyBUaW1lbG9nUGFnZSB7XG5cbiAgICBpbmMgOiBudW1iZXI7XG4gICAgaXNub19pbnZvaWNlOiBib29sZWFuID0gZmFsc2U7XG4gICAgaXN0YXhhYmxlOiBib29sZWFuID0gdHJ1ZTtcbiAgICBhY2NvdW50X2lkOiBhbnk7XG4gICAgdGltZWNvdW50OiBhbnk7XG4gICAgdGltZWNvdW50X25vbndvcms6IGFueTtcbiAgICBtaW50aW1lOiBudW1iZXI7XG4gICAgdGltZTogYW55ID0ge307XG4gICAgZGF0ZTogc3RyaW5nO1xuICAgIHRpbWVub3RlOiBzdHJpbmc7XG4gICAgaW50ZXJuYWxub3Rlczogc3RyaW5nO1xuICAgIHRpdGxlOiBzdHJpbmcgPSBcIlwiO1xuICAgIGhlOiBhbnk7XG4gICAgc2VsZWN0czogYW55ID0ge307XG4gICAgZGlzcGxheUZvcm1hdDogc3RyaW5nO1xuICAgIGRpc3BsYXlGb3JtYXREYXlzOiBzdHJpbmc7XG4gICAgZGF0ZV9ub3c6IGFueTtcbiAgICBpc19zdGFydDogYm9vbGVhbiA9IGZhbHNlO1xuICAgIGlzX3Jlc2V0OiBib29sZWFuID0gZmFsc2U7XG4gICAgbWludXRlVmFsdWVzOiBBcnJheTxudW1iZXI+ID0gWzAsIDE1LCAzMCwgNDUsIDBdO1xuICAgIHN0YXJ0X3RpbWU6IHN0cmluZyA9IFwiXCI7XG4gICAgc3RvcF90aW1lOiBzdHJpbmcgPSBcIlwiO1xuICAgIHN0YXJ0X3RpbWVyOiBhbnk7XG4gICAgc3RvcF90aW1lcjogYW55O1xuICAgIHN0b3B3YXRjaDogYW55O1xuICAgIG9wdGlvbnM7IGFueSA9IHt9O1xuICAgIGNvdW50RG93bkRhdGU6IGFueSA9ICcnO1xuICAgIHBhc3Q6IGFueTtcbiAgICBzZWNvbmRzOiBhbnkgPSBcIjAwXCI7XG4gICAgbWludXRlczogYW55ID0gXCIwMFwiO1xuICAgIGhvdXJzOiBhbnkgPSBcIjAwXCI7XG4gICAgVXNlckRhdGVPZmZzZXQ6IG51bWJlciA9IC01O1xuICAgIC8vc3RhcnRfc3RvcF9ob3VyczogbnVtYmVyID0gMDtcbiAgICAvL0BWaWV3Q2hpbGQoJ3N0YXJ0dGltZScpIHN0YXJ0dGltZTpEYXRlVGltZTtcbiAgICAvL0BWaWV3Q2hpbGQoJ3N0b3B0aW1lJykgc3RvcHRpbWU6RGF0ZVRpbWU7XG5cbiAgICBjb25zdHJ1Y3Rvcihwcml2YXRlIG5hdjogTmF2LCBwcml2YXRlIG5hdlBhcmFtczogTmF2UGFyYW1zLCBwcml2YXRlIHRpbWVQcm92aWRlcjogVGltZVByb3ZpZGVyLCBwcml2YXRlIHRpY2tldFByb3ZpZGVyOiBUaWNrZXRQcm92aWRlciwgcHJpdmF0ZSBjb25maWc6IENvbmZpZywgcHJpdmF0ZSB2aWV3OiBWaWV3Q29udHJvbGxlcikge1xuICAgIH1cblxuICAgIGRlY3JlbWVudCgpXG4gICAge1xuICAgICAgICB0aGlzLnRpbWVjb3VudCA9IHRoaXMudGltZWNvdW50ID4gdGhpcy5taW50aW1lID8gTWF0aC5tYXgoTnVtYmVyKHRoaXMudGltZWNvdW50KSAtIHRoaXMuaW5jLCAwKS50b0ZpeGVkKDIpOiB0aGlzLnRpbWVjb3VudDtcblxuICAgIH1cblxuICAgIGluY3JlbWVudCgpXG4gICAge1xuICAgICAgICB0aGlzLnRpbWVjb3VudCA9IChOdW1iZXIodGhpcy50aW1lY291bnQpICsgdGhpcy5pbmMpLnRvRml4ZWQoMik7XG4gICAgfVxuXG4gICAgZGVjcmVtZW50X25vbndvcmsoKVxuICAgIHtcbiAgICAgICAgdGhpcy50aW1lY291bnRfbm9ud29yayA9IE1hdGgubWF4KE51bWJlcih0aGlzLnRpbWVjb3VudF9ub253b3JrKSAtIHRoaXMuaW5jLCAwKS50b0ZpeGVkKDIpO1xuICAgIH1cblxuICAgIGluY3JlbWVudF9ub253b3JrKClcbiAgICB7XG4gICAgICAgIHRoaXMudGltZWNvdW50X25vbndvcmsgPSAoTnVtYmVyKHRoaXMudGltZWNvdW50X25vbndvcmspICsgdGhpcy5pbmMpLnRvRml4ZWQoMik7XG4gICAgfVxuXG4gICAgbmdBZnRlclZpZXdJbml0KCkge1xuICAgICAgLy9jb25zb2xlLmxvZyh0aGlzLmNvbmZpZy5jdXJyZW50LnJlY2VudCk7XG4gICAgICAvL3RoaXMuc3RhcnR0aW1lLmRpc3BsYXlGb3JtYXQgPSB0aGlzLmRpc3BsYXlGb3JtYXQ7XG4vL2NvbnNvbGUubG9nKHRoaXMuc3RhcnR0aW1lLmRpc3BsYXlGb3JtYXQpO1xuXG59XG5cbkFkZEhvdXJzKGRhdGUsIGhvdXJzKVxue1xuICAgIGlmIChkYXRlKXtcbiAgICAgICAgZGF0ZSA9IG5ldyBEYXRlKGRhdGUuc3Vic3RyaW5nKDAsMTkpK1wiWlwiKTtcbiAgICAgICAgZGF0ZSA9IG5ldyBEYXRlKGRhdGUuc2V0VGltZShkYXRlLmdldFRpbWUoKSArIGhvdXJzKjYwKjYwKjEwMDApKS50b0pTT04oKTtcbiAgICAgICAgcmV0dXJuIGRhdGU7XG4gICAgfVxuICAgIHJldHVybiBkYXRlO1xufVxuXG5HZXRMb2NhbERhdGUobm9qc29uPylcbntcbiAgICBsZXQgZGF0ZSA9IG5ldyBEYXRlKCk7XG4gICAgZGF0ZSA9IG5ldyBEYXRlKGRhdGUuZ2V0VGltZSgpIC0gKGRhdGUuZ2V0VGltZXpvbmVPZmZzZXQoKSAqIDYwMDAwKSlcbiAgICBpZiAobm9qc29uKSByZXR1cm4gZGF0ZTtcbiAgICByZXR1cm4gZGF0ZS50b0pTT04oKTtcbn1cblxubmdPbkluaXQoKVxueyAgICBcbiAgICB0aGlzLlVzZXJEYXRlT2Zmc2V0ID0gdGhpcy5jb25maWcuZ2V0Q3VycmVudChcInRpbWV6b25lX29mZnNldFwiKTtcbiAgICB0aGlzLnRpbWUgPSB0aGlzLm5hdlBhcmFtcy5kYXRhIHx8IHt9O1xuXG4gICAgdGhpcy5vcHRpb25zID0ge1xuICAgICAgICAgIHllYXI6ICdudW1lcmljJyxcbiAgICAgICAgICBtb250aDogJ3Nob3J0JyxcbiAgICAgICAgICBkYXk6ICdudW1lcmljJyxcbiAgICAgICAgICB3ZWVrZGF5OiAnc2hvcnQnXG4gICAgICAgIH07XG4gICAgICAgIHRoaXMuZGF0ZV9ub3cgPSBuZXcgRGF0ZSgpLnRvTG9jYWxlU3RyaW5nKFwiZW4tVVNcIiwgdGhpcy5vcHRpb25zKTtcblxuICAgICAgICBsZXQgZGlzdGFuY2UgPSBsb2NhbFN0b3JhZ2UuZ2V0SXRlbSgncGFzdCcpO1xuICAgICAgICBkaXN0YW5jZSA9IE51bWJlcihkaXN0YW5jZSk7XG4gICAgICAgIGlmKGlzTmFOKGRpc3RhbmNlKSlcbiAgICAgICAgICAgIGxvY2FsU3RvcmFnZS5zZXRJdGVtKCdwYXN0JywgJycpO1xuXG4gICAgaWYgKGxvY2FsU3RvcmFnZS5nZXRJdGVtKCdjb3VudERvd25EYXRlJykgIT0gJycgJiYgIXRoaXMudGltZS50aW1lX2lkKXtcbiAgICAgICAgdGhpcy5jb3VudERvd25EYXRlID0gbG9jYWxTdG9yYWdlLmdldEl0ZW0oJ2NvdW50RG93bkRhdGUnKTtcbiAgICAgICAgaWYgKHRoaXMuY291bnREb3duRGF0ZSA9PT0gbnVsbClcbiAgICAgICAgICAgIHRoaXMuc2hvd1RpbWVyKFwiMFwiKTtcbiAgICAgICAgZWxzZVxuICAgICAgICAgICAgdGhpcy50aW1lclN0YXJ0KCk7XG4gICAgfVxuICAgIGVsc2UgaWYgKChsb2NhbFN0b3JhZ2UuZ2V0SXRlbSgnY291bnREb3duRGF0ZScpID09ICcnIHx8IGxvY2FsU3RvcmFnZS5nZXRJdGVtKCdwYXN0JykgIT0gJycpICYmICF0aGlzLnRpbWUudGltZV9pZCl7XG4gICAgICAgIGRpc3RhbmNlID0gbG9jYWxTdG9yYWdlLmdldEl0ZW0oJ3Bhc3QnKTtcbiAgICAgICAgZGlzdGFuY2UgPSBOdW1iZXIoZGlzdGFuY2UpO1xuICAgICAgICB0aGlzLnNob3dUaW1lcihkaXN0YW5jZSk7XG4gICAgfVxuXG4gICAgbGV0IG1lX25hbWUgPSB0aGlzLmNvbmZpZy5jdXJyZW50LnVzZXIuZmlyc3RuYW1lICsgXCIgXCIgKyB0aGlzLmNvbmZpZy5jdXJyZW50LnVzZXIubGFzdG5hbWU7XG4gICAgbGV0IG5hbWUgPSAodGhpcy50aW1lLnVzZXJfbmFtZSArIFwiIFwiICsgdGhpcy50aW1lLnVzZXJfZW1haWwpLnRyaW0oKS5zcGxpdCgnICcpWzBdO1xuICAgICAgICAgICAgaWYgKHRoaXMudGltZS50aW1lX2lkKVxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIHRoaXMudGl0bGUgPSBgVGltZWxvZyAjJHt0aGlzLnRpbWUudGltZV9pZH0gYnlcXHUwMGEwJHtuYW1lfSBvblxcdTAwYTBgICsgdGhpcy5zZXREYXRlKHRoaXMudGltZS5jcmVhdGVkX3RpbWUsIGZhbHNlLCB0cnVlKTtcbiAgICAgICAgICAgICAgICAvL2ZpeCB0aW1lem9uZVxuICAgICAgICAgICAgICAgIHRoaXMuc3RhcnRfdGltZSA9IHRoaXMuQWRkSG91cnModGhpcy50aW1lLnN0YXJ0X3RpbWUsIHRoaXMudGltZS50aW1lX29mZnNldCk7XG4gICAgICAgICAgICAgICAgdGhpcy5zdG9wX3RpbWUgPSB0aGlzLkFkZEhvdXJzKHRoaXMudGltZS5zdG9wX3RpbWUsIHRoaXMudGltZS50aW1lX29mZnNldCk7XG4gICAgICAgICAgICAgICAgLy9pZiAodGhpcy5zdGFydF90aW1lICYmIHRoaXMuc3RvcF90aW1lKVxuICAgICAgICAgICAgICAgIC8vICAgIHRoaXMuc3RhcnRfc3RvcF9ob3VycyA9IE51bWJlcihNYXRoLnJvdW5kKCgrKG5ldyBEYXRlKHRoaXMuc3RvcF90aW1lKSkgLSArKG5ldyBEYXRlKHRoaXMuc3RhcnRfdGltZSkpKSAvIDYwMDAwKS82MCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIGlmICh0aGlzLnRpbWUubnVtYmVyKVxuICAgICAgICAgICAgICAgIHRoaXMudGl0bGUgPSBgIyR7dGhpcy50aW1lLm51bWJlcn0gJHt0aGlzLnRpbWUuc3ViamVjdH1gO1xuICAgICAgICAgICAgZWxzZXtcbiAgICAgICAgICAgICAgICB0aGlzLnRpdGxlID0gXCJBZGQgVGltZVwiO1xuICAgICAgICAgICAgICAgIHRoaXMuaXN0YXhhYmxlID0gdHJ1ZTtcbiAgICAgICAgICAgICAgICB0aGlzLmlzbm9faW52b2ljZSA9IGZhbHNlO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKHRoaXMudGltZS5pbnZvaWNlX2lkID4gMClcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICB0aGlzLnRpdGxlID0gYEludm9pY2VkICMke3RoaXMudGltZS5pbnZvaWNlX2lkfSBvblxcdTAwYTBgICsgdGhpcy5zZXREYXRlKHRoaXMuQWRkSG91cnModGhpcy50aW1lLmRhdGUsIHRoaXMudGltZS50aW1lX29mZnNldCksIGZhbHNlLCB0cnVlKTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgdGhpcy5pbmMgPSB0aGlzLmNvbmZpZy5nZXRDdXJyZW50KFwidGltZV9ob3VyX2luY3JlbWVudFwiKSA+IDAgPyB0aGlzLmNvbmZpZy5nZXRDdXJyZW50KFwidGltZV9ob3VyX2luY3JlbWVudFwiKSA6IDAuMjU7XG5cbiAgICAgICAgICAgIHRoaXMubWludGltZSA9IHRoaXMuY29uZmlnLmdldEN1cnJlbnQoXCJ0aW1lX21pbmltdW1fdGltZVwiKTtcbiAgICAgICAgICAgIHRoaXMubWludGltZSA9IHRoaXMubWludGltZSA+IDAgPyB0aGlzLm1pbnRpbWUgOiAwO1xuXG4gICAgICAgICAgICB0aGlzLmRpc3BsYXlGb3JtYXQgPSBnZXRQaWNrZXJEYXRlVGltZUZvcm1hdChmYWxzZSwgdHJ1ZSk7XG4gICAgICAgICAgICB0aGlzLmRpc3BsYXlGb3JtYXREYXlzID0gZ2V0UGlja2VyRGF0ZVRpbWVGb3JtYXQodHJ1ZSwgZmFsc2UpOyBcblxuICAgICAgICAgICAgaWYgKHRoaXMuaW5jID49IDEpXG4gICAgICAgICAgICAgICAgdGhpcy5taW51dGVWYWx1ZXMgPSBbMF07ICAgXG4gICAgICAgICAgICBlbHNlIGlmICh0aGlzLmluYyAhPSAwLjI1KVxuICAgICAgICAgICAgeyBcbiAgICAgICAgICAgICAgICB0aGlzLm1pbnV0ZVZhbHVlcyA9IFtdO1xuICAgICAgICAgICAgICAgIGxldCBtaW4gPSAwO1xuICAgICAgICAgICAgICAgIC8vZG8geyB0aGlzLm1pbnV0ZVZhbHVlcy5wdXNoKG1pbik7IG1pbiArPSA2MCp0aGlzLmluYzt9XG4gICAgICAgICAgICAgICAgZG8geyB0aGlzLm1pbnV0ZVZhbHVlcy5wdXNoKG1pbik7IG1pbiArPSA1O31cbiAgICAgICAgICAgICAgICB3aGlsZSAobWluIDwgNjApO1xuICAgICAgICAgICAgICAgIHRoaXMubWludXRlVmFsdWVzLnB1c2goMCk7XG4gICAgICAgICAgICB9XG5cblxuICAgICAgICAgICAgdGhpcy50aW1lY291bnQgPSAodGhpcy50aW1lLmhvdXJzIHx8IHRoaXMubWludGltZSkudG9GaXhlZCgyKTtcbiAgICAgICAgICAgIHRoaXMudGltZWNvdW50X25vbndvcmsgPSAodGhpcy50aW1lLm5vbl93b3JraW5nX2hvdXJzIHx8IDApLnRvRml4ZWQoMik7XG4gICAgICAgICAgICBpZiAodGhpcy50aW1lY291bnRfbm9ud29yazwwKSBcbiAgICAgICAgICAgICAgICB0aGlzLnRpbWVjb3VudF9ub253b3JrID0gMDtcbiAgICAgICAgICAgIHRoaXMudGltZW5vdGUgPSBsaW5lYnJlYWtzKHRoaXMudGltZS5ub3RlIHx8IFwiXCIsIHRydWUpO1xuICAgICAgICAgICAgdGhpcy5pbnRlcm5hbG5vdGVzID0gbGluZWJyZWFrcyh0aGlzLnRpbWUubm90ZV9pbnRlcm5hbCB8fCBcIlwiLCB0cnVlKTtcbiAgICAgICAgICAgIHRoaXMuaGUgPSB0aGlzLmNvbmZpZy5nZXRDdXJyZW50KFwidXNlclwiKTtcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgbGV0IHJlY2VudCA6IGFueSA9IHt9O1xuXG4gICAgICAgICAgICBpZiAoIXRoaXMudGltZS5udW1iZXIgJiYgIXRoaXMudGltZS50aW1lX2lkICYmICEodGhpcy50aW1lLmFjY291bnQgfHwge30pLmlkKVxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIHJlY2VudCA9IHRoaXMuY29uZmlnLmN1cnJlbnQucmVjZW50IHx8IHt9O1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgXG4gICAgICAgICAgICB0aGlzLmFjY291bnRfaWQgPSB0aGlzLnRpbWUuYWNjb3VudF9pZCB8fCAodGhpcy50aW1lLmFjY291bnQgfHwge30pLmlkIHx8IChyZWNlbnQuYWNjb3VudCB8fCB7fSkuc2VsZWN0ZWQgfHwgdGhpcy5oZS5hY2NvdW50X2lkIHx8IC0xO1xuICAgICAgICAgICAgbGV0IGNvbnRyYWN0X2lkID0gKHRoaXMudGltZS5jb250cmFjdCB8fCB7fSkuaWQgfHwgdGhpcy50aW1lLmNvbnRyYWN0X2lkIHx8IChyZWNlbnQuY29udHJhY3QgfHwge30pLnNlbGVjdGVkIHx8IDA7XG4gICAgICAgICAgICBsZXQgcHJvamVjdF9pZCA9ICh0aGlzLnRpbWUucHJvamVjdCB8fCB7fSkuaWQgfHwgdGhpcy50aW1lLnByb2plY3RfaWQgfHwgKHJlY2VudC5wcm9qZWN0IHx8IHt9KS5zZWxlY3RlZCB8fCAwO1xuICAgICAgICAgICAgaWYgKHRoaXMuYWNjb3VudF9pZCA9PSAwKVxuICAgICAgICAgICAgICAgIHRoaXMuYWNjb3VudF9pZCA9IC0xO1xuXG4gICAgICAgICAgICB0aGlzLnNlbGVjdHMgPSB7XG4gICAgICAgICAgICAgICAgXCJhY2NvdW50XCIgOiB7XG4gICAgICAgICAgICAgICAgICAgIG5hbWU6IFwiQWNjb3VudFwiLCBcbiAgICAgICAgICAgICAgICAgICAgdmFsdWU6ICAodGhpcy50aW1lLmFjY291bnQgfHwge30pLm5hbWUgfHwgdGhpcy50aW1lLmFjY291bnRfbmFtZSB8fCAocmVjZW50LmFjY291bnQgfHwge30pLnZhbHVlIHx8IHRoaXMuaGUuYWNjb3VudF9uYW1lLFxuICAgICAgICAgICAgICAgICAgICBzZWxlY3RlZDogdGhpcy5hY2NvdW50X2lkLFxuICAgICAgICAgICAgICAgICAgICB1cmw6IFwiYWNjb3VudHM/aXNfd2l0aF9zdGF0aXN0aWNzPWZhbHNlJmxpbWl0PTUwMFwiLFxuICAgICAgICAgICAgICAgICAgICBoaWRkZW46IHRoaXMudGltZS5pc19maXhlZCxcbiAgICAgICAgICAgICAgICAgICAgaXNfZGlzYWJsZWQ6IHRoaXMudGltZS50aWNrZXRfbnVtYmVyXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICBcInByb2plY3RcIiA6IHtcbiAgICAgICAgICAgICAgICAgICAgbmFtZTogXCJQcm9qZWN0XCIsIFxuICAgICAgICAgICAgICAgICAgICB2YWx1ZTogIHRoaXMudGltZS5wcm9qZWN0X25hbWUgfHwgKHJlY2VudC5wcm9qZWN0IHx8IHt9KS52YWx1ZSB8fCBcIkRlZmF1bHRcIixcbiAgICAgICAgICAgICAgICAgICAgc2VsZWN0ZWQ6IHByb2plY3RfaWQsXG4gICAgICAgICAgICAgICAgICAgIHVybDogYHByb2plY3RzP2FjY291bnQ9JHt0aGlzLmFjY291bnRfaWR9JmlzX3dpdGhfc3RhdGlzdGljcz1mYWxzZWAsXG4gICAgICAgICAgICAgICAgICAgIGhpZGRlbjogdGhpcy50aW1lLmlzX2ZpeGVkLFxuICAgICAgICAgICAgICAgICAgICBpc19kaXNhYmxlZDogdGhpcy50aW1lLnRpY2tldF9udW1iZXJcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIFwidGlja2V0XCIgOiB7XG4gICAgICAgICAgICAgICAgICAgIG5hbWU6IFwiVGlja2V0XCIsIFxuICAgICAgICAgICAgICAgICAgICB2YWx1ZTogdGhpcy50aW1lLnRpY2tldF9udW1iZXIgPyBgIyR7dGhpcy50aW1lLnRpY2tldF9udW1iZXJ9OiAke3RoaXMudGltZS50aWNrZXRfc3ViamVjdH1gIDogXCJDaG9vc2UgKG9wdGlvbmFsKVwiLFxuICAgICAgICAgICAgICAgICAgICBzZWxlY3RlZDogdGhpcy50aW1lLnRpY2tldF9udW1iZXIgfHwgMCxcbiAgICAgICAgICAgICAgICAgICAgdXJsOiBgdGlja2V0cz9zdGF0dXM9b3BlbiZhY2NvdW50PSR7dGhpcy5hY2NvdW50X2lkfSZwcm9qZWN0PSR7cHJvamVjdF9pZH1gLFxuICAgICAgICAgICAgICAgICAgICBoaWRkZW46IHRoaXMudGltZS5pc19wcm9qZWN0X2xvZyB8fCBmYWxzZSxcbiAgICAgICAgICAgICAgICAgICAgaXNfZGlzYWJsZWQ6IHRoaXMudGltZS50YXNrX3R5cGVfaWRcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIFwidGFza3R5cGVcIiA6IHsgXG4gICAgICAgICAgICAgICAgICAgIG5hbWU6IFwiVGFzayBUeXBlXCIsIFxuICAgICAgICAgICAgICAgICAgICB2YWx1ZTogdGhpcy50aW1lLnRhc2tfdHlwZSB8fCAocmVjZW50LnRhc2t0eXBlIHx8IHt9KS52YWx1ZSB8fCBcIkNob29zZVwiLFxuICAgICAgICAgICAgICAgICAgICBzZWxlY3RlZDogdGhpcy50aW1lLnRhc2tfdHlwZV9pZCB8fCB0aGlzLmNvbmZpZy5nZXRSZWNlbnQoXCJ0YXNrdHlwZVwiKS5zZWxlY3RlZCB8fCAwLFxuICAgICAgICAgICAgICAgICAgICB1cmw6IHRoaXMudGltZS50aWNrZXRfbnVtYmVyID8gYHRhc2tfdHlwZXM/dGlja2V0PSR7dGhpcy50aW1lLnRpY2tldF9udW1iZXJ9YCA6IGB0YXNrX3R5cGVzP2FjY291bnQ9JHt0aGlzLmFjY291bnRfaWR9YFxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgIFwiY29udHJhY3RcIiA6IHsgXG4gICAgICAgICAgICAgICAgICAgIG5hbWU6IFwiQ29udHJhY3RcIiwgXG4gICAgICAgICAgICAgICAgICAgIHZhbHVlOiB0aGlzLnRpbWUuY29udHJhY3RfbmFtZSB8fCAocmVjZW50LmNvbnRyYWN0IHx8IHt9KS52YWx1ZSB8fCBcIkNob29zZVwiLFxuICAgICAgICAgICAgICAgICAgICBzZWxlY3RlZDogdGhpcy50aW1lLmNvbnRyYWN0X2lkIHx8IHRoaXMuY29uZmlnLmdldFJlY2VudChcImNvbnRyYWN0XCIpLnNlbGVjdGVkIHx8IDAsXG4gICAgICAgICAgICAgICAgICAgIHVybDogYGNvbnRyYWN0cz9hY2NvdW50X2lkPSR7dGhpcy5hY2NvdW50X2lkfSZmb3JfdGltZV9sb2dzPXRydWVgLFxuICAgICAgICAgICAgICAgICAgICBoaWRkZW46IHRoaXMudGltZS5pc19maXhlZFxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgIFwidGVjaFwiIDogeyBcbiAgICAgICAgICAgICAgICAgICAgbmFtZTogXCJUZWNoXCIsIFxuICAgICAgICAgICAgICAgICAgICB2YWx1ZTogdGhpcy50aW1lLmNyZWF0ZWRfdXNlcl9uYW1lIHx8IG1lX25hbWUgfHwgXCJEZWZhdWx0XCIsXG4gICAgICAgICAgICAgICAgICAgIHNlbGVjdGVkOiB0aGlzLnRpbWUuY3JlYXRlZF91c2VyX2lkICB8fCB0aGlzLmNvbmZpZy5jdXJyZW50LnVzZXIudXNlcl9pZCB8fCAwLFxuICAgICAgICAgICAgICAgICAgICB1cmw6IHRoaXMuY29uZmlnLmN1cnJlbnQuaXNfYWxsb3dfdXNlcl9jaG9vc2VfdGVjaCAmJiB0aGlzLmNvbmZpZy5jdXJyZW50LmlzX2FsbG93X3VzZXJfY2hvb3NlX3F1ZXVlX29ubHkgPyBcInVzZXJzP3JvbGU9cXVldWVcIiA6IFwidGVjaG5pY2lhbnNcIixcbiAgICAgICAgICAgICAgICAgICAgaGlkZGVuOiAhdGhpcy5jb25maWcuY3VycmVudC5pc19hZGRfdGltZV9vdGhlcl90ZWNoc1xuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgXCJwcmVwYWlkcGFja1wiIDoge1xuICAgICAgICAgICAgICAgICAgICBuYW1lOiBcIlByZVBhaWQgUGFja1wiLCBcbiAgICAgICAgICAgICAgICAgICAgdmFsdWU6IHRoaXMudGltZS5wcmVwYWlkX3BhY2tfbmFtZSB8fCAocmVjZW50LnByZXBhaWRwYWNrIHx8IHt9KS52YWx1ZSB8fCBcIkNob29zZVwiLFxuICAgICAgICAgICAgICAgICAgICBzZWxlY3RlZDogdGhpcy50aW1lLnByZXBhaWRfcGFja19pZCB8fCB0aGlzLmNvbmZpZy5nZXRSZWNlbnQoXCJwcmVwYWlkcGFja1wiKS5zZWxlY3RlZCB8fCAwLFxuICAgICAgICAgICAgICAgICAgICB1cmw6IGBwcmVwYWlkX3BhY2tzP2NvbnRyYWN0X2lkPSR7Y29udHJhY3RfaWR9YCxcbiAgICAgICAgICAgICAgICAgICAgaGlkZGVuOiB0aGlzLnRpbWUuaXNfZml4ZWRcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9O1xuICAgICAgICB9XG5cbiAgICAgICAgc2F2ZVNlbGVjdChldmVudCl7XG4gICAgICAgICAgICBsZXQgbmFtZSA9IGV2ZW50LnR5cGU7XG4gICAgICAgICAgICB0aGlzLmFjY291bnRfaWQgPSB0aGlzLnNlbGVjdHMuYWNjb3VudC5zZWxlY3RlZDtcbiAgICAgICAgICAgIGxldCB0aWNrZXRfaWQgPSB0aGlzLnNlbGVjdHMudGlja2V0LnNlbGVjdGVkO1xuICAgICAgICAgICAgbGV0IHByb2plY3RfaWQgPSB0aGlzLnNlbGVjdHMucHJvamVjdC5zZWxlY3RlZDtcbiAgICAgICAgICAgIGxldCBjb250cmFjdF9pZCA9IHRoaXMuc2VsZWN0cy5jb250cmFjdC5zZWxlY3RlZDtcbiAgICAgICAgICAgIGxldCBwcmVwYWlkcGFja19pZCA9IHRoaXMuc2VsZWN0cy5wcmVwYWlkcGFjay5zZWxlY3RlZDsgXG4gICAgICAgIC8vY2hhbmdlIHVybCBvbiByZWxhdGVkIGxpc3RzXG4gICAgICAgIHN3aXRjaCAobmFtZSkge1xuICAgICAgICAgICAgY2FzZSBcImFjY291bnRcIjpcbiAgICAgICAgICAgIGlmICh0aGlzLnNlbGVjdHMuYWNjb3VudC5zZWxlY3RlZCA9PT0gZXZlbnQuaWQpIHtcbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHRoaXMuc2VsZWN0cy5wcm9qZWN0LnVybCA9IGBwcm9qZWN0cz9hY2NvdW50PSR7ZXZlbnQuaWR9JmlzX3dpdGhfc3RhdGlzdGljcz1mYWxzZWA7XG4gICAgICAgICAgICB0aGlzLnNlbGVjdHMucHJvamVjdC52YWx1ZSA9IFwiRGVmYXVsdFwiO1xuICAgICAgICAgICAgdGhpcy5zZWxlY3RzLnByb2plY3Quc2VsZWN0ZWQgPSAwO1xuICAgICAgICAgICAgcHJvamVjdF9pZCA9IDA7XG4gICAgICAgICAgICB0aGlzLnNlbGVjdHMuY29udHJhY3QudXJsID0gYGNvbnRyYWN0cz9hY2NvdW50X2lkPSR7ZXZlbnQuaWR9JmZvcl90aW1lX2xvZ3M9dHJ1ZWA7XG4gICAgICAgICAgICB0aGlzLnNlbGVjdHMuY29udHJhY3QudmFsdWUgPSBcIkRlZmF1bHRcIjtcbiAgICAgICAgICAgIHRoaXMuc2VsZWN0cy5jb250cmFjdC5zZWxlY3RlZCA9IDA7XG4gICAgICAgICAgICBjb250cmFjdF9pZCA9IDA7XG4gICAgICAgICAgICB0aGlzLnNlbGVjdHMucHJlcGFpZHBhY2sudXJsID0gYHByZXBhaWRfcGFja3M/Y29udHJhY3RfaWQ9MGA7XG4gICAgICAgICAgICB0aGlzLnNlbGVjdHMucHJlcGFpZHBhY2sudmFsdWUgPSBcIkNob29zZSAob3B0aW9uYWwpXCI7XG4gICAgICAgICAgICB0aGlzLnNlbGVjdHMucHJlcGFpZHBhY2suc2VsZWN0ZWQgPSAwO1xuICAgICAgICAgICAgdGhpcy5hY2NvdW50X2lkID0gZXZlbnQuaWQ7XG4gICAgICAgICAgICB0aGlzLnNlbGVjdHMuYWNjb3VudC52YWx1ZSA9IGV2ZW50Lm5hbWU7XG4gICAgICAgICAgICB0aGlzLnNlbGVjdHMuYWNjb3VudC5zZWxlY3RlZCA9IGV2ZW50LmlkO1xuXG4gICAgICAgICAgICB0aGlzLnNlbGVjdHMudGlja2V0LmhpZGRlbiA9IHRoaXMudGltZS5pc19wcm9qZWN0X2xvZyB8fCB0aGlzLnRpbWUudGFza190eXBlX2lkIHx8IGZhbHNlO1xuICAgICAgICAgICAgaWYgKCF0aGlzLnRpbWUudGFza190eXBlX2lkKXtcbiAgICAgICAgICAgICAgICB0aGlzLnNlbGVjdHMudGlja2V0LnVybCA9IGB0aWNrZXRzP3N0YXR1cz1vcGVuJmFjY291bnQ9JHt0aGlzLmFjY291bnRfaWR9JnByb2plY3Q9JHtwcm9qZWN0X2lkfWAsXG4gICAgICAgICAgICAgICAgdGhpcy5zZWxlY3RzLnRpY2tldC52YWx1ZSA9IFwiQ2hvb3NlIChvcHRpb25hbClcIjtcbiAgICAgICAgICAgICAgICB0aGlzLnNlbGVjdHMudGlja2V0LnNlbGVjdGVkID0gMDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHRoaXMuc2VsZWN0cy5wcm9qZWN0LmhpZGRlbiA9ICF0aGlzLmNvbmZpZy5jdXJyZW50LmlzX3Byb2plY3RfdHJhY2tpbmc7XG4gICAgICAgICAgICB0aGlzLnNlbGVjdHMudGFza3R5cGUudmFsdWUgPSBcIkNob29zZVwiO1xuICAgICAgICAgICAgdGhpcy5zZWxlY3RzLnRhc2t0eXBlLnNlbGVjdGVkID0gMDtcbiAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgY2FzZSBcInByb2plY3RcIiA6XG4gICAgICAgICAgICBpZiAodGhpcy5zZWxlY3RzLnByb2plY3Quc2VsZWN0ZWQgPT09IGV2ZW50LmlkKVxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgLy8gZG9udCBjaGFuZ2UgdGlja2V0IG9uIGVkaXRcbiAgICAgICAgICAgIGlmICghdGhpcy50aW1lLnRhc2tfdHlwZV9pZCl7XG4gICAgICAgICAgICAgICAgdGhpcy5zZWxlY3RzLnRpY2tldC5oaWRkZW4gPSB0aGlzLnRpbWUuaXNfcHJvamVjdF9sb2cgfHwgdGhpcy50aW1lLnRhc2tfdHlwZV9pZCB8fCBmYWxzZTtcbiAgICAgICAgICAgICAgICB0aGlzLnNlbGVjdHMudGlja2V0LnVybCA9IGB0aWNrZXRzP3N0YXR1cz1vcGVuJmFjY291bnQ9JHt0aGlzLmFjY291bnRfaWR9JnByb2plY3Q9JHtldmVudC5pZH1gLFxuICAgICAgICAgICAgICAgIHRoaXMuc2VsZWN0cy50aWNrZXQudmFsdWUgPSBcIkNob29zZSAob3B0aW9uYWwpXCI7XG4gICAgICAgICAgICAgICAgdGhpcy5zZWxlY3RzLnRpY2tldC5zZWxlY3RlZCA9IDA7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBwcm9qZWN0X2lkID0gZXZlbnQuaWQ7XG4gICAgICAgICAgICB0aGlzLnNlbGVjdHMudGFza3R5cGUudmFsdWUgPSBcIkNob29zZVwiO1xuICAgICAgICAgICAgdGhpcy5zZWxlY3RzLnRhc2t0eXBlLnNlbGVjdGVkID0gMDtcbiAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgY2FzZSBcImNvbnRyYWN0XCIgOlxuICAgICAgICAgICAgaWYgKHRoaXMuc2VsZWN0cy5jb250cmFjdC5zZWxlY3RlZCA9PT0gZXZlbnQuaWQpXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICAvLyBkb250IGNoYW5nZSB0aWNrZXQgb24gZWRpdFxuICAgICAgICAgICAgdGhpcy5zZWxlY3RzLnByZXBhaWRwYWNrLnVybCA9IGBwcmVwYWlkX3BhY2tzP2NvbnRyYWN0X2lkPSR7ZXZlbnQuaWR9YDtcbiAgICAgICAgICAgIHRoaXMuc2VsZWN0cy5wcmVwYWlkcGFjay52YWx1ZSA9IFwiQ2hvb3NlIChvcHRpb25hbClcIjtcbiAgICAgICAgICAgIHRoaXMuc2VsZWN0cy5wcmVwYWlkcGFjay5zZWxlY3RlZCA9IDA7XG4gICAgICAgICAgICBjb250cmFjdF9pZCA9IGV2ZW50LmlkO1xuICAgICAgICAgICAgdGhpcy5zZWxlY3RzLnRhc2t0eXBlLnZhbHVlID0gXCJDaG9vc2VcIjtcbiAgICAgICAgICAgIHRoaXMuc2VsZWN0cy50YXNrdHlwZS5zZWxlY3RlZCA9IDA7XG4gICAgICAgICAgICBicmVhaztcblxuICAgICAgICAgICAgY2FzZSBcInRpY2tldFwiIDpcbiAgICAgICAgICAgIGlmICh0aGlzLnNlbGVjdHMudGlja2V0LnNlbGVjdGVkID09PSBldmVudC5pZClcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHRpY2tldF9pZCA9IGV2ZW50LmlkO1xuICAgICAgICAgICAgdGhpcy5zZWxlY3RzLnRhc2t0eXBlLnZhbHVlID0gXCJDaG9vc2VcIjtcbiAgICAgICAgICAgIHRoaXMuc2VsZWN0cy50YXNrdHlwZS5zZWxlY3RlZCA9IDA7XG4gICAgICAgICAgICBicmVhaztcbiAgICAgICAgfVxuICAgICAgICB0aGlzLnNlbGVjdHMudGFza3R5cGUudXJsID0gYHRhc2tfdHlwZXM/dGlja2V0PSR7dGlja2V0X2lkfSZhY2NvdW50PSR7dGhpcy5hY2NvdW50X2lkfSZwcm9qZWN0PSR7cHJvamVjdF9pZH0mY29udHJhY3Q9JHtjb250cmFjdF9pZH1gO1xuICAgICAgICB0aGlzLnNlbGVjdHNbbmFtZV0uc2VsZWN0ZWQgPSBldmVudC5pZDtcbiAgICAgICAgdGhpcy5zZWxlY3RzW25hbWVdLnZhbHVlID0gZXZlbnQubmFtZSB8fCBcIkRlZmF1bHRcIjtcbiAgICB9XG5cbiAgICBvblN1Ym1pdChmb3JtKSB7XG4gICAgICAgIGlmICh0aGlzLnRpbWUuaW52b2ljZV9pZClcbiAgICAgICAge1xuICAgICAgICAgICAgdGhpcy52aWV3SW52b2ljZSgpO1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIC8veyBcInRpY2tldFwiIDogbG9jYWxTdG9yYWdlLmdldEl0ZW0oJ3RpY2tldE51bWJlcicpIH0gXG4gICAgICAgIC8veyBcImFjY291bnRcIiA6IGFjY291bnQsIFwicHJvamVjdFwiOiBwcm9qZWN0IH0gXG4gICAgICAgIC8vZWRhdCA9IEpTT04uc3RyaW5naWZ5KG5ldyBEYXRlKGRhdDIpKTtcbiAgICAgICAgbGV0IGhvdXJzID0gTnVtYmVyKHRoaXMudGltZWNvdW50KTtcbiAgICAgICAgbGV0IG5vbl93b3JrX2hvdXJzID0gTnVtYmVyKHRoaXMudGltZWNvdW50X25vbndvcmspO1xuXG4gICAgICAgIGlmIChob3VycyArIHRoaXMudGltZWNvdW50X25vbndvcmsgPCB0aGlzLm1pbnRpbWUpXG4gICAgICAgIHtcbiAgICAgICAgICAgIHRoaXMubmF2LmFsZXJ0KFwiTm90IGVub3VnaCB0aW1lXCIsIHRydWUpO1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIFxuICAgICAgICBpZiAodGhpcy5zdGFydF90aW1lICYmIHRoaXMuc3RvcF90aW1lICYmIGhvdXJzID4gdGhpcy5nZXRJbnRlcnZhbCgpKVxuICAgICAgICB7XG4gICAgICAgICAgICB0aGlzLm5hdi5hbGVydChcIkhvdXJzIHZhbHVlIHNob3VsZCBiZSBsZXNzIG9yIGVxdWFsIHRvIFN0YXJ0L1N0b3AgcmFuZ2UuXCIsIHRydWUpO1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIGlmICh0aGlzLmlzX3N0YXJ0KVxuICAgICAgICB7XG4gICAgICAgICAgICB0aGlzLm5hdi5hbGVydChcIlBsZWFzZSBTdG9wIFRpbWVyXCIsIHRydWUpO1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIGlmICh0aGlzLmNvbmZpZy5jdXJyZW50LmlzX2ludm9pY2UgJiYgIXRoaXMuc2VsZWN0cy5jb250cmFjdC5zZWxlY3RlZCAmJiB0aGlzLnNlbGVjdHMuY29udHJhY3QuaXRlbXMubGVuZ3RoICE9IDApXG4gICAgICAgIHtcbiAgICAgICAgICAgIHRoaXMubmF2LmFsZXJ0KFwiUGxlYXNlLCBzZWxlY3QgQ29udHJhY3QgZnJvbSB0aGUgbGlzdC5cIiwgdHJ1ZSk7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICAgICAgaWYgKCF0aGlzLnNlbGVjdHMudGFza3R5cGUuc2VsZWN0ZWQpXG4gICAgICAgIHtcbiAgICAgICAgICAgIHRoaXMubmF2LmFsZXJ0KFwiUGxlYXNlLCBzZWxlY3QgVGFzayBUeXBlIGZyb20gdGhlIGxpc3QuXCIsIHRydWUpO1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIGlmIChmb3JtLnZhbGlkKSB7XG4gICAgICAgICAgICAvL3Byb29mIGRvdWJsZSBjbGlja1xuICAgICAgICAgICAgaWYgKHRoaXMudGltZS5pbl9wcm9ncmVzcyAmJiBEYXRlLm5vdygpIC0gdGhpcy50aW1lLmluX3Byb2dyZXNzIDwgMTUwMCkge3JldHVybjt9XG4gICAgICAgICAgICB0aGlzLnRpbWUuaW5fcHJvZ3Jlc3MgPSBEYXRlLm5vdygpO1xuICAgICAgICAgICAgdmFyIG5vdGUgPSBodG1sRXNjYXBlKHRoaXMudGltZW5vdGUudHJpbSgpKS5zdWJzdHIoMCwgNTAwMCk7XG4gICAgICAgICAgICB2YXIgaW50ZXJuYWwgPSBodG1sRXNjYXBlKHRoaXMuaW50ZXJuYWxub3Rlcy50cmltKCkpLnN1YnN0cigwLCA1MDAwKTtcblxuICAgICAgICAgICAgdmFyIGlzRWRpdCA9ICEhdGhpcy50aW1lLnRpbWVfaWQ7XG4gICAgICAgICAgICB2YXIgc3RhcnRfdGltZSA9IHRoaXMuc3RhcnRfdGltZTtcbiAgICAgICAgICAgIGlmICh0aGlzLmVuZHNXaXRoKHRoaXMuc3RhcnRfdGltZSwgXCJaXCIpKVxuICAgICAgICAgICAgICAgIHN0YXJ0X3RpbWUgPSBzdGFydF90aW1lLnN1YnN0cmluZygwLDE5KTtcbiAgICAgICAgICAgIHZhciBzdG9wX3RpbWUgPSB0aGlzLnN0b3BfdGltZTtcbiAgICAgICAgICAgIGlmICh0aGlzLmVuZHNXaXRoKHRoaXMuc3RvcF90aW1lLCBcIlpcIikpXG4gICAgICAgICAgICAgICAgc3RvcF90aW1lID0gc3RvcF90aW1lLnN1YnN0cmluZygwLDE5KTtcbiAgICAgICAgICAgIHZhciBkYXRlID0gdGhpcy50aW1lLmRhdGUgfHwgdGhpcy5kYXRlIHx8IHRoaXMuR2V0TG9jYWxEYXRlKCk7XG4gICAgICAgICAgICBsb2NhbFN0b3JhZ2Uuc2V0SXRlbSgncGFzdCcsICcnKTtcbiAgICAgICAgICAgIGlmIChzdGFydF90aW1lKVxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIGRhdGUgPSBzdGFydF90aW1lO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAvL1RPRE8gaWYgb3RoZXIgdXNlciBjaGFuZ2VzIHdoYXQgaWQgc2hvdWxkIEkgd3JpdGU/ICBcbiAgICAgICAgICAgIGxldCBkYXRhID0ge1xuICAgICAgICAgICAgICAgIFwidGVjaF9pZFwiOiB0aGlzLnNlbGVjdHMudGVjaC5zZWxlY3RlZCxcbiAgICAgICAgICAgICAgICBcInRlc3RfbmFtZVwiOiB0aGlzLnNlbGVjdHMudGVjaC52YWx1ZSxcbiAgICAgICAgICAgICAgICBcInByb2plY3RfaWRcIjogdGhpcy5zZWxlY3RzLnByb2plY3Quc2VsZWN0ZWQsXG4gICAgICAgICAgICAgICAgXCJpc19wcm9qZWN0X2xvZ1wiOiAhdGhpcy5zZWxlY3RzLnRpY2tldC5zZWxlY3RlZCxcbiAgICAgICAgICAgICAgICBcInRpY2tldF9rZXlcIjogdGhpcy5zZWxlY3RzLnRpY2tldC5zZWxlY3RlZCxcbiAgICAgICAgICAgICAgICBcImFjY291bnRfaWRcIjogdGhpcy5zZWxlY3RzLmFjY291bnQuc2VsZWN0ZWQsXG4gICAgICAgICAgICAgICAgXCJub3RlX3RleHRcIjogbm90ZSxcbiAgICAgICAgICAgICAgICBcIm5vdGVfaW50ZXJuYWxcIjogaW50ZXJuYWwsXG4gICAgICAgICAgICAgICAgXCJ0YXNrX3R5cGVfaWRcIjogdGhpcy5zZWxlY3RzLnRhc2t0eXBlLnNlbGVjdGVkLFxuICAgICAgICAgICAgICAgIFwicHJlcGFpZF9wYWNrX2lkXCIgOiB0aGlzLnNlbGVjdHMucHJlcGFpZHBhY2suc2VsZWN0ZWQsXG4gICAgICAgICAgICAgICAgXCJob3Vyc1wiOiBob3VycyxcbiAgICAgICAgICAgICAgICBcIm5vX2ludm9pY2VcIjogdGhpcy5pc25vX2ludm9pY2UsXG4gICAgICAgICAgICAgICAgXCJpc190YXhhYmxlXCI6IHRoaXMuaXN0YXhhYmxlLFxuICAgICAgICAgICAgICAgIFwiZGF0ZVwiOiBkYXRlIHx8IFwiXCIsIFxuICAgICAgICAgICAgICAgIFwic3RhcnRfZGF0ZVwiOiBzdGFydF90aW1lIHx8IFwiXCIsXG4gICAgICAgICAgICAgICAgXCJzdG9wX2RhdGVcIjogc3RvcF90aW1lIHx8IFwiXCIsXG4gICAgICAgICAgICAgICAgXCJub25fd29ya2luZ19ob3Vyc1wiOiBub25fd29ya19ob3VycyxcbiAgICAgICAgICAgICAgICBcImNvbnRyYWN0X2lkXCI6IHRoaXMuc2VsZWN0cy5jb250cmFjdC5zZWxlY3RlZCxcbiAgICAgICAgICAgICAgICBcImlzX2xvY2FsX3RpbWVcIjogdHJ1ZSxcbiAgICAgICAgICAgIH07XG5cblxuICAgICAgICAgICAgdGhpcy50aW1lUHJvdmlkZXIuYWRkVGltZSh0aGlzLnRpbWUudGltZV9pZCwgZGF0YSwgaXNFZGl0ID8gXCJQVVRcIiA6IFwiUE9TVFwiKS5zdWJzY3JpYmUoXG4gICAgICAgICAgICAgICAgcmVzID0+IHtcbiAgICAgICAgICAgICAgICAgICAgLy9zdG9yZSByZWNlbnRcbiAgICAgICAgICAgICAgICAgICAgaWYgKCF0aGlzLnRpbWUubnVtYmVyICYmICF0aGlzLnRpbWUudGltZV9pZCAmJiAhKHRoaXMudGltZS5hY2NvdW50IHx8IHt9KS5pZClcbiAgICAgICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5jb25maWcuc2V0UmVjZW50KHtcImFjY291bnRcIjogdGhpcy5zZWxlY3RzLmFjY291bnQsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFwicHJvamVjdFwiOiB0aGlzLnNlbGVjdHMucHJvamVjdCxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXCJ0YXNrdHlwZVwiOiB0aGlzLnNlbGVjdHMudGFza3R5cGUsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFwiY29udHJhY3RcIjogdGhpcy5zZWxlY3RzLmNvbnRyYWN0LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXCJwcmVwYWlkcGFja1wiOiB0aGlzLnNlbGVjdHMucHJlcGFpZHBhY2t9KTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBpZiAoaXNFZGl0KXtcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMudGltZS5zdGFydF90aW1lID0gdGhpcy5BZGRIb3VycyhkYXRhLnN0YXJ0X2RhdGUsIC0xKnRoaXMuVXNlckRhdGVPZmZzZXQpO1xuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy50aW1lLnN0b3BfdGltZSA9IHRoaXMuQWRkSG91cnMoZGF0YS5zdG9wX2RhdGUsIC0xKnRoaXMuVXNlckRhdGVPZmZzZXQpO1xuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy50aW1lLmhvdXJzID0gZGF0YS5ob3VycztcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMudGltZS5ub25fd29ya2luZ19ob3VycyA9IGRhdGEubm9uX3dvcmtpbmdfaG91cnM7XG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLnRpbWUubm9faW52b2ljZSA9IGRhdGEubm9faW52b2ljZTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMudGltZS5pc190YXhhYmxlID0gZGF0YS5pc190YXhhYmxlO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIGVsc2VcbiAgICAgICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICAgICAgdmFyIHRkYXRlID0gZGF0YS5kYXRlIHx8IHRoaXMuR2V0TG9jYWxEYXRlKCk7XG4gICAgICAgICAgICAgICAgICAgICAgICB2YXIgdHQgPSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdGltZV9pZDowLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGFjY291bnRfaWQ6ZGF0YS5hY2NvdW50X2lkLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGFjY291bnRfbmFtZTp0aGlzLnNlbGVjdHMuYWNjb3VudC52YWx1ZSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBub19pbnZvaWNlOmRhdGEubm9faW52b2ljZSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpc190YXhhYmxlIDogZGF0YS5pc190YXhhYmxlLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRhdGU6dGRhdGUsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaG91cnM6ZGF0YS5ob3VycyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBub25fd29ya2luZ19ob3VyczpkYXRhLm5vbl93b3JraW5nX2hvdXJzLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlzX3Byb2plY3RfbG9nOmRhdGEuaXNfcHJvamVjdF9sb2csXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbm90ZTpkYXRhLm5vdGVfdGV4dCxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpbnRlcm5hbDpkYXRhLm5vdGVfaW50ZXJuYWwsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcHJvamVjdF9pZDpkYXRhLnByb2plY3RfaWQsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcHJvamVjdF9uYW1lOnRoaXMuc2VsZWN0cy5wcm9qZWN0LnZhbHVlLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN0YXJ0X3RpbWU6IHRoaXMuQWRkSG91cnMoZGF0YS5zdGFydF9kYXRlLCAtMSp0aGlzLlVzZXJEYXRlT2Zmc2V0KSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdG9wX3RpbWU6IHRoaXMuQWRkSG91cnMoZGF0YS5zdG9wX2RhdGUsIC0xKnRoaXMuVXNlckRhdGVPZmZzZXQpLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRpbWVfb2Zmc2V0OnRoaXMuVXNlckRhdGVPZmZzZXQsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdGFza190eXBlOnRoaXMuc2VsZWN0cy50YXNrdHlwZS52YWx1ZSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0YXNrX3R5cGVfaWQ6ZGF0YS50YXNrX3R5cGVfaWQsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY29udHJhY3RfbmFtZTp0aGlzLnNlbGVjdHMuY29udHJhY3QudmFsdWUsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY29udHJhY3RfaWQ6ZGF0YS5jb250cmFjdF9pZCxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBwcmVwYWlkX3BhY2s6dGhpcy5zZWxlY3RzLnByZXBhaWRwYWNrLnZhbHVlLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHByZXBhaWRfcGFja19pZDpkYXRhLnByZXBhaWRfcGFja19pZCxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aWNrZXRfbnVtYmVyOmRhdGEudGlja2V0X2tleSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aWNrZXRfc3ViamVjdDp0aGlzLnNlbGVjdHMudGlja2V0LnZhbHVlLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHVzZXJfZW1haWw6dGhpcy5oZS5lbWFpbCxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB1c2VyX2lkOnRoaXMuc2VsZWN0cy50ZWNoLnNlbGVjdGVkIHx8IHRoaXMuaGUudXNlcl9pZCxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB1c2VyX25hbWUgOnRoaXMuc2VsZWN0cy50ZWNoLnZhbHVlLnNwbGl0KCcoJylbMF0gfHwgdGhpcy5oZS5maXJzdG5hbWUgKyBcIiBcIiArIHRoaXMuaGUubGFzdG5hbWV9O1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxldCBkYXRlID0gbmV3IERhdGUoKS50b0pTT04oKS5zdWJzdHJpbmcoMCwxMCk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy50aW1lUHJvdmlkZXIuZ2V0VGltZWxvZ3MoXCIwXCIsIHRoaXMuY29uZmlnLmN1cnJlbnQudXNlci51c2VyX2lkLCB7IFwibGltaXRcIjogMjUgfSwgZGF0ZSwgZGF0ZSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgKHRoaXMudGltZVByb3ZpZGVyLl9kYXRhU3RvcmVbdGhpcy50aW1lLmNhY2hlbmFtZV0gfHwgW10pLnNwbGljZSgwLCAwLCB0dCk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLm5hdi5hbGVydCgnVGltZSB3YXMgc3VjY2Vzc2Z1bGx5ICcgKyAoaXNFZGl0ID8gJ3VwZGF0ZWQnIDogJ2FkZGVkJykgKyAnIDopJyk7XG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLmNsb3NlKHR0KTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMucmVzZXRUaW1lcigpO1xuICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICBlcnJvciA9PiB7XG4gICAgICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhlcnJvciB8fCAnU2VydmVyIGVycm9yJyk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBkZWxldGVUaW1lbG9nKCl7XG4gICAgICAgICAgICBsZXQgcHJvbXB0ID0gQWxlcnQuY3JlYXRlKHtcbiAgICAgICAgICAgICB0aXRsZTogJ0RvIHlvdSByZWFsbHkgd2FudCB0byByZW1vdmUgVGltZSBsb2cgIycgKyB0aGlzLnRpbWUudGltZV9pZCxcbiAgICAgICAgICAgICBidXR0b25zOiBbXG4gICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICB0ZXh0OiAnQ2FuY2VsJyxcbiAgICAgICAgICAgICAgICAgaGFuZGxlcjogZGF0YSA9PiB7XG4gICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZygnQ2FuY2VsIGNsaWNrZWQnKTtcbiAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICB0ZXh0OiAnRGVsZXRlJyxcbiAgICAgICAgICAgICAgICAgaGFuZGxlcjogZGF0YSA9PiB7XG4gICAgICAgICAgICAgICAgICAgIGxldCBkYXRhMSA9IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICBcImlzX3Byb2plY3RfbG9nXCI6IHRoaXMudGltZS5pc19wcm9qZWN0X2xvZyxcbiAgICAgICAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy50aW1lUHJvdmlkZXIuZGVsZXRlVGltZSh0aGlzLnRpbWUudGltZV9pZCwgZGF0YTEpLnN1YnNjcmliZShcbiAgICAgICAgICAgICAgICAgICAgZGF0YSA9PiB7XG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLnRpbWVQcm92aWRlci5nZXRUaW1lbG9ncyhcIjBcIiwgdGhpcy5jb25maWcuY3VycmVudC51c2VyLnVzZXJfaWQsIHsgXCJsaW1pdFwiOiAyNSB9KTtcbiAgICAgICAgICAgICAgICAgICAgICAgICh0aGlzLnRpbWVQcm92aWRlci5fZGF0YVN0b3JlW3RoaXMudGltZS5jYWNoZW5hbWVdIHx8IFtdKS5zcGxpY2UoMCwgMCwgdGhpcy50aW1lKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMubmF2LmFsZXJ0KCdUaW1lIHdhcyBkZWxldGVkJyk7XG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLmNsb3NlKCk7XG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLnJlc2V0VGltZXIoKTtcblxuICAgICAgICAgICAgICAgICAgIH0sIFxuICAgICAgICAgICAgZXJyb3IgPT4geyBcbiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhlcnJvciB8fCAnU2VydmVyIGVycm9yJyk7fVxuICAgICAgICApOyBcbiAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICBdXG4gICAgICAgICB9KTtcbiAgICAgICAgIHRoaXMubmF2LnByZXNlbnQocHJvbXB0KTtcbiAgICAgICAgfVxuXG5cbiAgICBzZXREYXRlKGRhdGUsIHNob3dtb250aD8sIGlzdGltZT8pIHtcbiAgICAgICAgcmV0dXJuIGRhdGUgPyBnZXREYXRlVGltZShkYXRlLCBzaG93bW9udGgsIGlzdGltZSkgOiBudWxsO1xuICAgIH1cblxuICAgIHRpbWVyU3RhcnQoKXtcbiAgICAgICAgdGhpcy5pc19zdGFydD0hdGhpcy5pc19zdGFydDtcbiAgICAgaWYoIXRoaXMuY291bnREb3duRGF0ZSB8fCB0aGlzLmNvdW50RG93bkRhdGUgPT0gJycpe1xuICAgICAgICB0aGlzLmNvdW50RG93bkRhdGUgPSBuZXcgRGF0ZSgpLmdldFRpbWUoKTtcbiAgICAgICAgbG9jYWxTdG9yYWdlLnNldEl0ZW0oJ2NvdW50RG93bkRhdGUnLCB0aGlzLmNvdW50RG93bkRhdGUudG9TdHJpbmcoKSk7XG4gICAgIH1cbiAgICAgZWxzZSB7XG4gICAgICAgICB0aGlzLmNvdW50RG93bkRhdGUgPSBOdW1iZXIodGhpcy5jb3VudERvd25EYXRlKTtcbiAgICAgfVxuICAgICAgICBcbiAgICAgICAgdGhpcy5jb25maWcuc2V0UmVjZW50KHtcImFjY291bnRcIjogdGhpcy5zZWxlY3RzLmFjY291bnQsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFwicHJvamVjdFwiOiB0aGlzLnNlbGVjdHMucHJvamVjdCxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXCJ0YXNrdHlwZVwiOiB0aGlzLnNlbGVjdHMudGFza3R5cGUsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFwiY29udHJhY3RcIjogdGhpcy5zZWxlY3RzLmNvbnRyYWN0LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXCJwcmVwYWlkcGFja1wiOiB0aGlzLnNlbGVjdHMucHJlcGFpZHBhY2t9KTtcbiAgICAgICAgbGV0IG9sZCA9IGxvY2FsU3RvcmFnZS5nZXRJdGVtKCdwYXN0Jyk7XG4gICAgICAgIG9sZCA9IE51bWJlcihvbGQpO1xuXG4gICAgLy8gVXBkYXRlIHRoZSBjb3VudCBkb3duIGV2ZXJ5IDEgc2Vjb25kXG4gICAgdGhpcy5zdG9wd2F0Y2ggPSBzZXRJbnRlcnZhbCgoKSA9PiB7XG5cbiAgICAgIC8vIEdldCB0b2RheXMgZGF0ZSBhbmQgdGltZVxuICAgICAgbGV0IG5vdyA9IG5ldyBEYXRlKCkuZ2V0VGltZSgpO1xuXG4gICAgICAvLyBGaW5kIHRoZSBkaXN0YW5jZSBiZXR3ZWVuIG5vdyBhbmQgdGhlIGNvdW50IGRvd24gZGF0ZVxuICAgICAgbGV0IGRpc3RhbmNlID0gbm93IC0gdGhpcy5jb3VudERvd25EYXRlICsgb2xkO1xuICAgICAgdGhpcy5zaG93VGltZXIoZGlzdGFuY2UpO1xuICAgICAgXG4gICAgfSwgMTAwMCk7XG4gICAgfVxuXG4gICAgdGltZXJTdG9wKCl7XG4gICAgICAgIGNsZWFySW50ZXJ2YWwodGhpcy5zdG9wd2F0Y2gpO1xuICAgICAgICB0aGlzLmlzX3N0YXJ0PSF0aGlzLmlzX3N0YXJ0O1xuICAgICAgICBsZXQgbm93ID0gbmV3IERhdGUoKS5nZXRUaW1lKCk7XG4gICAgICAgIHRoaXMucGFzdCA9IG5vdyAtIHRoaXMuY291bnREb3duRGF0ZTtcbiAgICAgICAgbGV0IG9sZFRpbWVyID0gbG9jYWxTdG9yYWdlLmdldEl0ZW0oJ3Bhc3QnKVxuICAgICAgICBvbGRUaW1lciA9IE51bWJlcihvbGRUaW1lcik7XG4gICAgICAgIHRoaXMucGFzdCA9IHRoaXMucGFzdCtvbGRUaW1lcjsgIFxuICAgICAgICB0aGlzLnN0b3BfdGltZSA9IG5ldyBEYXRlKCkudG9KU09OKCkuc3Vic3RyaW5nKDAsMTkpOyAgICBcbiAgICAgICAgLy90aGlzLnN0b3BfdGltZXIgPSBuZXcgRGF0ZSgpLnRvSlNPTigpLnN1YnN0cmluZygwLDE5KTtcbiAgICAgICAgdGhpcy5zZXRTdGFydERhdGUobmV3IERhdGUobmV3IERhdGUoKS5nZXRUaW1lKCkgLSB0aGlzLnBhc3QpLnRvSlNPTigpKTsgIFxuICAgICAgICAvL3RoaXMuc3RhcnRfdGltZXIgPSBuZXcgRGF0ZShuZXcgRGF0ZSgpLmdldFRpbWUoKSAtIHRoaXMucGFzdCkudG9KU09OKCkuc3Vic3RyaW5nKDAsMTkpO1xuICAgICAgICB0aGlzLnN0YXJ0X3RpbWUgPSB0aGlzLkFkZEhvdXJzKHRoaXMuc3RhcnRfdGltZSwgdGhpcy5Vc2VyRGF0ZU9mZnNldCk7XG4gICAgICAgIHRoaXMuc3RvcF90aW1lID0gdGhpcy5BZGRIb3Vycyh0aGlzLnN0b3BfdGltZSwgdGhpcy5Vc2VyRGF0ZU9mZnNldCk7XG4gICAgICAgIGxvY2FsU3RvcmFnZS5zZXRJdGVtKCdwYXN0JywgdGhpcy5wYXN0KTtcbiAgICAgICAgbG9jYWxTdG9yYWdlLnNldEl0ZW0oJ2NvdW50RG93bkRhdGUnLCAnJyk7XG4gICAgICAgIHRoaXMuY291bnREb3duRGF0ZSA9ICcnO1xuICAgICAgICAvL3RoaXMubWludXRlcyA9IDQ0OyAgIC8vZm9yIHRlc3QgdmFsdWVcbiAgICAgICAgLy90aGlzLmhvdXJzID0gMjtcbiAgICAgICAgbGV0IGluY0hvdXJzID0gdGhpcy5ob3VycztcbiAgICAgICAgbGV0IGluY01pbnV0ZXMgPSB0aGlzLnJvdW5kVG9NdWx0aXBsZSh0aGlzLm1pbnV0ZXMsIHRoaXMuaW5jKTtcbiAgICAgICAgaWYgKGluY01pbnV0ZXMgPT0gNjApe1xuICAgICAgICAgICAgaW5jTWludXRlcyA9IDA7XG4gICAgICAgICAgICBpbmNIb3VycysrO1xuICAgICAgICB9XG4gICAgICAgIGxldCBleHBvcnRIb3VycyA9IGluY0hvdXJzICsgXCIuXCIgKyBpbmNNaW51dGVzO1xuICAgICAgICBleHBvcnRIb3VycyA9IE51bWJlcihleHBvcnRIb3Vycyk7XG4gICAgICAgIGlmIChleHBvcnRIb3VycyA9PSAwKVxuICAgICAgICAgICAgdGhpcy50aW1lY291bnQgPSB0aGlzLm1pbnRpbWUudG9GaXhlZCgyKTtcbiAgICAgICAgZWxzZXtcbiAgICAgICAgdGhpcy50aW1lY291bnQgPSBleHBvcnRIb3VycztcbiAgICAgICAgfVxuICAgICAgICB0aGlzLmNvbmZpZy5zZXRSZWNlbnQoe1wiYWNjb3VudFwiOiB0aGlzLnNlbGVjdHMuYWNjb3VudCxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXCJwcm9qZWN0XCI6IHRoaXMuc2VsZWN0cy5wcm9qZWN0LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcInRhc2t0eXBlXCI6IHRoaXMuc2VsZWN0cy50YXNrdHlwZSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXCJjb250cmFjdFwiOiB0aGlzLnNlbGVjdHMuY29udHJhY3QsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcInByZXBhaWRwYWNrXCI6IHRoaXMuc2VsZWN0cy5wcmVwYWlkcGFja30pO1xuICAgIH1cbiAgICByb3VuZFRvTXVsdGlwbGUodGltZSwgaW5jKSB7XG4gICAgaW5jID0gNjAgKiBpbmM7XG4gICAgbGV0IG1pbiA9IE1hdGgucm91bmQodGltZS9pbmMpKmluYztcbiAgICBtaW4gPSAobWluIC8gNjApKjEwMDtcbiAgICByZXR1cm4gbWluO1xuICAgIH1cblxuICAgIHNob3dUaW1lcihkaXN0YW5jZSl7XG4gICAgdGhpcy5ob3VycyA9IE1hdGguZmxvb3IoKGRpc3RhbmNlICUgKDEwMDAgKiA2MCAqIDYwICogMjQpKSAvICgxMDAwICogNjAgKiA2MCkpO1xuICAgICAgaWYgKHRoaXMuaG91cnMgPCAxMCkge1xuICAgICAgICAgIHRoaXMuaG91cnMudG9TdHJpbmcoKTtcbiAgICAgICAgICB0aGlzLmhvdXJzID0gXCIwXCIgKyB0aGlzLmhvdXJzO1xuICAgICAgfVxuICAgICAgdGhpcy5taW51dGVzID0gTWF0aC5mbG9vcigoZGlzdGFuY2UgJSAoMTAwMCAqIDYwICogNjApKSAvICgxMDAwICogNjApKTtcbiAgICAgIGlmICh0aGlzLm1pbnV0ZXMgPCAxMCkge1xuICAgICAgICAgIHRoaXMubWludXRlcy50b1N0cmluZygpO1xuICAgICAgICAgIHRoaXMubWludXRlcyA9IFwiMFwiICsgdGhpcy5taW51dGVzO1xuICAgICAgfVxuICAgICAgdGhpcy5zZWNvbmRzID0gTWF0aC5mbG9vcigoZGlzdGFuY2UgJSAoMTAwMCAqIDYwKSkgLyAxMDAwKTtcbiAgICAgIGlmICh0aGlzLnNlY29uZHMgPCAxMCkge1xuICAgICAgICAgIHRoaXMuc2Vjb25kcy50b1N0cmluZygpO1xuICAgICAgICAgIHRoaXMuc2Vjb25kcyA9IFwiMFwiICsgdGhpcy5zZWNvbmRzO1xuICAgICAgfVxuICAgICAgLy9jb25zb2xlLmxvZyhcImNvdW50RG93bkRhdGVcIiwgdGhpcy5jb3VudERvd25EYXRlLCBcImRpc3RhbmNlXCIsIGRpc3RhbmNlLCB0aGlzLnNlY29uZHMpO1xuXG4gIH1cblxuICAgIHJlc2V0VGltZXIoKSB7XG4gICAgICAgIHRoaXMuaG91cnMgPSBcIjAwXCI7XG4gICAgICAgIHRoaXMubWludXRlcyA9IFwiMDBcIjtcbiAgICAgICAgdGhpcy5zZWNvbmRzID0gXCIwMFwiO1xuICAgICAgICAvL3RoaXMuc3RvcF90aW1lciA9IGZhbHNlO1xuICAgICAgICAvL3RoaXMuc3RhcnRfdGltZXIgPSBmYWxzZTtcbiAgICAgICAgdGhpcy5zdGFydF90aW1lID0gXCJcIjtcbiAgICAgICAgdGhpcy5zdG9wX3RpbWUgPSBcIlwiO1xuICAgICAgICBsb2NhbFN0b3JhZ2Uuc2V0SXRlbSgncGFzdCcsICcnKTtcbiAgICAgICAgbG9jYWxTdG9yYWdlLnNldEl0ZW0oJ2NvdW50RG93bkRhdGUnLCAnJyk7XG4gICAgfVxuXG4gICAgbmdPbkRlc3Ryb3koKXsgICAgXG4gICAgICAgIGNsZWFyVGltZW91dCh0aGlzLnN0b3B3YXRjaCk7ICBcbiAgICB9XG5cbiAgICBzZXRNaW5UaW1lKGRhdGUpIHtcbiAgICAgICAgcmV0dXJuIChkYXRlIHx8IHRoaXMudGltZS5kYXRlIHx8IHRoaXMuR2V0TG9jYWxEYXRlKCkpO1xuICAgIH1cblxuICAgIHNldE1heFRpbWUoZGF0ZSkge1xuICAgICAgICByZXR1cm4gKGRhdGUgfHwgdGhpcy50aW1lLmRhdGUgfHwgdGhpcy5HZXRMb2NhbERhdGUoKSk7XG4gICAgfVxuXG4gICAgZ2V0U3RhcnREYXRlKHRpbWUpIHtcbiAgICAgICAgcmV0dXJuICh0aW1lIHx8IHRoaXMudGltZS5kYXRlIHx8IHRoaXMuR2V0TG9jYWxEYXRlKCkpO1xuICAgIH1cblxuICAgIHNldFN0YXJ0RGF0ZSh0aW1lKXtcbiAgICAgICAgaWYgKHRpbWUpXG4gICAgICAgIHsgICAgXG4gICAgICAgICAgICB0aGlzLnN0YXJ0X3RpbWUgPSB0aW1lLnN1YnN0cmluZygwLDE5KTtcbiAgICAgICAgICAgIHRoaXMuZGF0ZV9ub3cgPSBuZXcgRGF0ZSh0aW1lKS50b0xvY2FsZVN0cmluZyhcImVuLVVTXCIsIHRoaXMub3B0aW9ucyk7XG4gICAgICAgICAgICB0aGlzLmRhdGUgPSB0aW1lO1xuICAgICAgICAgICAgaWYgKHRoaXMuc3RvcF90aW1lKVxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgdGhpcy51cGRhdGVIb3VycygpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuXG4gICAgc2V0U3RvcERhdGUodGltZSl7XG4gICAgICAgIGlmICh0aW1lKVxuICAgICAgICB7XG4gICAgICAgICAgICB0aGlzLnN0b3BfdGltZSA9IHRpbWUuc3Vic3RyaW5nKDAsMTkpO1xuICAgICAgICAgICAgdGhpcy5kYXRlX25vdyA9IG5ldyBEYXRlKHRpbWUpLnRvTG9jYWxlU3RyaW5nKFwiZW4tVVNcIiwgdGhpcy5vcHRpb25zKTtcbiAgICAgICAgICAgIHRoaXMuZGF0ZSA9IHRpbWU7IFxuICAgICAgICAgICAgaWYgKHRoaXMuc3RhcnRfdGltZSlcbiAgICAgICAgICAgIHsgICAgXG4gICAgICAgICAgICAgICAgdGhpcy51cGRhdGVIb3VycygpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuXG4gICAgc2V0RGF0ZVRpbWVsb2codGltZSl7XG4gICAgICAgIGlmICh0aW1lKVxuICAgICAgICB7XG4gICAgICAgICAgICB0aGlzLmRhdGVfbm93ID0gbmV3IERhdGUodGltZSkudG9Mb2NhbGVTdHJpbmcoXCJlbi1VU1wiLCB0aGlzLm9wdGlvbnMpO1xuICAgICAgICAgICAgdGhpcy5kYXRlID0gdGltZTsgXG4gICAgICAgIH1cbiAgICB9XG5cbiAgICB1cGRhdGVIb3VycygpXG4gICAge1xuICAgICAgICBsZXQgdGltZWNvdW50IDogbnVtYmVyID0gdGhpcy5nZXRJbnRlcnZhbCgpO1xuICAgICAgICB0aGlzLnRpbWVjb3VudCA9IHRpbWVjb3VudC50b0ZpeGVkKDIpO1xuICAgIH1cblxuICAgIGVuZHNXaXRoKHN0ciwgc2VhcmNoKVxuICAgIHtcbiAgICAgICAgc3RyID0gc3RyIHx8IFwiXCI7XG4gICAgICAgIHZhciB0aGlzX2xlbiA9IHN0ci5sZW5ndGg7XG4gICAgICAgIHJldHVybiBzdHIuc3Vic3RyaW5nKHRoaXNfbGVuIC0gc2VhcmNoLmxlbmd0aCwgdGhpc19sZW4pID09PSBzZWFyY2g7XG4gICAgfVxuXG4gICAgZ2V0SW50ZXJ2YWwoKVxuICAgIHtcbiAgICAgICAgdmFyIHN0YXJ0X3RpbWUgPSB0aGlzLnN0YXJ0X3RpbWUuc3Vic3RyaW5nKDAsMTYpK1wiWlwiO1xuICAgICAgICB2YXIgc3RvcF90aW1lID0gdGhpcy5zdG9wX3RpbWUuc3Vic3RyaW5nKDAsMTYpK1wiWlwiO1xuICAgICAgICBsZXQgaW50ZXJ2YWwgPSBOdW1iZXIoTWF0aC5yb3VuZCgoKyhuZXcgRGF0ZShzdG9wX3RpbWUpKSAtICsobmV3IERhdGUoc3RhcnRfdGltZSkpKSAvIDYwMDAwKS82MCk7XG4gICAgICAgIGlmIChpbnRlcnZhbCA+IDAgJiYgaW50ZXJ2YWwgPCB0aGlzLmluYylcbiAgICAgICAgICAgIGludGVydmFsID0gdGhpcy5pbmM7XG4gICAgICAgIHJldHVybiBpbnRlcnZhbDtcblxuICAgIH1cblxuICAgIGdldEZpeGVkKHZhbHVlKSB7XG4gICAgICAgIHJldHVybiBOdW1iZXIodmFsdWUgfHwgXCIwXCIpLnRvRml4ZWQoMikudG9TdHJpbmcoKTtcbiAgICB9XG4gICAgXG4gICAgY2xvc2UoZGF0YT8pIHtcbiAgICAgICAgLy9jbGVhckludGVydmFsKHRoaXMuc3RvcHdhdGNoKTtcbiAgICAgICAgdGhpcy52aWV3LmRpc21pc3MoZGF0YSk7XG4gICAgfVxuXG4gICAgdmlld0ludm9pY2UoKSB7XG4gICAgICAgIGxldCBpbnZvaWNlID0ge1xuICAgICAgICAgICAgYWNjb3VudF9uYW1lIDogdGhpcy50aW1lLmFjY291bnRfbmFtZSxcbiAgICAgICAgICAgIGlkOiB0aGlzLnRpbWUuaW52b2ljZV9pZCxcbiAgICAgICAgICAgIGFjY291bnRfaWQ6IHRoaXMudGltZS5hY2NvdW50X2lkLFxuICAgICAgICAgICAgcHJvamVjdF9pZDogdGhpcy50aW1lLnByb2plY3RfaWRcbiAgICAgICAgfTtcblxuICAgICAgICB0aGlzLm5hdi5wdXNoKEludm9pY2VEZXRhaWxzUGFnZSwgaW52b2ljZSk7XG4gICAgfVxufVxuIiwiaW1wb3J0IHtQYWdlLCBDb25maWcsIE5hdiwgTmF2UGFyYW1zLCBWaWV3Q29udHJvbGxlcn0gZnJvbSAnaW9uaWMtYW5ndWxhcic7XG5pbXBvcnQge2ZvcndhcmRSZWZ9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHtGT1JNX0RJUkVDVElWRVMsIFZhbGlkYXRvcnN9IGZyb20gJ0Bhbmd1bGFyL2NvbW1vbic7XG5pbXBvcnQge1RpbWVQcm92aWRlcn0gZnJvbSAnLi4vLi4vcHJvdmlkZXJzL3RpbWUtcHJvdmlkZXInO1xuaW1wb3J0IHthZGRwfSBmcm9tICcuLi8uLi9kaXJlY3RpdmVzL2hlbHBlcnMnO1xuaW1wb3J0IHtUaW1lbG9nUGFnZX0gZnJvbSAnLi4vdGltZWxvZy90aW1lbG9nJztcbmltcG9ydCB7QWN0aW9uQnV0dG9uQ29tcG9uZW50fSBmcm9tICcuLi8uLi9jb21wb25lbnRzL2FjdGlvbi1idXR0b24vYWN0aW9uLWJ1dHRvbic7XG5pbXBvcnQge1NlbGVjdExpc3RDb21wb25lbnR9IGZyb20gJy4uLy4uL2NvbXBvbmVudHMvc2VsZWN0LWxpc3Qvc2VsZWN0LWxpc3QnO1xuaW1wb3J0IHtnZXREYXRlVGltZX0gZnJvbSAnLi4vLi4vZGlyZWN0aXZlcy9oZWxwZXJzJztcbmltcG9ydCB7U3ViamVjdH0gZnJvbSAncnhqcyc7XG5pbXBvcnQge0dyYXZhdGFyUGlwZSwgTW9yZVBpcGUsIExpbmVicmVha3NQaXBlfSBmcm9tICcuLi8uLi9waXBlcy9waXBlcyc7XG5cbkBQYWdlKHtcbiAgICB0ZW1wbGF0ZVVybDogJ2J1aWxkL3BhZ2VzL3RpbWVsb2dzL3RpbWVsb2dzLmh0bWwnLFxuICAgIGRpcmVjdGl2ZXM6IFtmb3J3YXJkUmVmKCgpID0+IFNlbGVjdExpc3RDb21wb25lbnQpLCBBY3Rpb25CdXR0b25Db21wb25lbnRdLFxuICAgIHBpcGVzOiBbR3JhdmF0YXJQaXBlLCBNb3JlUGlwZSwgTGluZWJyZWFrc1BpcGVdLFxufSlcbmV4cG9ydCBjbGFzcyBUaW1lbG9nc1BhZ2Uge1xuXG4gICAgTElNSVQ6IG51bWJlciA9IDI1O1xuICAgIGFjY291bnQ6IGFueTtcbiAgICBzZWxlY3RzOiBhbnk7XG4gICAgaXNfZW1wdHk6IGJvb2xlYW4gPSBmYWxzZTtcbiAgICBwYXJhbXM6IGFueTtcbiAgICBwYWdlcjogYW55O1xuICAgIGNhY2hlbGVuOiBudW1iZXI7XG4gICAgY2FjaGVuYW1lOiBzdHJpbmc7XG4gICAgdGltZWxvZ3M6IGFueTtcbiAgICBidXN5OiBib29sZWFuO1xuICAgIHRlc3Q6IGJvb2xlYW47XG4gICAgaW5pdGlhbF9sb2FkOiBib29sZWFuID0gdHJ1ZTtcbiAgICBwcml2YXRlIHVuc3Vic2NyaWJlJDpTdWJqZWN0PHZvaWQ+ID0gbmV3IFN1YmplY3QoKTtcblxuXG4gICAgY29uc3RydWN0b3IocHJpdmF0ZSBuYXY6IE5hdiwgcHJpdmF0ZSB0aW1lUHJvdmlkZXI6IFRpbWVQcm92aWRlciwgcHJpdmF0ZSBjb25maWc6IENvbmZpZywgcHJpdmF0ZSBuYXZQYXJhbXM6IE5hdlBhcmFtcywgcHJpdmF0ZSB2aWV3OiBWaWV3Q29udHJvbGxlcikge1xuICAgICAgICB0aGlzLnBhZ2VyID0geyBwYWdlOiAwLCBsaW1pdDogdGhpcy5MSU1JVCB9O1xuICAgIH1cbiAgICBcbiAgICBvblBhZ2VMb2FkZWQoKVxuICAgIHtcbiAgICAgICAgdGhpcy5wYXJhbXMgPSB0aGlzLm5hdlBhcmFtcy5kYXRhIHx8IHt9O1xuICAgICAgICB0aGlzLnBhZ2VyID0geyBwYWdlOiAwIH07XG4gICAgICAgIHRoaXMucGFyYW1zLmFjY291bnQgPSB7IGlkOiB0aGlzLnBhcmFtcy5hY2NvdW50X2lkIHx8IFwiMFwiLCBuYW1lOiB0aGlzLnBhcmFtcy5hY2NvdW50X25hbWUgfHwgXCJcIiB9O1xuICAgICAgICB0aGlzLnBhcmFtcy50ZWNoID0geyBpZDogdGhpcy5wYXJhbXMudGVjaF9pZCB8fCAwLCBuYW1lOiB0aGlzLnBhcmFtcy50ZWNoX25hbWUgfHwgXCJcIiB9O1xuICAgICAgICBsZXQgcmVjZW50IDogYW55ID0ge307XG5cbiAgICAgICAgdGhpcy5zZWxlY3RzID0ge1xuICAgICAgICAgICAgXCJ0ZWNoXCIgOiB7XG4gICAgICAgICAgICAgICAgbmFtZTogXCJUZWNoXCIsIFxuICAgICAgICAgICAgICAgIHZhbHVlOiB0aGlzLnBhcmFtcy50ZWNoLmlkPT0wPyBcIi0tQWxsIFwiICt0aGlzLmNvbmZpZy5jdXJyZW50Lm5hbWVzLnRlY2gucCtcIiAtLVwiOiB0aGlzLnBhcmFtcy50ZWNoLm5hbWUsXG4gICAgICAgICAgICAgICAgZGVmYXVsdDogXCItLUFsbCBcIiArdGhpcy5jb25maWcuY3VycmVudC5uYW1lcy50ZWNoLnArXCIgLS1cIixcbiAgICAgICAgICAgICAgICBpc25ld19kaXNhYmxlZDogdHJ1ZSxcbiAgICAgICAgICAgICAgICBzZWxlY3RlZDogKHRoaXMucGFyYW1zLnRlY2ggfHwge30pLmlkIHx8IDAsXG4gICAgICAgICAgICAgICAgdXJsOiBcInRlY2huaWNpYW5zXCIsXG4gICAgICAgICAgICAgICAgaGlkZGVuOiBmYWxzZVxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIFwiYWNjb3VudFwiIDoge1xuICAgICAgICAgICAgICAgIG5hbWU6IFwiQWNjb3VudFwiLCBcbiAgICAgICAgICAgICAgICB2YWx1ZTogIHRoaXMucGFyYW1zLmFjY291bnQuaWQ9PTA/IFwiLS1BbGwgXCIgK3RoaXMuY29uZmlnLmN1cnJlbnQubmFtZXMuYWNjb3VudC5wK1wiIC0tXCIgOiB0aGlzLnBhcmFtcy5hY2NvdW50Lm5hbWUsXG4gICAgICAgICAgICAgICAgZGVmYXVsdDogXCItLUFsbCBcIiArdGhpcy5jb25maWcuY3VycmVudC5uYW1lcy5hY2NvdW50LnArXCIgLS1cIixcbiAgICAgICAgICAgICAgICBzZWxlY3RlZDogICh0aGlzLnBhcmFtcy5hY2NvdW50IHx8IHt9KS5pZCB8fCBcIjBcIixcbiAgICAgICAgICAgICAgICB1cmw6IFwiYWNjb3VudHM/aXNfd2l0aF9zdGF0aXN0aWNzPWZhbHNlJmxpbWl0PTUwMFwiLFxuICAgICAgICAgICAgICAgIGhpZGRlbjogZmFsc2VcbiAgICAgICAgICAgIH1cbiAgICAgICAgfTtcbiAgICAgICAgaWYgKHRoaXMucGFyYW1zLnRlY2guaWQgIT0gMClcbiAgICAgICAgICAgIHRoaXMudGVzdCA9ICF0aGlzLnRlc3Q7XG4gICAgICAgIGVsc2UgaWYgKHRoaXMucGFyYW1zLmFjY291bnQuaWQgIT0gXCIwXCIpXG4gICAgICAgICAgICB0aGlzLnRlc3QgPSAhdGhpcy50ZXN0O1xuICAgICAgICBcbiAgICAgICAgaWYgKCF0aGlzLnBhcmFtcy5hY2NvdW50KVxuICAgICAgICB7XG4gICAgICAgICAgICAgICAgcmVjZW50ID0gdGhpcy5jb25maWcuY3VycmVudC5yZWNlbnQgfHwge307XG4gICAgICAgIH1cblxuICAgICAgICB0aGlzLmNhY2hlbmFtZSA9IGFkZHAoXCJ0aW1lXCIsIFwiYWNjb3VudFwiLCB0aGlzLnBhcmFtcy5hY2NvdW50LmlkKTtcbiAgICAgICAgdGhpcy5jYWNoZW5hbWUgPSBhZGRwKHRoaXMuY2FjaGVuYW1lLCBcInRlY2hcIiwgdGhpcy5wYXJhbXMudGVjaC5pZCk7XG4gICAgICAgIHRoaXMuY2FjaGVsZW4gPSAodGhpcy50aW1lUHJvdmlkZXIuX2RhdGFTdG9yZVt0aGlzLmNhY2hlbmFtZV0gfHwge30pLmxlbmd0aDtcblxuICAgICAgICBpZiAodGhpcy5wYXJhbXMuaXNfZW1wdHkpXG4gICAgICAgICAgICB0aGlzLnBhcmFtcy5jb3VudCA9IDA7XG5cbiAgICAgICAgaWYgKHRoaXMucGFyYW1zLmNvdW50ICE9PSAwKSB7XG4gICAgICAgICAgICB0aGlzLmdldFRpbWVMb2dzKCk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZXtcbiAgICAgICAgICAgIHRoaXMuaXNfZW1wdHkgPSB0cnVlO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgc2F2ZVNlbGVjdChldmVudCl7XG4gICAgICAgIGxldCBuYW1lID0gZXZlbnQudHlwZTtcbiAgICAgICAgdGhpcy5zZWxlY3RzW25hbWVdLnNlbGVjdGVkID0gZXZlbnQuaWQ7XG4gICAgICAgIHRoaXMuc2VsZWN0c1tuYW1lXS52YWx1ZSA9IGV2ZW50Lm5hbWU7XG4gICAgICAgIHRoaXMucGFyYW1zW25hbWVdLmlkID0gZXZlbnQuaWQ7XG4gICAgICAgIHRoaXMuY2FjaGVuYW1lID0gYWRkcChcInRpbWVcIiwgXCJhY2NvdW50XCIsIHRoaXMucGFyYW1zLmFjY291bnQuaWQpO1xuICAgICAgICB0aGlzLmNhY2hlbmFtZSA9IGFkZHAodGhpcy5jYWNoZW5hbWUsIFwidGVjaFwiLCB0aGlzLnBhcmFtcy50ZWNoLmlkKTtcbiAgICAgICAgdGhpcy5jYWNoZWxlbiA9ICh0aGlzLnRpbWVQcm92aWRlci5fZGF0YVN0b3JlW3RoaXMuY2FjaGVuYW1lXSB8fCB7fSkubGVuZ3RoO1xuICAgICAgICB0aGlzLmdldFRpbWVMb2dzKCk7XG4gICAgfVxuXG4gICAgZ2V0VGltZUxvZ3MoKVxuICAgIHtcbiAgICAgICAgLy9sZXQgYWNjb3VudF9pZFxuICAgICAgICAvL2lmICh0aGlzLnNlbGVjdHMuYWNjb3VudC5zZWxlY3RlZCA9PSAtMSkgXG4vL2FjY291bnRfaWQgPSB0aGlzLnBhcmFtcy5hY2NvdW50LmlkO1xuICAgICAgICAvL2Vsc2VcbiAgICAgICAgLy8gICAgYWNjb3VudF9pZCA9IHRoaXMuc2VsZWN0cy5hY2NvdW50LnNlbGVjdGVkO1xuICAgICAgICB0aGlzLnBhZ2VyLnBhZ2UgPSAwO1xuICAgICAgICB0aGlzLnRpbWVQcm92aWRlci5nZXRUaW1lbG9ncyh0aGlzLnBhcmFtcy5hY2NvdW50LmlkLCB0aGlzLnBhcmFtcy50ZWNoLmlkLCB0aGlzLnBhZ2VyKTtcbiAgICAgICAgdGhpcy50aW1lbG9ncyA9IHRoaXMudGltZVByb3ZpZGVyLnRpbWVzJFt0aGlzLmNhY2hlbmFtZV07XG5cbiAgICAgICAgaWYgKCF0aGlzLmNhY2hlbGVuKVxuICAgICAgICB7XG4gICAgICAgICAgICB2YXIgdGltZXIgPSBzZXRUaW1lb3V0KCgpID0+IHtcbiAgICAgICAgICAgICAgICB0aGlzLmJ1c3kgPSB0cnVlO1xuICAgICAgICAgICAgfSwgNTAwKTtcbiAgICAgICAgICAgIHNldFRpbWVvdXQoKCkgPT4ge1xuICAgICAgICAgICAgICAgIHRoaXMuYnVzeSA9IGZhbHNlO1xuICAgICAgICAgICAgfSwgMTAwMDApO1xuICAgICAgICAgICAgdGhpcy50aW1lbG9ncy50YWtlVW50aWwodGhpcy51bnN1YnNjcmliZSQpLnN1YnNjcmliZShcbiAgICAgICAgICAgICAgICBkYXRhID0+IHtcbiAgICAgICAgICAgICAgICAgICAgY2xlYXJUaW1lb3V0KHRpbWVyKTtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5idXN5ID0gZmFsc2U7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuaXNfZW1wdHkgPSAhZGF0YS5sZW5ndGg7XG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBuZ09uRGVzdHJveSgpeyAgXG4gICAgICAgIHRoaXMudW5zdWJzY3JpYmUkLm5leHQoKTtcbiAgICAgICAgdGhpcy51bnN1YnNjcmliZSQuY29tcGxldGUoKTsgICBcbiAgICB9XG5cbiAgICBvblBhZ2VXaWxsRW50ZXIoKSB7XG4gICAgICAgIGlmICh0aGlzLnBhcmFtcy5hY2NvdW50X25hbWUpXG4gICAgICAgICAgICB0aGlzLnZpZXcuc2V0QmFja0J1dHRvblRleHQoJycpO1xuICAgICAgICBpZiAoIXRoaXMuaW5pdGlhbF9sb2FkKVxuICAgICAgICB7XG4gICAgICAgICAgICBzZXRUaW1lb3V0KCgpID0+IHtcbiAgICAgICAgICAgICAgIHRoaXMuZ2V0VGltZUxvZ3MoKTtcbiAgICAgICAgICAgIH0sIDQwMDApO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMuaW5pdGlhbF9sb2FkID0gZmFsc2U7XG4gICAgfVxuXG4gICAgZG9JbmZpbml0ZShpbmZpbml0ZVNjcm9sbCkge1xuICAgICAgICBpZiAodGhpcy5pc19lbXB0eSB8fCAodGhpcy5jYWNoZWxlbiA+IDAgJiYgKHRoaXMuY2FjaGVsZW4gPj0gdGhpcy5wYXJhbXMuY291bnQgfHwgdGhpcy5jYWNoZWxlbiA8IHRoaXMuTElNSVQpKSB8fCAodGhpcy5wYXJhbXMuY291bnQgPiAwICYmICh0aGlzLnBhcmFtcy5jb3VudCA8IHRoaXMuTElNSVQpKSkge1xuICAgICAgICAgICAgaW5maW5pdGVTY3JvbGwuZW5hYmxlKGZhbHNlKTtcbiAgICAgICAgICAgIGluZmluaXRlU2Nyb2xsLmNvbXBsZXRlKCk7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5wYWdlci5wYWdlICs9IDE7XG4gICAgICAgIGxldCBjYWNoZWRsZW4gPSAodGhpcy50aW1lUHJvdmlkZXIuX2RhdGFTdG9yZVt0aGlzLmNhY2hlbmFtZV0gfHwge30pLmxlbmd0aDtcbiAgICAgICAgdGhpcy50aW1lUHJvdmlkZXIuZ2V0VGltZWxvZ3ModGhpcy5wYXJhbXMuYWNjb3VudC5pZCwgdGhpcy5zZWxlY3RzLnRlY2guc2VsZWN0ZWQsIHRoaXMucGFnZXIpO1xuICAgICAgICB0aGlzLnRpbWVsb2dzLnRha2VVbnRpbCh0aGlzLnVuc3Vic2NyaWJlJCkuc3Vic2NyaWJlKFxuICAgICAgICAgICAgZGF0YSA9PiB7XG4gICAgICAgICAgICAgICAgaW5maW5pdGVTY3JvbGwuY29tcGxldGUoKTtcbiAgICAgICAgICAgICAgICBsZXQgbGVuID0gZGF0YS5sZW5ndGg7XG4gICAgICAgICAgICAgICAgaW5maW5pdGVTY3JvbGwuZW5hYmxlKCEoY2FjaGVkbGVuID09IGxlbiB8fCBsZW4gJSB0aGlzLkxJTUlUKSk7XG4gICAgICAgICAgICAgICAgdGhpcy5jYWNoZWxlbiA9IGxlbjtcbiAgICAgICAgICAgIH0pO1xuICAgIH1cbiAgICBcbiAgICBpdGVtVGFwcGVkKHRpbWUpIHtcbiAgICAgICAgdGltZSA9IHRpbWUgfHwge307XG4gICAgICAgIHRpbWUuYWNjb3VudCA9IHRpbWUuYWNjb3VudCB8fCB0aGlzLnBhcmFtcy5hY2NvdW50O1xuICAgICAgICB0aW1lLmNhY2hlbmFtZSA9IHRoaXMuY2FjaGVuYW1lO1xuICAgICAgICB0aGlzLm5hdi5wdXNoKFRpbWVsb2dQYWdlLCB0aW1lKTtcbiAgICB9XG4gICAgXG4gICAgc2V0RGF0ZShkYXRlLCB0aW1lX29mZnNldCwgc2hvd21vbnRoPywgaXN0aW1lPykge1xuICAgIGlmIChkYXRlKXtcbiAgICAgICAgLy9kYXRlID0gbmV3IERhdGUoZGF0ZS5zdWJzdHJpbmcoMCwyMykrXCJaXCIpO1xuICAgICAgICAvL2RhdGUgPSBuZXcgRGF0ZShkYXRlLnNldFRpbWUoZGF0ZS5nZXRUaW1lKCkgKyB0aW1lX29mZnNldCo2MCo2MCoxMDAwKSkudG9KU09OKCk7XG4gICAgICAgIHJldHVybiBnZXREYXRlVGltZShkYXRlLCBzaG93bW9udGgsIGlzdGltZSk7XG4gICAgfVxuICAgICByZXR1cm4gbnVsbDtcbiAgICB9XG5cbiAgICBnZXRGaXhlZCh2YWx1ZSl7XG4gICAgICAgIHJldHVybiBOdW1iZXIodmFsdWUgfHwgXCIwXCIpLnRvRml4ZWQoMikudG9TdHJpbmcoKTtcbiAgICB9XG4gICAgdG9nZ2xlKCl7XG4gICAgICAgIHRoaXMudGVzdCA9ICF0aGlzLnRlc3Q7XG4gICAgICAgIGlmICh0aGlzLnRlc3Qpe1xuICAgICAgICAgICAgc2V0VGltZW91dCgoKSA9PiB7XG4gICAgICAgIGxldCB0ID0gZG9jdW1lbnQuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZShcIm9wZW4tZmlsdGVyXCIpO1xuICAgICAgICB0ID0gdFt0Lmxlbmd0aCAtIDFdO1xuICAgICAgICB0ICYmIHQuZm9jdXMoKTtcbiAgICAgICAgfSwgNTAwKTtcbiAgICAgICAgfVxuICAgIH1cbn1cbiIsImltcG9ydCB7UGFnZSwgQ29uZmlnLCBOYXYsIE5hdlBhcmFtcywgVmlld0NvbnRyb2xsZXJ9IGZyb20gJ2lvbmljLWFuZ3VsYXInO1xuaW1wb3J0IHtmb3J3YXJkUmVmfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7Z2V0RGF0ZVRpbWUsIGdldFBpY2tlckRhdGVUaW1lRm9ybWF0LCBodG1sRXNjYXBlLCBsaW5lYnJlYWtzfSBmcm9tICcuLi8uLi9kaXJlY3RpdmVzL2hlbHBlcnMnO1xuaW1wb3J0IHtTZWxlY3RMaXN0Q29tcG9uZW50fSBmcm9tICcuLi8uLi9jb21wb25lbnRzL3NlbGVjdC1saXN0L3NlbGVjdC1saXN0JztcbmltcG9ydCB7VG9kb1Byb3ZpZGVyfSBmcm9tICcuLi8uLi9wcm92aWRlcnMvdG9kby1wcm92aWRlcic7XG5cbkBQYWdlKHtcbiAgICB0ZW1wbGF0ZVVybDogJ2J1aWxkL3BhZ2VzL3RvZG8tY3JlYXRlL3RvZG8tY3JlYXRlLmh0bWwnLFxuICAgICAgICBkaXJlY3RpdmVzOiBbZm9yd2FyZFJlZigoKSA9PiBTZWxlY3RMaXN0Q29tcG9uZW50KV0sXG5cbn0pXG5leHBvcnQgY2xhc3MgVG9kb0NyZWF0ZVBhZ2Uge1xuXG4gICAgdG9kbzogYW55O1xuICAgIGhlOiBhbnk7XG4gICAgZGlzcGxheUZvcm1hdDogc3RyaW5nO1xuICAgIFVzZXJEYXRlT2Zmc2V0OiBudW1iZXIgPSAtNTtcbiAgICBhY2NvdW50X2lkOiBudW1iZXI7XG4gICAgc2VsZWN0czogYW55ID0ge307XG5cbiAgICBjb25zdHJ1Y3Rvcihwcml2YXRlIG5hdjogTmF2LCBwcml2YXRlIG5hdlBhcmFtczogTmF2UGFyYW1zLCBwcml2YXRlIHRvZG9Qcm92aWRlcjogVG9kb1Byb3ZpZGVyLCBwcml2YXRlIGNvbmZpZzogQ29uZmlnLCBwcml2YXRlIHZpZXc6IFZpZXdDb250cm9sbGVyKSB7XG4gICAgdGhpcy5oZSA9IGNvbmZpZy5jdXJyZW50LnVzZXI7XG4gICAgfVxuICAgIFxuICAgIG5nT25Jbml0KClcbiAgICB7XG4gICAgICAgIHRoaXMudG9kbyA9IHRoaXMubmF2UGFyYW1zLmRhdGEgfHwge307XG4gICAgICAgIHRoaXMuVXNlckRhdGVPZmZzZXQgPSB0aGlzLmNvbmZpZy5nZXRDdXJyZW50KFwidGltZXpvbmVfb2Zmc2V0XCIpO1xuICAgICAgICB0aGlzLmRpc3BsYXlGb3JtYXQgPSBnZXRQaWNrZXJEYXRlVGltZUZvcm1hdChmYWxzZSwgZmFsc2UpO1xuICAgICAgICB0aGlzLnRvZG8uZHVlX2RhdGUgPSB0aGlzLnRvZG8uZHVlX2RhdGUgPyB0aGlzLkFkZEhvdXJzKHRoaXMudG9kby5kdWVfZGF0ZSwgdGhpcy5Vc2VyRGF0ZU9mZnNldCkgOiBcIlwiO1xuXG4gICAgICAgIGxldCByZWNlbnQgOiBhbnkgPSB7fTtcbiAgICAgICAgaWYgKCF0aGlzLnRvZG8uYWNjb3VudClcbiAgICAgICAge1xuICAgICAgICAgICAgICAgIHJlY2VudCA9IHRoaXMuY29uZmlnLmN1cnJlbnQucmVjZW50IHx8IHt9O1xuICAgICAgICB9XG5cbiAgICAgICAgdGhpcy5hY2NvdW50X2lkID0gKHRoaXMudG9kby5hY2NvdW50IHx8IHt9KS5pZCB8fCAocmVjZW50LmFjY291bnQgfHwge30pLnNlbGVjdGVkIHx8IHRoaXMuaGUuYWNjb3VudF9pZCB8fCAtMTtcbiAgICAgICAgbGV0IHByb2plY3RfaWQgPSAodGhpcy50b2RvLnByb2plY3QgfHwge30pLmlkIHx8IHRoaXMudG9kby5wcm9qZWN0X2lkIHx8IChyZWNlbnQucHJvamVjdCB8fCB7fSkuc2VsZWN0ZWQgfHwgMDtcbiAgICAgICB0aGlzLnNlbGVjdHMudGVjaCA9IHtcbiAgICAgICAgICAgIG5hbWU6IFwiVGVjaFwiLCBcbiAgICAgICAgICAgIHZhbHVlOiAodGhpcy50b2RvLnRlY2ggfHwge30pLm5hbWUgfHwgXCJDaG9vc2VcIixcbiAgICAgICAgICAgIHNlbGVjdGVkOiAodGhpcy50b2RvLnRlY2ggfHwge30pLmlkIHx8IDAsXG4gICAgICAgICAgICB1cmw6IHRoaXMuY29uZmlnLmN1cnJlbnQuaXNfYWxsb3dfdXNlcl9jaG9vc2VfdGVjaCAmJiB0aGlzLmNvbmZpZy5jdXJyZW50LmlzX2FsbG93X3VzZXJfY2hvb3NlX3F1ZXVlX29ubHkgPyBcInVzZXJzP3JvbGU9cXVldWVcIiA6IFwidGVjaG5pY2lhbnNcIixcbiAgICAgICAgICAgIGhpZGRlbjogZmFsc2VcbiAgICAgICAgfTtcbiBcbiAgICAgICAgdGhpcy5zZWxlY3RzLmFjY291bnQgPSB7XG4gICAgICAgICAgICBuYW1lOiBcIkFjY291bnRcIiwgXG4gICAgICAgICAgICB2YWx1ZTogKHRoaXMudG9kby5hY2NvdW50IHx8IHt9KS5uYW1lIHx8IChyZWNlbnQuYWNjb3VudCB8fCB7fSkudmFsdWUgfHwgdGhpcy5oZS5hY2NvdW50X25hbWUsXG4gICAgICAgICAgICBzZWxlY3RlZDogdGhpcy5hY2NvdW50X2lkLFxuICAgICAgICAgICAgdXJsOiBcImFjY291bnRzP2lzX3dpdGhfc3RhdGlzdGljcz1mYWxzZSZsaW1pdD01MDBcIixcbiAgICAgICAgICAgIGhpZGRlbjogZmFsc2VcbiAgICAgICAgfTtcbiAgICAgICAgdGhpcy5zZWxlY3RzLnByb2plY3QgPSAge1xuICAgICAgICAgICAgICAgIG5hbWU6IFwiUHJvamVjdFwiLCBcbiAgICAgICAgICAgICAgICB2YWx1ZTogKHJlY2VudC5wcm9qZWN0IHx8IHt9KS52YWx1ZSB8fCBcIkRlZmF1bHRcIixcbiAgICAgICAgICAgICAgICBzZWxlY3RlZDogcHJvamVjdF9pZCxcbiAgICAgICAgICAgICAgICB1cmw6IGBwcm9qZWN0cz9hY2NvdW50PSR7dGhpcy5hY2NvdW50X2lkfSZpc193aXRoX3N0YXRpc3RpY3M9ZmFsc2VgLFxuICAgICAgICAgICAgICAgIGhpZGRlbjogZmFsc2VcbiAgICAgICAgICAgIH07XG4gICAgICAgIHRoaXMuc2VsZWN0cy50aWNrZXQgPSAge1xuICAgICAgICAgICAgICAgICAgICBuYW1lOiBcIlRpY2tldFwiLCBcbiAgICAgICAgICAgICAgICAgICAgdmFsdWU6IHRoaXMudG9kby50aWNrZXRfbnVtYmVyID8gYCMke3RoaXMudG9kby50aWNrZXRfbnVtYmVyfTogJHt0aGlzLnRvZG8udGlja2V0X3N1YmplY3R9YCA6IFwiQ2hvb3NlIChvcHRpb25hbClcIixcbiAgICAgICAgICAgICAgICAgICAgc2VsZWN0ZWQ6IHRoaXMudG9kby50aWNrZXRfbnVtYmVyIHx8IDAsXG4gICAgICAgICAgICAgICAgICAgIHVybDogYHRpY2tldHM/c3RhdHVzPW9wZW4mYWNjb3VudD0ke3RoaXMuYWNjb3VudF9pZH0mcHJvamVjdD0ke3Byb2plY3RfaWR9YCxcbiAgICAgICAgICAgICAgICAgICAgaGlkZGVuOiB0aGlzLnRvZG8uaXNfcHJvamVjdF9sb2cgfHwgZmFsc2UsXG4gICAgICAgICAgICAgICAgICAgIGlzX2Rpc2FibGVkOiB0aGlzLnRvZG8udGFza190eXBlX2lkXG4gICAgICAgICAgICAgICAgfTsgICAgIFxuICAgfVxuXG4gICAgQWRkSG91cnMoZGF0ZSwgaG91cnMpXG57XG4gICAgaWYgKGRhdGUpe1xuICAgICAgICBpZiAoZGF0ZS5sZW5ndGggPT0gMTkpXG4gICAgICAgICAgICBkYXRlID0gZGF0ZS5zbGljZSgwLC0zKTtcbiAgICAgICAgbGV0IHRlbXAgPSBuZXcgRGF0ZShkYXRlKTtcbiAgICAgICAgcmV0dXJuIG5ldyBEYXRlKHRlbXAuc2V0VGltZSh0ZW1wLmdldFRpbWUoKSArIChob3Vycyo2MCo2MCoxMDAwKSArIC0xKnRlbXAuZ2V0VGltZXpvbmVPZmZzZXQoKSo2MCoxMDAwKSkudG9KU09OKCk7XG4gICAgfVxuICAgIHJldHVybiBkYXRlO1xufVxuXG4gICAgc2F2ZVNlbGVjdChldmVudCl7XG4gICAgICAgIGxldCBuYW1lID0gZXZlbnQudHlwZTtcbiAgICAgICAgdGhpcy5hY2NvdW50X2lkID0gdGhpcy5zZWxlY3RzLmFjY291bnQuc2VsZWN0ZWQ7XG4gICAgICAgIGxldCBwcm9qZWN0X2lkID0gdGhpcy5zZWxlY3RzLnByb2plY3Quc2VsZWN0ZWQ7XG4gICAgICAgIHN3aXRjaCAobmFtZSkge1xuICAgICAgICAgICAgY2FzZSBcImFjY291bnRcIiA6XG4gICAgICAgICAgICAgICAgdGhpcy5zZWxlY3RzLnByb2plY3QudXJsID0gYHByb2plY3RzP2FjY291bnQ9JHtldmVudC5pZH0maXNfd2l0aF9zdGF0aXN0aWNzPWZhbHNlYDtcbiAgICAgICAgICAgICAgICB0aGlzLnNlbGVjdHMucHJvamVjdC52YWx1ZSA9IFwiRGVmYXVsdFwiO1xuICAgICAgICAgICAgICAgIHRoaXMuc2VsZWN0cy5wcm9qZWN0LnNlbGVjdGVkID0gMDtcbiAgICAgICAgICAgICAgICBwcm9qZWN0X2lkID0gMDtcbiAgICAgICAgICAgICAgICB0aGlzLnNlbGVjdHMuYWNjb3VudC52YWx1ZSA9IGV2ZW50Lm5hbWU7XG4gICAgICAgICAgICAgICAgdGhpcy5zZWxlY3RzLmFjY291bnQuc2VsZWN0ZWQgPSBldmVudC5pZDtcbiAgICAgICAgICAgICAgICB0aGlzLmFjY291bnRfaWQgPSBldmVudC5pZDtcblxuICAgICAgICAgICAgICAgIGlmICghdGhpcy50b2RvLnRhc2tfdHlwZV9pZCl7XG4gICAgICAgICAgICAgICAgdGhpcy5zZWxlY3RzLnRpY2tldC51cmwgPSBgdGlja2V0cz9zdGF0dXM9b3BlbiZhY2NvdW50PSR7dGhpcy5hY2NvdW50X2lkfSZwcm9qZWN0PSR7cHJvamVjdF9pZH1gLFxuICAgICAgICAgICAgICAgIHRoaXMuc2VsZWN0cy50aWNrZXQudmFsdWUgPSBcIkNob29zZSAob3B0aW9uYWwpXCI7XG4gICAgICAgICAgICAgICAgdGhpcy5zZWxlY3RzLnRpY2tldC5zZWxlY3RlZCA9IDA7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICBjYXNlIFwicHJvamVjdFwiIDpcbiAgICAgICAgICAgIGlmICh0aGlzLnNlbGVjdHMucHJvamVjdC5zZWxlY3RlZCA9PT0gZXZlbnQuaWQpXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICB0aGlzLnNlbGVjdHMucHJvamVjdC52YWx1ZSA9IGV2ZW50Lm5hbWU7XG4gICAgICAgICAgICB0aGlzLnNlbGVjdHMucHJvamVjdC5zZWxlY3RlZCA9IGV2ZW50LmlkO1xuICAgICAgICAgICAgaWYgKCF0aGlzLnRvZG8udGFza190eXBlX2lkKXtcbiAgICAgICAgICAgICAgICB0aGlzLnNlbGVjdHMudGlja2V0LmhpZGRlbiA9IHRoaXMudG9kby5pc19wcm9qZWN0X2xvZyB8fCB0aGlzLnRvZG8udGFza190eXBlX2lkIHx8IGZhbHNlO1xuICAgICAgICAgICAgICAgIHRoaXMuc2VsZWN0cy50aWNrZXQudXJsID0gYHRpY2tldHM/c3RhdHVzPW9wZW4mYWNjb3VudD0ke3RoaXMuYWNjb3VudF9pZH0mcHJvamVjdD0ke2V2ZW50LmlkfWAsXG4gICAgICAgICAgICAgICAgdGhpcy5zZWxlY3RzLnRpY2tldC52YWx1ZSA9IFwiQ2hvb3NlIChvcHRpb25hbClcIjtcbiAgICAgICAgICAgICAgICB0aGlzLnNlbGVjdHMudGlja2V0LnNlbGVjdGVkID0gMDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHByb2plY3RfaWQgPSBldmVudC5pZDtcbiAgICAgICAgICAgIGJyZWFrOyAgICBcbiAgICAgICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuc2VsZWN0c1tuYW1lXS5zZWxlY3RlZCA9IGV2ZW50LmlkO1xuICAgICAgICAgICAgICAgICAgICB0aGlzLnNlbGVjdHNbbmFtZV0udmFsdWUgPSBldmVudC5uYW1lIHx8IFwiRGVmYXVsdFwiO1xuICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBvblN1Ym1pdChmb3JtKSB7XG4gICAgICAgIGxldCBob3VycyA9IHRoaXMudG9kby5lc3RpbWF0ZWRfcmVtYWluIHx8IFwiXCI7XG4gICAgICAgIGlmIChmb3JtLnZhbGlkKSB7XG4gICAgICAgICAgICBpZiAoaG91cnMpIHtcbiAgICAgICAgICAgIGlmICh+aG91cnMuaW5kZXhPZignLicpKXtcbiAgICAgICAgICAgICAgICBsZXQgcGFydHMgPSBob3Vycy5zcGxpdCgnLicpO1xuICAgICAgICAgICAgICAgIGhvdXJzID0gTnVtYmVyKHBhcnRzWzBdKSArIE51bWJlcihwYXJ0c1sxXSkvNjA7XG4gICAgICAgICAgICB9IGVsc2UgaWYgKH5ob3Vycy5pbmRleE9mKCc6Jykpe1xuICAgICAgICAgICAgICAgIGxldCBwYXJ0cyA9IGhvdXJzLnNwbGl0KCc6Jyk7XG4gICAgICAgICAgICAgICAgaG91cnMgPSBOdW1iZXIocGFydHNbMF0pICsgTnVtYmVyKHBhcnRzWzFdKS82MDtcbiAgICAgICAgICAgIH0gZWxzZSBpZiAoTnVtYmVyKGhvdXJzKSl7XG4gICAgICAgICAgICAgICAgaG91cnMgPSBOdW1iZXIoaG91cnMpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGVsc2VcbiAgICAgICAgICAgIGhvdXJzID0gMDtcbiAgICAgICAgICAgIC8vcHJvb2YgZG91YmxlIGNsaWNrXG4gICAgICAgICAgICBpZiAodGhpcy50b2RvLmluX3Byb2dyZXNzICYmIERhdGUubm93KCkgLSB0aGlzLnRvZG8uaW5fcHJvZ3Jlc3MgPCAyNTAwKSB7cmV0dXJuO31cbiAgICAgICAgICAgIHRoaXMudG9kby5pbl9wcm9ncmVzcyA9IERhdGUubm93KCk7XG4gICAgICAgICAgICBsZXQgZGF0YSA9IHtcbiAgICAgICAgICAgICAgICB0YXNrX2lkOm51bGwsXG4gICAgICAgICAgICAgICAgdGl0bGU6IHRoaXMudG9kby50aXRsZSxcbiAgICAgICAgICAgICAgICBhY2NvdW50X2lkOiB0aGlzLmFjY291bnRfaWQsXG4gICAgICAgICAgICAgICAgcHJvamVjdF9pZDogdGhpcy5zZWxlY3RzLnByb2plY3Quc2VsZWN0ZWQsXG4gICAgICAgICAgICAgICAgdGV4dDogdGhpcy50b2RvLm5vdGUsXG4gICAgICAgICAgICAgICAgYXNzaWduZWRfaWQ6IHRoaXMuc2VsZWN0cy50ZWNoLnNlbGVjdGVkLFxuICAgICAgICAgICAgICAgIGVzdGltYXRlZF9yZW1haW46IGhvdXJzLFxuICAgICAgICAgICAgICAgIGR1ZV9kYXRlOiB0aGlzLkFkZEhvdXJzKHRoaXMudG9kby5kdWVfZGF0ZSwgLTEqdGhpcy5Vc2VyRGF0ZU9mZnNldCkgfHwgXCJcIixcbiAgICAgICAgICAgICAgICBub3RpZnk6IGZhbHNlLFxuICAgICAgICAgICAgICAgIGxpc3RfaWQ6IHRoaXMudG9kby5saXN0X2lkLFxuICAgICAgICAgICAgICAgIHRpY2tldF9rZXk6IHRoaXMuc2VsZWN0cy50aWNrZXQuc2VsZWN0ZWQsXG4gICAgICAgICAgICB9O1xuXG4gICAgICAgICAgICB0aGlzLnRvZG9Qcm92aWRlci5hZGRUb2RvKGRhdGEpLnN1YnNjcmliZShcbiAgICAgICAgICAgICAgICBkYXRhID0+IHtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5uYXYuYWxlcnQoJ1RvZG8gd2FzIHN1Y2Nlc3NmdWxseSBhZGRlZCA6KScpO1xuICAgICAgICAgICAgICAgICAgICB0aGlzLnRvZG9Qcm92aWRlci5nZXRUb2Rvcyh0aGlzLmhlLnVzZXJfaWQsIFwiXCIsIFwiZmFsc2VcIiwgeyBwYWdlOiAwLCBsaW1pdDogNTAwMCB9KTtcbiAgICAgICAgICAgICAgICAgICAgc2V0VGltZW91dCgoKSA9PiB0aGlzLmNsb3NlKCksIDUwMCk7XG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICBlcnJvciA9PiB7XG4gICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKGVycm9yIHx8ICdTZXJ2ZXIgZXJyb3InKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgKTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIHNldE1pblRpbWUoZGF0ZSkge1xuICAgICAgICByZXR1cm4gKGRhdGUgfHwgdGhpcy50b2RvLmR1ZV9kYXRlIHx8IHRoaXMuQWRkSG91cnMobmV3IERhdGUoKSwgdGhpcy5Vc2VyRGF0ZU9mZnNldCkpLnN1YnN0cmluZygwLDQpO1xuICAgIH1cblxuICAgIGdldFN0YXJ0RGF0ZSh0aW1lKSB7XG4gICAgICAgIHJldHVybiAodGltZSB8fCB0aGlzLnRvZG8uZHVlX2RhdGUgfHwgdGhpcy5BZGRIb3VycyhuZXcgRGF0ZSgpLCB0aGlzLlVzZXJEYXRlT2Zmc2V0KSkuc3Vic3RyaW5nKDAsMTkpO1xuICAgIH1cblxuICAgIHNldFN0YXJ0RGF0ZSh0aW1lKXtcbiAgICAgICAgaWYgKHRpbWUpXG4gICAgICAgIHtcbiAgICAgICAgICAgIHRoaXMudG9kby5kdWVfZGF0ZSA9IHRpbWUuc3Vic3RyaW5nKDAsMTkpO1xuICAgICAgICB9XG4gICAgfVxuICAgIFxuICAgIGNsb3NlKCkge1xuICAgICAgICB0aGlzLnZpZXcuZGlzbWlzcygpO1xuICAgIH1cbn1cblxuIiwiaW1wb3J0IHtQYWdlLCBDb25maWcsIE5hdiwgTmF2UGFyYW1zLCBNb2RhbH0gZnJvbSAnaW9uaWMtYW5ndWxhcic7XG5pbXBvcnQge2ZvcndhcmRSZWZ9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHtUb2RvQ3JlYXRlUGFnZX0gZnJvbSAnLi4vdG9kby1jcmVhdGUvdG9kby1jcmVhdGUnO1xuaW1wb3J0IHtUb2RvTGlzdENvbXBvbmVudH0gZnJvbSAnLi4vLi4vY29tcG9uZW50cy9jb21wb25lbnRzJztcbmltcG9ydCB7U2VsZWN0TGlzdENvbXBvbmVudH0gZnJvbSAnLi4vLi4vY29tcG9uZW50cy9zZWxlY3QtbGlzdC9zZWxlY3QtbGlzdCc7XG5cbkBQYWdlKHtcbiAgICB0ZW1wbGF0ZVVybDogJ2J1aWxkL3BhZ2VzL3RvZG9zL3RvZG9zLmh0bWwnLFxuICAgIGRpcmVjdGl2ZXM6IFtmb3J3YXJkUmVmKCgpID0+IFNlbGVjdExpc3RDb21wb25lbnQpLCBUb2RvTGlzdENvbXBvbmVudF0sXG59KVxuZXhwb3J0IGNsYXNzIFRvZG9zUGFnZSB7XG5cbiAgICBpc19lbXB0eTogYm9vbGVhbiA9IGZhbHNlO1xuICAgIHBhcmFtczogYW55O1xuICAgIHNlbGVjdHM6IGFueTtcbiAgICB0ZXN0OiBib29sZWFuO1xuICAgIGNvbXBsZXRlZDogc3RyaW5nID0gXCJmYWxzZVwiO1xuICAgIGFzc2lnbmVkOiBzdHJpbmc7XG4gICAgLy91bmRvbmU6IG51bWJlciA9IDA7XG4gICAgXG4gICAgY29uc3RydWN0b3IocHJpdmF0ZSBuYXY6IE5hdiwgcHJpdmF0ZSBjb25maWc6IENvbmZpZywgcHJpdmF0ZSBuYXZQYXJhbXM6IE5hdlBhcmFtcykge1xuICAgIH1cblxuICAgIG9uUGFnZUxvYWRlZCgpXG4gICAge1xuICAgICAgICB0aGlzLnBhcmFtcyA9IHRoaXMubmF2UGFyYW1zLmRhdGEgfHwge307XG4gICAgICAgIC8vdGhpcy5wYWdlciA9IHsgcGFnZTogMCB9O1xuICAgICAgICB0aGlzLnBhcmFtcy51c2VyID0geyBpZDogdGhpcy5wYXJhbXMudXNlcl9pZCB8fCB0aGlzLmNvbmZpZy5jdXJyZW50LnVzZXIudXNlcl9pZCwgbmFtZTogdGhpcy5wYXJhbXMudXNlcl9uYW1lIHx8IFwiXCIgfTtcbiAgICAgICAgdGhpcy5wYXJhbXMudGVjaCA9IHsgaWQ6IHRoaXMucGFyYW1zLnRlY2hfaWQgfHwgMCwgbmFtZTogdGhpcy5wYXJhbXMudGVjaF9uYW1lIHx8IFwiXCIgfTtcbiAgICAgICAgLypsZXQgY2FjaGVuYW1lID0gYWRkcChcInRvZG9zXCIsIFwiYXNzaWduZWRfaWRcIiwgdGhpcy5wYXJhbXMudXNlci5pZCk7XG4gICAgICAgICAgIHRoaXMudG9kb1Byb3ZpZGVyLnRvZG9zJFtjYWNoZW5hbWVdLnN1YnNjcmliZShcbiAgICAgICAgICAgICAgICBkYXRhID0+IHtcbiAgICAgICAgICAgICAgICAgICAgbGV0IGNvdW50ID0gMDtcbiAgICAgICAgICAgICAgICAgICAgZm9yIChsZXQgayBpbiBkYXRhKSBmb3IgKGxldCBsIGluIGRhdGFba10uc3ViKSBpZiAoIWRhdGFba10uc3ViW2xdLmlzX2NvbXBsZXRlZCkgY291bnQrKztcbiAgICAgICAgICAgICAgICAgICAgdGhpcy51bmRvbmUgPSBjb3VudDtcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAqL1xuXG4gICAgICAgICAgICAgICAgdGhpcy5zZWxlY3RzID0ge1xuICAgICAgICAgICAgXCJjb21wbGV0ZWRcIjoge1xuICAgICAgICAgICAgICAgIG5hbWU6IFwiQ29tcGxldGVkXCIsXG4gICAgICAgICAgICAgICAgdmFsdWU6IFwiQWxsXCIsXG4gICAgICAgICAgICAgICAgc2VsZWN0ZWQ6IFwiZmFsc2VcIixcbiAgICAgICAgICAgICAgICBoaWRkZW46IGZhbHNlLFxuICAgICAgICAgICAgICAgIGl0ZW1zOiBbXG4gICAgICAgICAgICAgICAgICAgIHsgXCJuYW1lXCI6ICdBbGwnLCBcImlkXCI6IFwiZmFsc2VcIiB9LFxuICAgICAgICAgICAgICAgICAgICB7IFwibmFtZVwiOiAnQ29tcGxldGVkJywgXCJpZFwiOiBcInRydWVcIiB9LFxuICAgICAgICAgICAgICAgICAgICB7IFwibmFtZVwiOiAnTm90IENvbXBsZXRlZCcsIFwiaWRcIjogXCIgXCIgfSxcbiAgICAgICAgICAgICAgICBdXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgXCJ0ZWNoXCIgOiB7XG4gICAgICAgICAgICAgICAgbmFtZTogXCJUZWNoXCIsIFxuICAgICAgICAgICAgICAgIHZhbHVlOiBcIi0tQWxsIFwiICt0aGlzLmNvbmZpZy5jdXJyZW50Lm5hbWVzLnRlY2gucCtcIiAtLVwiLFxuICAgICAgICAgICAgICAgIGRlZmF1bHQ6IFwiRXZlcnlvbmVcIixcbiAgICAgICAgICAgICAgICBpc25ld19kaXNhYmxlZDogdHJ1ZSxcbiAgICAgICAgICAgICAgICBzZWxlY3RlZDogKHRoaXMucGFyYW1zLnRlY2ggfHwge30pLmlkIHx8IDAsXG4gICAgICAgICAgICAgICAgdXJsOiBcInRlY2huaWNpYW5zXCIsXG4gICAgICAgICAgICAgICAgaGlkZGVuOiBmYWxzZVxuICAgICAgICAgICAgfVxuICAgICAgICB9O1xuICAgICAgICB9XG5cbiAgICBzYXZlU2VsZWN0KGV2ZW50KXtcbiAgICAgICAgbGV0IG5hbWUgPSBldmVudC50eXBlO1xuICAgICAgICB0aGlzLnNlbGVjdHNbbmFtZV0uc2VsZWN0ZWQgPSBldmVudC5pZDtcbiAgICAgICAgdGhpcy5zZWxlY3RzW25hbWVdLnZhbHVlID0gZXZlbnQubmFtZTtcbiAgICAgICAgaWYgKG5hbWUgPT0gXCJjb21wbGV0ZWRcIilcbiAgICAgICAge1xuXG4gICAgICAgICAgICB0aGlzLmNvbXBsZXRlZCA9IGV2ZW50LmlkO1xuICAgICAgICB9XG4gICAgICAgIGVsc2UgaWYgKG5hbWUgPT0gXCJ0ZWNoXCIpXG4gICAgICAgIHtcbiAgICAgICAgICAgIHRoaXMuYXNzaWduZWQgPSBldmVudC5pZDtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIEFkZFRvZG8oKVxuICAgIHtcbiAgICAgICAgbGV0IG15TW9kYWwgPSBNb2RhbC5jcmVhdGUoVG9kb0NyZWF0ZVBhZ2UsIHtcImxpc3RfaWRcIjogXCJcIiB9KTtcbiAgICAgICAgdGhpcy5uYXYucHJlc2VudChteU1vZGFsKTtcbiAgICB9XG4gICAgdG9nZ2xlKCl7XG4gICAgICAgIHRoaXMudGVzdCA9ICF0aGlzLnRlc3Q7XG4gICAgICAgIGlmICh0aGlzLnRlc3Qpe1xuICAgICAgICAgICAgc2V0VGltZW91dCgoKSA9PiB7XG4gICAgICAgIGxldCB0ID0gZG9jdW1lbnQuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZShcIm9wZW4tZmlsdGVyXCIpO1xuICAgICAgICB0ID0gdFt0Lmxlbmd0aCAtIDFdO1xuICAgICAgICB0ICYmIHQuZm9jdXMoKTtcbiAgICAgICAgfSwgNTAwKTtcbiAgICAgICAgfVxuICAgIH1cblxufSIsImltcG9ydCB7UGFnZSwgQ29uZmlnLCBOYXYsIE5hdlBhcmFtcywgVmlld0NvbnRyb2xsZXJ9IGZyb20gJ2lvbmljLWFuZ3VsYXInO1xuaW1wb3J0IHtEYXRhUHJvdmlkZXJ9IGZyb20gJy4uLy4uL3Byb3ZpZGVycy9kYXRhLXByb3ZpZGVyJztcbmltcG9ydCB7TW9yZVBpcGV9IGZyb20gJy4uLy4uL3BpcGVzL3BpcGVzJztcbmltcG9ydCB7SW52b2ljZURldGFpbHNQYWdlfSBmcm9tICcuLi9pbnZvaWNlLWRldGFpbHMvaW52b2ljZS1kZXRhaWxzJztcbmltcG9ydCB7Z2V0RGF0ZVRpbWUsIGdldEN1cnJlbmN5fSBmcm9tICcuLi8uLi9kaXJlY3RpdmVzL2hlbHBlcnMnO1xuXG5AUGFnZSh7XG4gIHRlbXBsYXRlVXJsOiAnYnVpbGQvcGFnZXMvdW5pbnZvaWNlcy91bmludm9pY2VzLmh0bWwnLFxuICAgIHBpcGVzOiBbTW9yZVBpcGVdLFxufSlcbmV4cG9ydCBjbGFzcyBVbkludm9pY2VzUGFnZSB7XG5cbiAgICBMSU1JVDogbnVtYmVyID0gMTU7XG4gICAgY291bnQ6IG51bWJlcjtcbiAgICBhY2NvdW50OiBhbnk7XG4gICAgaXNfZW1wdHk6IGJvb2xlYW4gPSBmYWxzZTtcbiAgICBidXN5OiBib29sZWFuO1xuICAgIHBhcmFtczogYW55O1xuICAgIHBhZ2VyOiBhbnk7XG4gICAgaW52b2ljZXM6IEFycmF5PGFueT4gPSBbXTtcblxuICAgIGNvbnN0cnVjdG9yKHByaXZhdGUgbmF2OiBOYXYsIHByaXZhdGUgZGF0YVByb3ZpZGVyOiBEYXRhUHJvdmlkZXIsIHByaXZhdGUgY29uZmlnOiBDb25maWcsIHByaXZhdGUgbmF2UGFyYW1zOiBOYXZQYXJhbXMsIHByaXZhdGUgdmlldzogVmlld0NvbnRyb2xsZXIpIHtcbiAgICAgICAgbmF2LnN3aXBlQmFja0VuYWJsZWQgPSBmYWxzZTtcbiAgfVxuXG4gICAgb25QYWdlTG9hZGVkKCkge1xuICAgICAgICB0aGlzLnBhcmFtcyA9IHRoaXMubmF2UGFyYW1zLmRhdGEgfHwge307XG4gICAgICAgIHRoaXMucGFnZXIgPSB7IHBhZ2U6IDAsIGxpbWl0OiB0aGlzLkxJTUlUIH07XG4gICAgICAgIHRoaXMucGFyYW1zLmFjY291bnQgPSB7IGlkOiB0aGlzLnBhcmFtcy5hY2NvdW50X2lkIHx8IDAsIG5hbWU6IHRoaXMucGFyYW1zLmFjY291bnRfbmFtZSB8fCB0aGlzLmNvbmZpZy5nZXRDdXJyZW50KFwidXNlclwiKS5hY2NvdW50X25hbWUgfTtcbiAgICAgICAgaWYgKHRoaXMucGFyYW1zLmlzX2VtcHR5KVxuICAgICAgICAgICAgdGhpcy5wYXJhbXMuY291bnQgPSAwO1xuXG4gICAgICAgIGlmICh0aGlzLnBhcmFtcy5jb3VudCAhPT0gMCkge1xuICAgICAgICAgICAgdmFyIHRpbWVyID0gc2V0VGltZW91dCgoKSA9PiB7XG4gICAgICAgICAgICAgICAgdGhpcy5idXN5ID0gdHJ1ZTtcbiAgICAgICAgICAgIH0sIDUwMCk7XG5cbiAgICAgICAgICAgIHRoaXMuZ2V0SXRlbXMobnVsbCwgdGltZXIpO1xuICAgICAgICB9XG4gICAgICAgIGVsc2VcbiAgICAgICAgICAgIHRoaXMuaXNfZW1wdHkgPSB0cnVlO1xuICAgIH1cblxuICAgIG9uUGFnZVdpbGxFbnRlcigpIHtcbiAgICAgICAgaWYgKHRoaXMucGFyYW1zLmFjY291bnRfbmFtZSlcbiAgICAgICAgICAgIHRoaXMudmlldy5zZXRCYWNrQnV0dG9uVGV4dCgnJyk7XG4gICAgfVxuXG5cbiAgICBnZXRJdGVtcyhpbmZpbml0ZVNjcm9sbCwgdGltZXIpIHtcbiAgICAgICAgdGhpcy5kYXRhUHJvdmlkZXIuZ2V0SW52b2ljZXModGhpcy5wYXJhbXMuYWNjb3VudC5pZCwgZmFsc2UsIHRoaXMucGFnZXIpLnN1YnNjcmliZShcbiAgICAgICAgICAgIGRhdGEgPT4ge1xuICAgICAgICAgICAgICAgIGlmICh0aW1lcikge1xuICAgICAgICAgICAgICAgICAgICB0aGlzLmlzX2VtcHR5ID0gIWRhdGEubGVuZ3RoO1xuICAgICAgICAgICAgICAgICAgICBjbGVhclRpbWVvdXQodGltZXIpO1xuICAgICAgICAgICAgICAgICAgICB0aGlzLmJ1c3kgPSBmYWxzZTtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5pbnZvaWNlcyA9IGRhdGE7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGVsc2VcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5pbnZvaWNlcy5wdXNoKC4uLmRhdGEpO1xuICAgICAgICAgICAgICAgIGlmIChpbmZpbml0ZVNjcm9sbCkge1xuICAgICAgICAgICAgICAgICAgICBpbmZpbml0ZVNjcm9sbC5lbmFibGUoZGF0YS5sZW5ndGggPT0gdGhpcy5MSU1JVCk7XG4gICAgICAgICAgICAgICAgICAgIGluZmluaXRlU2Nyb2xsLmNvbXBsZXRlKCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHRoaXMuY291bnQgPSBkYXRhLmxlbmd0aDtcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBlcnJvciA9PiB7XG4gICAgICAgICAgICAgICAgaWYgKHRpbWVyKSB7XG4gICAgICAgICAgICAgICAgICAgIGNsZWFyVGltZW91dCh0aW1lcik7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuYnVzeSA9IGZhbHNlO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhlcnJvciB8fCAnU2VydmVyIGVycm9yJyk7XG4gICAgICAgICAgICB9XG4gICAgICAgICk7XG4gICAgfVxuXG4gICAgZG9JbmZpbml0ZShpbmZpbml0ZVNjcm9sbCkge1xuICAgICAgICBpZiAodGhpcy5pc19lbXB0eSB8fCB0aGlzLmNvdW50IDwgdGhpcy5MSU1JVCkge1xuICAgICAgICAgICAgaW5maW5pdGVTY3JvbGwuZW5hYmxlKGZhbHNlKTtcbiAgICAgICAgICAgIGluZmluaXRlU2Nyb2xsLmNvbXBsZXRlKCk7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5wYWdlci5wYWdlICs9IDE7XG4gICAgICAgIHRoaXMuZ2V0SXRlbXMoaW5maW5pdGVTY3JvbGwsIG51bGwpO1xuICAgIH1cbiAgICBcbiAgICBpdGVtVGFwcGVkKGl0ZW0pIHtcbiAgICAgICAgdGhpcy5uYXYucHVzaChJbnZvaWNlRGV0YWlsc1BhZ2UsIGl0ZW0pO1xuICAgIH1cbiAgICBcbiAgICBzZXREYXRlKGRhdGUsIHNob3dtb250aD8sIGlzdGltZT8pIHtcbiAgICAgICAgaWYgKGRhdGUpe1xuICAgICAgICB2YXIgdGltZV9vZmZzZXQgPSB0aGlzLmNvbmZpZy5nZXRDdXJyZW50KFwidGltZXpvbmVfb2Zmc2V0XCIpOyAgICAgXG4gICAgICAgIGRhdGUgPSBuZXcgRGF0ZShkYXRlLnN1YnN0cmluZygwLDIzKStcIlpcIikgfHwgbmV3IERhdGUoKTtcbiAgICAgICAgZGF0ZSA9IG5ldyBEYXRlKGRhdGUuc2V0VGltZShkYXRlLmdldFRpbWUoKSArIHRpbWVfb2Zmc2V0KjYwKjYwKjEwMDApKS50b0pTT04oKTtcbiAgICAgICAgcmV0dXJuIGdldERhdGVUaW1lKGRhdGUsIHNob3dtb250aCwgaXN0aW1lKTtcbiAgICB9XG4gICAgIHJldHVybiBudWxsO1xuICAgIH1cbiAgICBcbiAgICBnZXRDdXJyZW5jeSh2YWx1ZSkge1xuICAgICAgICByZXR1cm4gZ2V0Q3VycmVuY3kodmFsdWUpO1xuICAgIH1cbn1cbiIsImltcG9ydCB7UGlwZX0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbkBQaXBlKHtcbiAgICBuYW1lOiAnQ2FwaXRhbGl6ZSdcbn0pXG5leHBvcnQgY2xhc3MgQ2FwaXRhbGl6ZVBpcGUge1xuICAgIHRyYW5zZm9ybSh2YWx1ZSwgYXJncykge1xuICAgICAgICBpZiAodmFsdWUpIHtcbiAgICAgICAgICAgIHJldHVybiB2YWx1ZS5jaGFyQXQoMCkudG9VcHBlckNhc2UoKSArIHZhbHVlLnNsaWNlKDEpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiB2YWx1ZTtcbiAgICB9XG59IiwiaW1wb3J0IHtQaXBlfSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuQFBpcGUoe1xuICAgIG5hbWU6ICdEYXlzYWdvJ1xufSlcbmV4cG9ydCBjbGFzcyBEYXlzYWdvUGlwZSB7XG4gICAgdHJhbnNmb3JtKHZhbHVlKSB7XG4gICAgICAgIHZhbHVlID0gdmFsdWUgfHwgMDtcbiAgICAgICAgaWYgKGlzTmFOKHZhbHVlKSlcbiAgICAgICAgICAgIHZhbHVlID0gTWF0aC5yb3VuZCgobmV3IERhdGUoKS5nZXRUaW1lKCkgLSArbmV3IERhdGUodmFsdWUgKyBcIlpcIikpIC8gNjAwMDApO1xuICAgICAgICB2YXIgZGF5c0FnbzogbnVtYmVyID0gdmFsdWUgLyA2MDtcbiAgICAgICAgdmFyIHJlc3VsdCA6IHN0cmluZyA9IFwiXCI7XG4gICAgICAgICAgICAgICAgaWYgKCF2YWx1ZSB8fCB2YWx1ZSA8IDIpXG4gICAgICAgICAgICAgICAgICByZXN1bHQgPSBcIjAgZGF5cyBhZ29cIjsgXG4gICAgICAgICAgICAgICAgZWxzZVxuICAgICAgICAgICAgICAgICAgcmVzdWx0ID0gcGFyc2VJbnQoKGRheXNBZ28gLyAyNCkudG9TdHJpbmcoKSkgKyBcIiBkYXlzIGFnb1wiO1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gcmVzdWx0O1xuICAgIH0gXG59IiwiaW1wb3J0IHtQaXBlfSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuQFBpcGUoe1xuICAgIG5hbWU6ICdEYXlzb2xkJ1xufSlcbmV4cG9ydCBjbGFzcyBEYXlzb2xkUGlwZSB7XG4gICAgdHJhbnNmb3JtKHZhbHVlKSB7XG4gICAgICAgIHZhbHVlID0gdmFsdWUgfHwgMDtcbiAgICAgICAgaWYgKGlzTmFOKHZhbHVlKSlcbiAgICAgICAgICAgIHZhbHVlID0gTWF0aC5yb3VuZCgobmV3IERhdGUoKS5nZXRUaW1lKCkgLSArbmV3IERhdGUodmFsdWUgKyBcIlpcIikpIC8gNjAwMDApO1xuICAgICAgICB2YXIgZGF5c09sZDogbnVtYmVyID0gdmFsdWUgLyA2MDtcbiAgICAgICAgdmFyIHJlc3VsdCA6IHN0cmluZyA9IFwiXCI7XG5cbiAgICAgICAgICAgICAgICAgICAgLy8gY2hlY2sgdG8gc2VlIGlmIHRoZSB0aWNrZXQgaXMgbGVzcyB0aGFuIGEgZGF5IG9sZFxuICAgICAgICAgICAgICAgICAgICBpZiAoIXZhbHVlIHx8IHZhbHVlIDwgMilcbiAgICAgICAgICAgICAgICAgICAgICAgIHJlc3VsdCA9IFwiYSBtaW51dGUgYWdvXCI7IFxuICAgICAgICAgICAgICAgICAgICBlbHNlIGlmICh2YWx1ZSA8IDYwKVxuICAgICAgICAgICAgICAgICAgICAgICAgcmVzdWx0ID0gXCJhIFwiICsgdmFsdWUgKyBcIiBtaW51dGVzIGFnb1wiOyBcbiAgICAgICAgICAgICAgICAgICAgZWxzZSBpZiAodmFsdWUgPCAxMjApXG4gICAgICAgICAgICAgICAgICAgICAgICByZXN1bHQgPSBcIm9uZSBob3VyIGFnb1wiOyBcbiAgICAgICAgICAgICAgICAgICAgZWxzZSBpZihkYXlzT2xkID4gMjQpe1xuICAgICAgICAgICAgICAgICAgICAgICAgdmFyIGRheXMgPSBwYXJzZUludCgoZGF5c09sZCAvIDI0KS50b1N0cmluZygpKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJlc3VsdCA9IGRheXMgKyBcIiBkYXkocylcIjtcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhciBob3VycyA9IHBhcnNlSW50KChkYXlzT2xkIC0gZGF5cyAqIDI0KS50b1N0cmluZygpKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChob3VycyA+IDApXG4gICAgICAgICAgICAgICAgICAgICAgICAgICByZXN1bHQgKz0gXCIgXCIgKyBob3VycyArIFwiIGhvdXIocylcIjtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJlc3VsdCArPSBcIiBhZ29cIjtcbiAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJlc3VsdCA9IHBhcnNlSW50KGRheXNPbGQudG9TdHJpbmcoKSkgKyBcIiBob3VyKHMpIGFnb1wiO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiByZXN1bHQ7XG4gICAgfSBcbn0iLCJpbXBvcnQge1BpcGV9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHtvcGVuVVJMLCBGaWxlVXJsSGVscGVyfSBmcm9tICcuLi9kaXJlY3RpdmVzL2hlbHBlcnMnO1xuXG5AUGlwZSh7XG4gICAgbmFtZTogJ0ZpbGVzJ1xufSlcbmV4cG9ydCBjbGFzcyBGaWxlc1BpcGUge1xuICAgIHRyYW5zZm9ybSh2YWx1ZSwgYXJncykge1xuXG4gICAgICAgIHZhciBpc1Bob25lZ2FwID0gbG9jYWxTdG9yYWdlLmdldEl0ZW0oXCJpc1Bob25lZ2FwXCIpID09PSBcInRydWVcIjtcbiAgICAgICBcbiAgICAgICAgdmFsdWUgPSB2YWx1ZSB8fCBcIlwiO1xuICAgICAgICBcbiAgICAgICAgdmFyIGZpbGVzID0gYXJncyB8fCBbXTsgICBcbiAgICAgICAgXG4gICAgICAgIGlmICghdmFsdWUgfHwgIWZpbGVzIHx8IGZpbGVzLmxlbmd0aCA9PSAwIHx8IFxuICAgICAgICAgICAgISAofnZhbHVlLmluZGV4T2YoXCJjaWQ6XCIpIHx8IH52YWx1ZS5pbmRleE9mKFwib2xsb3dpbmcgZmlsZVwiKSkpIHJldHVybiB2YWx1ZTtcbiAgICAgICAgXG4gICAgICAgIGZpbGVzLnNvcnQoZnVuY3Rpb24oYSwgYil7XG4gICAgICAgICAgICByZXR1cm4gYi5uYW1lLmxlbmd0aCAtIGEubmFtZS5sZW5ndGg7XG4gICAgICAgIH0pO1xuICAgICAgICBcbiAgICAgICAgdmFsdWUgPSBGaWxlVXJsSGVscGVyLmFkZFVybHModmFsdWUsIGZpbGVzKTtcbiAgICAgICAgXG4gICAgICAgIHJldHVybiB2YWx1ZTtcbiAgICB9XG59IiwiaW1wb3J0IHtQaXBlfSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuY29uc3QgbWQ1SGV4ID0gcmVxdWlyZSgnbWQ1LWhleCcpO1xuXG5kZWNsYXJlIHZhciByZXF1aXJlOiBhbnk7XG5cbkBQaXBlKHtcbiAgICBuYW1lOiAnR3JhdmF0YXInXG59KVxuZXhwb3J0IGNsYXNzIEdyYXZhdGFyUGlwZSB7XG4gICAgdHJhbnNmb3JtKHZhbHVlLCBhcmdzKSB7XG4gICAgXHRsZXQgaGFzaCA9IFwiXCI7XG4gICAgICAgIGlmICh2YWx1ZSkge1xuICAgICAgICAgICAgaGFzaCA9IG1kNUhleCh2YWx1ZSk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZVxuICAgICAgICBcdHJldHVybiBcImltZy9kZWZfYXZhLnBuZ1wiO1xuICAgICAgICByZXR1cm4gYGh0dHBzOi8vc2VjdXJlLmdyYXZhdGFyLmNvbS9hdmF0YXIvJHtoYXNofT9zPTgwJmQ9bW1gO1xuICAgIH1cbn0iLCJpbXBvcnQge1BpcGV9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG5AUGlwZSh7XG4gIG5hbWU6ICdIdG1sc2FmZSdcbn0pXG5leHBvcnQgY2xhc3MgSHRtbHNhZmVQaXBlIHtcbiAgdHJhbnNmb3JtKHZhbHVlLCBhcmdzKSB7XG4gICAgdmFsdWUgPSAodmFsdWUgfHwgXCJcIikudHJpbSgpO1xuICAgIGlmICh2YWx1ZS5sZW5ndGgpXG4gICAge1xuICAgICAgICAgICAgIC8vIHRoaXMgcHJldmVudHMgYW55IG92ZXJoZWFkIGZyb20gY3JlYXRpbmcgdGhlIG9iamVjdCBlYWNoIHRpbWVcbiAgICAgICAgICAgICB2YXIgZWxlbWVudCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuXG4gICAgICAgICAgICAgIC8vIHJlZ3VsYXIgZXhwcmVzc2lvbiBtYXRjaGluZyBIVE1MIGVudGl0aWVzXG4gICAgICAgICAgICAgIHZhciBlbnRpdHkgPSAvJig/OiN4W2EtZjAtOV0rfCNbMC05XSt8W2EtejAtOV0rKTs/L2lnO1xuXG4gICAgICAgICAgICAgIC8vIGZpbmQgYW5kIHJlcGxhY2UgYWxsIHRoZSBodG1sIGVudGl0aWVzXG4gICAgICAgICAgICAgIHZhbHVlID0gdmFsdWUucmVwbGFjZShlbnRpdHksIGZ1bmN0aW9uKG0pIHtcbiAgICAgICAgICAgICAgICBlbGVtZW50LmlubmVySFRNTCA9IG07XG4gICAgICAgICAgICAgICAgcmV0dXJuIGVsZW1lbnQudGV4dENvbnRlbnQ7XG4gICAgICAgICAgICAgIH0pO1xuXG4gICAgICAgICAgICAvLyByZXNldCB0aGUgdmFsdWVcbiAgICAgICAgICAgIGVsZW1lbnQudGV4dENvbnRlbnQgPSAnJztcbiAgICAgICAgICB9XG4gICAgICAgICAgcmV0dXJuIHZhbHVlO1xuICAgICAgICB9XG4gICAgICB9IiwiaW1wb3J0IHtQaXBlfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7bGluZWJyZWFrc30gZnJvbSAnLi4vZGlyZWN0aXZlcy9oZWxwZXJzJztcblxuXG5AUGlwZSh7XG4gICAgbmFtZTogJ0xpbmVicmVha3MnXG59KVxuZXhwb3J0IGNsYXNzIExpbmVicmVha3NQaXBlIHtcbiAgICB0cmFuc2Zvcm0odmFsdWUsIGFyZ3MpIHtcbiAgICBcdHZhbHVlID0gdmFsdWUucmVwbGFjZSgvXjxwPig8YnI+KT8oXFxyKT8vLCAnJykucmVwbGFjZSgvXjxwPig8YnI+KT8oXFxuKT8vLFwiXCIpO1xuICAgICAgICByZXR1cm4gbGluZWJyZWFrcyh2YWx1ZSwgYXJncyk7XG4gICAgfVxufSIsImltcG9ydCB7UGlwZX0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbkBQaXBlKHtcbiAgICBuYW1lOiAnTW9yZSdcbn0pXG5leHBvcnQgY2xhc3MgTW9yZVBpcGUge1xuICAgIHRyYW5zZm9ybSh2YWx1ZSwgYXJncykge1xuICAgICAgICBhcmdzID0gYXJncyB8fCBbMTAwLCBcIlZWXCJdOyBcbiAgICAgICAgdmFsdWUgPSB2YWx1ZSB8fCAwO1xuICAgICAgICBsZXQgbWF4ID0gYXJnc1swXTsgXG4gICAgICAgIC8vY29uc29sZS5sb2coXCJtYXhcIiwgdmFsdWUpO1xuICAgICAgICBsZXQgdGVtcGxhdGUgPSBhcmdzWzFdIHx8IFwiVlZcIjsgXG4gICAgICAgIGlmIChtYXggPT0gOTk5ICYmIHZhbHVlID4gbWF4KXtcbiAgICAgICAgdmFsdWUgPSBcIjk5PHN1cD4rPC9zdXA+XCI7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSBpZiAodmFsdWUgPj0gbWF4KXtcbiAgICAgICAgdmFsdWUgPSAobWF4LTEpICsgXCI8c3VwPis8L3N1cD5cIjtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICBsZXQgc192YWx1ZSA9IHZhbHVlLnRvU3RyaW5nKCk7XG4gICAgICAgIGlmKH50ZW1wbGF0ZS5pbmRleE9mKFwiJFwiKSB8fCB+c192YWx1ZS5pbmRleE9mKFwiLlwiKSlcbiAgICAgICAgICAgdmFsdWUgPSB2YWx1ZS50b0ZpeGVkKHZhbHVlID4gOTkgJiYgfnNfdmFsdWUuaW5kZXhPZihcIi4wMFwiKSA/IDAgOiAyKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAofnRlbXBsYXRlLmluZGV4T2YoXCIkXCIpKVxuICAgICAgICAgICAgdGVtcGxhdGUgPSB0ZW1wbGF0ZS5yZXBsYWNlKFwiJFwiLCBsb2NhbFN0b3JhZ2UuZ2V0SXRlbShcImN1cnJlbmN5XCIpKTtcbiAgICAgICAgdmFsdWUgPSB0ZW1wbGF0ZS5yZXBsYWNlKFwiVlZcIiwgdmFsdWUpO1xuICAgICAgICByZXR1cm4gdmFsdWU7XG4gICAgfVxufSIsImV4cG9ydCAqIGZyb20gJy4vbW9yZSc7XG5leHBvcnQgKiBmcm9tICcuL2NhcGl0YWxpemUnO1xuZXhwb3J0ICogZnJvbSAnLi9saW5lYnJlYWtzJztcbmV4cG9ydCAqIGZyb20gJy4vaHRtbHNhZmUnO1xuZXhwb3J0ICogZnJvbSAnLi9ncmF2YXRhcic7XG5leHBvcnQgKiBmcm9tICcuL2RheXNvbGQnO1xuZXhwb3J0ICogZnJvbSAnLi9kYXlzYWdvJztcbmV4cG9ydCAqIGZyb20gJy4vZmlsZXMnOyIsImltcG9ydCB7SW5qZWN0YWJsZX0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQge0NvbmZpZywgRXZlbnRzfSBmcm9tICdpb25pYy1hbmd1bGFyJztcbmltcG9ydCB7SHR0cCwgSGVhZGVycywgUmVxdWVzdE9wdGlvbnMsIFJlcXVlc3R9IGZyb20gJ0Bhbmd1bGFyL2h0dHAnO1xuaW1wb3J0IHtPYnNlcnZhYmxlfSBmcm9tICdyeGpzJztcbmltcG9ydCB7QXBpU2l0ZSwgZG9udENsZWFyQ2FjaGV9IGZyb20gJy4vY29uZmlnJztcbmltcG9ydCB7YWRkcH0gZnJvbSAnLi4vZGlyZWN0aXZlcy9oZWxwZXJzJztcbmltcG9ydCB7TU9DS1N9IGZyb20gJy4vbW9ja3MnO1xuaW1wb3J0ICdyeGpzJztcblxuXG5ASW5qZWN0YWJsZSgpXG5leHBvcnQgY2xhc3MgQXBpRGF0YSB7XG4gICAgXG4vL3VzZXJLZXksIHVzZXJPcmdLZXksIHVzZXJJbnN0YW5jZUtleTogc3RyaW5nOyBcbi8vbW9jazogYm9vbGVhbiA9IGRvbnRDbGVhckNhY2hlO1xuXG4gICAgY29uc3RydWN0b3IocHJpdmF0ZSBodHRwOiBIdHRwLCBwcml2YXRlIGNvbmZpZzogQ29uZmlnLCBwcml2YXRlIGV2ZW50czogRXZlbnRzKSB7XG59XG5cbnJlcXVlc3QobWV0aG9kLCBkYXRhPywgdHlwZT8sIGhlYWRlcnM/KSB7XG4gICAgaWYgKGRvbnRDbGVhckNhY2hlKVxuICAgIHtcbiAgICAgICAgcmV0dXJuIHRoaXMubW9ja19nZXQobWV0aG9kKTtcbiAgICB9XG4gICAgLy9pZiAoIXRoaXMuY29uZmlnLmdldEN1cnJlbnQoXCJpc19vbmxpbmVcIikpXG4gICAgLy8gICAgcmV0dXJuO1xuICAgIGxldCByZXEgPSBuZXcgUmVxdWVzdCh7XG4gICAgICAgIG1ldGhvZDogdHlwZSB8fCAnR0VUJyxcbiAgICAgICAgdXJsOiBBcGlTaXRlICsgbWV0aG9kLFxuICAgICAgICBoZWFkZXJzOiBoZWFkZXJzLFxuICAgICAgICBib2R5OiBKU09OLnN0cmluZ2lmeShkYXRhKVxuICAgIH0pO1xuXG4gICAgcmV0dXJuIHRoaXMuaHR0cC5yZXF1ZXN0KHJlcSlcbiAgICAgICAgLm1hcChyZXMgPT4gcmVzLmpzb24oKSlcbiAgICAgICAgLmNhdGNoKGVycm9yID0+IHtcbiAgICAgICAgICAgIHJldHVybiB0aGlzLmhhbmRsZUVycm9yKGVycm9yKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH0pO1xufVxuXG5tb2NrX2dldChtZXRob2QpIHtcbiAgICB2YXIgYXJyID0gbnVsbDtcbiAgICB2YXIgcG9zID0gbWV0aG9kLmluZGV4T2YoJz8nKTtcbiAgICBpZiAocG9zICE9IC0xKVxuICAgICAgICBtZXRob2QgPSBtZXRob2Quc3Vic3RyaW5nKDAsIHBvcyk7XG4gICAgYXJyID0gTU9DS1NbbWV0aG9kXTtcbiAgICByZXR1cm4gT2JzZXJ2YWJsZS5jcmVhdGUob2JzZXJ2ZXIgPT4ge1xuICAgICAgICBvYnNlcnZlci5uZXh0KGFycik7XG4gICAgICAgIG9ic2VydmVyLmNvbXBsZXRlKCk7XG4gICAgfSk7XG59XG5cbiAgICBnZXQobWV0aG9kLCBkYXRhPywgdHlwZT8pIHtcbiAgICBsZXQga2V5ID0gdGhpcy5jb25maWcuZ2V0Q3VycmVudChcImtleVwiKSxcbiAgICAgICAgLy9sb2NhbFN0b3JhZ2UuZ2V0SXRlbShcInVzZXJLZXlcIiksXG4gICAgICAgIG9yZyA9IHRoaXMuY29uZmlnLmdldEN1cnJlbnQoXCJvcmdcIiksIC8vIGxvY2FsU3RvcmFnZS5nZXRJdGVtKCd1c2VyT3JnS2V5JyksXG4gICAgICAgIGluc3QgPSB0aGlzLmNvbmZpZy5nZXRDdXJyZW50KFwiaW5zdGFuY2VcIik7Ly8gbG9jYWxTdG9yYWdlLmdldEl0ZW0oJ3VzZXJJbnN0YW5jZUtleScpO1xuICAgIFxuICAgIGlmICgha2V5IHx8ICFvcmcgfHwgIWluc3QgfHwga2V5Lmxlbmd0aCAhPSAzMikge1xuICAgICAgICByZXR1cm4gdGhpcy5oYW5kbGVFcnJvcihcIjQwMzogSW52YWxpZCBvcmdhbml6YXRpb24hXCIpO1xuICAgIH1cblxuICAgIHZhciBoZWFkZXJzID0gbmV3IEhlYWRlcnMoe1xuICAgICAgICAnQWNjZXB0JzogJ2FwcGxpY2F0aW9uL2pzb24nLFxuICAgICAgICAnQ29udGVudC1UeXBlJzogJ2FwcGxpY2F0aW9uL2pzb24nLFxuICAgICAgICAnQXV0aG9yaXphdGlvbic6ICdCYXNpYyAnICsgYnRvYShgJHtvcmd9LSR7aW5zdH06JHtrZXl9YClcbiAgICB9KTtcbiAgICByZXR1cm4gdGhpcy5yZXF1ZXN0KG1ldGhvZCwgZGF0YSwgdHlwZSwgaGVhZGVycyk7XG5cbn1cblxucHJvY2Vzc0RhdGEoZGF0YSkge1xuICAgIC8vIGp1c3Qgc29tZSBnb29kICdvbCBKUyBmdW4gd2l0aCBvYmplY3RzIGFuZCBhcnJheXNcbiAgICAvLyBidWlsZCB1cCB0aGUgZGF0YSBieSBsaW5raW5nIHNwZWFrZXJzIHRvIHNlc3Npb25zXG4gICAgLy9jb25zb2xlLmxvZyhKU09OLnN0cmluZ2lmeShkYXRhKSk7XG4gICAgcmV0dXJuIGRhdGE7XG59XG5cbmdldFBhZ2VyKHVybCwgcGFnZXIpIHtcbiAgICBpZiAocGFnZXIpIHtcbiAgICAgICAgaWYgKHBhZ2VyLmxpbWl0KVxuICAgICAgICAgICAgdXJsID0gYWRkcCh1cmwsIFwibGltaXRcIiwgcGFnZXIubGltaXQpO1xuICAgICAgICBpZiAocGFnZXIucGFnZSlcbiAgICAgICAgICAgIHVybCA9IGFkZHAodXJsLCBcInBhZ2VcIiwgcGFnZXIucGFnZSk7XG4gICAgfVxuICAgIHJldHVybiB1cmw7XG59XG5cbmdldFBhZ2VkKHVybCwgcGFnZXIpIHtcbiAgICB1cmwgPSB0aGlzLmdldFBhZ2VyKHVybCwgcGFnZXIpO1xuICAgIHJldHVybiB0aGlzLmdldCh1cmwpO1xufVxuXG5oYW5kbGVFcnJvcihlcnJvcikgOiBhbnkge1xuICAgIC8qaWYgKChyZXF1ZXN0LnN0YXR1cyA9PSA0MDMgJiYgc2V0dGluZ3MudXJsICE9PSBBcGlTaXRlICsgXCJvcmdhbml6YXRpb25zXCIpIHx8IChyZXF1ZXN0LnN0YXR1cyA9PSA0MDQgJiYgc2V0dGluZ3MudXJsID09PSBBcGlTaXRlICsgXCJjb25maWdcIikpXG4gICAge1xuICAgICAgICBsb2dvdXQoc2V0dGluZ3MudXJsICE9PSBBcGlTaXRlICsgXCJsb2dpblwiLCByZXF1ZXN0LnN0YXR1c1RleHQpO1xuICAgIH0qL1xuLy9jb25zb2xlLmxvZyhlcnJvcik7XG4gICAgbGV0IG1lc3NhZ2U6IHN0cmluZyA9IFwiXCI7XG4gICAgdHJ5IHtcbiAgICAgICAgdmFyIGUgPSBKU09OLnBhcnNlKGVycm9yLl9ib2R5KTtcbiAgICAgICAgaWYgKHR5cGVvZiBlID09PSAnc3RyaW5nJylcbiAgICAgICAgICAgIG1lc3NhZ2UgPSBlO1xuICAgICAgICBlbHNlXG4gICAgICAgICAgICBtZXNzYWdlID0gKChlIHx8IHt9KS5SZXNwb25zZVN0YXR1cyB8fCB7fSkuTWVzc2FnZTtcbiAgICB9IGNhdGNoIChlKSB7XG4gICAgICAgIG1lc3NhZ2UgPSBlcnJvci5fYm9keTsgXG4gICAgICAgIGlmIChtZXNzYWdlID09IFwiW29iamVjdCBQcm9ncmVzc0V2ZW50XVwiKVxuICAgICAgICAgICAgbWVzc2FnZSA9IFwiQ2Fubm90IGNvbm5lY3QgdG8gQVBJIHNlcnZlclwiO1xuICAgIH1cbiAgICBtZXNzYWdlID0gbWVzc2FnZSB8fCBcIkVycm9yLiBQbGVhc2UgY29udGFjdCBBZG1pbmlzdHJhdG9yXCI7XG4gICAgbGV0IHVybCA9IGVycm9yLnVybCB8fCBcIlwiO1xuICAgIGxldCBzdGF0dXMgPSAoZXJyb3Iuc3RhdHVzIHx8IHt9KS50b1N0cmluZygpO1xuICAgIG1lc3NhZ2UgKz0gXCIgKFwiICsgc3RhdHVzICsgXCIpIFwiO1xuICAgIGlmIChcbiAgICAgICAgKHN0YXR1cyA9PSBcIjQwM1wiICYmICF+dXJsLmluZGV4T2YoXCJvcmdhbml6YXRpb25zXCIpKSAgfHwgfnVybC5pbmRleE9mKFwiY29uZmlnXCIpIHx8IH5tZXNzYWdlLmluZGV4T2YoXCJVc2VyIHdpdGggdG9rZW5cIikpXG4gICAgICAgIHtcbiAgICAgICAgICAgIHRoaXMuZXZlbnRzLnB1Ymxpc2goXCJsb2dpbjpmYWlsZWRcIik7XG4gICAgICAgIH1cblxuICAgIHRoaXMuZXZlbnRzLnB1Ymxpc2goXCJjb25uZWN0aW9uOmVycm9yXCIsIChtZXNzYWdlIHx8IFwiRXJyb3Igb2NjdXJlZFwiKSArIFwiIFBsZWFzZSBjb250YWN0IEFkbWluaXN0YXRvciFcIik7XG5cbiAgICByZXR1cm4gT2JzZXJ2YWJsZS50aHJvdyhuZXcgRXJyb3IobWVzc2FnZSkpO1xufVxufVxuIiwiZXhwb3J0IGxldCBpc1Bob25lZ2FwID0gZmFsc2U7XG4vL29mZmxpbmVcbmV4cG9ydCBsZXQgZG9udENsZWFyQ2FjaGUgPSBmYWxzZTtcbmV4cG9ydCBsZXQgaXNTRCA9IHRydWU7XG5leHBvcnQgbGV0IFNpdGUgPSAnc2hlcnBhZGVzay5jb20vJztcbmV4cG9ydCBsZXQgTW9iaWxlU2l0ZSA9ICdodHRwczovL20uJyArIFNpdGU7XG5leHBvcnQgbGV0IEFwcFNpdGUgPSAnaHR0cHM6Ly9hcHAuJyArIFNpdGU7XG5leHBvcnQgbGV0IEFwaVNpdGUgPSAnaHR0cHM6Ly9hcGkuJyArIFNpdGU7XG5leHBvcnQgbGV0ICB5ZWFyPVwiMjAyMFwiO1xuZXhwb3J0IGxldCAgYXBwVmVyc2lvbiA9IFwiOTZcIjtcbmV4cG9ydCBsZXQgIEFwcFRpdGxlID0gJ1NoZXJwYURlc2sgJzsiLCJpbXBvcnQge0luamVjdGFibGV9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHtIZWFkZXJzfSBmcm9tICdAYW5ndWxhci9odHRwJztcbmltcG9ydCB7T2JzZXJ2YWJsZSwgT2JzZXJ2ZXJ9IGZyb20gJ3J4anMnO1xuaW1wb3J0IHtBcGlEYXRhfSBmcm9tICcuL2FwaS1kYXRhJztcbmltcG9ydCB7YWRkcH0gZnJvbSAnLi4vZGlyZWN0aXZlcy9oZWxwZXJzJztcbmltcG9ydCAncnhqcyc7XG5cbkBJbmplY3RhYmxlKClcbmV4cG9ydCBjbGFzcyBEYXRhUHJvdmlkZXIge1xuXG4gICAgZGF0YSQ6IE9iamVjdDsgXG4gICAgcHJpdmF0ZSBfZGF0YU9ic2VydmVyOiBPYmplY3Q7IFxuICAgIF9kYXRhU3RvcmU6IE9iamVjdDtcblxuICAgIGNvbnN0cnVjdG9yKHByaXZhdGUgYXBpRGF0YTogQXBpRGF0YSkge1xuICAgICAgICB0aGlzLmRhdGEkID0ge307IFxuICAgICAgICB0aGlzLl9kYXRhT2JzZXJ2ZXIgPSB7fTtcbiAgICAgICAgdGhpcy5fZGF0YVN0b3JlID0ge307XG4gICAgfVxuICAgIFxuICAgIGNoZWNrTG9naW4odXNlcm5hbWUsIHBhc3N3b3JkKSB7XG4gICAgICAgIGlmKCF1c2VybmFtZSB8fCAhcGFzc3dvcmQpIHtcbiAgICAgICAgICAgIHJldHVybiB0aGlzLmFwaURhdGEuaGFuZGxlRXJyb3IoXCJQbGVhc2UgZW50ZXIgbG9naW4gYW5kIHBhc3N3b3JkIVwiKTtcbiAgICAgICAgfVxuXG4gICAgICAgIGxldCB1cmwgPSBcImxvZ2luXCI7XG4gICAgICAgIHZhciBoZWFkZXJzID0gbmV3IEhlYWRlcnMoe1xuICAgICAgICAgICAgJ0NvbnRlbnQtVHlwZSc6ICd0ZXh0L3BsYWluO2NoYXJzZXQ9VVRGLTgnLFxuICAgICAgICAgICAgJ0FjY2VwdCc6ICdhcHBsaWNhdGlvbi9qc29uLCB0ZXh0L2phdmFzY3JpcHQsICovKicsXG4gICAgICAgICAgICAnQXV0aG9yaXphdGlvbic6ICdCYXNpYyAnICsgYnRvYShgJHt1c2VybmFtZX06JHtwYXNzd29yZH1gKVxuICAgICAgICB9KTtcbiAgICAgICAgcmV0dXJuIHRoaXMuYXBpRGF0YS5yZXF1ZXN0KHVybCwgXG4gICAgICAgICAgICBcIlwiLFxuICAgICAgICAgICAgXCJQT1NUXCIsIGhlYWRlcnMpO1xuICAgIH1cbiAgICBcbiAgICBnZXRPcmdhbml6YXRpb25zKHRva2VuKSB7XG4gICAgICAgIGlmKCF0b2tlbiB8fCB0b2tlbi5sZW5ndGggIT0gMzIpIHtcbiAgICAgICAgICAgIHJldHVybiB0aGlzLmFwaURhdGEuaGFuZGxlRXJyb3IoXCJJbnZhbGlkIHRva2VuIVwiKTtcbiAgICAgICAgfVxuICAgICAgICBsZXQgdXJsID0gXCJvcmdhbml6YXRpb25zXCI7XG4gICAgICAgIHZhciBoZWFkZXJzID0gbmV3IEhlYWRlcnMoe1xuICAgICAgICAgICAgJ0FjY2VwdCc6ICdhcHBsaWNhdGlvbi9qc29uJyxcbiAgICAgICAgICAgICdDb250ZW50LVR5cGUnOiAnYXBwbGljYXRpb24vanNvbicsXG4gICAgICAgICAgICAnQXV0aG9yaXphdGlvbic6ICdCYXNpYyAnICsgYnRvYShgeDoke3Rva2VufWApXG4gICAgICAgIH0pO1xuICAgICAgICByZXR1cm4gdGhpcy5hcGlEYXRhLnJlcXVlc3QodXJsLCBcIiBcIiwgXCJcIiwgaGVhZGVycyk7XG4gICAgfVxuXG4gICAgcmVnaXN0ZXJPcmdhbml6YXRpb24oZGF0YSkge1xuICAgICAgICBsZXQgdXJsID0gXCJvcmdhbml6YXRpb25zXCI7XG4gICAgICAgIHZhciBoZWFkZXJzID0gbmV3IEhlYWRlcnMoe1xuICAgICAgICAgICAgJ0FjY2VwdCc6ICdhcHBsaWNhdGlvbi9qc29uJyxcbiAgICAgICAgICAgICdDb250ZW50LVR5cGUnOiAnYXBwbGljYXRpb24vanNvbicsXG4gICAgICAgIH0pO1xuICAgICAgICByZXR1cm4gdGhpcy5hcGlEYXRhLnJlcXVlc3QodXJsLCBkYXRhLCBcIlBPU1RcIiwgaGVhZGVycyk7XG4gICAgfVxuXG4gICAgZGVsZXRlRmlsZShkYXRhKSB7XG4gICAgICAgIGxldCB1cmwgPSBcImZpbGVzL1wiICsgZGF0YS5maWxlX2lkO1xuICAgICAgICByZXR1cm4gdGhpcy5hcGlEYXRhLmdldCh1cmwsIGRhdGEsIFwiREVMRVRFXCIpO1xuICAgIH1cbiAgICBcbiAgICBnZXRDb25maWcoKSB7XG4gICAgICAgIGxldCB1cmwgPSBcImNvbmZpZ1wiO1xuICAgICAgICByZXR1cm4gdGhpcy5hcGlEYXRhLmdldCh1cmwpO1xuICAgIH1cblxuICAgIGdldFByb2ZpbGUoaWQ/LCBhY2NvdW50Pykge1xuICAgICAgICBsZXQgdXJsID0gXCJwcm9maWxlXCI7XG4gICAgICAgIHVybCA9IGFkZHAodXJsLCBcImlkXCIsIGlkKTtcbiAgICAgICAgdXJsID0gYWRkcCh1cmwsIFwiYWNjb3VudFwiLCBhY2NvdW50KTtcbiAgICAgICAgcmV0dXJuIHRoaXMuYXBpRGF0YS5nZXQodXJsKTtcbiAgICB9XG5cbiB1cGRhdGVCYWRnZSgpIHtcbiAgICBpZiAod2luZG93LmNvcmRvdmEgJiYgKChjb3Jkb3ZhLnBsdWdpbnMgfHwge30pLm5vdGlmaWNhdGlvbiB8fCB7fSkuYmFkZ2Upe1xuICAgICAgICBpZiAobG9jYWxTdG9yYWdlLmJhZGdlID4gMCl7XG4gICAgICAgICAgICBjb3Jkb3ZhLnBsdWdpbnMubm90aWZpY2F0aW9uLmJhZGdlLnNldChsb2NhbFN0b3JhZ2UuYmFkZ2UpO1xuICAgICAgICB9XG4gICAgICAgIGVsc2VcbiAgICAgICAgICAgIGNvcmRvdmEucGx1Z2lucy5ub3RpZmljYXRpb24uYmFkZ2UuY2xlYXIoKTtcbiAgICB9XG59XG5cbi8vdXBkYXRlIGJhZGdlIGV2ZXJ5IDEgbWluIFxuZ2V0UXVldWVMaXN0KGxpbWl0Pykge1xuICAgIGxldCB1cmwgPSBhZGRwKFwicXVldWVzXCIsXCJzb3J0X2J5XCIsIFwidGlja2V0c19jb3VudFwiKTtcbiAgICByZXR1cm4gdGhpcy5hcGlEYXRhLmdldCh1cmwpLm1hcCgoYXJyOiBBcnJheTxhbnk+KSA9PiB7XG5cbiAgICAgICAgbGV0IGxvY2FsX2lzX1F1ZXJlcyA9IGxvY2FsU3RvcmFnZS5nZXRJdGVtKCdpc19xdWV1ZScpO1xuICAgICAgICBsZXQgaXNfcXVldWUgPSBsb2NhbF9pc19RdWVyZXMgPyBsb2NhbFN0b3JhZ2UuZ2V0SXRlbSgnaXNfcXVldWUnKS5zcGxpdChcIiwgXCIpIDogW107XG5cbiAgICAgICAgbGV0IGJhZGdlID0gMDtcblxuXG4gICAgICAgIGxldCBudCA9IGFyci5maWx0ZXIoKHZhbCkgPT4gdmFsLmZ1bGxuYW1lLnRvTG93ZXJDYXNlKCkuaW5kZXhPZihcIm5ldyB0aWNrZXRcIikgPT0gMCk7IFxuICAgICAgICBpZiAobnQgJiYgbnQubGVuZ3RoID4gMClcbiAgICAgICAgICAgIGlzX3F1ZXVlLnB1c2gobnQuaWQpO1xuXG4gICAgICAgIGlmIChpc19xdWV1ZS5sZW5ndGggPiAwKSB7XG4gICAgICAgICAgICBhcnIuZm9yRWFjaChpdGVtID0+IHtcbiAgICAgICAgICAgICAgICBpZiAoaXRlbS5pZCA9PSBpc19xdWV1ZVswXSB8fCBpdGVtLmlkID09IGlzX3F1ZXVlWzFdIHx8IGl0ZW0uaWQgPT0gaXNfcXVldWVbMl0gfHwgaXRlbS5pZCA9PSBpc19xdWV1ZVszXSkge1xuICAgICAgICAgICAgICAgICAgICBiYWRnZSArPSBpdGVtLnRpY2tldHNfY291bnQ7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSk7ICBcbiAgICAgICAgfVxuICAgICAgICBsb2NhbFN0b3JhZ2UuYmFkZ2UgPSBiYWRnZTtcblxuICAgICAgICB0aGlzLnVwZGF0ZUJhZGdlKCk7XG5cbiAgICAgICAgaWYgKGFyciAmJiBsaW1pdClcbiAgICAgICAge1xuICAgICAgICAgICAgYXJyID0gYXJyLmZpbHRlcigodmFsKSA9PiB2YWwudGlja2V0c19jb3VudCA+IDApLnNsaWNlKDAsIGxpbWl0KTsgXG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGFycjtcbiAgICB9KTtcbn1cblxuZ2V0SW52b2ljZXMoYWNjb3VudF9pZCwgc3RhdHVzLCBwYWdlcikge1xuICAgIGxldCB1cmwgPSBhZGRwKFwiaW52b2ljZXNcIixcImFjY291bnRcIiwgYWNjb3VudF9pZCk7XG4gICAgaWYgKHN0YXR1cyA9PT0gZmFsc2UpXG4gICAgICAgIHVybCA9IGFkZHAodXJsLCBcInN0YXR1c1wiLCBcInVuYmlsbGVkXCIpO1xuICAgIHJldHVybiB0aGlzLmFwaURhdGEuZ2V0UGFnZWQodXJsLCBwYWdlcik7XG59XG5cbmdldEludm9pY2UoaWQsIGFjY291bnRfaWQsIGNvbnRyYWN0X2lkLCBzdGFydF9kYXRlPywgZW5kX2RhdGU/LCBpc19kZXRhaWxlZD8pIHtcbiAgICBsZXQgdXJsID0gXCJpbnZvaWNlc1wiO1xuICAgIGxldCBkYXRhID0ge307XG4gICAgaWYgKCFpZCl7XG4gICAgICAgIHVybCA9IGFkZHAodXJsLCBcInN0YXR1c1wiLCBcInVuYmlsbGVkXCIpO1xuICAgICAgICB1cmwgPSBhZGRwKHVybCwgXCJhY2NvdW50XCIsIGFjY291bnRfaWQpO1xuICAgICAgICB1cmwgPSBhZGRwKHVybCwgXCJjb250cmFjdF9pZFwiLCBjb250cmFjdF9pZCk7XG4gICAgICAgIHVybCA9IGFkZHAodXJsLCBcInN0YXJ0X2RhdGVcIiwgc3RhcnRfZGF0ZSk7XG4gICAgICAgIHVybCA9IGFkZHAodXJsLCBcImVuZF9kYXRlXCIsIGVuZF9kYXRlKTtcbiAgICAgICAgdXJsID0gYWRkcCh1cmwsIFwiaXNfZGV0YWlsZWRcIiwgaXNfZGV0YWlsZWQpO1xuICAgIH1cbiAgICBlbHNlIFxuICAgIHtcbiAgICAgICAgdXJsICs9IFwiL1wiICsgaWQ7XG4gICAgICAgIHVybCA9IGFkZHAodXJsLCBcImFjdGlvblwiLCBcInNlbmRFbWFpbFwiKTtcbiAgICB9XG4gICAgcmV0dXJuIHRoaXMuYXBpRGF0YS5nZXQodXJsLCBkYXRhKTtcbn1cblxuZ2V0RXhwZW5zZXMoYWNjb3VudF9pZCwgcGFnZXIpIHtcbiAgICBsZXQgdXJsID0gYWRkcChcImV4cGVuc2VzXCIsIFwiYWNjb3VudFwiLCBhY2NvdW50X2lkKTtcbiAgICByZXR1cm4gdGhpcy5hcGlEYXRhLmdldFBhZ2VkKHVybCwgcGFnZXIpO1xufVxuXG5nZXRDb250cmFjdHMocGFnZXIsaXNfZm9yX3RpbWVsb2dzPyxpZD8pIHtcbiAgICBsZXQgdXJsID0gYGNvbnRyYWN0c2A7XG4gICAgaWYgKGlkKXtcbiAgICAgICAgdXJsID0gYGNvbnRyYWN0cy8ke2lkfWA7XG4gICAgfVxuICAgIGVsc2UgaWYgKCFpc19mb3JfdGltZWxvZ3Mpe1xuICAgICAgICB1cmwgPSBgY29udHJhY3RzP2Zvcl90aW1lX2xvZ3M9ZmFsc2VgO1xuICAgIH1cbiAgICByZXR1cm4gdGhpcy5hcGlEYXRhLmdldFBhZ2VkKHVybCwgcGFnZXIpO1xufVxuXG5nZXRQcmVwYWlkX3BhY2tzKGFjY291bnRfaWQsIHBhZ2VyKSB7XG4gICAgbGV0IHVybCA9IGFkZHAoXCJwcmVwYWlkX3BhY2tzXCIsIFwiYWNjb3VudF9pZFwiLCBhY2NvdW50X2lkKTtcbiAgICByZXR1cm4gdGhpcy5hcGlEYXRhLmdldFBhZ2VkKHVybCwgcGFnZXIpO1xufVxuXG5nZXRQcmlvcml0aWVzKCkge1xuICAgIHJldHVybiB0aGlzLmFwaURhdGEuZ2V0KFwicHJpb3JpdGllc1wiKTtcbn1cblxuZ2V0TG9jYXRpb25MaXN0KHBhZ2VyLCBpc19vcGVuPykge1xuICAgIGxldCB1cmwgPSBcImxvY2F0aW9uc1wiO1xuICAgIGlmIChpc19vcGVuKSBcbiAgICAgICAgdXJsID0gYWRkcCh1cmwsIFwiaXNfb3Blbl90aWNrZXRzXCIsIFwidHJ1ZVwiKTtcbiAgICByZXR1cm4gdGhpcy5hcGlEYXRhLmdldFBhZ2VkKHVybCwgcGFnZXIpO1xufSBcblxuZ2V0QWNjb3VudExpc3QoaXNfZGFzaGJvYXJkLCBwYWdlciwgaXNfbm9fc3RhdD8sIGlzX29wZW4/KSB7XG4gICAgbGV0IHVybCA9IFwiYWNjb3VudHNcIjtcbiAgICBpZiAoaXNfbm9fc3RhdCkgXG4gICAgICAgIHVybCA9IGFkZHAodXJsLCBcImlzX3dpdGhfc3RhdGlzdGljc1wiLCBcImZhbHNlXCIpO1xuICAgIGlmIChpc19vcGVuKSBcbiAgICAgICAgdXJsID0gYWRkcCh1cmwsIFwiaXNfb3Blbl90aWNrZXRzXCIsIGlzX2Rhc2hib2FyZCA/IFwiMVwiIDogXCJ0cnVlXCIpO1xuICAgIHJldHVybiB0aGlzLmFwaURhdGEuZ2V0UGFnZWQodXJsLCBwYWdlcik7XG59ICAgXG5cbmdldFRlY2huaWNpYW5zTGlzdChwYWdlciwgaXNfc3RhdD8sIGlzX29wZW4/KSB7XG4gICAgbGV0IHVybCA9IFwidGVjaG5pY2lhbnNcIjtcbiAgICBpZiAoaXNfc3RhdCkgXG4gICAgICAgIHVybCA9IGFkZHAodXJsLCBcImlzX3dpdGhfc3RhdGlzdGljc1wiLCBcInRydWVcIik7XG4gICAgaWYgKGlzX29wZW4pIFxuICAgICAgICB1cmwgPSBhZGRwKHVybCwgXCJpc19vcGVuX3RpY2tldHNcIiwgXCJ0cnVlXCIpO1xuICAgIHJldHVybiB0aGlzLmFwaURhdGEuZ2V0UGFnZWQodXJsLCBwYWdlcik7ICAgIFxufSAgIFxuXG5nZXRBY2NvdW50RGV0YWlscyhpZCxpc19ub19zdGF0Pykge1xuICAgIGxldCB1cmwgPSBgYWNjb3VudHMvJHtpZH1gO1xuICAgIGlmIChpc19ub19zdGF0KSBcbiAgICAgICAgdXJsID0gYWRkcCh1cmwsIFwiaXNfd2l0aF9zdGF0aXN0aWNzXCIsIFwiZmFsc2VcIik7XG4gICAgcmV0dXJuIHRoaXMuYXBpRGF0YS5nZXQodXJsKTtcbn1cbmdldExvY2F0aW9uRGV0YWlscyhpZCxpc19ub19zdGF0Pykge1xuICAgIGxldCB1cmwgPSBgbG9jYXRpb25zLyR7aWR9YDtcbiAgICBpZiAoaXNfbm9fc3RhdCkgXG4gICAgICAgIHVybCA9IGFkZHAodXJsLCBcImlzX3dpdGhfc3RhdGlzdGljc1wiLCBcImZhbHNlXCIpO1xuICAgIHJldHVybiB0aGlzLmFwaURhdGEuZ2V0KHVybCk7XG59XG5cbiAgICBhZGRBY2NvdW50Tm90ZShpZCwgbm90ZSkge1xuICAgICAgICBsZXQgdXJsID0gYGFjY291bnRzLyR7aWR9YDtcbiAgICAgICAgbGV0IGRhdGEgPSB7XG4gICAgICAgICAgICBcIm5vdGVcIjogbm90ZSxcbiAgICAgICAgfTtcbiAgICAgICAgcmV0dXJuIHRoaXMuYXBpRGF0YS5nZXQodXJsLCBkYXRhLCBcIlBVVFwiKTtcbiAgICB9XG5cblxuYWRkVXNlcihlbWFpbCwgZmlyc3RuYW1lLCBsYXN0bmFtZSwgcm9sZSkge1xuICAgIGxldCB1cmwgPSBcInVzZXJzXCI7XG4gICAgbGV0IGRhdGEgPSB7XG4gICAgICAgIFwiTGFzdG5hbWVcIjogbGFzdG5hbWUsXG4gICAgICAgIFwiRmlyc3RuYW1lXCI6IGZpcnN0bmFtZSxcbiAgICAgICAgXCJlbWFpbFwiOiBlbWFpbCxcbiAgICAgICAgXCJyb2xlXCI6IHJvbGVcbn07XG5yZXR1cm4gdGhpcy5hcGlEYXRhLmdldCh1cmwsIGRhdGEsIFwiUE9TVFwiKTtcbn1cblxubG9naW5Ta3lwZShkYXRhKSB7XG4gICAgbGV0IHVybCA9IFwic2t5cGUvbG9naW5cIjtcbnJldHVybiB0aGlzLmFwaURhdGEuZ2V0KHVybCwgZGF0YSwgXCJQT1NUXCIpO1xufVxuXG59XG4iLCJleHBvcnQgY29uc3QgTU9DS1MgPSBcbntcbn07IiwiZXhwb3J0ICogZnJvbSAnLi9hcGktZGF0YSc7XG5leHBvcnQgKiBmcm9tICcuL2RhdGEtcHJvdmlkZXInO1xuZXhwb3J0ICogZnJvbSAnLi90aWNrZXQtcHJvdmlkZXInO1xuZXhwb3J0ICogZnJvbSAnLi90aW1lLXByb3ZpZGVyJztcbmV4cG9ydCAqIGZyb20gJy4vdG9kby1wcm92aWRlcic7IiwiaW1wb3J0IHtJbmplY3RhYmxlfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7Q29uZmlnLCBFdmVudHN9IGZyb20gJ2lvbmljLWFuZ3VsYXInO1xuaW1wb3J0IHtkb250Q2xlYXJDYWNoZX0gZnJvbSAnLi9jb25maWcnO1xuaW1wb3J0IHtIZWFkZXJzLCBIdHRwfSBmcm9tICdAYW5ndWxhci9odHRwJztcbmltcG9ydCB7T2JzZXJ2YWJsZSwgT2JzZXJ2ZXJ9IGZyb20gJ3J4anMnO1xuaW1wb3J0IHtBcGlEYXRhfSBmcm9tICcuL2FwaS1kYXRhJztcbmltcG9ydCB7TU9DS1N9IGZyb20gJy4vbW9ja3MnO1xuaW1wb3J0IHthZGRwfSBmcm9tICcuLi9kaXJlY3RpdmVzL2hlbHBlcnMnO1xuaW1wb3J0ICdyeGpzJztcblxuQEluamVjdGFibGUoKVxuZXhwb3J0IGNsYXNzIFRpY2tldFByb3ZpZGVyIHtcblxuICAgIFVSTDogc3RyaW5nID0gXCJ0aWNrZXRzXCI7XG4gICAgdGlja2V0cyQ6IE9iamVjdDsgLy9BcnJheTxPYnNlcnZhYmxlPE9iamVjdFtdPj47XG4gICAgcHJpdmF0ZSBfdGlja2V0c09ic2VydmVyOiBPYmplY3Q7IC8vQXJyYXk8T2JzZXJ2ZXI8T2JqZWN0W10+PjtcbiAgICBfZGF0YVN0b3JlOiBhbnk7XG5cbiAgICBjb25zdHJ1Y3Rvcihwcml2YXRlIGFwaURhdGE6IEFwaURhdGEsIHByaXZhdGUgY29uZmlnOiBDb25maWcsIHByaXZhdGUgZXZlbnRzOiBFdmVudHMpIHtcbiAgICAgICAgdGhpcy50aWNrZXRzJCA9IHt9OyAvL25ldyBPYnNlcnZhYmxlKG9ic2VydmVyID0+IHRoaXMuX3RpY2tldHNPYnNlcnZlciA9IG9ic2VydmVyKS5zaGFyZSgpO1xuICAgICAgICB0aGlzLl90aWNrZXRzT2JzZXJ2ZXIgPSB7fTtcbiAgICAgICAgdGhpcy5fZGF0YVN0b3JlID0ge1xuICAgICAgICAgICAgYWxsOiBbXSxcbiAgICAgICAgICAgIGFsdDogW10sXG4gICAgICAgICAgICB0ZWNoOiBbXSxcbiAgICAgICAgICAgIHVzZXI6IFtdXG4gICAgICAgIH07XG4gICAgIH1cblxuICAgIGdldFRpY2tldHNMaXN0KHRhYiwgaWQsIGxvY2F0aW9uLCBwYWdlcikge1xuICAgICAgICAvL1widXNlclwiLFwidGVjaFwiLFwiYWx0XCIsXCJhbGxcIlxuICAgICAgICBpZCA9IGlkIHx8IFwiXCI7XG4gICAgICAgIGxvY2F0aW9uID0gbG9jYXRpb24gfHwgXCJcIjtcbiAgICAgICAgbGV0IHVybCA9IFwiXCI7XG4gICAgICAgIHN3aXRjaCAodGFiLnRvU3RyaW5nKCkpIHtcbiAgICAgICAgICAgIGNhc2UgXCJ0ZWNoXCI6XG4gICAgICAgICAgICB1cmwgPSBgJHt0aGlzLlVSTH0/c3RhdHVzPW9wZW4sb25ob2xkJnJvbGU9dGVjaGA7XG4gICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIGNhc2UgXCJhbGxcIjpcbiAgICAgICAgICAgIHVybCA9IGAke3RoaXMuVVJMfT9zdGF0dXM9YWxsb3BlbiZxdWVyeT1hbGxgO1xuICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICBjYXNlIFwiYWx0XCI6XG4gICAgICAgICAgICB1cmwgPSBgJHt0aGlzLlVSTH0/c3RhdHVzPW9wZW4sb25ob2xkJnJvbGU9YWx0X3RlY2hgO1xuICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICBjYXNlIFwib3BlblwiOlxuICAgICAgICAgICAgdXJsID0gYCR7dGhpcy5VUkx9P3N0YXR1cz1vcGVuLG9uaG9sZCZhY2NvdW50PSR7aWR9JmxvY2F0aW9uPSR7bG9jYXRpb259YDtcbiAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgY2FzZSBcImNsb3NlZFwiOlxuICAgICAgICAgICAgdXJsID0gYCR7dGhpcy5VUkx9P3N0YXR1cz1jbG9zZWQmYWNjb3VudD0ke2lkfSZsb2NhdGlvbj0ke2xvY2F0aW9ufWA7XG4gICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIGNhc2UgXCJjbG9zZWQtdGVjaFwiOlxuICAgICAgICAgICAgdXJsID0gYCR7dGhpcy5VUkx9P3N0YXR1cz1jbG9zZWQmdGVjaD0ke2lkfSZyb2xlPXRlY2hgO1xuICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICBjYXNlICdxdWV1ZSc6XG4gICAgICAgICAgICB1cmwgPSBgcXVldWVzLyR7aWR9YDtcbiAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgICAgICAvL2Nhc2UgXCJ1c2VyXCI6XG4gICAgICAgICAgICAgICAgdXJsID0gYCR7dGhpcy5VUkx9P3N0YXR1cz1vcGVuLG9uaG9sZCZyb2xlPXVzZXJgO1xuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgLy9jb25zb2xlLmxvZyhcInBhZ2VyXCIsIHBhZ2VyKTtcbiAgICAgICAgICAgIHBhZ2VyLmxpbWl0ID0gcGFnZXIubGltaXQgfHwgMjU7XG4gICAgICAgICAgICBwYWdlci5wYWdlID0gcGFnZXIucGFnZSB8fCAwO1xuICAgICAgICAgICAgdGFiICs9IGlkIHx8IFwiXCI7XG4gICAgICAgICAgICB0YWIgKz0gbG9jYXRpb24gfHwgXCJcIjtcbiAgICAgICAgICAgIHRoaXMuX2RhdGFTdG9yZVt0YWJdID0gdGhpcy5fZGF0YVN0b3JlW3RhYl0gfHwgW107XG4gICAgICAgICAgICBpZiAoZG9udENsZWFyQ2FjaGUpe1xuICAgICAgICAgICAgICAgIHRoaXMudGlja2V0cyRbdGFiXSA9IG5ldyBPYnNlcnZhYmxlKG9ic2VydmVyID0+IHRoaXMuX3RpY2tldHNPYnNlcnZlclt0YWJdID0gb2JzZXJ2ZXIpLnNoYXJlKCk7XG4gICAgICAgICAgICAgICAgdGhpcy5fZGF0YVN0b3JlW3RhYl0gPSBNT0NLU1tcInRpY2tldHNcIl07XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBsZXQgY2FjaGVsZW4gPSB0aGlzLl9kYXRhU3RvcmVbdGFiXS5sZW5ndGg7XG4gICAgICAgICAgICBpZiAocGFnZXIucGFnZSA9PSAwKXtcbiAgICAgICAgICAgICAgICAvL3BhZ2VyLmxpbWl0ID0gY2FjaGVsZW4gfHwgcGFnZXIubGltaXQ7XG4gICAgICAgICAgICAgICAgICAgIGlmIChjYWNoZWxlbil7XG4gICAgICAgICAgICAgICAgICAgICAgICBzZXRUaW1lb3V0KCgpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAodGhpcy5fdGlja2V0c09ic2VydmVyW3RhYl0pXG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLl90aWNrZXRzT2JzZXJ2ZXJbdGFiXS5uZXh0KHRoaXMuX2RhdGFTdG9yZVt0YWJdIHx8IFtdKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH0sIDApO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIGVsc2VcbiAgICAgICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy50aWNrZXRzJFt0YWJdID0gbmV3IE9ic2VydmFibGUob2JzZXJ2ZXIgPT4gdGhpcy5fdGlja2V0c09ic2VydmVyW3RhYl0gPSBvYnNlcnZlcikuc2hhcmUoKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgdGhpcy5hcGlEYXRhLmdldFBhZ2VkKHVybCwgcGFnZXIpLnN1YnNjcmliZShkYXRhID0+IHtcbiAgICAgICAgICAgICAgICBpZiAocGFnZXIucGFnZSA+IDAgJiYgY2FjaGVsZW4gPiAwKVxuICAgICAgICAgICAgICAgICAgICB0aGlzLl9kYXRhU3RvcmVbdGFiXS5wdXNoKC4uLmRhdGEpO1xuICAgICAgICAgICAgICAgIGVsc2VcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5fZGF0YVN0b3JlW3RhYl0gPSBkYXRhO1xuICAgICAgICAgICAgICAgIGlmICh0aGlzLl90aWNrZXRzT2JzZXJ2ZXJbdGFiXSlcbiAgICAgICAgICAgICAgICB0aGlzLl90aWNrZXRzT2JzZXJ2ZXJbdGFiXS5uZXh0KHRoaXMuX2RhdGFTdG9yZVt0YWJdKTtcbiAgICAgICAgICAgICAgICAvL2lmIChkYXRhLmxlbmd0aCA8IHBhZ2VyLmxpbWl0KVxuICAgICAgICAgICAgICAgIC8vIGFkZCBmbGFnIHRoYXQgZGF0YSBjb21wbGV0ZWRcbiAgICAgICAgICAgIH0sIGVycm9yID0+IHRoaXMuYXBpRGF0YS5oYW5kbGVFcnJvcignQ291bGQgbm90IGxvYWQgdGlja2V0cy4nKSk7XG4gICAgICAgICAgICByZXR1cm4gY2FjaGVsZW47XG4gICAgICAgIH1cblxuXG4gICAgICAgIGdldFRpY2tldERldGFpbHMoa2V5KSB7XG4gICAgICAgICAgICBsZXQgdXJsID0gYCR7dGhpcy5VUkx9LyR7a2V5fWA7XG4gICAgICAgICAgICByZXR1cm4gdGhpcy5hcGlEYXRhLmdldCh1cmwpO1xuICAgICAgICB9XG5cbiAgICAgICAgZ2V0VXNlclByb2ZpbGUodXNlcl9pZCkge1xuICAgICAgICAgICAgbGV0IHVybCA9IGBwcm9maWxlLyR7dXNlcl9pZH1gO1xuICAgICAgICAgICAgcmV0dXJuIHRoaXMuYXBpRGF0YS5nZXQodXJsKTtcbiAgICAgICAgfSAgICAgICAgXG5cbiAgICAgICAgZ2V0VGlja2V0c0NvdW50cygpIHtcbiAgICAgICAgICAgIGxldCB1cmwgPSBgJHt0aGlzLlVSTH0vY291bnRzYDtcbiAgICAgICAgICAgIGlmICghdGhpcy5fZGF0YVN0b3JlW3VybF0pIHtcbiAgICAgICAgICAgICAgICB0aGlzLl9kYXRhU3RvcmVbdXJsXSA9IFtdO1xuICAgICAgICAgICAgICAgIHRoaXMudGlja2V0cyRbdXJsXSA9IG5ldyBPYnNlcnZhYmxlKG9ic2VydmVyID0+IHsgdGhpcy5fdGlja2V0c09ic2VydmVyW3VybF0gPSBvYnNlcnZlcjsgfSkuc2hhcmUoKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgIGlmICh0aGlzLl9kYXRhU3RvcmVbdXJsXS5vcGVuX2FsbCA+PSAwKSB7XG4gICAgICAgICAgICAgICAgICAgIHNldFRpbWVvdXQoKCkgPT4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5fdGlja2V0c09ic2VydmVyW3VybF0ubmV4dCh0aGlzLl9kYXRhU3RvcmVbdXJsXSB8fCBbXSk7XG4gICAgICAgICAgICAgICAgICAgIH0sIDApO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHRoaXMuYXBpRGF0YS5nZXQodXJsKS5zdWJzY3JpYmUoZGF0YSA9PiB7XG4gICAgICAgICAgICAgICAgdGhpcy5fZGF0YVN0b3JlW3VybF0gPSBkYXRhO1xuICAgICAgICAgICAgICAgIHRoaXMuX3RpY2tldHNPYnNlcnZlclt1cmxdLm5leHQodGhpcy5fZGF0YVN0b3JlW3VybF0pO1xuICAgICAgICAgICAgfSwgZXJyb3IgPT4gY29uc29sZS5sb2coJ0NvdWxkIG5vdCBsb2FkIHRpY2tldHMuJykpO1xuICAgICAgICB9XG5cbiAgICAgICAgYWRkVGlja2V0KGRhdGEpIHtcbiAgICAgICAgICAgIGRhdGEuc3RhdHVzID0gIFwib3BlblwiO1xuICAgICAgICAgICAgcmV0dXJuIHRoaXMuYXBpRGF0YS5nZXQodGhpcy5VUkwsIGRhdGEsIFwiUE9TVFwiKTtcbiAgICAgICAgfVxuXG4gICAgICAgIGNsb3NlT3BlblRpY2tldChpZCwgZGF0YSkge1xuICAgICAgICAgICAgbGV0IHVybCA9IGAke3RoaXMuVVJMfS8ke2lkfWA7XG4gICAgICAgICAgICByZXR1cm4gdGhpcy5hcGlEYXRhLmdldCh1cmwsIGRhdGEsIFwiUFVUXCIpO1xuICAgICAgICB9XG5cbiAgICAgICAgZ2V0Q29udHJhY3RvcihhY2NvdW50KSB7XG4gICAgICAgICAgICBsZXQgdXJsID0gXCJ1c2Vyc1wiO1xuICAgICAgICAgICAgdXJsID0gYWRkcCh1cmwsIFwicm9sZVwiLCBcImNvbnRyYWN0b3JcIik7XG4gICAgICAgICAgICB1cmwgPSBhZGRwKHVybCwgXCJhY2NvdW50XCIsIGFjY291bnQpO1xuICAgICAgICAgICAgcmV0dXJuIHRoaXMuYXBpRGF0YS5nZXQodXJsKTtcbiAgICAgICAgfVxuXG4gICAgICAgIGdldENsYXNzZXMoKSB7XG4gICAgICAgICAgICBsZXQgdXJsID0gXCJjbGFzc2VzXCI7XG4gICAgICAgICAgICB1cmwgPSBhZGRwKHVybCwgXCJpc19mbGF0X2xpc3RcIiwgXCJ0cnVlXCIpO1xuICAgICAgICAgICAgcmV0dXJuIHRoaXMuYXBpRGF0YS5nZXQodXJsKTtcbiAgICAgICAgfSAgICAgXG5cbiAgICAgICAgZXNjYWxhdGVUaWNrZXQoaWQsIGlzX2VzYykge1xuICAgICAgICBsZXQgdXJsID0gYCR7dGhpcy5VUkx9LyR7aWR9YDtcbiAgICAgICAgbGV0IGRhdGEgPSB7XG4gICAgICAgICAgICAgICAgXCJhY3Rpb25cIjogaXNfZXNjID8gXCJlc2NhbGF0ZVwiIDogXCJkZWVzY2FsYXRlXCJcbiAgICAgICAgICAgIH07XG4gICAgICAgICAgICByZXR1cm4gdGhpcy5hcGlEYXRhLmdldCh1cmwsIGRhdGEsIFwiUFVUXCIpO1xuICAgICAgICB9XG5cbiAgICAgICAgYWRkVGlja2V0UG9zdChpZCwgbm90ZSwgZmlsZXM/LCB3YWl0aW5nX3Jlc3BvbnNlPywgaXNfdGVjaHNfb25seT8pIHtcbiAgICAgICAgICAgIGxldCB1cmwgPSBgJHt0aGlzLlVSTH0vJHtpZH1gO1xuICAgICAgICAgICAgbGV0IGRhdGEgPSB7XG4gICAgICAgICAgICAgICAgXCJhY3Rpb25cIjogXCJyZXNwb25zZVwiLFxuICAgICAgICAgICAgICAgIFwibm90ZV90ZXh0XCI6IG5vdGUsXG4gICAgICAgICAgICAgICAgXCJmaWxlc1wiIDogZmlsZXMgfHwgW10sXG4gICAgICAgICAgICAgICAgXCJpc193YWl0aW5nX29uX3Jlc3BvbnNlXCIgOiB3YWl0aW5nX3Jlc3BvbnNlLFxuICAgICAgICAgICAgICAgIFwiaXNfdGVjaF9vbmx5XCIgOiBpc190ZWNoc19vbmx5LFxuICAgICAgICAgICAgfTtcbiAgICAgICAgICAgIHJldHVybiB0aGlzLmFwaURhdGEuZ2V0KHVybCwgZGF0YSwgXCJQT1NUXCIpO1xuICAgICAgICB9XG5cbiAgICAgICAgYWRkVGlja2V0V29ya3BhZChpZCwgd29ya3BhZCkge1xuICAgICAgICAgICAgbGV0IHVybCA9IGAke3RoaXMuVVJMfS8ke2lkfWA7XG4gICAgICAgICAgICBsZXQgZGF0YSA9IHtcbiAgICAgICAgICAgICAgICBcImFjdGlvblwiOiBcIndvcmtwYWRcIixcbiAgICAgICAgICAgICAgICBcIndvcmtwYWRcIjogd29ya3BhZCxcbiAgICAgICAgICAgIH07XG4gICAgICAgICAgICByZXR1cm4gdGhpcy5hcGlEYXRhLmdldCh1cmwsIGRhdGEsIFwiUE9TVFwiKTtcbiAgICAgICAgfVxuICAgICAgICBhZGRUaWNrZXRTdWJqZWN0KGlkLCBzdWJqZWN0LCBuZXh0X3N0ZXApIHtcbiAgICAgICAgICAgIGxldCB1cmwgPSBgJHt0aGlzLlVSTH0vJHtpZH1gO1xuICAgICAgICAgICAgbGV0IGRhdGEgPSB7XG4gICAgICAgICAgICAgICAgXCJhY3Rpb25cIjogXCJzdWJqZWN0XCIsXG4gICAgICAgICAgICAgICAgXCJzdWJqZWN0XCI6IHN1YmplY3QsXG4gICAgICAgICAgICAgICAgXCJuZXh0X3N0ZXBcIjogbmV4dF9zdGVwLFxuICAgICAgICAgICAgfTtcbiAgICAgICAgICAgIHJldHVybiB0aGlzLmFwaURhdGEuZ2V0KHVybCwgZGF0YSwgXCJQT1NUXCIpO1xuICAgICAgICB9XG5cbiAgICAgICAgdHJhbnNmZXJVc2VyVGVjaChpZCwgZGF0YSkge1xuICAgICAgICAgICAgbGV0IHVybCA9IGAke3RoaXMuVVJMfS8ke2lkfWA7XG4gICAgICAgICAgICByZXR1cm4gdGhpcy5hcGlEYXRhLmdldCh1cmwsIGRhdGEsIFwiUE9TVFwiKTtcbiAgICAgICAgfVxuXG4gICAgICAgIGdldEN1c3RvbWZpZWxkcyhjbGFzc19pZCwgcGFnZXIpIHtcbiAgICAgICAgICAgIGxldCB1cmwgPSBhZGRwKFwiY3VzdG9tZmllbGRzXCIsIFwiY2xhc3NfaWRcIiwgY2xhc3NfaWQpO1xuICAgICAgICAgICAgcmV0dXJuIHRoaXMuYXBpRGF0YS5nZXRQYWdlZCh1cmwsIHBhZ2VyKTtcbiAgICAgICAgfVxuXG4gICAgICAgIGFkZFRpY2tldE5vdGUoaWQsIG5vdGUpIHtcbiAgICAgICAgICAgIGxldCB1cmwgPSBgJHt0aGlzLlVSTH0vJHtpZH1gO1xuICAgICAgICAgICAgbGV0IGRhdGEgPSB7XG4gICAgICAgICAgICAgICAgXCJhY3Rpb25cIjogXCJub3RlXCIsXG4gICAgICAgICAgICAgICAgXCJub3RlXCI6IG5vdGUsXG4gICAgICAgICAgICB9O1xuICAgICAgICAgICAgcmV0dXJuIHRoaXMuYXBpRGF0YS5nZXQodXJsLCBkYXRhLCBcIlBPU1RcIik7XG4gICAgICAgIH1cbiAgfVxuXG4vKlxuZXhwb3J0IGludGVyZmFjZSBUb2RvIHtcbiAgICBpZDogbnVtYmVyO1xuICAgIGNyZWF0ZWRBdDogbnVtYmVyO1xuICAgIHZhbHVlOiBzdHJpbmc7XG59XG5cbkBJbmplY3RhYmxlKClcbmV4cG9ydCBjbGFzcyBUb2RvU2VydmljZSB7XG4gICAgdG9kb3MkOiBPYnNlcnZhYmxlPFRvZG9bXT47XG4gICAgcHJpdmF0ZSBfYmFzZVVybDogc3RyaW5nO1xuICAgIHByaXZhdGUgX3RvZG9zT2JzZXJ2ZXI6IE9ic2VydmVyPFRvZG9bXT47XG4gICAgcHJpdmF0ZSBfZGF0YVN0b3JlOiB7XG4gICAgICAgIHRvZG9zOiBUb2RvW11cbiAgICB9O1xuXG4gICAgY29uc3RydWN0b3IocHJpdmF0ZSBfaHR0cDogSHR0cCkge1xuICAgICAgICB0aGlzLl9iYXNlVXJsID0gJ2h0dHA6Ly81NmUwNWMzMjEzZGE4MDExMDAxM2ViYTMubW9ja2FwaS5pby9hcGknO1xuICAgICAgICB0aGlzLnRvZG9zJCA9IG5ldyBPYnNlcnZhYmxlKG9ic2VydmVyID0+IHRoaXMuX3RvZG9zT2JzZXJ2ZXIgPSBvYnNlcnZlcikuc2hhcmUoKTtcbiAgICAgICAgdGhpcy5fZGF0YVN0b3JlID0geyB0b2RvczogW10gfTtcbiAgICB9XG5cbiAgICBsb2FkVG9kb3MoKSB7XG4gICAgICAgIHRoaXMuX2h0dHAuZ2V0KGAke3RoaXMuX2Jhc2VVcmx9L3RvZG9zYCkubWFwKHJlc3BvbnNlID0+IHJlc3BvbnNlLmpzb24oKSkuc3Vic2NyaWJlKGRhdGEgPT4ge1xuICAgICAgICAgICAgdGhpcy5fZGF0YVN0b3JlLnRvZG9zID0gZGF0YTtcbiAgICAgICAgICAgIHRoaXMuX3RvZG9zT2JzZXJ2ZXIubmV4dCh0aGlzLl9kYXRhU3RvcmUudG9kb3MpO1xuICAgICAgICB9LCBlcnJvciA9PiBjb25zb2xlLmxvZygnQ291bGQgbm90IGxvYWQgdG9kb3MuJykpO1xuICAgIH1cblxuICAgIGNyZWF0ZVRvZG8odG9kbzogVG9kbykge1xuICAgICAgICB0aGlzLl9odHRwLnBvc3QoYCR7dGhpcy5fYmFzZVVybH0vdG9kb3NgLCB0b2RvKVxuICAgICAgICAgICAgLm1hcChyZXNwb25zZSA9PiByZXNwb25zZS5qc29uKCkpLnN1YnNjcmliZShkYXRhID0+IHtcbiAgICAgICAgICAgICAgICB0aGlzLl9kYXRhU3RvcmUudG9kb3MucHVzaChkYXRhKTtcbiAgICAgICAgICAgICAgICB0aGlzLl90b2Rvc09ic2VydmVyLm5leHQodGhpcy5fZGF0YVN0b3JlLnRvZG9zKTtcbiAgICAgICAgICAgIH0sIGVycm9yID0+IGNvbnNvbGUubG9nKCdDb3VsZCBub3QgY3JlYXRlIHRvZG8uJykpO1xuICAgIH1cblxuICAgIHVwZGF0ZVRvZG8odG9kbzogVG9kbykge1xuICAgICAgICB0aGlzLl9odHRwLnB1dChgJHt0aGlzLl9iYXNlVXJsfS90b2Rvcy8ke3RvZG8uaWR9YCwgdG9kbylcbiAgICAgICAgICAgIC5tYXAocmVzcG9uc2UgPT4gcmVzcG9uc2UuanNvbigpKS5zdWJzY3JpYmUoZGF0YSA9PiB7XG4gICAgICAgICAgICAgICAgdGhpcy5fZGF0YVN0b3JlLnRvZG9zLmZvckVhY2goKHRvZG8sIGkpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKHRvZG8uaWQgPT09IGRhdGEuaWQpIHsgdGhpcy5fZGF0YVN0b3JlLnRvZG9zW2ldID0gZGF0YTsgfVxuICAgICAgICAgICAgICAgIH0pO1xuXG4gICAgICAgICAgICAgICAgdGhpcy5fdG9kb3NPYnNlcnZlci5uZXh0KHRoaXMuX2RhdGFTdG9yZS50b2Rvcyk7XG4gICAgICAgICAgICB9LCBlcnJvciA9PiBjb25zb2xlLmxvZygnQ291bGQgbm90IHVwZGF0ZSB0b2RvLicpKTtcbiAgICB9XG5cbiAgICBkZWxldGVUb2RvKHRvZG9JZDogbnVtYmVyKSB7XG4gICAgICAgIHRoaXMuX2h0dHAuZGVsZXRlKGAke3RoaXMuX2Jhc2VVcmx9L3RvZG9zLyR7dG9kb0lkfWApLnN1YnNjcmliZShyZXNwb25zZSA9PiB7XG4gICAgICAgICAgICB0aGlzLl9kYXRhU3RvcmUudG9kb3MuZm9yRWFjaCgodCwgaSkgPT4ge1xuICAgICAgICAgICAgICAgIGlmICh0LmlkID09PSB0b2RvSWQpIHsgdGhpcy5fZGF0YVN0b3JlLnRvZG9zLnNwbGljZShpLCAxKTsgfVxuICAgICAgICAgICAgfSk7XG5cbiAgICAgICAgICAgIHRoaXMuX3RvZG9zT2JzZXJ2ZXIubmV4dCh0aGlzLl9kYXRhU3RvcmUudG9kb3MpO1xuICAgICAgICB9LCBlcnJvciA9PiBjb25zb2xlLmxvZygnQ291bGQgbm90IGRlbGV0ZSB0b2RvLicpKTtcbiAgICB9XG59XG4qLyIsImltcG9ydCB7SW5qZWN0YWJsZX0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQge0NvbmZpZywgRXZlbnRzfSBmcm9tICdpb25pYy1hbmd1bGFyJztcbmltcG9ydCB7ZG9udENsZWFyQ2FjaGV9IGZyb20gJy4vY29uZmlnJztcbmltcG9ydCB7SGVhZGVycywgSHR0cH0gZnJvbSAnQGFuZ3VsYXIvaHR0cCc7XG5pbXBvcnQge09ic2VydmFibGUsIE9ic2VydmVyfSBmcm9tICdyeGpzJztcbmltcG9ydCB7QXBpRGF0YX0gZnJvbSAnLi9hcGktZGF0YSc7XG5pbXBvcnQge2FkZHB9IGZyb20gJy4uL2RpcmVjdGl2ZXMvaGVscGVycyc7XG5pbXBvcnQgJ3J4anMnO1xuaW1wb3J0IHtNT0NLU30gZnJvbSAnLi9tb2Nrcyc7XG5cbkBJbmplY3RhYmxlKClcbmV4cG9ydCBjbGFzcyBUaW1lUHJvdmlkZXIge1xuXG4gICAgVVJMOiBzdHJpbmcgPSBcInRpbWVcIjtcbiAgICB0aW1lcyQ6IE9iamVjdDsgLy9BcnJheTxPYnNlcnZhYmxlPE9iamVjdFtdPj47XG4gICAgcHJpdmF0ZSBfdGltZXNPYnNlcnZlcjogT2JqZWN0OyAvL0FycmF5PE9ic2VydmVyPE9iamVjdFtdPj47XG4gICAgX2RhdGFTdG9yZTogYW55O1xuXG4gICAgY29uc3RydWN0b3IocHJpdmF0ZSBhcGlEYXRhOiBBcGlEYXRhLCBwcml2YXRlIGNvbmZpZzogQ29uZmlnLCBwcml2YXRlIGV2ZW50czogRXZlbnRzKSB7XG4gICAgICAgIHRoaXMudGltZXMkID0ge307IC8vbmV3IE9ic2VydmFibGUob2JzZXJ2ZXIgPT4gdGhpcy5fdGltZXNPYnNlcnZlciA9IG9ic2VydmVyKS5zaGFyZSgpO1xuICAgICAgICB0aGlzLl90aW1lc09ic2VydmVyID0ge307XG4gICAgICAgIHRoaXMuX2RhdGFTdG9yZSA9IHt9O1xuICAgICB9XG5cbiAgICBnZXRUaW1lbG9ncyhhY2NvdW50X2lkLCB0ZWNoX2lkLCAgcGFnZXIsIHN0YXJ0PywgZW5kPykge1xuICAgICAgICBsZXQgdXJsID0gYWRkcCh0aGlzLlVSTCwgXCJhY2NvdW50XCIsIGFjY291bnRfaWQpO1xuICAgICAgICB1cmwgPSBhZGRwKHVybCwgXCJ0ZWNoXCIsIHRlY2hfaWQpO1xuICAgICAgICB1cmwgPSBhZGRwKHVybCwgXCJzdGFydF9kYXRlXCIsIHN0YXJ0KTtcbiAgICAgICAgdXJsID0gYWRkcCh1cmwsIFwiZW5kX2RhdGVcIiwgZW5kKTtcbiAgICAgICAgcGFnZXIubGltaXQgPSBwYWdlci5saW1pdCB8fCAyNTtcbiAgICAgICAgcGFnZXIucGFnZSA9IHBhZ2VyLnBhZ2UgfHwgMDtcbiAgICAgICAgdGhpcy5fZGF0YVN0b3JlW3VybF0gPSB0aGlzLl9kYXRhU3RvcmVbdXJsXSB8fCBbXTtcbiAgICAgICAgaWYgKGRvbnRDbGVhckNhY2hlKSB7XG4gICAgICAgICAgICB0aGlzLnRpbWVzJFt1cmxdID0gbmV3IE9ic2VydmFibGUob2JzZXJ2ZXIgPT4gdGhpcy5fdGltZXNPYnNlcnZlclt1cmxdID0gb2JzZXJ2ZXIpLnNoYXJlKCk7XG4gICAgICAgICAgICB0aGlzLl9kYXRhU3RvcmVbdXJsXSA9IE1PQ0tTW1widGltZVwiXTtcbiAgICAgICAgfVxuICAgICAgICBsZXQgY2FjaGVsZW4gPSB0aGlzLl9kYXRhU3RvcmVbdXJsXS5sZW5ndGg7XG4gICAgICAgIGlmIChwYWdlci5wYWdlID09IDApIHtcbiAgICAgICAgICAgIHBhZ2VyLmxpbWl0ID0gTWF0aC5tYXgoY2FjaGVsZW4sIHBhZ2VyLmxpbWl0KTtcbiAgICAgICAgICAgIGlmIChjYWNoZWxlbikge1xuICAgICAgICAgICAgICAgIHNldFRpbWVvdXQoKCkgPT4ge1xuICAgICAgICAgICAgICAgICAgICBpZiAodGhpcy5fdGltZXNPYnNlcnZlclt1cmxdKVxuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5fdGltZXNPYnNlcnZlclt1cmxdLm5leHQodGhpcy5fZGF0YVN0b3JlW3VybF0gfHwgW10pO1xuICAgICAgICAgICAgICAgIH0sIDApO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgdGhpcy50aW1lcyRbdXJsXSA9IG5ldyBPYnNlcnZhYmxlKG9ic2VydmVyID0+IHRoaXMuX3RpbWVzT2JzZXJ2ZXJbdXJsXSA9IG9ic2VydmVyKS5zaGFyZSgpO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5hcGlEYXRhLmdldFBhZ2VkKHVybCwgcGFnZXIpLnN1YnNjcmliZShkYXRhID0+IHtcbiAgICAgICAgICAgIGlmIChwYWdlci5wYWdlID4gMCAgJiYgY2FjaGVsZW4gPiAwKVxuICAgICAgICAgICAgICAgIHRoaXMuX2RhdGFTdG9yZVt1cmxdLnB1c2goLi4uZGF0YSk7XG4gICAgICAgICAgICBlbHNlXG4gICAgICAgICAgICAgICAgdGhpcy5fZGF0YVN0b3JlW3VybF0gPSBkYXRhO1xuICAgICAgICAgICAgaWYgKHRoaXMuX3RpbWVzT2JzZXJ2ZXJbdXJsXSlcbiAgICAgICAgICAgICAgICB0aGlzLl90aW1lc09ic2VydmVyW3VybF0ubmV4dCh0aGlzLl9kYXRhU3RvcmVbdXJsXSk7XG4gICAgICAgIH0sIGVycm9yID0+IGNvbnNvbGUubG9nKCdDb3VsZCBub3QgbG9hZCB0aW1lbG9ncy4nKSk7XG4gICAgICAgIHJldHVybiBjYWNoZWxlbjtcbiAgICB9XG5cbiAgICBhZGRUaW1lKGlkLCBkYXRhLCBtZXRob2QpIHtcbiAgICAgICAgICAgIGxldCB1cmwgPSB0aGlzLlVSTCArICghaWQgPyBcIlwiIDogKFwiL1wiICsgaWQpKTtcbiAgICAgICAgICAgIHJldHVybiB0aGlzLmFwaURhdGEuZ2V0KHVybCwgZGF0YSwgbWV0aG9kKTtcbiAgICAgICAgfVxuXG4gICAgZGVsZXRlVGltZShpZCwgZGF0YSkge1xuICAgICAgICAgICAgbGV0IHVybCA9IHRoaXMuVVJMICsgXCIvXCIgKyBpZDtcbiAgICAgICAgICAgIHJldHVybiB0aGlzLmFwaURhdGEuZ2V0KHVybCwgZGF0YSwgXCJERUxFVEVcIik7XG4gICAgICAgIH1cbiAgICB9IiwiaW1wb3J0IHtJbmplY3RhYmxlfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7Q29uZmlnLCBFdmVudHN9IGZyb20gJ2lvbmljLWFuZ3VsYXInO1xuaW1wb3J0IHtkb250Q2xlYXJDYWNoZX0gZnJvbSAnLi9jb25maWcnO1xuaW1wb3J0IHtIZWFkZXJzLCBIdHRwfSBmcm9tICdAYW5ndWxhci9odHRwJztcbmltcG9ydCB7T2JzZXJ2YWJsZSwgT2JzZXJ2ZXJ9IGZyb20gJ3J4anMnO1xuaW1wb3J0IHtBcGlEYXRhfSBmcm9tICcuL2FwaS1kYXRhJztcbmltcG9ydCB7YWRkcH0gZnJvbSAnLi4vZGlyZWN0aXZlcy9oZWxwZXJzJztcbmltcG9ydCBcInJ4anNcIjtcbmltcG9ydCB7TU9DS1N9IGZyb20gJy4vbW9ja3MnO1xuXG5ASW5qZWN0YWJsZSgpXG5leHBvcnQgY2xhc3MgVG9kb1Byb3ZpZGVyIHtcblxuICAgIFVSTDogc3RyaW5nID0gXCJ0b2Rvc1wiO1xuICAgIHRvZG9zJDogT2JqZWN0OyAvL0FycmF5PE9ic2VydmFibGU8T2JqZWN0W10+PjtcbiAgICBwcml2YXRlIF90b2Rvc09ic2VydmVyOiBPYmplY3Q7IC8vQXJyYXk8T2JzZXJ2ZXI8T2JqZWN0W10+PjtcbiAgICBfZGF0YVN0b3JlOiBhbnk7XG5cbiAgICBjb25zdHJ1Y3Rvcihwcml2YXRlIGFwaURhdGE6IEFwaURhdGEsIHByaXZhdGUgY29uZmlnOiBDb25maWcsIHByaXZhdGUgZXZlbnRzOiBFdmVudHMpIHtcbiAgICAgICAgdGhpcy50b2RvcyQgPSB7fTsgLy9uZXcgT2JzZXJ2YWJsZShvYnNlcnZlciA9PiB0aGlzLl90b2Rvc09ic2VydmVyID0gb2JzZXJ2ZXIpLnNoYXJlKCk7XG4gICAgICAgIHRoaXMuX3RvZG9zT2JzZXJ2ZXIgPSB7fTtcbiAgICAgICAgdGhpcy5fZGF0YVN0b3JlID0ge307XG4gICAgIH1cblxuICAgIGdldFRvZG9zKHVzZXJfaWQsIHRpY2tldCwgY29tcGxldGVkLCBwYWdlcikge1xuICAgICAgICBsZXQgdXJsID0gdGhpcy5VUkw7XG4gICAgICAgIGlmICh1c2VyX2lkKVxuICAgICAgICAgICAgdXJsID0gYWRkcCh0aGlzLlVSTCwgXCJhc3NpZ25lZF9pZFwiLCB1c2VyX2lkKTtcbiAgICAgICAgaWYgKHRpY2tldCkgXG4gICAgICAgICAgICB1cmwgPSBhZGRwKHVybCwgXCJ0aWNrZXRcIiwgdGlja2V0IHx8IFwiXCIpO1xuICAgICAgICB1cmwgPSBhZGRwKHVybCwgXCJpc19jb21wbGV0ZWRcIiwgY29tcGxldGVkIHx8IFwiIFwiKTtcblxuICAgICAgICBwYWdlci5saW1pdCA9IHBhZ2VyLmxpbWl0IHx8IDI1O1xuICAgICAgICBwYWdlci5wYWdlID0gcGFnZXIucGFnZSB8fCAwO1xuICAgICAgICB0aGlzLl9kYXRhU3RvcmVbdXJsXSA9IHRoaXMuX2RhdGFTdG9yZVt1cmxdIHx8IFtdO1xuICAgICAgICBpZiAoZG9udENsZWFyQ2FjaGUpIHtcbiAgICAgICAgICAgIHRoaXMudG9kb3MkW3VybF0gPSBuZXcgT2JzZXJ2YWJsZShvYnNlcnZlciA9PiB0aGlzLl90b2Rvc09ic2VydmVyW3VybF0gPSBvYnNlcnZlcikuc2hhcmUoKTtcbiAgICAgICAgICAgIHRoaXMuX2RhdGFTdG9yZVt1cmxdID0gTU9DS1NbXCJ0b2RvXCJdO1xuICAgICAgICB9XG4gICAgICAgIGxldCBjYWNoZWxlbiA9IHRoaXMuX2RhdGFTdG9yZVt1cmxdLmxlbmd0aDtcbiAgICAgICAgaWYgKHBhZ2VyLnBhZ2UgPT0gMCkge1xuICAgICAgICAgICAgLy9wYWdlci5saW1pdCA9IGNhY2hlbGVuIHx8IHBhZ2VyLmxpbWl0O1xuICAgICAgICAgICAgaWYgKGNhY2hlbGVuKSB7XG4gICAgICAgICAgICAgICAgc2V0VGltZW91dCgoKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgIGlmICh0aGlzLl90b2Rvc09ic2VydmVyW3VybF0pXG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLl90b2Rvc09ic2VydmVyW3VybF0ubmV4dCh0aGlzLl9kYXRhU3RvcmVbdXJsXSB8fCBbXSk7XG4gICAgICAgICAgICAgICAgfSwgMCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICB0aGlzLnRvZG9zJFt1cmxdID0gbmV3IE9ic2VydmFibGUob2JzZXJ2ZXIgPT4gdGhpcy5fdG9kb3NPYnNlcnZlclt1cmxdID0gb2JzZXJ2ZXIpLnNoYXJlKCk7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgfVxuICAgICAgICB2YXIgZ290b3VybCA9IHVybDtcbiAgICAgICAgdGhpcy5hcGlEYXRhLmdldFBhZ2VkKGdvdG91cmwucmVwbGFjZShcImlzX2NvbXBsZXRlZD0gXCIsIFwiaXNfY29tcGxldGVkPVwiKSArIFwiJmFsbF9pdGVtX3R5cGVzPXRydWUmaXNfc3ViX3ZpZXc9dHJ1ZVwiLCBwYWdlcikuc3Vic2NyaWJlKGRhdGEgPT4ge1xuICAgICAgICAgICAgaWYgKHBhZ2VyLnBhZ2UgPiAwICAmJiBjYWNoZWxlbiA+IDApXG4gICAgICAgICAgICAgICAgdGhpcy5fZGF0YVN0b3JlW3VybF0ucHVzaCguLi5kYXRhKTtcbiAgICAgICAgICAgIGVsc2VcbiAgICAgICAgICAgICAgICB0aGlzLl9kYXRhU3RvcmVbdXJsXSA9IGRhdGE7XG4gICAgICAgICAgICBpZiAodGhpcy5fdG9kb3NPYnNlcnZlclt1cmxdKVxuICAgICAgICAgICAgICAgIHRoaXMuX3RvZG9zT2JzZXJ2ZXJbdXJsXS5uZXh0KHRoaXMuX2RhdGFTdG9yZVt1cmxdKTtcbiAgICAgICAgfSwgZXJyb3IgPT4gY29uc29sZS5sb2coJ0NvdWxkIG5vdCBsb2FkIHRvZG9sb2dzLicpKTtcbiAgICAgICAgcmV0dXJuIGNhY2hlbGVuO1xuICAgIH1cbiBcbiAgICAgICAgYWRkVG9kbyhkYXRhKSB7XG4gICAgICAgICAgICByZXR1cm4gdGhpcy5hcGlEYXRhLmdldCh0aGlzLlVSTCwgZGF0YSwgXCJQT1NUXCIpO1xuICAgICAgICB9XG5cbiAgICAgICAgc2V0Q29tcGxldGVkVG9kbyhpZCwgaXNfZG9uZSkge1xuICAgICAgICAgICAgbGV0IHVybCA9IGAke3RoaXMuVVJMfS8ke2lkfWA7XG4gICAgICAgICAgICB2YXIgc3RyZWFtID0gdGhpcy5hcGlEYXRhLmdldCh1cmwsIHtpc19jb21wbGV0ZWQgOiBpc19kb25lfSwgXCJQVVRcIikucHVibGlzaExhc3QoKTtcbiAgICAgICAgICAgIHN0cmVhbS5jb25uZWN0KCk7XG4gICAgICAgICAgICByZXR1cm4oIHN0cmVhbSApO1xuICAgICAgICB9XG4gICAgfSIsIiJdfQ=="}